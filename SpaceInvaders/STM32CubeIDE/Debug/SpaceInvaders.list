
SpaceInvaders.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e588  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000022a0  0801e738  0801e738  0001f738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000b72  080209d8  080209d8  000219d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000006c  0802154c  0802154c  0002254c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000056  080215b8  080215b8  000225b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00034160  08021610  08021610  00022610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08055770  08055770  0005716c  2**0
                  CONTENTS
  8 .ARM          00000008  08055770  08055770  00056770  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08055778  08055778  0005716c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  08055778  08055778  00056778  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  08055790  08055790  00056790  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  0805579c  00057000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013d4c  2000016c  08055908  0005716c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20013eb8  08055908  00057eb8  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0005716c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00058000  2**2
                  ALLOC
 17 .debug_line   00051ba0  00000000  00000000  0005719c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000064  00000000  00000000  000a8d3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_info   000af20d  00000000  00000000  000a8da0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_abbrev 0001617d  00000000  00000000  00157fad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 000030c8  00000000  00000000  0016e130  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    00119520  00000000  00000000  001711f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_rnglists 00003502  00000000  00000000  0028a718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_loclists 00019d5a  00000000  00000000  0028dc1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  00031290  00000000  00000000  002a7974  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  002d8c04  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00008454  00000000  00000000  002d8cc8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e720 	.word	0x0801e720

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	0801e720 	.word	0x0801e720

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b988 	b.w	80005b8 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	468e      	mov	lr, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	4688      	mov	r8, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4617      	mov	r7, r2
 80002d4:	d962      	bls.n	800039c <__udivmoddi4+0xdc>
 80002d6:	fab2 f682 	clz	r6, r2
 80002da:	b14e      	cbz	r6, 80002f0 <__udivmoddi4+0x30>
 80002dc:	f1c6 0320 	rsb	r3, r6, #32
 80002e0:	fa01 f806 	lsl.w	r8, r1, r6
 80002e4:	fa20 f303 	lsr.w	r3, r0, r3
 80002e8:	40b7      	lsls	r7, r6
 80002ea:	ea43 0808 	orr.w	r8, r3, r8
 80002ee:	40b4      	lsls	r4, r6
 80002f0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002f4:	fa1f fc87 	uxth.w	ip, r7
 80002f8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002fc:	0c23      	lsrs	r3, r4, #16
 80002fe:	fb0e 8811 	mls	r8, lr, r1, r8
 8000302:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000306:	fb01 f20c 	mul.w	r2, r1, ip
 800030a:	429a      	cmp	r2, r3
 800030c:	d909      	bls.n	8000322 <__udivmoddi4+0x62>
 800030e:	18fb      	adds	r3, r7, r3
 8000310:	f101 30ff 	add.w	r0, r1, #4294967295
 8000314:	f080 80ea 	bcs.w	80004ec <__udivmoddi4+0x22c>
 8000318:	429a      	cmp	r2, r3
 800031a:	f240 80e7 	bls.w	80004ec <__udivmoddi4+0x22c>
 800031e:	3902      	subs	r1, #2
 8000320:	443b      	add	r3, r7
 8000322:	1a9a      	subs	r2, r3, r2
 8000324:	b2a3      	uxth	r3, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000332:	fb00 fc0c 	mul.w	ip, r0, ip
 8000336:	459c      	cmp	ip, r3
 8000338:	d909      	bls.n	800034e <__udivmoddi4+0x8e>
 800033a:	18fb      	adds	r3, r7, r3
 800033c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000340:	f080 80d6 	bcs.w	80004f0 <__udivmoddi4+0x230>
 8000344:	459c      	cmp	ip, r3
 8000346:	f240 80d3 	bls.w	80004f0 <__udivmoddi4+0x230>
 800034a:	443b      	add	r3, r7
 800034c:	3802      	subs	r0, #2
 800034e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000352:	eba3 030c 	sub.w	r3, r3, ip
 8000356:	2100      	movs	r1, #0
 8000358:	b11d      	cbz	r5, 8000362 <__udivmoddi4+0xa2>
 800035a:	40f3      	lsrs	r3, r6
 800035c:	2200      	movs	r2, #0
 800035e:	e9c5 3200 	strd	r3, r2, [r5]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d905      	bls.n	8000376 <__udivmoddi4+0xb6>
 800036a:	b10d      	cbz	r5, 8000370 <__udivmoddi4+0xb0>
 800036c:	e9c5 0100 	strd	r0, r1, [r5]
 8000370:	2100      	movs	r1, #0
 8000372:	4608      	mov	r0, r1
 8000374:	e7f5      	b.n	8000362 <__udivmoddi4+0xa2>
 8000376:	fab3 f183 	clz	r1, r3
 800037a:	2900      	cmp	r1, #0
 800037c:	d146      	bne.n	800040c <__udivmoddi4+0x14c>
 800037e:	4573      	cmp	r3, lr
 8000380:	d302      	bcc.n	8000388 <__udivmoddi4+0xc8>
 8000382:	4282      	cmp	r2, r0
 8000384:	f200 8105 	bhi.w	8000592 <__udivmoddi4+0x2d2>
 8000388:	1a84      	subs	r4, r0, r2
 800038a:	eb6e 0203 	sbc.w	r2, lr, r3
 800038e:	2001      	movs	r0, #1
 8000390:	4690      	mov	r8, r2
 8000392:	2d00      	cmp	r5, #0
 8000394:	d0e5      	beq.n	8000362 <__udivmoddi4+0xa2>
 8000396:	e9c5 4800 	strd	r4, r8, [r5]
 800039a:	e7e2      	b.n	8000362 <__udivmoddi4+0xa2>
 800039c:	2a00      	cmp	r2, #0
 800039e:	f000 8090 	beq.w	80004c2 <__udivmoddi4+0x202>
 80003a2:	fab2 f682 	clz	r6, r2
 80003a6:	2e00      	cmp	r6, #0
 80003a8:	f040 80a4 	bne.w	80004f4 <__udivmoddi4+0x234>
 80003ac:	1a8a      	subs	r2, r1, r2
 80003ae:	0c03      	lsrs	r3, r0, #16
 80003b0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003b4:	b280      	uxth	r0, r0
 80003b6:	b2bc      	uxth	r4, r7
 80003b8:	2101      	movs	r1, #1
 80003ba:	fbb2 fcfe 	udiv	ip, r2, lr
 80003be:	fb0e 221c 	mls	r2, lr, ip, r2
 80003c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003c6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ca:	429a      	cmp	r2, r3
 80003cc:	d907      	bls.n	80003de <__udivmoddi4+0x11e>
 80003ce:	18fb      	adds	r3, r7, r3
 80003d0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003d4:	d202      	bcs.n	80003dc <__udivmoddi4+0x11c>
 80003d6:	429a      	cmp	r2, r3
 80003d8:	f200 80e0 	bhi.w	800059c <__udivmoddi4+0x2dc>
 80003dc:	46c4      	mov	ip, r8
 80003de:	1a9b      	subs	r3, r3, r2
 80003e0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003e4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003e8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003ec:	fb02 f404 	mul.w	r4, r2, r4
 80003f0:	429c      	cmp	r4, r3
 80003f2:	d907      	bls.n	8000404 <__udivmoddi4+0x144>
 80003f4:	18fb      	adds	r3, r7, r3
 80003f6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003fa:	d202      	bcs.n	8000402 <__udivmoddi4+0x142>
 80003fc:	429c      	cmp	r4, r3
 80003fe:	f200 80ca 	bhi.w	8000596 <__udivmoddi4+0x2d6>
 8000402:	4602      	mov	r2, r0
 8000404:	1b1b      	subs	r3, r3, r4
 8000406:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800040a:	e7a5      	b.n	8000358 <__udivmoddi4+0x98>
 800040c:	f1c1 0620 	rsb	r6, r1, #32
 8000410:	408b      	lsls	r3, r1
 8000412:	fa22 f706 	lsr.w	r7, r2, r6
 8000416:	431f      	orrs	r7, r3
 8000418:	fa0e f401 	lsl.w	r4, lr, r1
 800041c:	fa20 f306 	lsr.w	r3, r0, r6
 8000420:	fa2e fe06 	lsr.w	lr, lr, r6
 8000424:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000428:	4323      	orrs	r3, r4
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	fa1f fc87 	uxth.w	ip, r7
 8000432:	fbbe f0f9 	udiv	r0, lr, r9
 8000436:	0c1c      	lsrs	r4, r3, #16
 8000438:	fb09 ee10 	mls	lr, r9, r0, lr
 800043c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000440:	fb00 fe0c 	mul.w	lr, r0, ip
 8000444:	45a6      	cmp	lr, r4
 8000446:	fa02 f201 	lsl.w	r2, r2, r1
 800044a:	d909      	bls.n	8000460 <__udivmoddi4+0x1a0>
 800044c:	193c      	adds	r4, r7, r4
 800044e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000452:	f080 809c 	bcs.w	800058e <__udivmoddi4+0x2ce>
 8000456:	45a6      	cmp	lr, r4
 8000458:	f240 8099 	bls.w	800058e <__udivmoddi4+0x2ce>
 800045c:	3802      	subs	r0, #2
 800045e:	443c      	add	r4, r7
 8000460:	eba4 040e 	sub.w	r4, r4, lr
 8000464:	fa1f fe83 	uxth.w	lr, r3
 8000468:	fbb4 f3f9 	udiv	r3, r4, r9
 800046c:	fb09 4413 	mls	r4, r9, r3, r4
 8000470:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000474:	fb03 fc0c 	mul.w	ip, r3, ip
 8000478:	45a4      	cmp	ip, r4
 800047a:	d908      	bls.n	800048e <__udivmoddi4+0x1ce>
 800047c:	193c      	adds	r4, r7, r4
 800047e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000482:	f080 8082 	bcs.w	800058a <__udivmoddi4+0x2ca>
 8000486:	45a4      	cmp	ip, r4
 8000488:	d97f      	bls.n	800058a <__udivmoddi4+0x2ca>
 800048a:	3b02      	subs	r3, #2
 800048c:	443c      	add	r4, r7
 800048e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000492:	eba4 040c 	sub.w	r4, r4, ip
 8000496:	fba0 ec02 	umull	lr, ip, r0, r2
 800049a:	4564      	cmp	r4, ip
 800049c:	4673      	mov	r3, lr
 800049e:	46e1      	mov	r9, ip
 80004a0:	d362      	bcc.n	8000568 <__udivmoddi4+0x2a8>
 80004a2:	d05f      	beq.n	8000564 <__udivmoddi4+0x2a4>
 80004a4:	b15d      	cbz	r5, 80004be <__udivmoddi4+0x1fe>
 80004a6:	ebb8 0203 	subs.w	r2, r8, r3
 80004aa:	eb64 0409 	sbc.w	r4, r4, r9
 80004ae:	fa04 f606 	lsl.w	r6, r4, r6
 80004b2:	fa22 f301 	lsr.w	r3, r2, r1
 80004b6:	431e      	orrs	r6, r3
 80004b8:	40cc      	lsrs	r4, r1
 80004ba:	e9c5 6400 	strd	r6, r4, [r5]
 80004be:	2100      	movs	r1, #0
 80004c0:	e74f      	b.n	8000362 <__udivmoddi4+0xa2>
 80004c2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004c6:	0c01      	lsrs	r1, r0, #16
 80004c8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004cc:	b280      	uxth	r0, r0
 80004ce:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004d2:	463b      	mov	r3, r7
 80004d4:	4638      	mov	r0, r7
 80004d6:	463c      	mov	r4, r7
 80004d8:	46b8      	mov	r8, r7
 80004da:	46be      	mov	lr, r7
 80004dc:	2620      	movs	r6, #32
 80004de:	fbb1 f1f7 	udiv	r1, r1, r7
 80004e2:	eba2 0208 	sub.w	r2, r2, r8
 80004e6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004ea:	e766      	b.n	80003ba <__udivmoddi4+0xfa>
 80004ec:	4601      	mov	r1, r0
 80004ee:	e718      	b.n	8000322 <__udivmoddi4+0x62>
 80004f0:	4610      	mov	r0, r2
 80004f2:	e72c      	b.n	800034e <__udivmoddi4+0x8e>
 80004f4:	f1c6 0220 	rsb	r2, r6, #32
 80004f8:	fa2e f302 	lsr.w	r3, lr, r2
 80004fc:	40b7      	lsls	r7, r6
 80004fe:	40b1      	lsls	r1, r6
 8000500:	fa20 f202 	lsr.w	r2, r0, r2
 8000504:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000508:	430a      	orrs	r2, r1
 800050a:	fbb3 f8fe 	udiv	r8, r3, lr
 800050e:	b2bc      	uxth	r4, r7
 8000510:	fb0e 3318 	mls	r3, lr, r8, r3
 8000514:	0c11      	lsrs	r1, r2, #16
 8000516:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800051a:	fb08 f904 	mul.w	r9, r8, r4
 800051e:	40b0      	lsls	r0, r6
 8000520:	4589      	cmp	r9, r1
 8000522:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000526:	b280      	uxth	r0, r0
 8000528:	d93e      	bls.n	80005a8 <__udivmoddi4+0x2e8>
 800052a:	1879      	adds	r1, r7, r1
 800052c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000530:	d201      	bcs.n	8000536 <__udivmoddi4+0x276>
 8000532:	4589      	cmp	r9, r1
 8000534:	d81f      	bhi.n	8000576 <__udivmoddi4+0x2b6>
 8000536:	eba1 0109 	sub.w	r1, r1, r9
 800053a:	fbb1 f9fe 	udiv	r9, r1, lr
 800053e:	fb09 f804 	mul.w	r8, r9, r4
 8000542:	fb0e 1119 	mls	r1, lr, r9, r1
 8000546:	b292      	uxth	r2, r2
 8000548:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800054c:	4542      	cmp	r2, r8
 800054e:	d229      	bcs.n	80005a4 <__udivmoddi4+0x2e4>
 8000550:	18ba      	adds	r2, r7, r2
 8000552:	f109 31ff 	add.w	r1, r9, #4294967295
 8000556:	d2c4      	bcs.n	80004e2 <__udivmoddi4+0x222>
 8000558:	4542      	cmp	r2, r8
 800055a:	d2c2      	bcs.n	80004e2 <__udivmoddi4+0x222>
 800055c:	f1a9 0102 	sub.w	r1, r9, #2
 8000560:	443a      	add	r2, r7
 8000562:	e7be      	b.n	80004e2 <__udivmoddi4+0x222>
 8000564:	45f0      	cmp	r8, lr
 8000566:	d29d      	bcs.n	80004a4 <__udivmoddi4+0x1e4>
 8000568:	ebbe 0302 	subs.w	r3, lr, r2
 800056c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000570:	3801      	subs	r0, #1
 8000572:	46e1      	mov	r9, ip
 8000574:	e796      	b.n	80004a4 <__udivmoddi4+0x1e4>
 8000576:	eba7 0909 	sub.w	r9, r7, r9
 800057a:	4449      	add	r1, r9
 800057c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000580:	fbb1 f9fe 	udiv	r9, r1, lr
 8000584:	fb09 f804 	mul.w	r8, r9, r4
 8000588:	e7db      	b.n	8000542 <__udivmoddi4+0x282>
 800058a:	4673      	mov	r3, lr
 800058c:	e77f      	b.n	800048e <__udivmoddi4+0x1ce>
 800058e:	4650      	mov	r0, sl
 8000590:	e766      	b.n	8000460 <__udivmoddi4+0x1a0>
 8000592:	4608      	mov	r0, r1
 8000594:	e6fd      	b.n	8000392 <__udivmoddi4+0xd2>
 8000596:	443b      	add	r3, r7
 8000598:	3a02      	subs	r2, #2
 800059a:	e733      	b.n	8000404 <__udivmoddi4+0x144>
 800059c:	f1ac 0c02 	sub.w	ip, ip, #2
 80005a0:	443b      	add	r3, r7
 80005a2:	e71c      	b.n	80003de <__udivmoddi4+0x11e>
 80005a4:	4649      	mov	r1, r9
 80005a6:	e79c      	b.n	80004e2 <__udivmoddi4+0x222>
 80005a8:	eba1 0109 	sub.w	r1, r1, r9
 80005ac:	46c4      	mov	ip, r8
 80005ae:	fbb1 f9fe 	udiv	r9, r1, lr
 80005b2:	fb09 f804 	mul.w	r8, r9, r4
 80005b6:	e7c4      	b.n	8000542 <__udivmoddi4+0x282>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:

  ldr   sp, =_estack       /* set stack pointer */
 80005bc:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80005f4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 80005c0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005c2:	e003      	b.n	80005cc <LoopCopyDataInit>

080005c4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005c4:	4b0c      	ldr	r3, [pc, #48]	@ (80005f8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005c6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005c8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005ca:	3104      	adds	r1, #4

080005cc <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 80005cc:	480b      	ldr	r0, [pc, #44]	@ (80005fc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005ce:	4b0c      	ldr	r3, [pc, #48]	@ (8000600 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005d0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005d2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005d4:	d3f6      	bcc.n	80005c4 <CopyDataInit>
  ldr  r2, =_sbss
 80005d6:	4a0b      	ldr	r2, [pc, #44]	@ (8000604 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005d8:	e002      	b.n	80005e0 <LoopFillZerobss>

080005da <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 80005da:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005dc:	f842 3b04 	str.w	r3, [r2], #4

080005e0 <LoopFillZerobss>:

LoopFillZerobss:
  ldr  r3, = _ebss
 80005e0:	4b09      	ldr	r3, [pc, #36]	@ (8000608 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005e2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005e4:	d3f9      	bcc.n	80005da <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005e6:	f004 f941 	bl	800486c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ea:	f01d fb2b 	bl	801dc44 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ee:	f000 ff33 	bl	8001458 <main>
  bx  lr
 80005f2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005f4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005f8:	0805579c 	.word	0x0805579c
  ldr  r0, =_sdata
 80005fc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000600:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000604:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 8000608:	20013eb8 	.word	0x20013eb8

0800060c <ADC_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800060c:	e7fe      	b.n	800060c <ADC_IRQHandler>

0800060e <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 800060e:	f000 bcbb 	b.w	8000f88 <touchgfx_init>

08000612 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000612:	f000 bd29 	b.w	8001068 <touchgfx_taskEntry>

08000616 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000616:	4770      	bx	lr

08000618 <_ZN20STM32TouchControllerD0Ev>:
 8000618:	b510      	push	{r4, lr}
 800061a:	2104      	movs	r1, #4
 800061c:	4604      	mov	r4, r0
 800061e:	f01d f833 	bl	801d688 <_ZdlPvj>
 8000622:	4620      	mov	r0, r4
 8000624:	bd10      	pop	{r4, pc}
	...

08000628 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000628:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800062a:	4b0c      	ldr	r3, [pc, #48]	@ (800065c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800062c:	4c0c      	ldr	r4, [pc, #48]	@ (8000660 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800062e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000630:	4b0c      	ldr	r3, [pc, #48]	@ (8000664 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000632:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000634:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000636:	6863      	ldr	r3, [r4, #4]
 8000638:	4798      	blx	r3
 800063a:	f640 0311 	movw	r3, #2065	@ 0x811
 800063e:	4298      	cmp	r0, r3
 8000640:	d10a      	bne.n	8000658 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000642:	4d09      	ldr	r5, [pc, #36]	@ (8000668 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000644:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000646:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000648:	2082      	movs	r0, #130	@ 0x82
 800064a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800064c:	682b      	ldr	r3, [r5, #0]
 800064e:	2082      	movs	r0, #130	@ 0x82
 8000650:	68db      	ldr	r3, [r3, #12]
 8000652:	4798      	blx	r3
 8000654:	2000      	movs	r0, #0
    }

    return ret;
}
 8000656:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000658:	2001      	movs	r0, #1
 800065a:	e7fc      	b.n	8000656 <_Z11BSP_TS_Inittt+0x2e>
 800065c:	20000192 	.word	0x20000192
 8000660:	20000054 	.word	0x20000054
 8000664:	20000190 	.word	0x20000190
 8000668:	20000194 	.word	0x20000194

0800066c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800066c:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000670:	20f0      	movs	r0, #240	@ 0xf0
 8000672:	f7ff bfd9 	b.w	8000628 <_Z11BSP_TS_Inittt>
	...

08000678 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000678:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800067a:	4d35      	ldr	r5, [pc, #212]	@ (8000750 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 800067c:	682b      	ldr	r3, [r5, #0]
{
 800067e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000680:	691b      	ldr	r3, [r3, #16]
 8000682:	2082      	movs	r0, #130	@ 0x82
 8000684:	4798      	blx	r3
 8000686:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000688:	2800      	cmp	r0, #0
 800068a:	d04b      	beq.n	8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800068c:	682b      	ldr	r3, [r5, #0]
 800068e:	f10d 0206 	add.w	r2, sp, #6
 8000692:	695b      	ldr	r3, [r3, #20]
 8000694:	a901      	add	r1, sp, #4
 8000696:	2082      	movs	r0, #130	@ 0x82
 8000698:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800069a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800069e:	f640 6274 	movw	r2, #3700	@ 0xe74
 80006a2:	4293      	cmp	r3, r2
 80006a4:	d940      	bls.n	8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 80006a6:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80006aa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80006ae:	1ad2      	subs	r2, r2, r3
 80006b0:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80006b2:	2a0a      	cmp	r2, #10
 80006b4:	d93e      	bls.n	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80006b6:	230b      	movs	r3, #11
 80006b8:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80006bc:	4b25      	ldr	r3, [pc, #148]	@ (8000754 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
 80006be:	881b      	ldrh	r3, [r3, #0]
 80006c0:	429a      	cmp	r2, r3
 80006c2:	d901      	bls.n	80006c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
        {
            yr = TsYBoundary - 1;
 80006c4:	3b01      	subs	r3, #1
 80006c6:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006cc:	4822      	ldr	r0, [pc, #136]	@ (8000758 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
 80006ce:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 80006d2:	428b      	cmp	r3, r1
 80006d4:	d830      	bhi.n	8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006d6:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 80006da:	330e      	adds	r3, #14
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006dc:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80006de:	b29b      	uxth	r3, r3
        xr = x / 15;
 80006e0:	250f      	movs	r5, #15
 80006e2:	fbb3 f3f5 	udiv	r3, r3, r5
        else if (xr > TsXBoundary)
 80006e6:	4d1d      	ldr	r5, [pc, #116]	@ (800075c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe4>)
 80006e8:	882d      	ldrh	r5, [r5, #0]
 80006ea:	42ab      	cmp	r3, r5
            xr = TsXBoundary - 1;
 80006ec:	bf84      	itt	hi
 80006ee:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80006f2:	b2ab      	uxthhi	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006f4:	428b      	cmp	r3, r1
 80006f6:	461d      	mov	r5, r3
 80006f8:	b28e      	uxth	r6, r1
 80006fa:	d926      	bls.n	800074a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd2>
 80006fc:	1b9b      	subs	r3, r3, r6
 80006fe:	b299      	uxth	r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000700:	4e17      	ldr	r6, [pc, #92]	@ (8000760 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000702:	6837      	ldr	r7, [r6, #0]
 8000704:	b2bb      	uxth	r3, r7
 8000706:	42ba      	cmp	r2, r7
 8000708:	bf8c      	ite	hi
 800070a:	1ad3      	subhi	r3, r2, r3
 800070c:	1a9b      	subls	r3, r3, r2
 800070e:	b29b      	uxth	r3, r3

        if (xDiff + yDiff > 5)
 8000710:	4419      	add	r1, r3
 8000712:	2905      	cmp	r1, #5
        {
            _x = x;
 8000714:	bfc8      	it	gt
 8000716:	6005      	strgt	r5, [r0, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000718:	6803      	ldr	r3, [r0, #0]
            _y = y;
 800071a:	bfc8      	it	gt
 800071c:	6032      	strgt	r2, [r6, #0]
        TsState->X = _x;
 800071e:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000720:	6833      	ldr	r3, [r6, #0]
 8000722:	80a3      	strh	r3, [r4, #4]
    }
}
 8000724:	b003      	add	sp, #12
 8000726:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000728:	2bb3      	cmp	r3, #179	@ 0xb3
            y = 180;
 800072a:	bf9c      	itt	ls
 800072c:	23b4      	movls	r3, #180	@ 0xb4
 800072e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000732:	e7ba      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x32>
            yr = 0;
 8000734:	2200      	movs	r2, #0
 8000736:	e7c7      	b.n	80006c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x50>
            x = 3800 - x;
 8000738:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 800073c:	3308      	adds	r3, #8
 800073e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000740:	2b0e      	cmp	r3, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000742:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000744:	d8cc      	bhi.n	80006e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x68>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000746:	2500      	movs	r5, #0
            xr = 0;
 8000748:	462b      	mov	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 800074a:	1ac9      	subs	r1, r1, r3
 800074c:	b289      	uxth	r1, r1
 800074e:	e7d7      	b.n	8000700 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x88>
 8000750:	20000194 	.word	0x20000194
 8000754:	20000190 	.word	0x20000190
 8000758:	2000018c 	.word	0x2000018c
 800075c:	20000192 	.word	0x20000192
 8000760:	20000188 	.word	0x20000188

08000764 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000764:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000766:	4668      	mov	r0, sp
{
 8000768:	460d      	mov	r5, r1
 800076a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800076c:	f7ff ff84 	bl	8000678 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000770:	f8bd 0000 	ldrh.w	r0, [sp]
 8000774:	b130      	cbz	r0, 8000784 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000776:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800077a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800077c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000780:	6023      	str	r3, [r4, #0]
        return true;
 8000782:	2001      	movs	r0, #1
}
 8000784:	b003      	add	sp, #12
 8000786:	bd30      	pop	{r4, r5, pc}

08000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000788:	2803      	cmp	r0, #3
 800078a:	d821      	bhi.n	80007d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800078c:	e8df f000 	tbb	[pc, r0]
 8000790:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000794:	4b0f      	ldr	r3, [pc, #60]	@ (80007d4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000796:	681a      	ldr	r2, [r3, #0]
 8000798:	fab2 f282 	clz	r2, r2
 800079c:	0952      	lsrs	r2, r2, #5
 800079e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80007a0:	480d      	ldr	r0, [pc, #52]	@ (80007d8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80007a2:	f004 bd2b 	b.w	80051fc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80007a6:	4b0b      	ldr	r3, [pc, #44]	@ (80007d4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80007a8:	685a      	ldr	r2, [r3, #4]
 80007aa:	fab2 f282 	clz	r2, r2
 80007ae:	0952      	lsrs	r2, r2, #5
 80007b0:	2108      	movs	r1, #8
 80007b2:	e7f5      	b.n	80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80007b4:	4b07      	ldr	r3, [pc, #28]	@ (80007d4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80007b6:	689a      	ldr	r2, [r3, #8]
 80007b8:	fab2 f282 	clz	r2, r2
 80007bc:	0952      	lsrs	r2, r2, #5
 80007be:	2110      	movs	r1, #16
 80007c0:	e7ee      	b.n	80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80007c2:	4b04      	ldr	r3, [pc, #16]	@ (80007d4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80007c4:	68da      	ldr	r2, [r3, #12]
 80007c6:	fab2 f282 	clz	r2, r2
 80007ca:	0952      	lsrs	r2, r2, #5
 80007cc:	2120      	movs	r1, #32
 80007ce:	e7e7      	b.n	80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007d0:	4770      	bx	lr
 80007d2:	bf00      	nop
 80007d4:	20000198 	.word	0x20000198
 80007d8:	40021000 	.word	0x40021000

080007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007dc:	2803      	cmp	r0, #3
 80007de:	d821      	bhi.n	8000824 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80007e0:	e8df f000 	tbb	[pc, r0]
 80007e4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007e8:	4b0f      	ldr	r3, [pc, #60]	@ (8000828 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ea:	681a      	ldr	r2, [r3, #0]
 80007ec:	3a00      	subs	r2, #0
 80007ee:	bf18      	it	ne
 80007f0:	2201      	movne	r2, #1
 80007f2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007f4:	480d      	ldr	r0, [pc, #52]	@ (800082c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007f6:	f004 bd01 	b.w	80051fc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007fa:	4b0b      	ldr	r3, [pc, #44]	@ (8000828 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007fc:	685a      	ldr	r2, [r3, #4]
 80007fe:	3a00      	subs	r2, #0
 8000800:	bf18      	it	ne
 8000802:	2201      	movne	r2, #1
 8000804:	2108      	movs	r1, #8
 8000806:	e7f5      	b.n	80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000808:	4b07      	ldr	r3, [pc, #28]	@ (8000828 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800080a:	689a      	ldr	r2, [r3, #8]
 800080c:	3a00      	subs	r2, #0
 800080e:	bf18      	it	ne
 8000810:	2201      	movne	r2, #1
 8000812:	2110      	movs	r1, #16
 8000814:	e7ee      	b.n	80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000816:	4b04      	ldr	r3, [pc, #16]	@ (8000828 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000818:	68da      	ldr	r2, [r3, #12]
 800081a:	3a00      	subs	r2, #0
 800081c:	bf18      	it	ne
 800081e:	2201      	movne	r2, #1
 8000820:	2120      	movs	r1, #32
 8000822:	e7e7      	b.n	80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000824:	4770      	bx	lr
 8000826:	bf00      	nop
 8000828:	20000198 	.word	0x20000198
 800082c:	40021000 	.word	0x40021000

08000830 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000830:	2803      	cmp	r0, #3
 8000832:	d80d      	bhi.n	8000850 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000834:	e8df f000 	tbb	[pc, r0]
 8000838:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800083c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800083e:	4805      	ldr	r0, [pc, #20]	@ (8000854 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000840:	f004 bce1 	b.w	8005206 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000844:	2108      	movs	r1, #8
 8000846:	e7fa      	b.n	800083e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000848:	2110      	movs	r1, #16
 800084a:	e7f8      	b.n	800083e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800084c:	2120      	movs	r1, #32
 800084e:	e7f6      	b.n	800083e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000850:	4770      	bx	lr
 8000852:	bf00      	nop
 8000854:	40021000 	.word	0x40021000

08000858 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000858:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800085a:	2803      	cmp	r0, #3
 800085c:	d811      	bhi.n	8000882 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800085e:	e8df f000 	tbb	[pc, r0]
 8000862:	0a02      	.short	0x0a02
 8000864:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000866:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000868:	4807      	ldr	r0, [pc, #28]	@ (8000888 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800086a:	f004 fcc1 	bl	80051f0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800086e:	1e43      	subs	r3, r0, #1
 8000870:	4258      	negs	r0, r3
 8000872:	4158      	adcs	r0, r3
 8000874:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000876:	2108      	movs	r1, #8
 8000878:	e7f6      	b.n	8000868 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800087a:	2110      	movs	r1, #16
 800087c:	e7f4      	b.n	8000868 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800087e:	2120      	movs	r1, #32
 8000880:	e7f2      	b.n	8000868 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000882:	2000      	movs	r0, #0
 8000884:	e7f3      	b.n	800086e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000886:	bf00      	nop
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO4initEv>:
{
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	4d08      	ldr	r5, [pc, #32]	@ (80008b0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000890:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000892:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000894:	b2e0      	uxtb	r0, r4
 8000896:	f7ff ffdf 	bl	8000858 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800089a:	b118      	cbz	r0, 80008a4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800089c:	682b      	ldr	r3, [r5, #0]
 800089e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008a0:	bf18      	it	ne
 80008a2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008a4:	3401      	adds	r4, #1
 80008a6:	2c05      	cmp	r4, #5
 80008a8:	f105 0504 	add.w	r5, r5, #4
 80008ac:	d1f2      	bne.n	8000894 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ae:	bd70      	pop	{r4, r5, r6, pc}
 80008b0:	20000198 	.word	0x20000198

080008b4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008b4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008b6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80008ba:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80008be:	4770      	bx	lr

080008c0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008c0:	2000      	movs	r0, #0
 80008c2:	4770      	bx	lr

080008c4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80008c4:	4b03      	ldr	r3, [pc, #12]	@ (80008d4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80008c6:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80008c8:	3900      	subs	r1, #0
 80008ca:	bf18      	it	ne
 80008cc:	2101      	movne	r1, #1
 80008ce:	7019      	strb	r1, [r3, #0]
    }
 80008d0:	4770      	bx	lr
 80008d2:	bf00      	nop
 80008d4:	20013287 	.word	0x20013287

080008d8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008d8:	2000      	movs	r0, #0
 80008da:	4770      	bx	lr

080008dc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008dc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80008de:	b10b      	cbz	r3, 80008e4 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008e0:	4608      	mov	r0, r1
 80008e2:	4718      	bx	r3
        }
    }
 80008e4:	4770      	bx	lr

080008e6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008e6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80008ea:	4770      	bx	lr

080008ec <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008ec:	6840      	ldr	r0, [r0, #4]
 80008ee:	6803      	ldr	r3, [r0, #0]
 80008f0:	699b      	ldr	r3, [r3, #24]
 80008f2:	4718      	bx	r3

080008f4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008f4:	4770      	bx	lr

080008f6 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008f6:	4770      	bx	lr

080008f8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008f8:	4770      	bx	lr
	...

080008fc <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80008fc:	b570      	push	{r4, r5, r6, lr}
 80008fe:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000900:	f000 fc52 	bl	80011a8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8000904:	6823      	ldr	r3, [r4, #0]
 8000906:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 800090a:	4b04      	ldr	r3, [pc, #16]	@ (800091c <_ZN11TouchGFXHAL10initializeEv+0x20>)
 800090c:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	@ 0x3c
 8000910:	4620      	mov	r0, r4
 8000912:	46ac      	mov	ip, r5
}
 8000914:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8000918:	4760      	bx	ip
 800091a:	bf00      	nop
 800091c:	d0000000 	.word	0xd0000000

08000920 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000920:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000922:	6803      	ldr	r3, [r0, #0]
{
 8000924:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000926:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800092a:	4798      	blx	r3
    enableInterrupts();
 800092c:	6823      	ldr	r3, [r4, #0]
 800092e:	4620      	mov	r0, r4
 8000930:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8000932:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000934:	f000 f8ec 	bl	8000b10 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000938:	6823      	ldr	r3, [r4, #0]
 800093a:	4620      	mov	r0, r4
 800093c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800093e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000940:	2029      	movs	r0, #41	@ 0x29
 8000942:	f001 f851 	bl	80019e8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000946:	f000 f8e3 	bl	8000b10 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800094a:	6823      	ldr	r3, [r4, #0]
 800094c:	4620      	mov	r0, r4
 800094e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8000950:	4798      	blx	r3
    for (;;)
 8000952:	e7f8      	b.n	8000946 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000954 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000954:	b510      	push	{r4, lr}
 8000956:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000958:	f009 fdcc 	bl	800a4f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800095c:	6823      	ldr	r3, [r4, #0]
 800095e:	4620      	mov	r0, r4
 8000960:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 8000964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000968:	4718      	bx	r3

0800096a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800096a:	f000 bc0f 	b.w	800118c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800096e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800096e:	f000 bc13 	b.w	8001198 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000972 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000972:	f000 bc3f 	b.w	80011f4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000976 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000976:	f000 bbe5 	b.w	8001144 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800097a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800097a:	f000 bc3f 	b.w	80011fc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800097e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800097e:	f000 bc47 	b.w	8001210 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000982 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000982:	f000 bbe9 	b.w	8001158 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000986 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000986:	f009 b821 	b.w	80099cc <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800098a <_ZN11TouchGFXHALD0Ev>:
 800098a:	b510      	push	{r4, lr}
 800098c:	217c      	movs	r1, #124	@ 0x7c
 800098e:	4604      	mov	r4, r0
 8000990:	f01c fe7a 	bl	801d688 <_ZdlPvj>
 8000994:	4620      	mov	r0, r4
 8000996:	bd10      	pop	{r4, pc}

08000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000998:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800099a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 800099e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009a2:	4b0c      	ldr	r3, [pc, #48]	@ (80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009a4:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009a6:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009a8:	d009      	beq.n	80009be <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009aa:	b93a      	cbnz	r2, 80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ac:	4a0a      	ldr	r2, [pc, #40]	@ (80009d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ae:	490b      	ldr	r1, [pc, #44]	@ (80009dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009b0:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009b2:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009b4:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009b6:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009b8:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009ba:	701a      	strb	r2, [r3, #0]
    }
 80009bc:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009be:	2a00      	cmp	r2, #0
 80009c0:	d0fc      	beq.n	80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c2:	4a05      	ldr	r2, [pc, #20]	@ (80009d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009c4:	4905      	ldr	r1, [pc, #20]	@ (80009dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009c8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009ca:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009cc:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009ce:	2200      	movs	r2, #0
 80009d0:	e7f3      	b.n	80009ba <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009d2:	bf00      	nop
 80009d4:	20013280 	.word	0x20013280
 80009d8:	2001327c 	.word	0x2001327c
 80009dc:	2001327e 	.word	0x2001327e

080009e0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80009e0:	b570      	push	{r4, r5, r6, lr}
 80009e2:	460d      	mov	r5, r1
 80009e4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009e6:	b935      	cbnz	r5, 80009f6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009e8:	4b09      	ldr	r3, [pc, #36]	@ (8000a10 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009ea:	4a0a      	ldr	r2, [pc, #40]	@ (8000a14 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009ec:	480a      	ldr	r0, [pc, #40]	@ (8000a18 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009ee:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80009f2:	f01c fe77 	bl	801d6e4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009f6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009fa:	4b08      	ldr	r3, [pc, #32]	@ (8000a1c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009fc:	3a00      	subs	r2, #0
 80009fe:	bf18      	it	ne
 8000a00:	2201      	movne	r2, #1
 8000a02:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a04:	6803      	ldr	r3, [r0, #0]
    }
 8000a06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a0a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000a0e:	4718      	bx	r3
 8000a10:	0801e790 	.word	0x0801e790
 8000a14:	0801e7c8 	.word	0x0801e7c8
 8000a18:	0801e816 	.word	0x0801e816
 8000a1c:	20013286 	.word	0x20013286

08000a20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a22:	4b09      	ldr	r3, [pc, #36]	@ (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a24:	881b      	ldrh	r3, [r3, #0]
 8000a26:	428b      	cmp	r3, r1
 8000a28:	d803      	bhi.n	8000a32 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a2a:	4b08      	ldr	r3, [pc, #32]	@ (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a2c:	881b      	ldrh	r3, [r3, #0]
 8000a2e:	4293      	cmp	r3, r2
 8000a30:	d905      	bls.n	8000a3e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a32:	4b07      	ldr	r3, [pc, #28]	@ (8000a50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a34:	4a07      	ldr	r2, [pc, #28]	@ (8000a54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a36:	4808      	ldr	r0, [pc, #32]	@ (8000a58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a38:	219e      	movs	r1, #158	@ 0x9e
 8000a3a:	f01c fe53 	bl	801d6e4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a3e:	4b07      	ldr	r3, [pc, #28]	@ (8000a5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a40:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a42:	4b07      	ldr	r3, [pc, #28]	@ (8000a60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a44:	801a      	strh	r2, [r3, #0]
    }
 8000a46:	bd08      	pop	{r3, pc}
 8000a48:	2001327c 	.word	0x2001327c
 8000a4c:	2001327e 	.word	0x2001327e
 8000a50:	0801e85b 	.word	0x0801e85b
 8000a54:	0801e8be 	.word	0x0801e8be
 8000a58:	0801e816 	.word	0x0801e816
 8000a5c:	20013282 	.word	0x20013282
 8000a60:	20013284 	.word	0x20013284

08000a64 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000a64:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000a66:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000a6a:	b118      	cbz	r0, 8000a74 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000a6c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000a6e:	6803      	ldr	r3, [r0, #0]
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	4718      	bx	r3
    }
 8000a74:	4770      	bx	lr
	...

08000a78 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a78:	2101      	movs	r1, #1
{
 8000a7a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	4608      	mov	r0, r1
 8000a80:	f006 fbc2 	bl	8007208 <osSemaphoreNew>
 8000a84:	4b0a      	ldr	r3, [pc, #40]	@ (8000ab0 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a86:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a88:	b928      	cbnz	r0, 8000a96 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a8a:	4b0a      	ldr	r3, [pc, #40]	@ (8000ab4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a8c:	4a0a      	ldr	r2, [pc, #40]	@ (8000ab8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a8e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a90:	480a      	ldr	r0, [pc, #40]	@ (8000abc <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a92:	f01c fe27 	bl	801d6e4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a96:	2200      	movs	r2, #0
 8000a98:	2104      	movs	r1, #4
 8000a9a:	2001      	movs	r0, #1
 8000a9c:	f006 fc5c 	bl	8007358 <osMessageQueueNew>
 8000aa0:	4b07      	ldr	r3, [pc, #28]	@ (8000ac0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000aa2:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000aa4:	b918      	cbnz	r0, 8000aae <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000aa6:	4b07      	ldr	r3, [pc, #28]	@ (8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000aa8:	4a03      	ldr	r2, [pc, #12]	@ (8000ab8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000aaa:	212c      	movs	r1, #44	@ 0x2c
 8000aac:	e7f0      	b.n	8000a90 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000aae:	bd08      	pop	{r3, pc}
 8000ab0:	200001ac 	.word	0x200001ac
 8000ab4:	0801e901 	.word	0x0801e901
 8000ab8:	0801e94a 	.word	0x0801e94a
 8000abc:	0801e979 	.word	0x0801e979
 8000ac0:	200001a8 	.word	0x200001a8
 8000ac4:	0801e9c4 	.word	0x0801e9c4

08000ac8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ac8:	4b02      	ldr	r3, [pc, #8]	@ (8000ad4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000aca:	f04f 31ff 	mov.w	r1, #4294967295
 8000ace:	6818      	ldr	r0, [r3, #0]
 8000ad0:	f006 bbe4 	b.w	800729c <osSemaphoreAcquire>
 8000ad4:	200001ac 	.word	0x200001ac

08000ad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ad8:	4b01      	ldr	r3, [pc, #4]	@ (8000ae0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000ada:	6818      	ldr	r0, [r3, #0]
 8000adc:	f006 bc0a 	b.w	80072f4 <osSemaphoreRelease>
 8000ae0:	200001ac 	.word	0x200001ac

08000ae4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000ae4:	4b02      	ldr	r3, [pc, #8]	@ (8000af0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000ae6:	2100      	movs	r1, #0
 8000ae8:	6818      	ldr	r0, [r3, #0]
 8000aea:	f006 bbd7 	b.w	800729c <osSemaphoreAcquire>
 8000aee:	bf00      	nop
 8000af0:	200001ac 	.word	0x200001ac

08000af4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000af4:	f7ff bff0 	b.w	8000ad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000af8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000af8:	4803      	ldr	r0, [pc, #12]	@ (8000b08 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000afa:	4904      	ldr	r1, [pc, #16]	@ (8000b0c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000afc:	6800      	ldr	r0, [r0, #0]
 8000afe:	2300      	movs	r3, #0
 8000b00:	461a      	mov	r2, r3
 8000b02:	f006 bc64 	b.w	80073ce <osMessageQueuePut>
 8000b06:	bf00      	nop
 8000b08:	200001a8 	.word	0x200001a8
 8000b0c:	20000004 	.word	0x20000004

08000b10 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b10:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b12:	4c08      	ldr	r4, [pc, #32]	@ (8000b34 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b14:	2300      	movs	r3, #0
 8000b16:	461a      	mov	r2, r3
 8000b18:	a901      	add	r1, sp, #4
 8000b1a:	6820      	ldr	r0, [r4, #0]
 8000b1c:	f006 fc88 	bl	8007430 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b20:	6820      	ldr	r0, [r4, #0]
 8000b22:	f04f 33ff 	mov.w	r3, #4294967295
 8000b26:	2200      	movs	r2, #0
 8000b28:	a901      	add	r1, sp, #4
 8000b2a:	f006 fc81 	bl	8007430 <osMessageQueueGet>
}
 8000b2e:	b002      	add	sp, #8
 8000b30:	bd10      	pop	{r4, pc}
 8000b32:	bf00      	nop
 8000b34:	200001a8 	.word	0x200001a8

08000b38 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000b38:	6803      	ldr	r3, [r0, #0]
 8000b3a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000b3c:	4718      	bx	r3

08000b3e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000b3e:	2001      	movs	r0, #1
 8000b40:	4770      	bx	lr

08000b42 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000b42:	6803      	ldr	r3, [r0, #0]
 8000b44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000b46:	4718      	bx	r3

08000b48 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000b48:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000b4a:	2300      	movs	r3, #0
 8000b4c:	9301      	str	r3, [sp, #4]
 8000b4e:	4b0d      	ldr	r3, [pc, #52]	@ (8000b84 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000b50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b52:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000b56:	631a      	str	r2, [r3, #48]	@ 0x30
 8000b58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000b5a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000b5e:	9201      	str	r2, [sp, #4]
 8000b60:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000b62:	691a      	ldr	r2, [r3, #16]
 8000b64:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000b68:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000b6a:	691a      	ldr	r2, [r3, #16]
 8000b6c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000b70:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000b72:	4b05      	ldr	r3, [pc, #20]	@ (8000b88 <_ZN8STM32DMA10initializeEv+0x40>)
 8000b74:	4a05      	ldr	r2, [pc, #20]	@ (8000b8c <_ZN8STM32DMA10initializeEv+0x44>)
 8000b76:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b78:	4b05      	ldr	r3, [pc, #20]	@ (8000b90 <_ZN8STM32DMA10initializeEv+0x48>)
 8000b7a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000b7e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000b80:	b002      	add	sp, #8
 8000b82:	4770      	bx	lr
 8000b84:	40023800 	.word	0x40023800
 8000b88:	20001eb4 	.word	0x20001eb4
 8000b8c:	08000e21 	.word	0x08000e21
 8000b90:	e000e100 	.word	0xe000e100

08000b94 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b94:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000b98:	4770      	bx	lr
	...

08000b9c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b9c:	4b05      	ldr	r3, [pc, #20]	@ (8000bb4 <_ZN8STM32DMAD1Ev+0x18>)
 8000b9e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000ba0:	4b05      	ldr	r3, [pc, #20]	@ (8000bb8 <_ZN8STM32DMAD1Ev+0x1c>)
 8000ba2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000ba6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000baa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000bae:	f3bf 8f6f 	isb	sy
}
 8000bb2:	4770      	bx	lr
 8000bb4:	0801f4ec 	.word	0x0801f4ec
 8000bb8:	e000e100 	.word	0xe000e100

08000bbc <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000bbc:	b510      	push	{r4, lr}
 8000bbe:	4604      	mov	r4, r0
}
 8000bc0:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000bc4:	f7ff ffea 	bl	8000b9c <_ZN8STM32DMAD1Ev>
 8000bc8:	4620      	mov	r0, r4
 8000bca:	f01c fd5d 	bl	801d688 <_ZdlPvj>
 8000bce:	4620      	mov	r0, r4
 8000bd0:	bd10      	pop	{r4, pc}
	...

08000bd4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000bd4:	b508      	push	{r3, lr}
    switch (format)
 8000bd6:	280a      	cmp	r0, #10
 8000bd8:	d809      	bhi.n	8000bee <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000bda:	e8df f000 	tbb	[pc, r0]
 8000bde:	1006      	.short	0x1006
 8000be0:	0808080e 	.word	0x0808080e
 8000be4:	10101008 	.word	0x10101008
 8000be8:	10          	.byte	0x10
 8000be9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bea:	2002      	movs	r0, #2
}
 8000bec:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000bee:	4b05      	ldr	r3, [pc, #20]	@ (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000bf0:	4a05      	ldr	r2, [pc, #20]	@ (8000c08 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000bf2:	4806      	ldr	r0, [pc, #24]	@ (8000c0c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000bf4:	2187      	movs	r1, #135	@ 0x87
 8000bf6:	f01c fd75 	bl	801d6e4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	e7f6      	b.n	8000bec <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000bfe:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000c00:	e7f4      	b.n	8000bec <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000c02:	bf00      	nop
 8000c04:	0801ea06 	.word	0x0801ea06
 8000c08:	0801ea21 	.word	0x0801ea21
 8000c0c:	0801ea6c 	.word	0x0801ea6c

08000c10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c10:	b538      	push	{r3, r4, r5, lr}
 8000c12:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c14:	7f88      	ldrb	r0, [r1, #30]
 8000c16:	f7ff ffdd 	bl	8000bd4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c1a:	8aa5      	ldrh	r5, [r4, #20]
 8000c1c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c1e:	4b16      	ldr	r3, [pc, #88]	@ (8000c78 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c20:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c22:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c24:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000c28:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c2a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c2c:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c2e:	1b52      	subs	r2, r2, r5
 8000c30:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c32:	6825      	ldr	r5, [r4, #0]
 8000c34:	2d08      	cmp	r5, #8
 8000c36:	d10e      	bne.n	8000c56 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c38:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c3c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c3e:	7f20      	ldrb	r0, [r4, #28]
 8000c40:	4a0e      	ldr	r2, [pc, #56]	@ (8000c7c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c42:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c46:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c48:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c4a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c4c:	4a0c      	ldr	r2, [pc, #48]	@ (8000c80 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c50:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c52:	601a      	str	r2, [r3, #0]
    }
}
 8000c54:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c56:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c58:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c5a:	611a      	str	r2, [r3, #16]
 8000c5c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000c5e:	0a0a      	lsrs	r2, r1, #8
 8000c60:	0948      	lsrs	r0, r1, #5
 8000c62:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000c66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000c6a:	4302      	orrs	r2, r0
 8000c6c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000c70:	430a      	orrs	r2, r1
 8000c72:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c74:	4a03      	ldr	r2, [pc, #12]	@ (8000c84 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000c76:	e7ec      	b.n	8000c52 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000c78:	4002b000 	.word	0x4002b000
 8000c7c:	00010009 	.word	0x00010009
 8000c80:	00020201 	.word	0x00020201
 8000c84:	00030201 	.word	0x00030201

08000c88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000c88:	b508      	push	{r3, lr}
    switch (format)
 8000c8a:	280b      	cmp	r0, #11
 8000c8c:	d80b      	bhi.n	8000ca6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000c8e:	e8df f000 	tbb	[pc, r0]
 8000c92:	1206      	.short	0x1206
 8000c94:	0a0a0a10 	.word	0x0a0a0a10
 8000c98:	0808080a 	.word	0x0808080a
 8000c9c:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000c9e:	2002      	movs	r0, #2
}
 8000ca0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ca2:	2005      	movs	r0, #5
        break;
 8000ca4:	e7fc      	b.n	8000ca0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000ca6:	4b05      	ldr	r3, [pc, #20]	@ (8000cbc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000ca8:	4a05      	ldr	r2, [pc, #20]	@ (8000cc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000caa:	4806      	ldr	r0, [pc, #24]	@ (8000cc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000cac:	2166      	movs	r1, #102	@ 0x66
 8000cae:	f01c fd19 	bl	801d6e4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000cb2:	2000      	movs	r0, #0
 8000cb4:	e7f4      	b.n	8000ca0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cb6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cb8:	e7f2      	b.n	8000ca0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cba:	bf00      	nop
 8000cbc:	0801ea06 	.word	0x0801ea06
 8000cc0:	0801eab5 	.word	0x0801eab5
 8000cc4:	0801ea6c 	.word	0x0801ea6c

08000cc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000cc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000ccc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000cd0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000cd2:	4640      	mov	r0, r8
 8000cd4:	f7ff ffd8 	bl	8000c88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cd8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000cda:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cdc:	4638      	mov	r0, r7
 8000cde:	f7ff ffd3 	bl	8000c88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000ce2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ce4:	4638      	mov	r0, r7
 8000ce6:	f7ff ff75 	bl	8000bd4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cea:	8aa1      	ldrh	r1, [r4, #20]
 8000cec:	8b62      	ldrh	r2, [r4, #26]
 8000cee:	4b44      	ldr	r3, [pc, #272]	@ (8000e00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000cf0:	1a52      	subs	r2, r2, r1
 8000cf2:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cf4:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000cf6:	8b22      	ldrh	r2, [r4, #24]
 8000cf8:	1a52      	subs	r2, r2, r1
 8000cfa:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfe:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d00:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d04:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d06:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000d08:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d0a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000d0c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000d0e:	6820      	ldr	r0, [r4, #0]
 8000d10:	2880      	cmp	r0, #128	@ 0x80
 8000d12:	d028      	beq.n	8000d66 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000d14:	7f22      	ldrb	r2, [r4, #28]
 8000d16:	d80f      	bhi.n	8000d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000d18:	2820      	cmp	r0, #32
 8000d1a:	d067      	beq.n	8000dec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000d1c:	2840      	cmp	r0, #64	@ 0x40
 8000d1e:	d065      	beq.n	8000dec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000d20:	2804      	cmp	r0, #4
 8000d22:	d01a      	beq.n	8000d5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d24:	4b36      	ldr	r3, [pc, #216]	@ (8000e00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d26:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000d2a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000d2e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000d32:	d061      	beq.n	8000df8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000d34:	4a33      	ldr	r2, [pc, #204]	@ (8000e04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	e044      	b.n	8000dc2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000d38:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000d3c:	d004      	beq.n	8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000d3e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000d42:	d1ef      	bne.n	8000d24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d44:	4830      	ldr	r0, [pc, #192]	@ (8000e08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000d46:	e000      	b.n	8000d4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d48:	4830      	ldr	r0, [pc, #192]	@ (8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d4a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000d4e:	61da      	str	r2, [r3, #28]
 8000d50:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d52:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d54:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d56:	6159      	str	r1, [r3, #20]
 8000d58:	e032      	b.n	8000dc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d5a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d5e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d62:	61da      	str	r2, [r3, #28]
 8000d64:	e7f6      	b.n	8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000d66:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000d68:	1d02      	adds	r2, r0, #4
 8000d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d6c:	7f22      	ldrb	r2, [r4, #28]
 8000d6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000d72:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000d76:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d78:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d7a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d7c:	7801      	ldrb	r1, [r0, #0]
 8000d7e:	b141      	cbz	r1, 8000d92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000d80:	2901      	cmp	r1, #1
 8000d82:	d021      	beq.n	8000dc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000d84:	4b22      	ldr	r3, [pc, #136]	@ (8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000d86:	4a23      	ldr	r2, [pc, #140]	@ (8000e14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000d88:	4823      	ldr	r0, [pc, #140]	@ (8000e18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000d8a:	f240 1111 	movw	r1, #273	@ 0x111
 8000d8e:	f01c fca9 	bl	801d6e4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d92:	69da      	ldr	r2, [r3, #28]
 8000d94:	8841      	ldrh	r1, [r0, #2]
 8000d96:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000d9a:	3901      	subs	r1, #1
 8000d9c:	f022 0210 	bic.w	r2, r2, #16
 8000da0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000da4:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000da6:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000da8:	4b15      	ldr	r3, [pc, #84]	@ (8000e00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000daa:	69da      	ldr	r2, [r3, #28]
 8000dac:	f042 0220 	orr.w	r2, r2, #32
 8000db0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000db2:	69da      	ldr	r2, [r3, #28]
 8000db4:	0692      	lsls	r2, r2, #26
 8000db6:	d4fc      	bmi.n	8000db2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000db8:	2210      	movs	r2, #16
 8000dba:	609a      	str	r2, [r3, #8]
            if (blend)
 8000dbc:	2900      	cmp	r1, #0
 8000dbe:	d0b9      	beq.n	8000d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000dc0:	4a16      	ldr	r2, [pc, #88]	@ (8000e1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000dc2:	601a      	str	r2, [r3, #0]
}
 8000dc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000dc8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000dcc:	69da      	ldr	r2, [r3, #28]
 8000dce:	8840      	ldrh	r0, [r0, #2]
 8000dd0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000dd4:	f100 30ff 	add.w	r0, r0, #4294967295
 8000dd8:	f022 0210 	bic.w	r2, r2, #16
 8000ddc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000de0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000de4:	bf18      	it	ne
 8000de6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000de8:	61da      	str	r2, [r3, #28]
                break;
 8000dea:	e7dd      	b.n	8000da8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dec:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000df0:	4b03      	ldr	r3, [pc, #12]	@ (8000e00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000df2:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000df6:	e7b4      	b.n	8000d62 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000df8:	f240 2201 	movw	r2, #513	@ 0x201
 8000dfc:	e7e1      	b.n	8000dc2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000dfe:	bf00      	nop
 8000e00:	4002b000 	.word	0x4002b000
 8000e04:	00010201 	.word	0x00010201
 8000e08:	00020009 	.word	0x00020009
 8000e0c:	0002000a 	.word	0x0002000a
 8000e10:	0801eaff 	.word	0x0801eaff
 8000e14:	0801eb19 	.word	0x0801eb19
 8000e18:	0801ea6c 	.word	0x0801ea6c
 8000e1c:	00020201 	.word	0x00020201

08000e20 <DMA2D_XferCpltCallback>:
        return instance;
 8000e20:	4b02      	ldr	r3, [pc, #8]	@ (8000e2c <DMA2D_XferCpltCallback+0xc>)
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000e26:	6803      	ldr	r3, [r0, #0]
 8000e28:	695b      	ldr	r3, [r3, #20]
 8000e2a:	4718      	bx	r3
 8000e2c:	20013288 	.word	0x20013288

08000e30 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000e30:	b570      	push	{r4, r5, r6, lr}
 8000e32:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000e34:	4625      	mov	r5, r4
 8000e36:	4b0a      	ldr	r3, [pc, #40]	@ (8000e60 <_ZN8STM32DMAC1Ev+0x30>)
 8000e38:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000e3a:	2600      	movs	r6, #0
 8000e3c:	6060      	str	r0, [r4, #4]
 8000e3e:	7226      	strb	r6, [r4, #8]
 8000e40:	7266      	strb	r6, [r4, #9]
 8000e42:	f845 3b20 	str.w	r3, [r5], #32
 8000e46:	2260      	movs	r2, #96	@ 0x60
 8000e48:	4629      	mov	r1, r5
 8000e4a:	f009 fc91 	bl	800a770 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e4e:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000e52:	60ee      	str	r6, [r5, #12]
 8000e54:	3524      	adds	r5, #36	@ 0x24
 8000e56:	429d      	cmp	r5, r3
 8000e58:	d1fb      	bne.n	8000e52 <_ZN8STM32DMAC1Ev+0x22>
}
 8000e5a:	4620      	mov	r0, r4
 8000e5c:	bd70      	pop	{r4, r5, r6, pc}
 8000e5e:	bf00      	nop
 8000e60:	0801f4ec 	.word	0x0801f4ec

08000e64 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e64:	2001      	movs	r0, #1
 8000e66:	4770      	bx	lr

08000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e68:	2040      	movs	r0, #64	@ 0x40
 8000e6a:	4770      	bx	lr

08000e6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e6c:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000e70:	3008      	adds	r0, #8
 8000e72:	4770      	bx	lr

08000e74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e74:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000e78:	3008      	adds	r0, #8
 8000e7a:	4770      	bx	lr

08000e7c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7c:	2001      	movs	r0, #1
 8000e7e:	4770      	bx	lr

08000e80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e80:	f640 2088 	movw	r0, #2696	@ 0xa88
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	f640 2388 	movw	r3, #2696	@ 0xa88
 8000e8a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e8e:	3008      	adds	r0, #8
 8000e90:	4770      	bx	lr

08000e92 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e92:	f640 2388 	movw	r3, #2696	@ 0xa88
 8000e96:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e9a:	3008      	adds	r0, #8
 8000e9c:	4770      	bx	lr

08000e9e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e9e:	2001      	movs	r0, #1
 8000ea0:	4770      	bx	lr

08000ea2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000ea2:	2010      	movs	r0, #16
 8000ea4:	4770      	bx	lr

08000ea6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000ea6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000eaa:	3008      	adds	r0, #8
 8000eac:	4770      	bx	lr

08000eae <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000eae:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000eb2:	3008      	adds	r0, #8
 8000eb4:	4770      	bx	lr

08000eb6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMenuScreenScreenNoTransition();
 8000eb6:	4608      	mov	r0, r1
 8000eb8:	f001 bb4a 	b.w	8002550 <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv>

08000ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000ebc:	b510      	push	{r4, lr}
 8000ebe:	4b03      	ldr	r3, [pc, #12]	@ (8000ecc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ec0:	6003      	str	r3, [r0, #0]
 8000ec2:	4604      	mov	r4, r0
 8000ec4:	f008 fad9 	bl	800947a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ec8:	4620      	mov	r0, r4
 8000eca:	bd10      	pop	{r4, pc}
 8000ecc:	0801f5a4 	.word	0x0801f5a4

08000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000ed0:	b510      	push	{r4, lr}
 8000ed2:	4604      	mov	r4, r0
 8000ed4:	f7ff fff2 	bl	8000ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000ed8:	4620      	mov	r0, r4
 8000eda:	2148      	movs	r1, #72	@ 0x48
 8000edc:	f01c fbd4 	bl	801d688 <_ZdlPvj>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	bd10      	pop	{r4, pc}

08000ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ee4:	b510      	push	{r4, lr}
 8000ee6:	4b03      	ldr	r3, [pc, #12]	@ (8000ef4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ee8:	6003      	str	r3, [r0, #0]
 8000eea:	4604      	mov	r4, r0
 8000eec:	f008 fac5 	bl	800947a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ef0:	4620      	mov	r0, r4
 8000ef2:	bd10      	pop	{r4, pc}
 8000ef4:	0801f570 	.word	0x0801f570

08000ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ef8:	b510      	push	{r4, lr}
 8000efa:	4604      	mov	r4, r0
 8000efc:	f7ff fff2 	bl	8000ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f00:	4620      	mov	r0, r4
 8000f02:	f44f 6129 	mov.w	r1, #2704	@ 0xa90
 8000f06:	f01c fbbf 	bl	801d688 <_ZdlPvj>
 8000f0a:	4620      	mov	r0, r4
 8000f0c:	bd10      	pop	{r4, pc}
	...

08000f10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000f10:	b510      	push	{r4, lr}
 8000f12:	4b03      	ldr	r3, [pc, #12]	@ (8000f20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000f14:	6003      	str	r3, [r0, #0]
 8000f16:	4604      	mov	r4, r0
 8000f18:	f008 faaf 	bl	800947a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000f1c:	4620      	mov	r0, r4
 8000f1e:	bd10      	pop	{r4, pc}
 8000f20:	0801f53c 	.word	0x0801f53c

08000f24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f24:	b510      	push	{r4, lr}
 8000f26:	4604      	mov	r4, r0
 8000f28:	f7ff fff2 	bl	8000f10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f2c:	4620      	mov	r0, r4
 8000f2e:	2118      	movs	r1, #24
 8000f30:	f01c fbaa 	bl	801d688 <_ZdlPvj>
 8000f34:	4620      	mov	r0, r4
 8000f36:	bd10      	pop	{r4, pc}

08000f38 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f38:	b510      	push	{r4, lr}
 8000f3a:	4b08      	ldr	r3, [pc, #32]	@ (8000f5c <_ZN12FrontendHeapD1Ev+0x24>)
 8000f3c:	6003      	str	r3, [r0, #0]
 8000f3e:	4604      	mov	r4, r0
 8000f40:	f600 20bc 	addw	r0, r0, #2748	@ 0xabc
 8000f44:	f7ff ffba 	bl	8000ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f48:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8000f4c:	f7ff ffca 	bl	8000ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f50:	f104 0014 	add.w	r0, r4, #20
 8000f54:	f7ff ffdc 	bl	8000f10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19GameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f58:	4620      	mov	r0, r4
 8000f5a:	bd10      	pop	{r4, pc}
 8000f5c:	0801f5d8 	.word	0x0801f5d8

08000f60 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f60:	b508      	push	{r3, lr}
 8000f62:	4802      	ldr	r0, [pc, #8]	@ (8000f6c <__tcf_0+0xc>)
 8000f64:	f7ff ffe8 	bl	8000f38 <_ZN12FrontendHeapD1Ev>
 8000f68:	bd08      	pop	{r3, pc}
 8000f6a:	bf00      	nop
 8000f6c:	2000105c 	.word	0x2000105c

08000f70 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f70:	b510      	push	{r4, lr}
 8000f72:	4604      	mov	r4, r0
 8000f74:	f7ff ffe0 	bl	8000f38 <_ZN12FrontendHeapD1Ev>
 8000f78:	4620      	mov	r0, r4
 8000f7a:	f640 4164 	movw	r1, #3172	@ 0xc64
 8000f7e:	f01c fb83 	bl	801d688 <_ZdlPvj>
 8000f82:	4620      	mov	r0, r4
 8000f84:	bd10      	pop	{r4, pc}
	...

08000f88 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f88:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f8c:	f001 f8d6 	bl	800213c <_ZN14BitmapDatabase11getInstanceEv>
 8000f90:	4605      	mov	r5, r0
 8000f92:	f001 f8d7 	bl	8002144 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f96:	2400      	movs	r4, #0
 8000f98:	4601      	mov	r1, r0
 8000f9a:	4623      	mov	r3, r4
 8000f9c:	4628      	mov	r0, r5
 8000f9e:	4622      	mov	r2, r4
 8000fa0:	9400      	str	r4, [sp, #0]
 8000fa2:	f00e ff05 	bl	800fdb0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000fa6:	4b25      	ldr	r3, [pc, #148]	@ (800103c <touchgfx_init+0xb4>)
 8000fa8:	4a25      	ldr	r2, [pc, #148]	@ (8001040 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000faa:	4d26      	ldr	r5, [pc, #152]	@ (8001044 <touchgfx_init+0xbc>)
 8000fac:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000fae:	4620      	mov	r0, r4
 8000fb0:	f002 fa02 	bl	80033b8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000fb4:	4824      	ldr	r0, [pc, #144]	@ (8001048 <touchgfx_init+0xc0>)
 8000fb6:	f00e fe63 	bl	800fc80 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000fba:	682b      	ldr	r3, [r5, #0]
 8000fbc:	f3bf 8f5b 	dmb	ish
 8000fc0:	07db      	lsls	r3, r3, #31
 8000fc2:	d435      	bmi.n	8001030 <touchgfx_init+0xa8>
 8000fc4:	4628      	mov	r0, r5
 8000fc6:	f01c fb61 	bl	801d68c <__cxa_guard_acquire>
 8000fca:	b388      	cbz	r0, 8001030 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fcc:	4c1f      	ldr	r4, [pc, #124]	@ (800104c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fce:	4b20      	ldr	r3, [pc, #128]	@ (8001050 <touchgfx_init+0xc8>)
 8000fd0:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000fd2:	f604 3608 	addw	r6, r4, #2824	@ 0xb08
        : presenterStorage(pres),
 8000fd6:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fda:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8000fde:	f604 27bc 	addw	r7, r4, #2748	@ 0xabc
        : presenterStorage(pres),
 8000fe2:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fe4:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fe8:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fea:	6126      	str	r6, [r4, #16]
 8000fec:	f008 fa46 	bl	800947c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ff0:	4b18      	ldr	r3, [pc, #96]	@ (8001054 <touchgfx_init+0xcc>)
 8000ff2:	6163      	str	r3, [r4, #20]
 8000ff4:	4640      	mov	r0, r8
 8000ff6:	f008 fa41 	bl	800947c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ffa:	4b17      	ldr	r3, [pc, #92]	@ (8001058 <touchgfx_init+0xd0>)
 8000ffc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000ffe:	4638      	mov	r0, r7
 8001000:	f008 fa3c 	bl	800947c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001004:	4b15      	ldr	r3, [pc, #84]	@ (800105c <touchgfx_init+0xd4>)
 8001006:	f8c4 3abc 	str.w	r3, [r4, #2748]	@ 0xabc
 800100a:	f604 3004 	addw	r0, r4, #2820	@ 0xb04
 800100e:	f002 fdd7 	bl	8003bc0 <_ZN5ModelC1Ev>
 8001012:	4622      	mov	r2, r4
 8001014:	f604 3104 	addw	r1, r4, #2820	@ 0xb04
 8001018:	4630      	mov	r0, r6
 800101a:	f002 fa43 	bl	80034a4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800101e:	4630      	mov	r0, r6
 8001020:	f001 fa96 	bl	8002550 <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001024:	480e      	ldr	r0, [pc, #56]	@ (8001060 <touchgfx_init+0xd8>)
 8001026:	f01c fb7b 	bl	801d720 <atexit>
 800102a:	4628      	mov	r0, r5
 800102c:	f01c fb3a 	bl	801d6a4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001030:	480c      	ldr	r0, [pc, #48]	@ (8001064 <touchgfx_init+0xdc>)
}
 8001032:	b002      	add	sp, #8
 8001034:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001038:	f7ff bc60 	b.w	80008fc <_ZN11TouchGFXHAL10initializeEv>
 800103c:	200132e4 	.word	0x200132e4
 8001040:	2000022c 	.word	0x2000022c
 8001044:	20001058 	.word	0x20001058
 8001048:	20000008 	.word	0x20000008
 800104c:	2000105c 	.word	0x2000105c
 8001050:	0801f5d8 	.word	0x0801f5d8
 8001054:	0801f53c 	.word	0x0801f53c
 8001058:	0801f570 	.word	0x0801f570
 800105c:	0801f5a4 	.word	0x0801f5a4
 8001060:	08000f61 	.word	0x08000f61
 8001064:	200001b0 	.word	0x200001b0

08001068 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001068:	4801      	ldr	r0, [pc, #4]	@ (8001070 <touchgfx_taskEntry+0x8>)
 800106a:	f7ff bc59 	b.w	8000920 <_ZN11TouchGFXHAL9taskEntryEv>
 800106e:	bf00      	nop
 8001070:	200001b0 	.word	0x200001b0

08001074 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001074:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001076:	4e22      	ldr	r6, [pc, #136]	@ (8001100 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001078:	4c22      	ldr	r4, [pc, #136]	@ (8001104 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800107a:	4d23      	ldr	r5, [pc, #140]	@ (8001108 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800107c:	4b23      	ldr	r3, [pc, #140]	@ (800110c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800107e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001080:	4630      	mov	r0, r6
 8001082:	f7ff fed5 	bl	8000e30 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001086:	4628      	mov	r0, r5
 8001088:	f013 f95e 	bl	8014348 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800108c:	4b20      	ldr	r3, [pc, #128]	@ (8001110 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800108e:	4821      	ldr	r0, [pc, #132]	@ (8001114 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001090:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001092:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001094:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001098:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800109c:	491e      	ldr	r1, [pc, #120]	@ (8001118 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800109e:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 80010a0:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80010a4:	491d      	ldr	r1, [pc, #116]	@ (800111c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80010a6:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 80010a8:	491d      	ldr	r1, [pc, #116]	@ (8001120 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80010aa:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 80010ae:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010b0:	21f0      	movs	r1, #240	@ 0xf0
 80010b2:	8001      	strh	r1, [r0, #0]
 80010b4:	481b      	ldr	r0, [pc, #108]	@ (8001124 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010b6:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010b8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010ba:	481b      	ldr	r0, [pc, #108]	@ (8001128 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010bc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010c0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 80010c4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010c8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010cc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010d0:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80010d4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80010d8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010dc:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80010e0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 80010e4:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80010e6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010ea:	8001      	strh	r1, [r0, #0]
 80010ec:	480f      	ldr	r0, [pc, #60]	@ (800112c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010ee:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010f0:	490f      	ldr	r1, [pc, #60]	@ (8001130 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010f2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010f4:	2201      	movs	r2, #1
 80010f6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010fa:	4a0e      	ldr	r2, [pc, #56]	@ (8001134 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010fc:	601a      	str	r2, [r3, #0]
}
 80010fe:	bd70      	pop	{r4, r5, r6, pc}
 8001100:	200002b4 	.word	0x200002b4
 8001104:	20001054 	.word	0x20001054
 8001108:	20000230 	.word	0x20000230
 800110c:	0801e780 	.word	0x0801e780
 8001110:	200001b0 	.word	0x200001b0
 8001114:	2001327c 	.word	0x2001327c
 8001118:	01000001 	.word	0x01000001
 800111c:	01010000 	.word	0x01010000
 8001120:	20013288 	.word	0x20013288
 8001124:	20013282 	.word	0x20013282
 8001128:	2001327e 	.word	0x2001327e
 800112c:	20013284 	.word	0x20013284
 8001130:	20013280 	.word	0x20013280
 8001134:	0801f414 	.word	0x0801f414

08001138 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001138:	4801      	ldr	r0, [pc, #4]	@ (8001140 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800113a:	f7ff bd2f 	b.w	8000b9c <_ZN8STM32DMAD1Ev>
 800113e:	bf00      	nop
 8001140:	200002b4 	.word	0x200002b4

08001144 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001144:	4b03      	ldr	r3, [pc, #12]	@ (8001154 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001146:	2290      	movs	r2, #144	@ 0x90
 8001148:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 800114c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001150:	4770      	bx	lr
 8001152:	bf00      	nop
 8001154:	e000e100 	.word	0xe000e100

08001158 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001158:	4a09      	ldr	r2, [pc, #36]	@ (8001180 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800115a:	490a      	ldr	r1, [pc, #40]	@ (8001184 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800115c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800115e:	480a      	ldr	r0, [pc, #40]	@ (8001188 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001160:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001164:	3b01      	subs	r3, #1
 8001166:	b29b      	uxth	r3, r3
 8001168:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800116a:	6911      	ldr	r1, [r2, #16]
 800116c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001170:	3901      	subs	r1, #1
 8001172:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001174:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001176:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001178:	f043 0301 	orr.w	r3, r3, #1
 800117c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800117e:	4770      	bx	lr
 8001180:	40016800 	.word	0x40016800
 8001184:	20001cc2 	.word	0x20001cc2
 8001188:	20001cc0 	.word	0x20001cc0

0800118c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800118c:	4b01      	ldr	r3, [pc, #4]	@ (8001194 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800118e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001192:	4770      	bx	lr
 8001194:	40016800 	.word	0x40016800

08001198 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001198:	4b02      	ldr	r3, [pc, #8]	@ (80011a4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800119a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800119c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011a0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80011a2:	4770      	bx	lr
 80011a4:	40016800 	.word	0x40016800

080011a8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80011a8:	b570      	push	{r4, r5, r6, lr}
 80011aa:	4604      	mov	r4, r0
    HAL::initialize();
 80011ac:	f008 fc63 	bl	8009a76 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80011b0:	6823      	ldr	r3, [r4, #0]
 80011b2:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 80011b4:	f00b fd50 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 80011b8:	4601      	mov	r1, r0
 80011ba:	4620      	mov	r0, r4
 80011bc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011be:	6823      	ldr	r3, [r4, #0]
 80011c0:	4a05      	ldr	r2, [pc, #20]	@ (80011d8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80011c2:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 80011c6:	4620      	mov	r0, r4
 80011c8:	46ac      	mov	ip, r5
 80011ca:	2300      	movs	r3, #0
}
 80011cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011d0:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 80011d4:	4760      	bx	ip
 80011d6:	bf00      	nop
 80011d8:	d004b000 	.word	0xd004b000

080011dc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80011dc:	f008 bc32 	b.w	8009a44 <_ZN8touchgfx3HAL10beginFrameEv>

080011e0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80011e0:	f890 304b 	ldrb.w	r3, [r0, #75]	@ 0x4b
 80011e4:	b113      	cbz	r3, 80011ec <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80011e6:	4b02      	ldr	r3, [pc, #8]	@ (80011f0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80011e8:	2201      	movs	r2, #1
 80011ea:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80011ec:	f008 bc36 	b.w	8009a5c <_ZN8touchgfx3HAL8endFrameEv>
 80011f0:	20001cc4 	.word	0x20001cc4

080011f4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80011f4:	f008 bbf0 	b.w	80099d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080011f8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80011f8:	f008 bd51 	b.w	8009c9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080011fc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011fc:	4b03      	ldr	r3, [pc, #12]	@ (800120c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80011fe:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001202:	609a      	str	r2, [r3, #8]
 8001204:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001208:	609a      	str	r2, [r3, #8]
}
 800120a:	4770      	bx	lr
 800120c:	e000e100 	.word	0xe000e100

08001210 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001210:	4b08      	ldr	r3, [pc, #32]	@ (8001234 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001212:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001216:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800121a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800121e:	f3bf 8f6f 	isb	sy
 8001222:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001226:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800122a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800122e:	f3bf 8f6f 	isb	sy
}
 8001232:	4770      	bx	lr
 8001234:	e000e100 	.word	0xe000e100

08001238 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001238:	b510      	push	{r4, lr}
        return instance;
 800123a:	4c14      	ldr	r4, [pc, #80]	@ (800128c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800123c:	6823      	ldr	r3, [r4, #0]
 800123e:	b323      	cbz	r3, 800128a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001240:	4b13      	ldr	r3, [pc, #76]	@ (8001290 <HAL_LTDC_LineEventCallback+0x58>)
 8001242:	4a14      	ldr	r2, [pc, #80]	@ (8001294 <HAL_LTDC_LineEventCallback+0x5c>)
 8001244:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001246:	8811      	ldrh	r1, [r2, #0]
 8001248:	428b      	cmp	r3, r1
 800124a:	d113      	bne.n	8001274 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800124c:	4b12      	ldr	r3, [pc, #72]	@ (8001298 <HAL_LTDC_LineEventCallback+0x60>)
 800124e:	8819      	ldrh	r1, [r3, #0]
 8001250:	f004 fdb8 	bl	8005dc4 <HAL_LTDC_ProgramLineEvent>
 8001254:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001256:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 800125a:	3301      	adds	r3, #1
 800125c:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001260:	f7ff fc4a 	bl	8000af8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001264:	6820      	ldr	r0, [r4, #0]
 8001266:	f009 f945 	bl	800a4f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800126a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800126e:	2000      	movs	r0, #0
 8001270:	f7ff ba8a 	b.w	8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001274:	f004 fda6 	bl	8005dc4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001278:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	6a1b      	ldr	r3, [r3, #32]
 800127e:	4798      	blx	r3
    }
 8001280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001284:	2000      	movs	r0, #0
 8001286:	f7ff baa9 	b.w	80007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800128a:	bd10      	pop	{r4, pc}
 800128c:	20013288 	.word	0x20013288
 8001290:	40016800 	.word	0x40016800
 8001294:	20001cc2 	.word	0x20001cc2
 8001298:	20001cc0 	.word	0x20001cc0

0800129c <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 800129c:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*)&Value, 1, Spi5Timeout);
 800129e:	4b06      	ldr	r3, [pc, #24]	@ (80012b8 <SPI5_Write+0x1c>)
{
 80012a0:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*)&Value, 1, Spi5Timeout);
 80012a4:	681b      	ldr	r3, [r3, #0]
 80012a6:	4805      	ldr	r0, [pc, #20]	@ (80012bc <SPI5_Write+0x20>)
 80012a8:	2201      	movs	r2, #1
 80012aa:	f10d 0106 	add.w	r1, sp, #6
 80012ae:	f005 fad7 	bl	8006860 <HAL_SPI_Transmit>
  if (status != HAL_OK)
  {
    SPI5_Error();
  }
}
 80012b2:	b003      	add	sp, #12
 80012b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80012b8:	2000000c 	.word	0x2000000c
 80012bc:	20001d60 	.word	0x20001d60

080012c0 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80012c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t adc_values[2]; // Mảng lưu giá trị ADC cho trục X và Y

  for(;;)
  {
    // Bắt đầu chuyển đổi ADC
    if (HAL_ADC_Start(&hadc1) != HAL_OK)
 80012c4:	4c39      	ldr	r4, [pc, #228]	@ (80013ac <StartDefaultTask+0xec>)
      adc_values[1] = HAL_ADC_GetValue(&hadc1); // Trục Y
    }
    HAL_ADC_Stop(&hadc1);

    // Xử lý trục X: phải (Queue1) và trái (Queue2)
    count1 = osMessageQueueGetCount(Queue1Handle);
 80012c6:	4f3a      	ldr	r7, [pc, #232]	@ (80013b0 <StartDefaultTask+0xf0>)
    if (HAL_ADC_Start(&hadc1) != HAL_OK)
 80012c8:	4620      	mov	r0, r4
 80012ca:	f003 fbc5 	bl	8004a58 <HAL_ADC_Start>
    if (HAL_ADC_PollForConversion(&hadc1, 10) == HAL_OK)
 80012ce:	210a      	movs	r1, #10
 80012d0:	4620      	mov	r0, r4
 80012d2:	f003 fc5a 	bl	8004b8a <HAL_ADC_PollForConversion>
 80012d6:	b918      	cbnz	r0, 80012e0 <StartDefaultTask+0x20>
      adc_values[0] = HAL_ADC_GetValue(&hadc1); // Trục X
 80012d8:	4620      	mov	r0, r4
 80012da:	f003 fca9 	bl	8004c30 <HAL_ADC_GetValue>
 80012de:	4605      	mov	r5, r0
    if (HAL_ADC_PollForConversion(&hadc1, 10) == HAL_OK)
 80012e0:	210a      	movs	r1, #10
 80012e2:	4620      	mov	r0, r4
 80012e4:	f003 fc51 	bl	8004b8a <HAL_ADC_PollForConversion>
 80012e8:	b918      	cbnz	r0, 80012f2 <StartDefaultTask+0x32>
      adc_values[1] = HAL_ADC_GetValue(&hadc1); // Trục Y
 80012ea:	4620      	mov	r0, r4
 80012ec:	f003 fca0 	bl	8004c30 <HAL_ADC_GetValue>
 80012f0:	4606      	mov	r6, r0
    HAL_ADC_Stop(&hadc1);
 80012f2:	4620      	mov	r0, r4
 80012f4:	f003 fc2e 	bl	8004b54 <HAL_ADC_Stop>
    count1 = osMessageQueueGetCount(Queue1Handle);
 80012f8:	6838      	ldr	r0, [r7, #0]
 80012fa:	f006 f8c9 	bl	8007490 <osMessageQueueGetCount>
    if (count1 < 1)
 80012fe:	4602      	mov	r2, r0
 8001300:	b958      	cbnz	r0, 800131a <StartDefaultTask+0x5a>
    {
      if (adc_values[0] < JOYSTICK_X_LEFT_THRESHOLD) { x1 = 'R'; } else { x1 = 'N'; } // Đẩy trái (ADC thấp) → Phải
 8001302:	f5b5 7f7a 	cmp.w	r5, #1000	@ 0x3e8
 8001306:	bf2c      	ite	cs
 8001308:	234e      	movcs	r3, #78	@ 0x4e
 800130a:	2352      	movcc	r3, #82	@ 0x52
 800130c:	f88d 3004 	strb.w	r3, [sp, #4]
      osMessageQueuePut(Queue1Handle, &x1, 0, 100);
 8001310:	6838      	ldr	r0, [r7, #0]
 8001312:	2364      	movs	r3, #100	@ 0x64
 8001314:	a901      	add	r1, sp, #4
 8001316:	f006 f85a 	bl	80073ce <osMessageQueuePut>
    }

    count2 = osMessageQueueGetCount(Queue2Handle);
 800131a:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 80013b4 <StartDefaultTask+0xf4>
 800131e:	f8d8 0000 	ldr.w	r0, [r8]
 8001322:	f006 f8b5 	bl	8007490 <osMessageQueueGetCount>
    if (count2 < 1)
 8001326:	4602      	mov	r2, r0
 8001328:	b970      	cbnz	r0, 8001348 <StartDefaultTask+0x88>
    {
      if (adc_values[0] > JOYSTICK_X_RIGHT_THRESHOLD) { x2 = 'L'; } else { x2 = 'N'; } // Đẩy phải (ADC cao) → Trái
 800132a:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 800132e:	429d      	cmp	r5, r3
 8001330:	bf94      	ite	ls
 8001332:	234e      	movls	r3, #78	@ 0x4e
 8001334:	234c      	movhi	r3, #76	@ 0x4c
 8001336:	f88d 3005 	strb.w	r3, [sp, #5]
      osMessageQueuePut(Queue2Handle, &x2, 0, 100);
 800133a:	f8d8 0000 	ldr.w	r0, [r8]
 800133e:	2364      	movs	r3, #100	@ 0x64
 8001340:	f10d 0105 	add.w	r1, sp, #5
 8001344:	f006 f843 	bl	80073ce <osMessageQueuePut>
    }

    // Xử lý trục Y: lên (Queue3) và xuống (Queue4)
    count3 = osMessageQueueGetCount(Queue3Handle);
 8001348:	f8df 806c 	ldr.w	r8, [pc, #108]	@ 80013b8 <StartDefaultTask+0xf8>
 800134c:	f8d8 0000 	ldr.w	r0, [r8]
 8001350:	f006 f89e 	bl	8007490 <osMessageQueueGetCount>
    if (count3 < 1)
 8001354:	4602      	mov	r2, r0
 8001356:	b968      	cbnz	r0, 8001374 <StartDefaultTask+0xb4>
    {
      if (adc_values[1] < JOYSTICK_Y_UP_THRESHOLD)
      {
        x3 = 'U'; // Joystick nghiêng lên
 8001358:	f5b6 7f7a 	cmp.w	r6, #1000	@ 0x3e8
 800135c:	bf2c      	ite	cs
 800135e:	234e      	movcs	r3, #78	@ 0x4e
 8001360:	2355      	movcc	r3, #85	@ 0x55
 8001362:	f88d 3006 	strb.w	r3, [sp, #6]
      }
      else
      {
        x3 = 'N'; // Không có hướng
      }
      osMessageQueuePut(Queue3Handle, &x3, 0, 100);
 8001366:	f8d8 0000 	ldr.w	r0, [r8]
 800136a:	2364      	movs	r3, #100	@ 0x64
 800136c:	f10d 0106 	add.w	r1, sp, #6
 8001370:	f006 f82d 	bl	80073ce <osMessageQueuePut>
    }

    count4 = osMessageQueueGetCount(Queue4Handle);
 8001374:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 80013bc <StartDefaultTask+0xfc>
 8001378:	f8d8 0000 	ldr.w	r0, [r8]
 800137c:	f006 f888 	bl	8007490 <osMessageQueueGetCount>
    if (count4 < 1)
 8001380:	4602      	mov	r2, r0
 8001382:	b970      	cbnz	r0, 80013a2 <StartDefaultTask+0xe2>
    {
      if (adc_values[1] > JOYSTICK_Y_DOWN_THRESHOLD)
      {
        x4 = 'D'; // Joystick nghiêng xuống
 8001384:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8001388:	429e      	cmp	r6, r3
 800138a:	bf94      	ite	ls
 800138c:	234e      	movls	r3, #78	@ 0x4e
 800138e:	2344      	movhi	r3, #68	@ 0x44
 8001390:	f88d 3007 	strb.w	r3, [sp, #7]
      }
      else
      {
        x4 = 'N'; // Không có hướng
      }
      osMessageQueuePut(Queue4Handle, &x4, 0, 100);
 8001394:	f8d8 0000 	ldr.w	r0, [r8]
 8001398:	2364      	movs	r3, #100	@ 0x64
 800139a:	f10d 0107 	add.w	r1, sp, #7
 800139e:	f006 f816 	bl	80073ce <osMessageQueuePut>
    }

    osDelay(100); // Đợi 100ms trước khi đọc lại
 80013a2:	2064      	movs	r0, #100	@ 0x64
 80013a4:	f005 ff24 	bl	80071f0 <osDelay>
    if (HAL_ADC_Start(&hadc1) != HAL_OK)
 80013a8:	e78e      	b.n	80012c8 <StartDefaultTask+0x8>
 80013aa:	bf00      	nop
 80013ac:	20001ce4 	.word	0x20001ce4
 80013b0:	20001cd8 	.word	0x20001cd8
 80013b4:	20001cd4 	.word	0x20001cd4
 80013b8:	20001cd0 	.word	0x20001cd0
 80013bc:	20001ccc 	.word	0x20001ccc

080013c0 <SystemClock_Config>:
{
 80013c0:	b530      	push	{r4, r5, lr}
 80013c2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013c4:	2210      	movs	r2, #16
 80013c6:	2100      	movs	r1, #0
 80013c8:	a80a      	add	r0, sp, #40	@ 0x28
 80013ca:	f01c fb92 	bl	801daf2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013ce:	2214      	movs	r2, #20
 80013d0:	2100      	movs	r1, #0
 80013d2:	a803      	add	r0, sp, #12
 80013d4:	f01c fb8d 	bl	801daf2 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80013d8:	2400      	movs	r4, #0
 80013da:	4b1d      	ldr	r3, [pc, #116]	@ (8001450 <SystemClock_Config+0x90>)
 80013dc:	9401      	str	r4, [sp, #4]
 80013de:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80013e0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80013e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80013e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013e8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80013ec:	9301      	str	r3, [sp, #4]
 80013ee:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013f0:	4b18      	ldr	r3, [pc, #96]	@ (8001454 <SystemClock_Config+0x94>)
 80013f2:	9402      	str	r4, [sp, #8]
 80013f4:	681a      	ldr	r2, [r3, #0]
 80013f6:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80013fa:	601a      	str	r2, [r3, #0]
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001402:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001404:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001406:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001408:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800140c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001410:	2502      	movs	r5, #2
 8001412:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001416:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800141a:	2108      	movs	r1, #8
 800141c:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8001420:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001424:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001426:	2304      	movs	r3, #4
 8001428:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800142a:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800142c:	f004 fce8 	bl	8005e00 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001430:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001432:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001436:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800143a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800143e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001442:	2105      	movs	r1, #5
 8001444:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001446:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001448:	f004 feb6 	bl	80061b8 <HAL_RCC_ClockConfig>
}
 800144c:	b015      	add	sp, #84	@ 0x54
 800144e:	bd30      	pop	{r4, r5, pc}
 8001450:	40023800 	.word	0x40023800
 8001454:	40007000 	.word	0x40007000

08001458 <main>:
{
 8001458:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800145c:	b09b      	sub	sp, #108	@ 0x6c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800145e:	2400      	movs	r4, #0
 8001460:	4dc5      	ldr	r5, [pc, #788]	@ (8001778 <main+0x320>)
  hi2c3.Instance = I2C3;
 8001462:	4fc6      	ldr	r7, [pc, #792]	@ (800177c <main+0x324>)
  HAL_Init();
 8001464:	f003 fa10 	bl	8004888 <HAL_Init>
  SystemClock_Config();
 8001468:	f7ff ffaa 	bl	80013c0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800146c:	2214      	movs	r2, #20
 800146e:	2100      	movs	r1, #0
 8001470:	a80d      	add	r0, sp, #52	@ 0x34
 8001472:	f01c fb3e 	bl	801daf2 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001476:	9400      	str	r4, [sp, #0]
 8001478:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800147a:	48c1      	ldr	r0, [pc, #772]	@ (8001780 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800147c:	f043 0310 	orr.w	r3, r3, #16
 8001480:	632b      	str	r3, [r5, #48]	@ 0x30
 8001482:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8001484:	f003 0310 	and.w	r3, r3, #16
 8001488:	9300      	str	r3, [sp, #0]
 800148a:	9b00      	ldr	r3, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800148c:	9401      	str	r4, [sp, #4]
 800148e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8001490:	f043 0320 	orr.w	r3, r3, #32
 8001494:	632b      	str	r3, [r5, #48]	@ 0x30
 8001496:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8001498:	f003 0320 	and.w	r3, r3, #32
 800149c:	9301      	str	r3, [sp, #4]
 800149e:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014a0:	9402      	str	r4, [sp, #8]
 80014a2:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014a4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80014a8:	632b      	str	r3, [r5, #48]	@ 0x30
 80014aa:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014ac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014b0:	9302      	str	r3, [sp, #8]
 80014b2:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014b4:	9403      	str	r4, [sp, #12]
 80014b6:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014b8:	f043 0304 	orr.w	r3, r3, #4
 80014bc:	632b      	str	r3, [r5, #48]	@ 0x30
 80014be:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014c0:	f003 0304 	and.w	r3, r3, #4
 80014c4:	9303      	str	r3, [sp, #12]
 80014c6:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014c8:	9404      	str	r4, [sp, #16]
 80014ca:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014cc:	f043 0301 	orr.w	r3, r3, #1
 80014d0:	632b      	str	r3, [r5, #48]	@ 0x30
 80014d2:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014d4:	f003 0301 	and.w	r3, r3, #1
 80014d8:	9304      	str	r3, [sp, #16]
 80014da:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014dc:	9405      	str	r4, [sp, #20]
 80014de:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014e0:	f043 0302 	orr.w	r3, r3, #2
 80014e4:	632b      	str	r3, [r5, #48]	@ 0x30
 80014e6:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014e8:	f003 0302 	and.w	r3, r3, #2
 80014ec:	9305      	str	r3, [sp, #20]
 80014ee:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f0:	9406      	str	r4, [sp, #24]
 80014f2:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014f8:	632b      	str	r3, [r5, #48]	@ 0x30
 80014fa:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80014fc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001500:	9306      	str	r3, [sp, #24]
 8001502:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001504:	9407      	str	r4, [sp, #28]
 8001506:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8001508:	f043 0308 	orr.w	r3, r3, #8
 800150c:	632b      	str	r3, [r5, #48]	@ 0x30
 800150e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8001510:	f003 0308 	and.w	r3, r3, #8
 8001514:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001516:	4622      	mov	r2, r4
 8001518:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800151a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800151c:	f003 fe6e 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001520:	4898      	ldr	r0, [pc, #608]	@ (8001784 <main+0x32c>)
 8001522:	4622      	mov	r2, r4
 8001524:	2104      	movs	r1, #4
 8001526:	f003 fe69 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800152a:	4897      	ldr	r0, [pc, #604]	@ (8001788 <main+0x330>)
 800152c:	4622      	mov	r2, r4
 800152e:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001532:	f003 fe63 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Tắt còi ban đầu
 8001536:	4622      	mov	r2, r4
 8001538:	4894      	ldr	r0, [pc, #592]	@ (800178c <main+0x334>)
 800153a:	2101      	movs	r1, #1
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800153c:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Tắt còi ban đầu
 800153e:	f003 fe5d 	bl	80051fc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001542:	f04f 0a03 	mov.w	sl, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001546:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001548:	488d      	ldr	r0, [pc, #564]	@ (8001780 <main+0x328>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800154a:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800154e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001550:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001554:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001558:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800155c:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800155e:	f003 fd63 	bl	8005028 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001562:	4888      	ldr	r0, [pc, #544]	@ (8001784 <main+0x32c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001564:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001566:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001568:	e9cd b60d 	strd	fp, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800156c:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001570:	f003 fd5a 	bl	8005028 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001574:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001578:	4883      	ldr	r0, [pc, #524]	@ (8001788 <main+0x330>)
 800157a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800157c:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001580:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001584:	f003 fd50 	bl	8005028 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001588:	4880      	ldr	r0, [pc, #512]	@ (800178c <main+0x334>)
 800158a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP; // Push-Pull
 800158c:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001590:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001594:	f003 fd48 	bl	8005028 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Mặc định tắt còi
 8001598:	4622      	mov	r2, r4
 800159a:	487c      	ldr	r0, [pc, #496]	@ (800178c <main+0x334>)
 800159c:	4631      	mov	r1, r6
 800159e:	f003 fe2d 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015a2:	487b      	ldr	r0, [pc, #492]	@ (8001790 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a4:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015a6:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80015a8:	e9cd aa0d 	strd	sl, sl, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ac:	f003 fd3c 	bl	8005028 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015b0:	a90d      	add	r1, sp, #52	@ 0x34
 80015b2:	4873      	ldr	r0, [pc, #460]	@ (8001780 <main+0x328>)
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015b4:	e9cd b40d 	strd	fp, r4, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b8:	e9cd 640f 	strd	r6, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80015bc:	f003 fd34 	bl	8005028 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80015c0:	4874      	ldr	r0, [pc, #464]	@ (8001794 <main+0x33c>)
 80015c2:	4b75      	ldr	r3, [pc, #468]	@ (8001798 <main+0x340>)
 80015c4:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015c6:	f003 fc25 	bl	8004e14 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015ca:	4a74      	ldr	r2, [pc, #464]	@ (800179c <main+0x344>)
 80015cc:	4b74      	ldr	r3, [pc, #464]	@ (80017a0 <main+0x348>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80015ce:	623c      	str	r4, [r7, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80015d0:	e9c7 2300 	strd	r2, r3, [r7]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015d4:	4638      	mov	r0, r7
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015d6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80015da:	e9c7 3404 	strd	r3, r4, [r7, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015de:	e9c7 4402 	strd	r4, r4, [r7, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80015e2:	e9c7 4406 	strd	r4, r4, [r7, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015e6:	f003 fffb 	bl	80055e0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015ea:	2110      	movs	r1, #16
 80015ec:	4638      	mov	r0, r7
 80015ee:	f004 fa37 	bl	8005a60 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015f2:	4621      	mov	r1, r4
 80015f4:	4638      	mov	r0, r7
 80015f6:	f004 fa52 	bl	8005a9e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015fa:	486a      	ldr	r0, [pc, #424]	@ (80017a4 <main+0x34c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015fc:	496a      	ldr	r1, [pc, #424]	@ (80017a8 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015fe:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001600:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001604:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001608:	f44f 7700 	mov.w	r7, #512	@ 0x200
 800160c:	2318      	movs	r3, #24
 800160e:	e9c0 7306 	strd	r7, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001612:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001614:	4f65      	ldr	r7, [pc, #404]	@ (80017ac <main+0x354>)
  hspi5.Init.CRCPolynomial = 10;
 8001616:	62c3      	str	r3, [r0, #44]	@ 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001618:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800161c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001620:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001624:	f005 f8c0 	bl	80067a8 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001628:	4b61      	ldr	r3, [pc, #388]	@ (80017b0 <main+0x358>)
  SdramTiming.LoadToActiveDelay = 2;
 800162a:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800162e:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001632:	e9c7 3600 	strd	r3, r6, [r7]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001636:	2340      	movs	r3, #64	@ 0x40
 8001638:	e9c7 c304 	strd	ip, r3, [r7, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800163c:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001640:	e9c7 3406 	strd	r3, r4, [r7, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001644:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001648:	e9c7 3408 	strd	r3, r4, [r7, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800164c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001650:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001652:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001654:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001656:	4638      	mov	r0, r7
  SdramTiming.SelfRefreshTime = 4;
 8001658:	e9cd 3b0e 	strd	r3, fp, [sp, #56]	@ 0x38
  SdramTiming.WriteRecoveryTime = 3;
 800165c:	e9cd 3a10 	strd	r3, sl, [sp, #64]	@ 0x40
  Command->CommandTarget = FMC_SDRAM_CMD_TARGET_BANK2;
 8001660:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001664:	e9c7 4b02 	strd	r4, fp, [r7, #8]
  SdramTiming.RCDDelay = 2;
 8001668:	e9cd 8812 	strd	r8, r8, [sp, #72]	@ 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800166c:	f004 ff98 	bl	80065a0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001670:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001674:	a909      	add	r1, sp, #36	@ 0x24
 8001676:	4638      	mov	r0, r7
  Command->AutoRefreshNumber = 1;
 8001678:	e9cd 960a 	strd	r9, r6, [sp, #40]	@ 0x28
  __IO uint32_t tmpmrd = 0;
 800167c:	9408      	str	r4, [sp, #32]
  Command->CommandMode = FMC_SDRAM_CMD_CLK_ENABLE;
 800167e:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition = 0;
 8001680:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001682:	f004 ffad 	bl	80065e0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001686:	4630      	mov	r0, r6
 8001688:	f003 f92a 	bl	80048e0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800168c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001690:	a909      	add	r1, sp, #36	@ 0x24
 8001692:	4638      	mov	r0, r7
  Command->CommandTarget = FMC_SDRAM_CMD_TARGET_BANK2;
 8001694:	e9cd 8909 	strd	r8, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition = 0;
 8001698:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800169c:	f004 ffa0 	bl	80065e0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80016a4:	a909      	add	r1, sp, #36	@ 0x24
 80016a6:	4638      	mov	r0, r7
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016a8:	e9cd a909 	strd	sl, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80016ac:	e9cd b40b 	strd	fp, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016b0:	f004 ff96 	bl	80065e0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016b4:	f44f 720c 	mov.w	r2, #560	@ 0x230
 80016b8:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80016ba:	9a08      	ldr	r2, [sp, #32]
 80016bc:	920c      	str	r2, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016be:	a909      	add	r1, sp, #36	@ 0x24
 80016c0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80016c4:	4638      	mov	r0, r7
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016c6:	e9cd b909 	strd	fp, r9, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 80016ca:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016cc:	f004 ff88 	bl	80065e0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80016d0:	f240 516a 	movw	r1, #1386	@ 0x56a
 80016d4:	4638      	mov	r0, r7
 80016d6:	f004 ffa1 	bl	800661c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016da:	2234      	movs	r2, #52	@ 0x34
 80016dc:	4621      	mov	r1, r4
 80016de:	eb0d 0002 	add.w	r0, sp, r2
 80016e2:	f01c fa06 	bl	801daf2 <memset>
  hltdc.Instance = LTDC;
 80016e6:	4f33      	ldr	r7, [pc, #204]	@ (80017b4 <main+0x35c>)
 80016e8:	4a33      	ldr	r2, [pc, #204]	@ (80017b8 <main+0x360>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016ea:	613c      	str	r4, [r7, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80016ec:	e9c7 2400 	strd	r2, r4, [r7]
  hltdc.Init.HorizontalSync = 9;
 80016f0:	2209      	movs	r2, #9
  hltdc.Init.VerticalSync = 1;
 80016f2:	e9c7 2605 	strd	r2, r6, [r7, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80016f6:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80016f8:	f240 1e0d 	movw	lr, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80016fc:	e9c7 2a07 	strd	r2, sl, [r7, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001700:	f240 1243 	movw	r2, #323	@ 0x143
 8001704:	e9c7 e209 	strd	lr, r2, [r7, #36]	@ 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001708:	4638      	mov	r0, r7
  hltdc.Init.TotalHeigh = 327;
 800170a:	f240 1247 	movw	r2, #327	@ 0x147
 800170e:	f240 1a17 	movw	sl, #279	@ 0x117
 8001712:	e9c7 a20b 	strd	sl, r2, [r7, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001716:	e9c7 4402 	strd	r4, r4, [r7, #8]
  hltdc.Init.Backcolor.Blue = 0;
 800171a:	86bc      	strh	r4, [r7, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 800171c:	f887 4036 	strb.w	r4, [r7, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001720:	f004 fa58 	bl	8005bd4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001724:	20ff      	movs	r0, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001726:	21f0      	movs	r1, #240	@ 0xf0
  pLayerCfg.WindowY1 = 320;
 8001728:	f44f 72a0 	mov.w	r2, #320	@ 0x140
  pLayerCfg.Alpha0 = 0;
 800172c:	e9cd 0412 	strd	r0, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001730:	f44f 6b80 	mov.w	fp, #1024	@ 0x400
 8001734:	2005      	movs	r0, #5
  pLayerCfg.WindowY0 = 0;
 8001736:	e9cd 140e 	strd	r1, r4, [sp, #56]	@ 0x38
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800173a:	e9cd 2810 	strd	r2, r8, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800173e:	e9cd b014 	strd	fp, r0, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 8001742:	e9cd 4116 	strd	r4, r1, [sp, #88]	@ 0x58
  pLayerCfg.ImageHeight = 320;
 8001746:	9218      	str	r2, [sp, #96]	@ 0x60
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001748:	a90d      	add	r1, sp, #52	@ 0x34
 800174a:	4622      	mov	r2, r4
 800174c:	4638      	mov	r0, r7
  pLayerCfg.WindowX0 = 0;
 800174e:	940d      	str	r4, [sp, #52]	@ 0x34
  LcdDrv = &ili9341_drv;
 8001750:	4f1a      	ldr	r7, [pc, #104]	@ (80017bc <main+0x364>)
  pLayerCfg.Backcolor.Blue = 0;
 8001752:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001756:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800175a:	f004 fb06 	bl	8005d6a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800175e:	4a18      	ldr	r2, [pc, #96]	@ (80017c0 <main+0x368>)
 8001760:	603a      	str	r2, [r7, #0]
  LcdDrv->Init();
 8001762:	6812      	ldr	r2, [r2, #0]
 8001764:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8001766:	683a      	ldr	r2, [r7, #0]
  hdma2d.Instance = DMA2D;
 8001768:	4f16      	ldr	r7, [pc, #88]	@ (80017c4 <main+0x36c>)
  LcdDrv->DisplayOff();
 800176a:	68d2      	ldr	r2, [r2, #12]
 800176c:	4790      	blx	r2
  hdma2d.Instance = DMA2D;
 800176e:	4a16      	ldr	r2, [pc, #88]	@ (80017c8 <main+0x370>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001770:	4638      	mov	r0, r7
  hdma2d.Init.Mode = DMA2D_M2M;
 8001772:	e9c7 2400 	strd	r2, r4, [r7]
 8001776:	e029      	b.n	80017cc <main+0x374>
 8001778:	40023800 	.word	0x40023800
 800177c:	20001e60 	.word	0x20001e60
 8001780:	40021000 	.word	0x40021000
 8001784:	40020800 	.word	0x40020800
 8001788:	40020c00 	.word	0x40020c00
 800178c:	40020400 	.word	0x40020400
 8001790:	40020000 	.word	0x40020000
 8001794:	20001ef4 	.word	0x20001ef4
 8001798:	40023000 	.word	0x40023000
 800179c:	40005c00 	.word	0x40005c00
 80017a0:	000186a0 	.word	0x000186a0
 80017a4:	20001d60 	.word	0x20001d60
 80017a8:	40015000 	.word	0x40015000
 80017ac:	20001d2c 	.word	0x20001d2c
 80017b0:	a0000140 	.word	0xa0000140
 80017b4:	20001db8 	.word	0x20001db8
 80017b8:	40016800 	.word	0x40016800
 80017bc:	20001cc8 	.word	0x20001cc8
 80017c0:	2000001c 	.word	0x2000001c
 80017c4:	20001eb4 	.word	0x20001eb4
 80017c8:	4002b000 	.word	0x4002b000
  hdma2d.Init.OutputOffset = 0;
 80017cc:	e9c7 8402 	strd	r8, r4, [r7, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80017d0:	e9c7 480a 	strd	r4, r8, [r7, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80017d4:	e9c7 440c 	strd	r4, r4, [r7, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80017d8:	f003 fb2c 	bl	8004e34 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80017dc:	4631      	mov	r1, r6
 80017de:	4638      	mov	r0, r7
 80017e0:	f003 fbde 	bl	8004fa0 <HAL_DMA2D_ConfigLayer>
  __HAL_RCC_ADC1_CLK_ENABLE();
 80017e4:	9409      	str	r4, [sp, #36]	@ 0x24
 80017e6:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
 80017e8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80017ec:	646a      	str	r2, [r5, #68]	@ 0x44
 80017ee:	6c6a      	ldr	r2, [r5, #68]	@ 0x44
  hadc1.Instance = ADC1;
 80017f0:	4d30      	ldr	r5, [pc, #192]	@ (80018b4 <main+0x45c>)
  __HAL_RCC_ADC1_CLK_ENABLE();
 80017f2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80017f6:	9209      	str	r2, [sp, #36]	@ 0x24
  ADC_ChannelConfTypeDef sConfig = {0};
 80017f8:	4621      	mov	r1, r4
  __HAL_RCC_ADC1_CLK_ENABLE();
 80017fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
  ADC_ChannelConfTypeDef sConfig = {0};
 80017fc:	a80d      	add	r0, sp, #52	@ 0x34
 80017fe:	2210      	movs	r2, #16
 8001800:	f01c f977 	bl	801daf2 <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCKPRESCALER_PCLK_DIV4;
 8001804:	4b2c      	ldr	r3, [pc, #176]	@ (80018b8 <main+0x460>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001806:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCKPRESCALER_PCLK_DIV4;
 8001808:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800180c:	4628      	mov	r0, r5
  hadc1.Init.ClockPrescaler = ADC_CLOCKPRESCALER_PCLK_DIV4;
 800180e:	e9c5 3200 	strd	r3, r2, [r5]
  hadc1.Init.ScanConvMode = ENABLE; // Cho phép quét nhiều kênh
 8001812:	612e      	str	r6, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE; // Chuyển đổi không liên tục
 8001814:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001816:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800181a:	62ec      	str	r4, [r5, #44]	@ 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800181c:	60ec      	str	r4, [r5, #12]
  hadc1.Init.NbrOfConversion = 2; // Đọc 2 kênh (trục X và Y)
 800181e:	f8c5 801c 	str.w	r8, [r5, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001822:	f885 4030 	strb.w	r4, [r5, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001826:	616e      	str	r6, [r5, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001828:	f003 f870 	bl	800490c <HAL_ADC_Init>
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES; // Thời gian lấy mẫu dài để đảm bảo độ chính xác
 800182c:	2307      	movs	r3, #7
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800182e:	a90d      	add	r1, sp, #52	@ 0x34
 8001830:	4628      	mov	r0, r5
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES; // Thời gian lấy mẫu dài để đảm bảo độ chính xác
 8001832:	930f      	str	r3, [sp, #60]	@ 0x3c
  sConfig.Rank = 1;
 8001834:	e9cd 460d 	strd	r4, r6, [sp, #52]	@ 0x34
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001838:	f003 f9fe 	bl	8004c38 <HAL_ADC_ConfigChannel>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800183c:	a90d      	add	r1, sp, #52	@ 0x34
 800183e:	4628      	mov	r0, r5
  sConfig.Rank = 2;
 8001840:	e9cd 680d 	strd	r6, r8, [sp, #52]	@ 0x34
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001844:	f003 f9f8 	bl	8004c38 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 8001848:	f7fe fee1 	bl	800060e <MX_TouchGFX_Init>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Đảm bảo còi tắt ban đầu
 800184c:	4622      	mov	r2, r4
 800184e:	4631      	mov	r1, r6
 8001850:	481a      	ldr	r0, [pc, #104]	@ (80018bc <main+0x464>)
 8001852:	f003 fcd3 	bl	80051fc <HAL_GPIO_WritePin>
  osKernelInitialize();
 8001856:	f005 fc43 	bl	80070e0 <osKernelInitialize>
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_attributes);
 800185a:	4a19      	ldr	r2, [pc, #100]	@ (80018c0 <main+0x468>)
 800185c:	4631      	mov	r1, r6
 800185e:	4648      	mov	r0, r9
 8001860:	f005 fd7a 	bl	8007358 <osMessageQueueNew>
 8001864:	4b17      	ldr	r3, [pc, #92]	@ (80018c4 <main+0x46c>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 8001866:	4a18      	ldr	r2, [pc, #96]	@ (80018c8 <main+0x470>)
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_attributes);
 8001868:	6018      	str	r0, [r3, #0]
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 800186a:	4631      	mov	r1, r6
 800186c:	4648      	mov	r0, r9
 800186e:	f005 fd73 	bl	8007358 <osMessageQueueNew>
 8001872:	4b16      	ldr	r3, [pc, #88]	@ (80018cc <main+0x474>)
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 8001874:	4a16      	ldr	r2, [pc, #88]	@ (80018d0 <main+0x478>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 8001876:	6018      	str	r0, [r3, #0]
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 8001878:	4631      	mov	r1, r6
 800187a:	4648      	mov	r0, r9
 800187c:	f005 fd6c 	bl	8007358 <osMessageQueueNew>
 8001880:	4b14      	ldr	r3, [pc, #80]	@ (80018d4 <main+0x47c>)
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 8001882:	4a15      	ldr	r2, [pc, #84]	@ (80018d8 <main+0x480>)
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 8001884:	6018      	str	r0, [r3, #0]
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 8001886:	4631      	mov	r1, r6
 8001888:	4648      	mov	r0, r9
 800188a:	f005 fd65 	bl	8007358 <osMessageQueueNew>
 800188e:	4b13      	ldr	r3, [pc, #76]	@ (80018dc <main+0x484>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001890:	4a13      	ldr	r2, [pc, #76]	@ (80018e0 <main+0x488>)
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 8001892:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001894:	4621      	mov	r1, r4
 8001896:	4813      	ldr	r0, [pc, #76]	@ (80018e4 <main+0x48c>)
 8001898:	f005 fc4e 	bl	8007138 <osThreadNew>
 800189c:	4b12      	ldr	r3, [pc, #72]	@ (80018e8 <main+0x490>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800189e:	4a13      	ldr	r2, [pc, #76]	@ (80018ec <main+0x494>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018a0:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018a2:	4621      	mov	r1, r4
 80018a4:	4812      	ldr	r0, [pc, #72]	@ (80018f0 <main+0x498>)
 80018a6:	f005 fc47 	bl	8007138 <osThreadNew>
 80018aa:	4b12      	ldr	r3, [pc, #72]	@ (80018f4 <main+0x49c>)
 80018ac:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018ae:	f005 fc29 	bl	8007104 <osKernelStart>
  while (1)
 80018b2:	e7fe      	b.n	80018b2 <main+0x45a>
 80018b4:	20001ce4 	.word	0x20001ce4
 80018b8:	40012000 	.word	0x40012000
 80018bc:	40020400 	.word	0x40020400
 80018c0:	0801f62c 	.word	0x0801f62c
 80018c4:	20001cd8 	.word	0x20001cd8
 80018c8:	0801f614 	.word	0x0801f614
 80018cc:	20001cd4 	.word	0x20001cd4
 80018d0:	0801f5fc 	.word	0x0801f5fc
 80018d4:	20001cd0 	.word	0x20001cd0
 80018d8:	0801f5e4 	.word	0x0801f5e4
 80018dc:	20001ccc 	.word	0x20001ccc
 80018e0:	0801f668 	.word	0x0801f668
 80018e4:	080012c1 	.word	0x080012c1
 80018e8:	20001ce0 	.word	0x20001ce0
 80018ec:	0801f644 	.word	0x0801f644
 80018f0:	08000613 	.word	0x08000613
 80018f4:	20001cdc 	.word	0x20001cdc

080018f8 <IOE_Init>:
void IOE_Init(void)
 80018f8:	4770      	bx	lr

080018fa <IOE_ITConfig>:
void IOE_ITConfig(void)
 80018fa:	4770      	bx	lr

080018fc <IOE_Write>:
{
 80018fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018fe:	4b09      	ldr	r3, [pc, #36]	@ (8001924 <IOE_Write+0x28>)
 8001900:	f88d 2017 	strb.w	r2, [sp, #23]
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	9302      	str	r3, [sp, #8]
 8001908:	f10d 0217 	add.w	r2, sp, #23
 800190c:	2301      	movs	r3, #1
 800190e:	9200      	str	r2, [sp, #0]
 8001910:	9301      	str	r3, [sp, #4]
 8001912:	460a      	mov	r2, r1
 8001914:	4601      	mov	r1, r0
 8001916:	4804      	ldr	r0, [pc, #16]	@ (8001928 <IOE_Write+0x2c>)
 8001918:	f003 ff0a 	bl	8005730 <HAL_I2C_Mem_Write>
}
 800191c:	b007      	add	sp, #28
 800191e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001922:	bf00      	nop
 8001924:	20000010 	.word	0x20000010
 8001928:	20001e60 	.word	0x20001e60

0800192c <IOE_Read>:
{
 800192c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800192e:	2300      	movs	r3, #0
 8001930:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001934:	4b08      	ldr	r3, [pc, #32]	@ (8001958 <IOE_Read+0x2c>)
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	9302      	str	r3, [sp, #8]
{
 800193a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800193c:	2301      	movs	r3, #1
 800193e:	f10d 0117 	add.w	r1, sp, #23
 8001942:	9100      	str	r1, [sp, #0]
 8001944:	9301      	str	r3, [sp, #4]
 8001946:	4601      	mov	r1, r0
 8001948:	4804      	ldr	r0, [pc, #16]	@ (800195c <IOE_Read+0x30>)
 800194a:	f003 ff81 	bl	8005850 <HAL_I2C_Mem_Read>
}
 800194e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001952:	b007      	add	sp, #28
 8001954:	f85d fb04 	ldr.w	pc, [sp], #4
 8001958:	20000010 	.word	0x20000010
 800195c:	20001e60 	.word	0x20001e60

08001960 <IOE_ReadMultiple>:
{
 8001960:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001962:	4c08      	ldr	r4, [pc, #32]	@ (8001984 <IOE_ReadMultiple+0x24>)
 8001964:	6824      	ldr	r4, [r4, #0]
 8001966:	9200      	str	r2, [sp, #0]
 8001968:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800196c:	460a      	mov	r2, r1
 800196e:	2301      	movs	r3, #1
 8001970:	4601      	mov	r1, r0
 8001972:	4805      	ldr	r0, [pc, #20]	@ (8001988 <IOE_ReadMultiple+0x28>)
 8001974:	f003 ff6c 	bl	8005850 <HAL_I2C_Mem_Read>
}
 8001978:	3800      	subs	r0, #0
 800197a:	bf18      	it	ne
 800197c:	2001      	movne	r0, #1
 800197e:	b004      	add	sp, #16
 8001980:	bd10      	pop	{r4, pc}
 8001982:	bf00      	nop
 8001984:	20000010 	.word	0x20000010
 8001988:	20001e60 	.word	0x20001e60

0800198c <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 800198c:	f002 bfa8 	b.w	80048e0 <HAL_Delay>

08001990 <LCD_IO_Init>:
{
 8001990:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001992:	4c06      	ldr	r4, [pc, #24]	@ (80019ac <LCD_IO_Init+0x1c>)
 8001994:	2200      	movs	r2, #0
 8001996:	4620      	mov	r0, r4
 8001998:	2104      	movs	r1, #4
 800199a:	f003 fc2f 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800199e:	4620      	mov	r0, r4
 80019a0:	2201      	movs	r2, #1
}
 80019a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a6:	2104      	movs	r1, #4
 80019a8:	f003 bc28 	b.w	80051fc <HAL_GPIO_WritePin>
 80019ac:	40020800 	.word	0x40020800

080019b0 <LCD_IO_WriteData>:
{
 80019b0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b2:	4d0b      	ldr	r5, [pc, #44]	@ (80019e0 <LCD_IO_WriteData+0x30>)
{
 80019b4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019b6:	2201      	movs	r2, #1
 80019b8:	480a      	ldr	r0, [pc, #40]	@ (80019e4 <LCD_IO_WriteData+0x34>)
 80019ba:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80019be:	f003 fc1d 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c2:	2200      	movs	r2, #0
 80019c4:	2104      	movs	r1, #4
 80019c6:	4628      	mov	r0, r5
 80019c8:	f003 fc18 	bl	80051fc <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80019cc:	4620      	mov	r0, r4
 80019ce:	f7ff fc65 	bl	800129c <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019d2:	4628      	mov	r0, r5
 80019d4:	2201      	movs	r2, #1
}
 80019d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019da:	2104      	movs	r1, #4
 80019dc:	f003 bc0e 	b.w	80051fc <HAL_GPIO_WritePin>
 80019e0:	40020800 	.word	0x40020800
 80019e4:	40020c00 	.word	0x40020c00

080019e8 <LCD_IO_WriteReg>:
{
 80019e8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019ea:	4d0b      	ldr	r5, [pc, #44]	@ (8001a18 <LCD_IO_WriteReg+0x30>)
{
 80019ec:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019ee:	2200      	movs	r2, #0
 80019f0:	480a      	ldr	r0, [pc, #40]	@ (8001a1c <LCD_IO_WriteReg+0x34>)
 80019f2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80019f6:	f003 fc01 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019fa:	2200      	movs	r2, #0
 80019fc:	2104      	movs	r1, #4
 80019fe:	4628      	mov	r0, r5
 8001a00:	f003 fbfc 	bl	80051fc <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a04:	4620      	mov	r0, r4
 8001a06:	f7ff fc49 	bl	800129c <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a0a:	4628      	mov	r0, r5
 8001a0c:	2201      	movs	r2, #1
}
 8001a0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a12:	2104      	movs	r1, #4
 8001a14:	f003 bbf2 	b.w	80051fc <HAL_GPIO_WritePin>
 8001a18:	40020800 	.word	0x40020800
 8001a1c:	40020c00 	.word	0x40020c00

08001a20 <LCD_IO_ReadData>:
{
 8001a20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a22:	4e14      	ldr	r6, [pc, #80]	@ (8001a74 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a24:	4f14      	ldr	r7, [pc, #80]	@ (8001a78 <LCD_IO_ReadData+0x58>)
{
 8001a26:	4605      	mov	r5, r0
 8001a28:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a2a:	4630      	mov	r0, r6
 8001a2c:	2200      	movs	r2, #0
 8001a2e:	2104      	movs	r1, #4
 8001a30:	f003 fbe4 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a34:	2200      	movs	r2, #0
 8001a36:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001a3a:	4638      	mov	r0, r7
 8001a3c:	f003 fbde 	bl	80051fc <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a40:	4628      	mov	r0, r5
 8001a42:	f7ff fc2b 	bl	800129c <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*)&readvalue, ReadSize, Spi5Timeout);
 8001a46:	4b0d      	ldr	r3, [pc, #52]	@ (8001a7c <LCD_IO_ReadData+0x5c>)
 8001a48:	480d      	ldr	r0, [pc, #52]	@ (8001a80 <LCD_IO_ReadData+0x60>)
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	4622      	mov	r2, r4
 8001a4e:	a901      	add	r1, sp, #4
 8001a50:	f005 f8a3 	bl	8006b9a <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a54:	4638      	mov	r0, r7
 8001a56:	2201      	movs	r2, #1
 8001a58:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001a5c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a5e:	f003 fbcd 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	4630      	mov	r0, r6
 8001a64:	2201      	movs	r2, #1
 8001a66:	2104      	movs	r1, #4
 8001a68:	f003 fbc8 	bl	80051fc <HAL_GPIO_WritePin>
}
 8001a6c:	4620      	mov	r0, r4
 8001a6e:	b003      	add	sp, #12
 8001a70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a72:	bf00      	nop
 8001a74:	40020800 	.word	0x40020800
 8001a78:	40020c00 	.word	0x40020c00
 8001a7c:	2000000c 	.word	0x2000000c
 8001a80:	20001d60 	.word	0x20001d60

08001a84 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a84:	f002 bf2c 	b.w	80048e0 <HAL_Delay>

08001a88 <HAL_TIM_PeriodElapsedCallback>:
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8001a88:	6802      	ldr	r2, [r0, #0]
 8001a8a:	4b03      	ldr	r3, [pc, #12]	@ (8001a98 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	d101      	bne.n	8001a94 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8001a90:	f002 bf14 	b.w	80048bc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  /* USER CODE END Callback 1 */
}
 8001a94:	4770      	bx	lr
 8001a96:	bf00      	nop
 8001a98:	40001000 	.word	0x40001000

08001a9c <Error_Handler>:
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  /* USER CODE END Error_Handler_Debug */
}
 8001a9c:	4770      	bx	lr
	...

08001aa0 <Buzzer_LoseLife>:
/**
 * @brief  Play sound for losing a life (3 quick beeps)
 * @retval None
 */
void Buzzer_LoseLife(void)
{
 8001aa0:	b538      	push	{r3, r4, r5, lr}
  for (int i = 0; i < 3; i++)
  {
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); // Bật còi
 8001aa2:	4d0a      	ldr	r5, [pc, #40]	@ (8001acc <Buzzer_LoseLife+0x2c>)
{
 8001aa4:	2403      	movs	r4, #3
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); // Bật còi
 8001aa6:	2201      	movs	r2, #1
 8001aa8:	4611      	mov	r1, r2
 8001aaa:	4628      	mov	r0, r5
 8001aac:	f003 fba6 	bl	80051fc <HAL_GPIO_WritePin>
    HAL_Delay(100);
 8001ab0:	2064      	movs	r0, #100	@ 0x64
 8001ab2:	f002 ff15 	bl	80048e0 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Tắt còi
 8001ab6:	2200      	movs	r2, #0
 8001ab8:	2101      	movs	r1, #1
 8001aba:	4628      	mov	r0, r5
 8001abc:	f003 fb9e 	bl	80051fc <HAL_GPIO_WritePin>
    HAL_Delay(100);
 8001ac0:	2064      	movs	r0, #100	@ 0x64
 8001ac2:	f002 ff0d 	bl	80048e0 <HAL_Delay>
  for (int i = 0; i < 3; i++)
 8001ac6:	3c01      	subs	r4, #1
 8001ac8:	d1ed      	bne.n	8001aa6 <Buzzer_LoseLife+0x6>
  }
}
 8001aca:	bd38      	pop	{r3, r4, r5, pc}
 8001acc:	40020400 	.word	0x40020400

08001ad0 <Buzzer_GameOver>:
void Buzzer_GameOver(void)
{
 8001ad0:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); // Bật còi
 8001ad2:	4c1a      	ldr	r4, [pc, #104]	@ (8001b3c <Buzzer_GameOver+0x6c>)
 8001ad4:	2201      	movs	r2, #1
 8001ad6:	4611      	mov	r1, r2
 8001ad8:	4620      	mov	r0, r4
 8001ada:	f003 fb8f 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_Delay(500);
 8001ade:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001ae2:	f002 fefd 	bl	80048e0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Tắt còi
 8001ae6:	2200      	movs	r2, #0
 8001ae8:	2101      	movs	r1, #1
 8001aea:	4620      	mov	r0, r4
 8001aec:	f003 fb86 	bl	80051fc <HAL_GPIO_WritePin>
  HAL_Delay(200);
 8001af0:	20c8      	movs	r0, #200	@ 0xc8
 8001af2:	f002 fef5 	bl	80048e0 <HAL_Delay>
  for (int i = 0; i < 2; i++)
  {
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); // Bật còi
 8001af6:	2201      	movs	r2, #1
 8001af8:	4611      	mov	r1, r2
 8001afa:	4620      	mov	r0, r4
 8001afc:	f003 fb7e 	bl	80051fc <HAL_GPIO_WritePin>
    HAL_Delay(150);
 8001b00:	2096      	movs	r0, #150	@ 0x96
 8001b02:	f002 feed 	bl	80048e0 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Tắt còi
 8001b06:	2200      	movs	r2, #0
 8001b08:	2101      	movs	r1, #1
 8001b0a:	4620      	mov	r0, r4
 8001b0c:	f003 fb76 	bl	80051fc <HAL_GPIO_WritePin>
    HAL_Delay(150);
 8001b10:	2096      	movs	r0, #150	@ 0x96
 8001b12:	f002 fee5 	bl	80048e0 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET); // Bật còi
 8001b16:	2201      	movs	r2, #1
 8001b18:	4611      	mov	r1, r2
 8001b1a:	4620      	mov	r0, r4
 8001b1c:	f003 fb6e 	bl	80051fc <HAL_GPIO_WritePin>
    HAL_Delay(150);
 8001b20:	2096      	movs	r0, #150	@ 0x96
 8001b22:	f002 fedd 	bl	80048e0 <HAL_Delay>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET); // Tắt còi
 8001b26:	4620      	mov	r0, r4
 8001b28:	2200      	movs	r2, #0
 8001b2a:	2101      	movs	r1, #1
 8001b2c:	f003 fb66 	bl	80051fc <HAL_GPIO_WritePin>
  }
}
 8001b30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_Delay(150);
 8001b34:	2096      	movs	r0, #150	@ 0x96
 8001b36:	f002 bed3 	b.w	80048e0 <HAL_Delay>
 8001b3a:	bf00      	nop
 8001b3c:	40020400 	.word	0x40020400

08001b40 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b40:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b42:	4b0e      	ldr	r3, [pc, #56]	@ (8001b7c <HAL_MspInit+0x3c>)
 8001b44:	2200      	movs	r2, #0
 8001b46:	9200      	str	r2, [sp, #0]
 8001b48:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001b4a:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001b4e:	6459      	str	r1, [r3, #68]	@ 0x44
 8001b50:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001b52:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8001b56:	9100      	str	r1, [sp, #0]
 8001b58:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b5a:	9201      	str	r2, [sp, #4]
 8001b5c:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001b5e:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8001b62:	6419      	str	r1, [r3, #64]	@ 0x40
 8001b64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b6a:	9301      	str	r3, [sp, #4]
 8001b6c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b6e:	210f      	movs	r1, #15
 8001b70:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b74:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b76:	f003 b90d 	b.w	8004d94 <HAL_NVIC_SetPriority>
 8001b7a:	bf00      	nop
 8001b7c:	40023800 	.word	0x40023800

08001b80 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001b80:	6802      	ldr	r2, [r0, #0]
 8001b82:	4b09      	ldr	r3, [pc, #36]	@ (8001ba8 <HAL_CRC_MspInit+0x28>)
 8001b84:	429a      	cmp	r2, r3
{
 8001b86:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001b88:	d10b      	bne.n	8001ba2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	9301      	str	r3, [sp, #4]
 8001b8e:	4b07      	ldr	r3, [pc, #28]	@ (8001bac <HAL_CRC_MspInit+0x2c>)
 8001b90:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b92:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8001b96:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b9a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001b9e:	9301      	str	r3, [sp, #4]
 8001ba0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001ba2:	b002      	add	sp, #8
 8001ba4:	4770      	bx	lr
 8001ba6:	bf00      	nop
 8001ba8:	40023000 	.word	0x40023000
 8001bac:	40023800 	.word	0x40023800

08001bb0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001bb0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001bb2:	4b0f      	ldr	r3, [pc, #60]	@ (8001bf0 <HAL_DMA2D_MspInit+0x40>)
 8001bb4:	6802      	ldr	r2, [r0, #0]
 8001bb6:	429a      	cmp	r2, r3
 8001bb8:	d116      	bne.n	8001be8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bba:	2200      	movs	r2, #0
 8001bbc:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001bc0:	9201      	str	r2, [sp, #4]
 8001bc2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001bc4:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8001bc8:	6319      	str	r1, [r3, #48]	@ 0x30
 8001bca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bcc:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001bd0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001bd2:	2105      	movs	r1, #5
 8001bd4:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bd6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001bd8:	f003 f8dc 	bl	8004d94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001bdc:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001bde:	b003      	add	sp, #12
 8001be0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001be4:	f003 b908 	b.w	8004df8 <HAL_NVIC_EnableIRQ>
}
 8001be8:	b003      	add	sp, #12
 8001bea:	f85d fb04 	ldr.w	pc, [sp], #4
 8001bee:	bf00      	nop
 8001bf0:	4002b000 	.word	0x4002b000

08001bf4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001bf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001bf8:	4604      	mov	r4, r0
 8001bfa:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bfc:	2214      	movs	r2, #20
 8001bfe:	2100      	movs	r1, #0
 8001c00:	a803      	add	r0, sp, #12
 8001c02:	f01b ff76 	bl	801daf2 <memset>
  if(hi2c->Instance==I2C3)
 8001c06:	6822      	ldr	r2, [r4, #0]
 8001c08:	4b24      	ldr	r3, [pc, #144]	@ (8001c9c <HAL_I2C_MspInit+0xa8>)
 8001c0a:	429a      	cmp	r2, r3
 8001c0c:	d143      	bne.n	8001c96 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c0e:	4c24      	ldr	r4, [pc, #144]	@ (8001ca0 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c10:	4824      	ldr	r0, [pc, #144]	@ (8001ca4 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c12:	2500      	movs	r5, #0
 8001c14:	9500      	str	r5, [sp, #0]
 8001c16:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001c18:	f043 0304 	orr.w	r3, r3, #4
 8001c1c:	6323      	str	r3, [r4, #48]	@ 0x30
 8001c1e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001c20:	f003 0304 	and.w	r3, r3, #4
 8001c24:	9300      	str	r3, [sp, #0]
 8001c26:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c28:	9501      	str	r5, [sp, #4]
 8001c2a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001c2c:	f043 0301 	orr.w	r3, r3, #1
 8001c30:	6323      	str	r3, [r4, #48]	@ 0x30
 8001c32:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001c34:	f003 0301 	and.w	r3, r3, #1
 8001c38:	9301      	str	r3, [sp, #4]
 8001c3a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c3c:	f04f 0912 	mov.w	r9, #18
 8001c40:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c44:	f04f 0801 	mov.w	r8, #1
 8001c48:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c4a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c4e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c52:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c56:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c58:	f003 f9e6 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c5c:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c60:	4811      	ldr	r0, [pc, #68]	@ (8001ca8 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c62:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c64:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c66:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c6a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c6e:	f003 f9db 	bl	8005028 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001c72:	9502      	str	r5, [sp, #8]
 8001c74:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001c76:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001c7a:	6423      	str	r3, [r4, #64]	@ 0x40
 8001c7c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001c7e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001c82:	9302      	str	r3, [sp, #8]
 8001c84:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001c86:	6a23      	ldr	r3, [r4, #32]
 8001c88:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001c8c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001c8e:	6a23      	ldr	r3, [r4, #32]
 8001c90:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8001c94:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c96:	b009      	add	sp, #36	@ 0x24
 8001c98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c9c:	40005c00 	.word	0x40005c00
 8001ca0:	40023800 	.word	0x40023800
 8001ca4:	40020800 	.word	0x40020800
 8001ca8:	40020000 	.word	0x40020000

08001cac <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cae:	b099      	sub	sp, #100	@ 0x64
 8001cb0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cb2:	2214      	movs	r2, #20
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	a807      	add	r0, sp, #28
 8001cb8:	f01b ff1b 	bl	801daf2 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cbc:	2230      	movs	r2, #48	@ 0x30
 8001cbe:	eb0d 0002 	add.w	r0, sp, r2
 8001cc2:	2100      	movs	r1, #0
 8001cc4:	f01b ff15 	bl	801daf2 <memset>
  if(hltdc->Instance==LTDC)
 8001cc8:	6822      	ldr	r2, [r4, #0]
 8001cca:	4b5e      	ldr	r3, [pc, #376]	@ (8001e44 <HAL_LTDC_MspInit+0x198>)
 8001ccc:	429a      	cmp	r2, r3
 8001cce:	f040 80b7 	bne.w	8001e40 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001cd2:	2308      	movs	r3, #8
 8001cd4:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001cd6:	23c0      	movs	r3, #192	@ 0xc0
 8001cd8:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001cda:	2304      	movs	r3, #4
 8001cdc:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001cde:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ce0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001ce4:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ce6:	f004 fb2f 	bl	8006348 <HAL_RCCEx_PeriphCLKConfig>
 8001cea:	b108      	cbz	r0, 8001cf0 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001cec:	f7ff fed6 	bl	8001a9c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001cf0:	4b55      	ldr	r3, [pc, #340]	@ (8001e48 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cf2:	4856      	ldr	r0, [pc, #344]	@ (8001e4c <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001cf4:	2400      	movs	r4, #0
 8001cf6:	9400      	str	r4, [sp, #0]
 8001cf8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001cfa:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001cfe:	645a      	str	r2, [r3, #68]	@ 0x44
 8001d00:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001d02:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8001d06:	9200      	str	r2, [sp, #0]
 8001d08:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d0a:	9401      	str	r4, [sp, #4]
 8001d0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d0e:	f042 0220 	orr.w	r2, r2, #32
 8001d12:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d14:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d16:	f002 0220 	and.w	r2, r2, #32
 8001d1a:	9201      	str	r2, [sp, #4]
 8001d1c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d1e:	9402      	str	r4, [sp, #8]
 8001d20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d22:	f042 0201 	orr.w	r2, r2, #1
 8001d26:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d2a:	f002 0201 	and.w	r2, r2, #1
 8001d2e:	9202      	str	r2, [sp, #8]
 8001d30:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d32:	9403      	str	r4, [sp, #12]
 8001d34:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d36:	f042 0202 	orr.w	r2, r2, #2
 8001d3a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d3c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d3e:	f002 0202 	and.w	r2, r2, #2
 8001d42:	9203      	str	r2, [sp, #12]
 8001d44:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d46:	9404      	str	r4, [sp, #16]
 8001d48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d4a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001d4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d52:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001d56:	9204      	str	r2, [sp, #16]
 8001d58:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d5a:	9405      	str	r4, [sp, #20]
 8001d5c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d5e:	f042 0204 	orr.w	r2, r2, #4
 8001d62:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d64:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d66:	f002 0204 	and.w	r2, r2, #4
 8001d6a:	9205      	str	r2, [sp, #20]
 8001d6c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d6e:	9406      	str	r4, [sp, #24]
 8001d70:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d72:	f042 0208 	orr.w	r2, r2, #8
 8001d76:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d7a:	f003 0308 	and.w	r3, r3, #8
 8001d7e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d82:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d84:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d86:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d88:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d8c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d92:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d96:	f003 f947 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001d9a:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d9e:	482c      	ldr	r0, [pc, #176]	@ (8001e50 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001da0:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001da2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da4:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001da8:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001daa:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dae:	f003 f93b 	bl	8005028 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001db2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001db4:	4827      	ldr	r0, [pc, #156]	@ (8001e54 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001db6:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001db8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dba:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dbe:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dc2:	f003 f931 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001dc6:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dca:	4822      	ldr	r0, [pc, #136]	@ (8001e54 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dcc:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dce:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dd4:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dd8:	f003 f926 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ddc:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de0:	481d      	ldr	r0, [pc, #116]	@ (8001e58 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001de2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dea:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dee:	f003 f91b 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001df2:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001df4:	4819      	ldr	r0, [pc, #100]	@ (8001e5c <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001df8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfa:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dfe:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e02:	f003 f911 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e06:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e08:	4815      	ldr	r0, [pc, #84]	@ (8001e60 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e0a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e0c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e0e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e12:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e16:	f003 f907 	bl	8005028 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e1a:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e1e:	480e      	ldr	r0, [pc, #56]	@ (8001e58 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e20:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e22:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e24:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e28:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e2c:	f003 f8fc 	bl	8005028 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e30:	2058      	movs	r0, #88	@ 0x58
 8001e32:	4622      	mov	r2, r4
 8001e34:	2105      	movs	r1, #5
 8001e36:	f002 ffad 	bl	8004d94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e3a:	2058      	movs	r0, #88	@ 0x58
 8001e3c:	f002 ffdc 	bl	8004df8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001e40:	b019      	add	sp, #100	@ 0x64
 8001e42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e44:	40016800 	.word	0x40016800
 8001e48:	40023800 	.word	0x40023800
 8001e4c:	40021400 	.word	0x40021400
 8001e50:	40020000 	.word	0x40020000
 8001e54:	40020400 	.word	0x40020400
 8001e58:	40021800 	.word	0x40021800
 8001e5c:	40020800 	.word	0x40020800
 8001e60:	40020c00 	.word	0x40020c00

08001e64 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001e64:	b510      	push	{r4, lr}
 8001e66:	4604      	mov	r4, r0
 8001e68:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e6a:	2214      	movs	r2, #20
 8001e6c:	2100      	movs	r1, #0
 8001e6e:	a803      	add	r0, sp, #12
 8001e70:	f01b fe3f 	bl	801daf2 <memset>
  if(hspi->Instance==SPI5)
 8001e74:	6822      	ldr	r2, [r4, #0]
 8001e76:	4b14      	ldr	r3, [pc, #80]	@ (8001ec8 <HAL_SPI_MspInit+0x64>)
 8001e78:	429a      	cmp	r2, r3
 8001e7a:	d123      	bne.n	8001ec4 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001e7c:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8001e80:	2100      	movs	r1, #0
 8001e82:	9101      	str	r1, [sp, #4]
 8001e84:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e86:	4811      	ldr	r0, [pc, #68]	@ (8001ecc <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001e88:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8001e8c:	645a      	str	r2, [r3, #68]	@ 0x44
 8001e8e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001e90:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8001e94:	9201      	str	r2, [sp, #4]
 8001e96:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e98:	9102      	str	r1, [sp, #8]
 8001e9a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001e9c:	f042 0220 	orr.w	r2, r2, #32
 8001ea0:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ea2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ea4:	f003 0320 	and.w	r3, r3, #32
 8001ea8:	9302      	str	r3, [sp, #8]
 8001eaa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eac:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8001eb0:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001eb2:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eb4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001eb8:	2305      	movs	r3, #5
 8001eba:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ebe:	a903      	add	r1, sp, #12
 8001ec0:	f003 f8b2 	bl	8005028 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ec4:	b008      	add	sp, #32
 8001ec6:	bd10      	pop	{r4, pc}
 8001ec8:	40015000 	.word	0x40015000
 8001ecc:	40021400 	.word	0x40021400

08001ed0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001ed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ed4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001ed6:	2300      	movs	r3, #0
 8001ed8:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001eda:	4b2b      	ldr	r3, [pc, #172]	@ (8001f88 <HAL_SDRAM_MspInit+0xb8>)
 8001edc:	681c      	ldr	r4, [r3, #0]
 8001ede:	2c00      	cmp	r4, #0
 8001ee0:	d14f      	bne.n	8001f82 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001ee2:	f04f 0801 	mov.w	r8, #1
 8001ee6:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001eea:	4b28      	ldr	r3, [pc, #160]	@ (8001f8c <HAL_SDRAM_MspInit+0xbc>)
 8001eec:	9400      	str	r4, [sp, #0]
 8001eee:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ef0:	4827      	ldr	r0, [pc, #156]	@ (8001f90 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ef2:	ea42 0208 	orr.w	r2, r2, r8
 8001ef6:	639a      	str	r2, [r3, #56]	@ 0x38
 8001ef8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001efa:	ea03 0308 	and.w	r3, r3, r8
 8001efe:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f00:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f02:	2603      	movs	r6, #3
 8001f04:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f06:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f0a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001f0e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f12:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f16:	f003 f887 	bl	8005028 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f1a:	481e      	ldr	r0, [pc, #120]	@ (8001f94 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f1c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f1e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f20:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f24:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f28:	f003 f87e 	bl	8005028 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001f2c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f30:	4819      	ldr	r0, [pc, #100]	@ (8001f98 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f32:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f34:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f36:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f3a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f3e:	f003 f873 	bl	8005028 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001f42:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f46:	4815      	ldr	r0, [pc, #84]	@ (8001f9c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f48:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f4a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f4c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f50:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f54:	f003 f868 	bl	8005028 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001f58:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f5c:	4810      	ldr	r0, [pc, #64]	@ (8001fa0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f5e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f60:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f62:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f66:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6a:	f003 f85d 	bl	8005028 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001f6e:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f70:	480c      	ldr	r0, [pc, #48]	@ (8001fa4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f72:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f74:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f76:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f7a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f7e:	f003 f853 	bl	8005028 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001f82:	b006      	add	sp, #24
 8001f84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f88:	20001efc 	.word	0x20001efc
 8001f8c:	40023800 	.word	0x40023800
 8001f90:	40021400 	.word	0x40021400
 8001f94:	40020800 	.word	0x40020800
 8001f98:	40021800 	.word	0x40021800
 8001f9c:	40021000 	.word	0x40021000
 8001fa0:	40020c00 	.word	0x40020c00
 8001fa4:	40020400 	.word	0x40020400

08001fa8 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001fa8:	b530      	push	{r4, r5, lr}
 8001faa:	4601      	mov	r1, r0
 8001fac:	b089      	sub	sp, #36	@ 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001fae:	2200      	movs	r2, #0
 8001fb0:	2036      	movs	r0, #54	@ 0x36
 8001fb2:	f002 feef 	bl	8004d94 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001fb6:	2036      	movs	r0, #54	@ 0x36
 8001fb8:	f002 ff1e 	bl	8004df8 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001fbc:	2500      	movs	r5, #0
 8001fbe:	4b15      	ldr	r3, [pc, #84]	@ (8002014 <HAL_InitTick+0x6c>)
 8001fc0:	9502      	str	r5, [sp, #8]
 8001fc2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001fc4:	4c14      	ldr	r4, [pc, #80]	@ (8002018 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001fc6:	f042 0210 	orr.w	r2, r2, #16
 8001fca:	641a      	str	r2, [r3, #64]	@ 0x40
 8001fcc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fce:	f003 0310 	and.w	r3, r3, #16
 8001fd2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001fd4:	a901      	add	r1, sp, #4
 8001fd6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001fd8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001fda:	f004 f997 	bl	800630c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001fde:	f004 f985 	bl	80062ec <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001fe2:	4b0e      	ldr	r3, [pc, #56]	@ (800201c <HAL_InitTick+0x74>)
 8001fe4:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001fe6:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001fea:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001fec:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001fee:	4b0c      	ldr	r3, [pc, #48]	@ (8002020 <HAL_InitTick+0x78>)
 8001ff0:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ff4:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ff6:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ff8:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001ffa:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ffc:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ffe:	f004 ff9b 	bl	8006f38 <HAL_TIM_Base_Init>
 8002002:	b920      	cbnz	r0, 800200e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8002004:	4620      	mov	r0, r4
 8002006:	f004 fe67 	bl	8006cd8 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 800200a:	b009      	add	sp, #36	@ 0x24
 800200c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 800200e:	2001      	movs	r0, #1
 8002010:	e7fb      	b.n	800200a <HAL_InitTick+0x62>
 8002012:	bf00      	nop
 8002014:	40023800 	.word	0x40023800
 8002018:	20001f00 	.word	0x20001f00
 800201c:	40001000 	.word	0x40001000
 8002020:	000f4240 	.word	0x000f4240

08002024 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002024:	4770      	bx	lr

08002026 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002026:	e7fe      	b.n	8002026 <HardFault_Handler>

08002028 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002028:	e7fe      	b.n	8002028 <MemManage_Handler>

0800202a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800202a:	e7fe      	b.n	800202a <BusFault_Handler>

0800202c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800202c:	e7fe      	b.n	800202c <UsageFault_Handler>

0800202e <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800202e:	4770      	bx	lr

08002030 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002030:	4801      	ldr	r0, [pc, #4]	@ (8002038 <TIM6_DAC_IRQHandler+0x8>)
 8002032:	f004 be8f 	b.w	8006d54 <HAL_TIM_IRQHandler>
 8002036:	bf00      	nop
 8002038:	20001f00 	.word	0x20001f00

0800203c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800203c:	4801      	ldr	r0, [pc, #4]	@ (8002044 <LTDC_IRQHandler+0x8>)
 800203e:	f003 be37 	b.w	8005cb0 <HAL_LTDC_IRQHandler>
 8002042:	bf00      	nop
 8002044:	20001db8 	.word	0x20001db8

08002048 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002048:	4801      	ldr	r0, [pc, #4]	@ (8002050 <DMA2D_IRQHandler+0x8>)
 800204a:	f002 bf1f 	b.w	8004e8c <HAL_DMA2D_IRQHandler>
 800204e:	bf00      	nop
 8002050:	20001eb4 	.word	0x20001eb4

08002054 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002054:	2001      	movs	r0, #1
 8002056:	4770      	bx	lr

08002058 <_kill>:

int _kill(int pid, int sig)
{
 8002058:	b508      	push	{r3, lr}
	errno = EINVAL;
 800205a:	f01b fded 	bl	801dc38 <__errno>
 800205e:	2316      	movs	r3, #22
 8002060:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002062:	f04f 30ff 	mov.w	r0, #4294967295
 8002066:	bd08      	pop	{r3, pc}

08002068 <_exit>:

void _exit (int status)
{
 8002068:	b508      	push	{r3, lr}
	errno = EINVAL;
 800206a:	f01b fde5 	bl	801dc38 <__errno>
 800206e:	2316      	movs	r3, #22
 8002070:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002072:	e7fe      	b.n	8002072 <_exit+0xa>

08002074 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002074:	b570      	push	{r4, r5, r6, lr}
 8002076:	460d      	mov	r5, r1
 8002078:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800207a:	460e      	mov	r6, r1
 800207c:	1b73      	subs	r3, r6, r5
 800207e:	429c      	cmp	r4, r3
 8002080:	dc01      	bgt.n	8002086 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002082:	4620      	mov	r0, r4
 8002084:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002086:	f3af 8000 	nop.w
 800208a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800208e:	e7f5      	b.n	800207c <_read+0x8>

08002090 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002090:	b570      	push	{r4, r5, r6, lr}
 8002092:	460d      	mov	r5, r1
 8002094:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002096:	460e      	mov	r6, r1
 8002098:	1b73      	subs	r3, r6, r5
 800209a:	429c      	cmp	r4, r3
 800209c:	dc01      	bgt.n	80020a2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800209e:	4620      	mov	r0, r4
 80020a0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80020a2:	f816 0b01 	ldrb.w	r0, [r6], #1
 80020a6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020aa:	e7f5      	b.n	8002098 <_write+0x8>

080020ac <_close>:

int _close(int file)
{
	return -1;
}
 80020ac:	f04f 30ff 	mov.w	r0, #4294967295
 80020b0:	4770      	bx	lr

080020b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80020b2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80020b6:	604b      	str	r3, [r1, #4]
	return 0;
}
 80020b8:	2000      	movs	r0, #0
 80020ba:	4770      	bx	lr

080020bc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80020bc:	2001      	movs	r0, #1
 80020be:	4770      	bx	lr

080020c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80020c0:	2000      	movs	r0, #0
 80020c2:	4770      	bx	lr

080020c4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80020c4:	4a0a      	ldr	r2, [pc, #40]	@ (80020f0 <_sbrk+0x2c>)
 80020c6:	6811      	ldr	r1, [r2, #0]
{
 80020c8:	b508      	push	{r3, lr}
 80020ca:	4603      	mov	r3, r0
	if (heap_end == 0)
 80020cc:	b909      	cbnz	r1, 80020d2 <_sbrk+0xe>
		heap_end = &end;
 80020ce:	4909      	ldr	r1, [pc, #36]	@ (80020f4 <_sbrk+0x30>)
 80020d0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80020d2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80020d4:	4669      	mov	r1, sp
 80020d6:	4403      	add	r3, r0
 80020d8:	428b      	cmp	r3, r1
 80020da:	d906      	bls.n	80020ea <_sbrk+0x26>
	{
		errno = ENOMEM;
 80020dc:	f01b fdac 	bl	801dc38 <__errno>
 80020e0:	230c      	movs	r3, #12
 80020e2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80020e4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80020e8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80020ea:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80020ec:	e7fc      	b.n	80020e8 <_sbrk+0x24>
 80020ee:	bf00      	nop
 80020f0:	20001f48 	.word	0x20001f48
 80020f4:	20013eb8 	.word	0x20013eb8

080020f8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;          // verdana_10_4bpp
    static const touchgfx::FontId SCOREBOARDFONT = 3; // DUBAI_REGULAR_TTF_24_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80020f8:	4770      	bx	lr

080020fa <_ZN23ApplicationFontProviderD0Ev>:
 80020fa:	b510      	push	{r4, lr}
 80020fc:	2104      	movs	r1, #4
 80020fe:	4604      	mov	r4, r0
 8002100:	f01b fac2 	bl	801d688 <_ZdlPvj>
 8002104:	4620      	mov	r0, r4
 8002106:	bd10      	pop	{r4, pc}

08002108 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002108:	b508      	push	{r3, lr}
    switch (typography)
 800210a:	2903      	cmp	r1, #3
 800210c:	d813      	bhi.n	8002136 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800210e:	e8df f001 	tbb	[pc, r1]
 8002112:	0602      	.short	0x0602
 8002114:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // tahoma_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002116:	f001 f99b 	bl	8003450 <_ZN17TypedTextDatabase8getFontsEv>
 800211a:	6800      	ldr	r0, [r0, #0]
        // DUBAI_REGULAR_TTF_24_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800211c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800211e:	f001 f997 	bl	8003450 <_ZN17TypedTextDatabase8getFontsEv>
 8002122:	6840      	ldr	r0, [r0, #4]
 8002124:	e7fa      	b.n	800211c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002126:	f001 f993 	bl	8003450 <_ZN17TypedTextDatabase8getFontsEv>
 800212a:	6880      	ldr	r0, [r0, #8]
 800212c:	e7f6      	b.n	800211c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800212e:	f001 f98f 	bl	8003450 <_ZN17TypedTextDatabase8getFontsEv>
 8002132:	68c0      	ldr	r0, [r0, #12]
 8002134:	e7f2      	b.n	800211c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002136:	2000      	movs	r0, #0
 8002138:	e7f0      	b.n	800211c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800213c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800213c:	4800      	ldr	r0, [pc, #0]	@ (8002140 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800213e:	4770      	bx	lr
 8002140:	0801f6a0 	.word	0x0801f6a0

08002144 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002144:	2011      	movs	r0, #17
 8002146:	4770      	bx	lr

08002148 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002148:	b513      	push	{r0, r1, r4, lr}
 800214a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800214c:	b151      	cbz	r1, 8002164 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800214e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002150:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002152:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002156:	aa01      	add	r2, sp, #4
 8002158:	689c      	ldr	r4, [r3, #8]
 800215a:	f10d 0303 	add.w	r3, sp, #3
 800215e:	47a0      	blx	r4
        return glyph;
    }
 8002160:	b002      	add	sp, #8
 8002162:	bd10      	pop	{r4, pc}
            return 0;
 8002164:	4608      	mov	r0, r1
 8002166:	e7fb      	b.n	8002160 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002168 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002168:	89c0      	ldrh	r0, [r0, #14]
 800216a:	4770      	bx	lr

0800216c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800216c:	8a00      	ldrh	r0, [r0, #16]
 800216e:	4770      	bx	lr

08002170 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002170:	88c0      	ldrh	r0, [r0, #6]
 8002172:	4770      	bx	lr

08002174 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002174:	8880      	ldrh	r0, [r0, #4]
 8002176:	4770      	bx	lr

08002178 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002178:	7a80      	ldrb	r0, [r0, #10]
    }
 800217a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800217e:	4770      	bx	lr

08002180 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002180:	7a80      	ldrb	r0, [r0, #10]
    }
 8002182:	09c0      	lsrs	r0, r0, #7
 8002184:	4770      	bx	lr

08002186 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002186:	8081      	strh	r1, [r0, #4]
    }
 8002188:	4770      	bx	lr

0800218a <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800218a:	80c1      	strh	r1, [r0, #6]
    }
 800218c:	4770      	bx	lr

0800218e <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800218e:	8101      	strh	r1, [r0, #8]
    }
 8002190:	4770      	bx	lr

08002192 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002192:	8141      	strh	r1, [r0, #10]
    }
 8002194:	4770      	bx	lr

08002196 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002196:	4770      	bx	lr

08002198 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002198:	4770      	bx	lr

0800219a <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800219a:	4770      	bx	lr

0800219c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800219c:	4770      	bx	lr

0800219e <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800219e:	4770      	bx	lr

080021a0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80021a0:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80021a2:	88c4      	ldrh	r4, [r0, #6]
 80021a4:	6803      	ldr	r3, [r0, #0]
 80021a6:	1b12      	subs	r2, r2, r4
 80021a8:	8884      	ldrh	r4, [r0, #4]
 80021aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80021ac:	1b09      	subs	r1, r1, r4
 80021ae:	b212      	sxth	r2, r2
    }
 80021b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80021b4:	b209      	sxth	r1, r1
 80021b6:	4718      	bx	r3

080021b8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80021b8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80021ba:	4770      	bx	lr

080021bc <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80021bc:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80021c0:	b112      	cbz	r2, 80021c8 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	695b      	ldr	r3, [r3, #20]
 80021c6:	4718      	bx	r3
    }
 80021c8:	4770      	bx	lr

080021ca <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80021ca:	4770      	bx	lr

080021cc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80021cc:	b510      	push	{r4, lr}
    }
 80021ce:	2108      	movs	r1, #8
    virtual ~TypedText()
 80021d0:	4604      	mov	r4, r0
    }
 80021d2:	f01b fa59 	bl	801d688 <_ZdlPvj>
 80021d6:	4620      	mov	r0, r4
 80021d8:	bd10      	pop	{r4, pc}

080021da <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80021da:	4770      	bx	lr

080021dc <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80021dc:	4770      	bx	lr

080021de <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80021de:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80021e2:	6808      	ldr	r0, [r1, #0]
 80021e4:	6849      	ldr	r1, [r1, #4]
 80021e6:	c303      	stmia	r3!, {r0, r1}
    }
 80021e8:	4770      	bx	lr

080021ea <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80021ea:	4770      	bx	lr

080021ec <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80021ec:	4770      	bx	lr

080021ee <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80021ee:	6041      	str	r1, [r0, #4]
    }
 80021f0:	4770      	bx	lr

080021f2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021f2:	4770      	bx	lr

080021f4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80021f4:	4770      	bx	lr
	...

080021f8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 80021f8:	4b06      	ldr	r3, [pc, #24]	@ (8002214 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80021fa:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80021fe:	2300      	movs	r3, #0
 8002200:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MenuScreen

void FrontendApplicationBase::gotoMenuScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002204:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002208:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800220c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoMenuScreenScreenNoTransition();
    }
 8002210:	4770      	bx	lr
 8002212:	bf00      	nop
 8002214:	08002391 	.word	0x08002391

08002218 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002218:	2301      	movs	r3, #1
 800221a:	7203      	strb	r3, [r0, #8]
    }
 800221c:	4770      	bx	lr

0800221e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 800221e:	4770      	bx	lr

08002220 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002220:	4770      	bx	lr

08002222 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002222:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002224:	68c2      	ldr	r2, [r0, #12]
 8002226:	6841      	ldr	r1, [r0, #4]
 8002228:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800222a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800222c:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002230:	07d2      	lsls	r2, r2, #31
 8002232:	bf48      	it	mi
 8002234:	590a      	ldrmi	r2, [r1, r4]
 8002236:	689b      	ldr	r3, [r3, #8]
    }
 8002238:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800223c:	bf48      	it	mi
 800223e:	58d3      	ldrmi	r3, [r2, r3]
 8002240:	4718      	bx	r3

08002242 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002242:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002244:	6840      	ldr	r0, [r0, #4]
 8002246:	b130      	cbz	r0, 8002256 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002248:	689a      	ldr	r2, [r3, #8]
 800224a:	b91a      	cbnz	r2, 8002254 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800224c:	68d8      	ldr	r0, [r3, #12]
 800224e:	f000 0001 	and.w	r0, r0, #1
 8002252:	4770      	bx	lr
 8002254:	2001      	movs	r0, #1
    }
 8002256:	4770      	bx	lr

08002258 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002258:	b510      	push	{r4, lr}
 800225a:	210c      	movs	r1, #12
 800225c:	4604      	mov	r4, r0
 800225e:	f01b fa13 	bl	801d688 <_ZdlPvj>
 8002262:	4620      	mov	r0, r4
 8002264:	bd10      	pop	{r4, pc}

08002266 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002266:	b510      	push	{r4, lr}
 8002268:	2110      	movs	r1, #16
 800226a:	4604      	mov	r4, r0
 800226c:	f01b fa0c 	bl	801d688 <_ZdlPvj>
 8002270:	4620      	mov	r0, r4
 8002272:	bd10      	pop	{r4, pc}

08002274 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002274:	b510      	push	{r4, lr}
 8002276:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800227a:	4604      	mov	r4, r0
 800227c:	f01b fa04 	bl	801d688 <_ZdlPvj>
 8002280:	4620      	mov	r0, r4
 8002282:	bd10      	pop	{r4, pc}

08002284 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002284:	b510      	push	{r4, lr}
 8002286:	2140      	movs	r1, #64	@ 0x40
 8002288:	4604      	mov	r4, r0
 800228a:	f01b f9fd 	bl	801d688 <_ZdlPvj>
 800228e:	4620      	mov	r0, r4
 8002290:	bd10      	pop	{r4, pc}

08002292 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002292:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002294:	f00a fce0 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 8002298:	6803      	ldr	r3, [r0, #0]
    }
 800229a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800229e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80022a0:	4718      	bx	r3
	...

080022a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80022a4:	4b05      	ldr	r3, [pc, #20]	@ (80022bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80022a6:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80022a8:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80022aa:	b12b      	cbz	r3, 80022b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80022ac:	6840      	ldr	r0, [r0, #4]
 80022ae:	b118      	cbz	r0, 80022b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	310c      	adds	r1, #12
 80022b4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80022b6:	4718      	bx	r3
        }
    }
 80022b8:	4770      	bx	lr
 80022ba:	bf00      	nop
 80022bc:	20013287 	.word	0x20013287

080022c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 80022c0:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 80022c2:	b570      	push	{r4, r5, r6, lr}
 80022c4:	4605      	mov	r5, r0
        if (done)
 80022c6:	b9bb      	cbnz	r3, 80022f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 80022c8:	6840      	ldr	r0, [r0, #4]
 80022ca:	6803      	ldr	r3, [r0, #0]
 80022cc:	69db      	ldr	r3, [r3, #28]
 80022ce:	4798      	blx	r3
 80022d0:	4604      	mov	r4, r0
        while (d)
 80022d2:	b93c      	cbnz	r4, 80022e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x24>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 80022d4:	6868      	ldr	r0, [r5, #4]
 80022d6:	6803      	ldr	r3, [r0, #0]
 80022d8:	f105 010c 	add.w	r1, r5, #12
 80022dc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
    }
 80022de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 80022e2:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
 80022e4:	88a1      	ldrh	r1, [r4, #4]
 80022e6:	8f6b      	ldrh	r3, [r5, #58]	@ 0x3a
 80022e8:	1ac9      	subs	r1, r1, r3
 80022ea:	6823      	ldr	r3, [r4, #0]
 80022ec:	4620      	mov	r0, r4
 80022ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022f0:	b209      	sxth	r1, r1
 80022f2:	4798      	blx	r3
        return nextSibling;
 80022f4:	69a4      	ldr	r4, [r4, #24]
 80022f6:	e7ec      	b.n	80022d2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
    }
 80022f8:	bd70      	pop	{r4, r5, r6, pc}

080022fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80022fa:	b510      	push	{r4, lr}
 80022fc:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80022fe:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002302:	b158      	cbz	r0, 800231c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002304:	6803      	ldr	r3, [r0, #0]
 8002306:	68db      	ldr	r3, [r3, #12]
 8002308:	4798      	blx	r3
 800230a:	b138      	cbz	r0, 800231c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800230c:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002310:	6803      	ldr	r3, [r0, #0]
 8002312:	689b      	ldr	r3, [r3, #8]
 8002314:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002316:	2300      	movs	r3, #0
 8002318:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 800231c:	bd10      	pop	{r4, pc}

0800231e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800231e:	b570      	push	{r4, r5, r6, lr}
 8002320:	4604      	mov	r4, r0
        animationCounter++;
 8002322:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
        if (animationCounter > animationSteps)
 8002326:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
        animationCounter++;
 800232a:	3001      	adds	r0, #1
 800232c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800232e:	4298      	cmp	r0, r3
        animationCounter++;
 8002330:	f884 0039 	strb.w	r0, [r4, #57]	@ 0x39
        if (animationCounter > animationSteps)
 8002334:	d905      	bls.n	8002342 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 8002336:	2301      	movs	r3, #1
 8002338:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800233a:	2300      	movs	r3, #0
 800233c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    }
 8002340:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002342:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	@ 0x3a
 8002346:	2100      	movs	r1, #0
 8002348:	f00c f9a0 	bl	800e68c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800234c:	07c3      	lsls	r3, r0, #31
 800234e:	d506      	bpl.n	800235e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002350:	2800      	cmp	r0, #0
 8002352:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002356:	bfc8      	it	gt
 8002358:	2301      	movgt	r3, #1
 800235a:	4418      	add	r0, r3
 800235c:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 800235e:	8a23      	ldrh	r3, [r4, #16]
 8002360:	1ac0      	subs	r0, r0, r3
 8002362:	87a0      	strh	r0, [r4, #60]	@ 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8002364:	6860      	ldr	r0, [r4, #4]
 8002366:	6803      	ldr	r3, [r0, #0]
 8002368:	69db      	ldr	r3, [r3, #28]
 800236a:	4798      	blx	r3
 800236c:	4605      	mov	r5, r0
        while (d)
 800236e:	b92d      	cbnz	r5, 800237c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
 8002370:	6860      	ldr	r0, [r4, #4]
        screenContainer->invalidate();
 8002372:	6803      	ldr	r3, [r0, #0]
    }
 8002374:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8002378:	695b      	ldr	r3, [r3, #20]
 800237a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
 800237c:	88a9      	ldrh	r1, [r5, #4]
 800237e:	8fa3      	ldrh	r3, [r4, #60]	@ 0x3c
 8002380:	4419      	add	r1, r3
 8002382:	682b      	ldr	r3, [r5, #0]
 8002384:	4628      	mov	r0, r5
 8002386:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002388:	b209      	sxth	r1, r1
 800238a:	4798      	blx	r3
 800238c:	69ad      	ldr	r5, [r5, #24]
 800238e:	e7ee      	b.n	800236e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>

08002390 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMenuScreenScreenNoTransitionImpl()
{
 8002390:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MenuScreenView, MenuScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002394:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002398:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800239a:	68b0      	ldr	r0, [r6, #8]
 800239c:	6803      	ldr	r3, [r0, #0]
 800239e:	6a1b      	ldr	r3, [r3, #32]
 80023a0:	4798      	blx	r3
 80023a2:	28ef      	cmp	r0, #239	@ 0xef
 80023a4:	d805      	bhi.n	80023b2 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x22>
 80023a6:	4b44      	ldr	r3, [pc, #272]	@ (80024b8 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x128>)
 80023a8:	4a44      	ldr	r2, [pc, #272]	@ (80024bc <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x12c>)
 80023aa:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80023ac:	4844      	ldr	r0, [pc, #272]	@ (80024c0 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x130>)
 80023ae:	f01b f999 	bl	801d6e4 <__assert_func>
 80023b2:	6870      	ldr	r0, [r6, #4]
 80023b4:	6803      	ldr	r3, [r0, #0]
 80023b6:	6a1b      	ldr	r3, [r3, #32]
 80023b8:	4798      	blx	r3
 80023ba:	280f      	cmp	r0, #15
 80023bc:	d803      	bhi.n	80023c6 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x36>
 80023be:	4b41      	ldr	r3, [pc, #260]	@ (80024c4 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x134>)
 80023c0:	4a3e      	ldr	r2, [pc, #248]	@ (80024bc <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x12c>)
 80023c2:	21a4      	movs	r1, #164	@ 0xa4
 80023c4:	e7f2      	b.n	80023ac <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80023c6:	68f0      	ldr	r0, [r6, #12]
 80023c8:	6803      	ldr	r3, [r0, #0]
 80023ca:	6a1b      	ldr	r3, [r3, #32]
 80023cc:	4798      	blx	r3
 80023ce:	280b      	cmp	r0, #11
 80023d0:	d803      	bhi.n	80023da <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x4a>
 80023d2:	4b3d      	ldr	r3, [pc, #244]	@ (80024c8 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x138>)
 80023d4:	4a39      	ldr	r2, [pc, #228]	@ (80024bc <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x12c>)
 80023d6:	21a5      	movs	r1, #165	@ 0xa5
 80023d8:	e7e8      	b.n	80023ac <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80023da:	f00a fc3d 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80023de:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80024d0 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80023e2:	3004      	adds	r0, #4
 80023e4:	f00a fc76 	bl	800ccd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80023e8:	f8d9 0000 	ldr.w	r0, [r9]
 80023ec:	b110      	cbz	r0, 80023f4 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80023ee:	6803      	ldr	r3, [r0, #0]
 80023f0:	68db      	ldr	r3, [r3, #12]
 80023f2:	4798      	blx	r3
    if (*currentTrans)
 80023f4:	f8d9 0000 	ldr.w	r0, [r9]
 80023f8:	b110      	cbz	r0, 8002400 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80023fa:	6803      	ldr	r3, [r0, #0]
 80023fc:	681b      	ldr	r3, [r3, #0]
 80023fe:	4798      	blx	r3
    if (*currentScreen)
 8002400:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80024d4 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x144>
 8002404:	f8d8 0000 	ldr.w	r0, [r8]
 8002408:	b110      	cbz	r0, 8002410 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800240a:	6803      	ldr	r3, [r0, #0]
 800240c:	695b      	ldr	r3, [r3, #20]
 800240e:	4798      	blx	r3
    if (*currentPresenter)
 8002410:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002414:	b110      	cbz	r0, 800241c <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002416:	6803      	ldr	r3, [r0, #0]
 8002418:	685b      	ldr	r3, [r3, #4]
 800241a:	4798      	blx	r3
    if (*currentScreen)
 800241c:	f8d8 0000 	ldr.w	r0, [r8]
 8002420:	b110      	cbz	r0, 8002428 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	4798      	blx	r3
    if (*currentPresenter)
 8002428:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800242c:	b110      	cbz	r0, 8002434 <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800242e:	6803      	ldr	r3, [r0, #0]
 8002430:	689b      	ldr	r3, [r3, #8]
 8002432:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002434:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002436:	6803      	ldr	r3, [r0, #0]
 8002438:	2100      	movs	r1, #0
 800243a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800243c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800243e:	f04f 0b00 	mov.w	fp, #0
 8002442:	4b22      	ldr	r3, [pc, #136]	@ (80024cc <_ZN23FrontendApplicationBase36gotoMenuScreenScreenNoTransitionImplEv+0x13c>)
 8002444:	f8c0 b004 	str.w	fp, [r0, #4]
 8002448:	4604      	mov	r4, r0
 800244a:	f880 b008 	strb.w	fp, [r0, #8]
 800244e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002450:	68b0      	ldr	r0, [r6, #8]
 8002452:	6803      	ldr	r3, [r0, #0]
 8002454:	4659      	mov	r1, fp
 8002456:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002458:	4798      	blx	r3
 800245a:	4605      	mov	r5, r0
 800245c:	f001 fba4 	bl	8003ba8 <_ZN14MenuScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002460:	6870      	ldr	r0, [r6, #4]
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	4659      	mov	r1, fp
 8002466:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002468:	4798      	blx	r3
 800246a:	4629      	mov	r1, r5
 800246c:	4606      	mov	r6, r0
 800246e:	f001 fb7b 	bl	8003b68 <_ZN19MenuScreenPresenterC1ER14MenuScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002472:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002474:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002478:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800247c:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002480:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002484:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002486:	f8c6 a008 	str.w	sl, [r6, #8]
 800248a:	4628      	mov	r0, r5
 800248c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800248e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002490:	4798      	blx	r3
    newPresenter->activate();
 8002492:	6833      	ldr	r3, [r6, #0]
 8002494:	4630      	mov	r0, r6
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800249a:	4621      	mov	r1, r4
 800249c:	4628      	mov	r0, r5
 800249e:	f00c f8ef 	bl	800e680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024a2:	6823      	ldr	r3, [r4, #0]
 80024a4:	4620      	mov	r0, r4
 80024a6:	691b      	ldr	r3, [r3, #16]
 80024a8:	4798      	blx	r3
    newTransition->invalidate();
 80024aa:	6823      	ldr	r3, [r4, #0]
 80024ac:	695b      	ldr	r3, [r3, #20]
 80024ae:	4620      	mov	r0, r4
}
 80024b0:	b001      	add	sp, #4
 80024b2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024b6:	4718      	bx	r3
 80024b8:	0801eb88 	.word	0x0801eb88
 80024bc:	0801ec16 	.word	0x0801ec16
 80024c0:	0801ecee 	.word	0x0801ecee
 80024c4:	0801ed35 	.word	0x0801ed35
 80024c8:	0801edd8 	.word	0x0801edd8
 80024cc:	0801f878 	.word	0x0801f878
 80024d0:	200132c8 	.word	0x200132c8
 80024d4:	200132c4 	.word	0x200132c4

080024d8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80024d8:	4b04      	ldr	r3, [pc, #16]	@ (80024ec <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80024e0:	b10a      	cbz	r2, 80024e6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80024e2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80024e4:	b900      	cbnz	r0, 80024e8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80024e6:	6898      	ldr	r0, [r3, #8]
    }
 80024e8:	4770      	bx	lr
 80024ea:	bf00      	nop
 80024ec:	20013288 	.word	0x20013288

080024f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80024f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024f2:	4604      	mov	r4, r0
 80024f4:	4617      	mov	r7, r2
 80024f6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80024f8:	f00a fcba 	bl	800ce70 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024fc:	4b10      	ldr	r3, [pc, #64]	@ (8002540 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80024fe:	601c      	str	r4, [r3, #0]
      model(m)
 8002500:	4b10      	ldr	r3, [pc, #64]	@ (8002544 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002502:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002504:	4b10      	ldr	r3, [pc, #64]	@ (8002548 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002506:	2500      	movs	r5, #0
 8002508:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 800250c:	4b0f      	ldr	r3, [pc, #60]	@ (800254c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800250e:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8002512:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002514:	6803      	ldr	r3, [r0, #0]
 8002516:	2101      	movs	r1, #1
 8002518:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800251a:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 800251e:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002522:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002524:	4628      	mov	r0, r5
 8002526:	f000 ff47 	bl	80033b8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800252a:	f7ff ffd5 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800252e:	f013 fd3a 	bl	8015fa6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002532:	f7ff ffd1 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 8002536:	f013 fdb1 	bl	801609c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800253a:	4620      	mov	r0, r4
 800253c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800253e:	bf00      	nop
 8002540:	200132d4 	.word	0x200132d4
 8002544:	0801f824 	.word	0x0801f824
 8002548:	0801f80c 	.word	0x0801f80c
 800254c:	20013288 	.word	0x20013288

08002550 <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002550:	4b06      	ldr	r3, [pc, #24]	@ (800256c <_ZN23FrontendApplicationBase32gotoMenuScreenScreenNoTransitionEv+0x1c>)
 8002552:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002556:	2300      	movs	r3, #0
 8002558:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800255c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002560:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002564:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002568:	4770      	bx	lr
 800256a:	bf00      	nop
 800256c:	08002391 	.word	0x08002391

08002570 <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv>:
 8002570:	4b06      	ldr	r3, [pc, #24]	@ (800258c <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv+0x1c>)
 8002572:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002576:	2300      	movs	r3, #0
 8002578:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150

void FrontendApplicationBase::gotoMenuScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800257c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002580:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002584:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002588:	4770      	bx	lr
 800258a:	bf00      	nop
 800258c:	08002761 	.word	0x08002761

08002590 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>:
 8002590:	4b06      	ldr	r3, [pc, #24]	@ (80025ac <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv+0x1c>)
 8002592:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002596:	2300      	movs	r3, #0
 8002598:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameScreen

void FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800259c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80025a0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80025a4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80025a8:	4770      	bx	lr
 80025aa:	bf00      	nop
 80025ac:	08002625 	.word	0x08002625

080025b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 80025b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          relativeValue(0)
 80025b4:	4605      	mov	r5, r0
 80025b6:	2600      	movs	r6, #0
 80025b8:	4b16      	ldr	r3, [pc, #88]	@ (8002614 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 80025ba:	6046      	str	r6, [r0, #4]
 80025bc:	7206      	strb	r6, [r0, #8]
 80025be:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 80025c2:	4604      	mov	r4, r0
          snapshot(),
 80025c4:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 80025c6:	460f      	mov	r7, r1
          snapshot(),
 80025c8:	f008 f96e 	bl	800a8a8 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 80025cc:	4b12      	ldr	r3, [pc, #72]	@ (8002618 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
          animationSteps(transitionSteps),
 80025ce:	f884 7038 	strb.w	r7, [r4, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 80025d2:	781b      	ldrb	r3, [r3, #0]
          animationCounter(0),
 80025d4:	f884 6039 	strb.w	r6, [r4, #57]	@ 0x39
          relativeValue(0)
 80025d8:	87a6      	strh	r6, [r4, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 80025da:	b923      	cbnz	r3, 80025e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x36>
            done = true;
 80025dc:	2301      	movs	r3, #1
 80025de:	7223      	strb	r3, [r4, #8]
    }
 80025e0:	4620      	mov	r0, r4
 80025e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025e6:	4b0d      	ldr	r3, [pc, #52]	@ (800261c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
 80025e8:	4f0d      	ldr	r7, [pc, #52]	@ (8002620 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
 80025ea:	f9b3 8000 	ldrsh.w	r8, [r3]
        setX(x);
 80025ee:	68e3      	ldr	r3, [r4, #12]
        setWidth(width);
 80025f0:	f9b7 1000 	ldrsh.w	r1, [r7]
 80025f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
 80025f6:	6126      	str	r6, [r4, #16]
        setWidth(width);
 80025f8:	4628      	mov	r0, r5
 80025fa:	4798      	blx	r3
        setHeight(height);
 80025fc:	68e3      	ldr	r3, [r4, #12]
 80025fe:	4641      	mov	r1, r8
 8002600:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002602:	4628      	mov	r0, r5
 8002604:	4798      	blx	r3
        snapshot.makeSnapshot();
 8002606:	4628      	mov	r0, r5
 8002608:	f008 f8c9 	bl	800a79e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 800260c:	883b      	ldrh	r3, [r7, #0]
 800260e:	425b      	negs	r3, r3
 8002610:	8763      	strh	r3, [r4, #58]	@ 0x3a
    }
 8002612:	e7e5      	b.n	80025e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x30>
 8002614:	0801f89c 	.word	0x0801f89c
 8002618:	20013287 	.word	0x20013287
 800261c:	2001327e 	.word	0x2001327e
 8002620:	2001327c 	.word	0x2001327c

08002624 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEastImpl()
{
 8002624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GameScreenView, GameScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002628:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800262c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800262e:	68b0      	ldr	r0, [r6, #8]
 8002630:	6803      	ldr	r3, [r0, #0]
 8002632:	6a1b      	ldr	r3, [r3, #32]
 8002634:	4798      	blx	r3
 8002636:	f640 2387 	movw	r3, #2695	@ 0xa87
 800263a:	4298      	cmp	r0, r3
 800263c:	d805      	bhi.n	800264a <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x26>
 800263e:	4b41      	ldr	r3, [pc, #260]	@ (8002744 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x120>)
 8002640:	4a41      	ldr	r2, [pc, #260]	@ (8002748 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 8002642:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002644:	4841      	ldr	r0, [pc, #260]	@ (800274c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002646:	f01b f84d 	bl	801d6e4 <__assert_func>
 800264a:	6870      	ldr	r0, [r6, #4]
 800264c:	6803      	ldr	r3, [r0, #0]
 800264e:	6a1b      	ldr	r3, [r3, #32]
 8002650:	4798      	blx	r3
 8002652:	280f      	cmp	r0, #15
 8002654:	d803      	bhi.n	800265e <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x3a>
 8002656:	4b3e      	ldr	r3, [pc, #248]	@ (8002750 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002658:	4a3b      	ldr	r2, [pc, #236]	@ (8002748 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 800265a:	21a4      	movs	r1, #164	@ 0xa4
 800265c:	e7f2      	b.n	8002644 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800265e:	68f0      	ldr	r0, [r6, #12]
 8002660:	6803      	ldr	r3, [r0, #0]
 8002662:	6a1b      	ldr	r3, [r3, #32]
 8002664:	4798      	blx	r3
 8002666:	283f      	cmp	r0, #63	@ 0x3f
 8002668:	d803      	bhi.n	8002672 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x4e>
 800266a:	4b3a      	ldr	r3, [pc, #232]	@ (8002754 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x130>)
 800266c:	4a36      	ldr	r2, [pc, #216]	@ (8002748 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 800266e:	21a5      	movs	r1, #165	@ 0xa5
 8002670:	e7e8      	b.n	8002644 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002672:	f00a faf1 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002676:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8002758 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x134>
 800267a:	3004      	adds	r0, #4
 800267c:	f00a fb2a 	bl	800ccd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002680:	f8d9 0000 	ldr.w	r0, [r9]
 8002684:	b110      	cbz	r0, 800268c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8002686:	6803      	ldr	r3, [r0, #0]
 8002688:	68db      	ldr	r3, [r3, #12]
 800268a:	4798      	blx	r3
    if (*currentTrans)
 800268c:	f8d9 0000 	ldr.w	r0, [r9]
 8002690:	b110      	cbz	r0, 8002698 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8002692:	6803      	ldr	r3, [r0, #0]
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	4798      	blx	r3
    if (*currentScreen)
 8002698:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 800275c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x138>
 800269c:	f8d8 0000 	ldr.w	r0, [r8]
 80026a0:	b110      	cbz	r0, 80026a8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80026a2:	6803      	ldr	r3, [r0, #0]
 80026a4:	695b      	ldr	r3, [r3, #20]
 80026a6:	4798      	blx	r3
    if (*currentPresenter)
 80026a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80026ac:	b110      	cbz	r0, 80026b4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80026ae:	6803      	ldr	r3, [r0, #0]
 80026b0:	685b      	ldr	r3, [r3, #4]
 80026b2:	4798      	blx	r3
    if (*currentScreen)
 80026b4:	f8d8 0000 	ldr.w	r0, [r8]
 80026b8:	b110      	cbz	r0, 80026c0 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	4798      	blx	r3
    if (*currentPresenter)
 80026c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80026c4:	b110      	cbz	r0, 80026cc <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80026c6:	6803      	ldr	r3, [r0, #0]
 80026c8:	689b      	ldr	r3, [r3, #8]
 80026ca:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026cc:	68f0      	ldr	r0, [r6, #12]
 80026ce:	6803      	ldr	r3, [r0, #0]
 80026d0:	2100      	movs	r1, #0
 80026d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026d4:	4798      	blx	r3
 80026d6:	2114      	movs	r1, #20
 80026d8:	4604      	mov	r4, r0
 80026da:	f7ff ff69 	bl	80025b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026de:	68b0      	ldr	r0, [r6, #8]
 80026e0:	6803      	ldr	r3, [r0, #0]
 80026e2:	2100      	movs	r1, #0
 80026e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026e6:	4798      	blx	r3
 80026e8:	4605      	mov	r5, r0
 80026ea:	f000 ff35 	bl	8003558 <_ZN14GameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026ee:	6870      	ldr	r0, [r6, #4]
 80026f0:	6803      	ldr	r3, [r0, #0]
 80026f2:	2100      	movs	r1, #0
 80026f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026f6:	4798      	blx	r3
 80026f8:	4629      	mov	r1, r5
 80026fa:	4606      	mov	r6, r0
 80026fc:	f000 feea 	bl	80034d4 <_ZN19GameScreenPresenterC1ER14GameScreenView>
    model->bind(newPresenter);
 8002700:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002702:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002706:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800270a:	f8c8 5000 	str.w	r5, [r8]
 800270e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002712:	682b      	ldr	r3, [r5, #0]
 8002714:	f8c6 a008 	str.w	sl, [r6, #8]
 8002718:	4628      	mov	r0, r5
 800271a:	68db      	ldr	r3, [r3, #12]
 800271c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800271e:	4798      	blx	r3
    newPresenter->activate();
 8002720:	6833      	ldr	r3, [r6, #0]
 8002722:	4630      	mov	r0, r6
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002728:	4621      	mov	r1, r4
 800272a:	4628      	mov	r0, r5
 800272c:	f00b ffa8 	bl	800e680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002730:	6823      	ldr	r3, [r4, #0]
 8002732:	4620      	mov	r0, r4
 8002734:	691b      	ldr	r3, [r3, #16]
 8002736:	4798      	blx	r3
    newTransition->invalidate();
 8002738:	6823      	ldr	r3, [r4, #0]
 800273a:	4620      	mov	r0, r4
 800273c:	695b      	ldr	r3, [r3, #20]
}
 800273e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002742:	4718      	bx	r3
 8002744:	0801eb88 	.word	0x0801eb88
 8002748:	0801ee7b 	.word	0x0801ee7b
 800274c:	0801ecee 	.word	0x0801ecee
 8002750:	0801ed35 	.word	0x0801ed35
 8002754:	0801edd8 	.word	0x0801edd8
 8002758:	200132c8 	.word	0x200132c8
 800275c:	200132c4 	.word	0x200132c4

08002760 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv>:
{
 8002760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MenuScreenView, MenuScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002764:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002768:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800276a:	68b0      	ldr	r0, [r6, #8]
 800276c:	6803      	ldr	r3, [r0, #0]
 800276e:	6a1b      	ldr	r3, [r3, #32]
 8002770:	4798      	blx	r3
 8002772:	28ef      	cmp	r0, #239	@ 0xef
 8002774:	d805      	bhi.n	8002782 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x22>
 8002776:	4b41      	ldr	r3, [pc, #260]	@ (800287c <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x11c>)
 8002778:	4a41      	ldr	r2, [pc, #260]	@ (8002880 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x120>)
 800277a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800277c:	4841      	ldr	r0, [pc, #260]	@ (8002884 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x124>)
 800277e:	f01a ffb1 	bl	801d6e4 <__assert_func>
 8002782:	6870      	ldr	r0, [r6, #4]
 8002784:	6803      	ldr	r3, [r0, #0]
 8002786:	6a1b      	ldr	r3, [r3, #32]
 8002788:	4798      	blx	r3
 800278a:	280f      	cmp	r0, #15
 800278c:	d803      	bhi.n	8002796 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x36>
 800278e:	4b3e      	ldr	r3, [pc, #248]	@ (8002888 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x128>)
 8002790:	4a3b      	ldr	r2, [pc, #236]	@ (8002880 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x120>)
 8002792:	21a4      	movs	r1, #164	@ 0xa4
 8002794:	e7f2      	b.n	800277c <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002796:	68f0      	ldr	r0, [r6, #12]
 8002798:	6803      	ldr	r3, [r0, #0]
 800279a:	6a1b      	ldr	r3, [r3, #32]
 800279c:	4798      	blx	r3
 800279e:	283f      	cmp	r0, #63	@ 0x3f
 80027a0:	d803      	bhi.n	80027aa <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x4a>
 80027a2:	4b3a      	ldr	r3, [pc, #232]	@ (800288c <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x12c>)
 80027a4:	4a36      	ldr	r2, [pc, #216]	@ (8002880 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x120>)
 80027a6:	21a5      	movs	r1, #165	@ 0xa5
 80027a8:	e7e8      	b.n	800277c <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80027aa:	f00a fa55 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80027ae:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8002890 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x130>
 80027b2:	3004      	adds	r0, #4
 80027b4:	f00a fa8e 	bl	800ccd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80027b8:	f8d9 0000 	ldr.w	r0, [r9]
 80027bc:	b110      	cbz	r0, 80027c4 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 80027be:	6803      	ldr	r3, [r0, #0]
 80027c0:	68db      	ldr	r3, [r3, #12]
 80027c2:	4798      	blx	r3
    if (*currentTrans)
 80027c4:	f8d9 0000 	ldr.w	r0, [r9]
 80027c8:	b110      	cbz	r0, 80027d0 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 80027ca:	6803      	ldr	r3, [r0, #0]
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	4798      	blx	r3
    if (*currentScreen)
 80027d0:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8002894 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x134>
 80027d4:	f8d8 0000 	ldr.w	r0, [r8]
 80027d8:	b110      	cbz	r0, 80027e0 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80027da:	6803      	ldr	r3, [r0, #0]
 80027dc:	695b      	ldr	r3, [r3, #20]
 80027de:	4798      	blx	r3
    if (*currentPresenter)
 80027e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80027e4:	b110      	cbz	r0, 80027ec <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80027e6:	6803      	ldr	r3, [r0, #0]
 80027e8:	685b      	ldr	r3, [r3, #4]
 80027ea:	4798      	blx	r3
    if (*currentScreen)
 80027ec:	f8d8 0000 	ldr.w	r0, [r8]
 80027f0:	b110      	cbz	r0, 80027f8 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80027f2:	6803      	ldr	r3, [r0, #0]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	4798      	blx	r3
    if (*currentPresenter)
 80027f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80027fc:	b110      	cbz	r0, 8002804 <_ZN23FrontendApplicationBase43gotoMenuScreenScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80027fe:	6803      	ldr	r3, [r0, #0]
 8002800:	689b      	ldr	r3, [r3, #8]
 8002802:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002804:	68f0      	ldr	r0, [r6, #12]
 8002806:	6803      	ldr	r3, [r0, #0]
 8002808:	2100      	movs	r1, #0
 800280a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800280c:	4798      	blx	r3
 800280e:	2114      	movs	r1, #20
 8002810:	4604      	mov	r4, r0
 8002812:	f7ff fecd 	bl	80025b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002816:	68b0      	ldr	r0, [r6, #8]
 8002818:	6803      	ldr	r3, [r0, #0]
 800281a:	2100      	movs	r1, #0
 800281c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800281e:	4798      	blx	r3
 8002820:	4605      	mov	r5, r0
 8002822:	f001 f9c1 	bl	8003ba8 <_ZN14MenuScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002826:	6870      	ldr	r0, [r6, #4]
 8002828:	6803      	ldr	r3, [r0, #0]
 800282a:	2100      	movs	r1, #0
 800282c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800282e:	4798      	blx	r3
 8002830:	4629      	mov	r1, r5
 8002832:	4606      	mov	r6, r0
 8002834:	f001 f998 	bl	8003b68 <_ZN19MenuScreenPresenterC1ER14MenuScreenView>
    model->bind(newPresenter);
 8002838:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800283a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800283e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002842:	f8c8 5000 	str.w	r5, [r8]
 8002846:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800284a:	682b      	ldr	r3, [r5, #0]
 800284c:	f8c6 a008 	str.w	sl, [r6, #8]
 8002850:	4628      	mov	r0, r5
 8002852:	68db      	ldr	r3, [r3, #12]
 8002854:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002856:	4798      	blx	r3
    newPresenter->activate();
 8002858:	6833      	ldr	r3, [r6, #0]
 800285a:	4630      	mov	r0, r6
 800285c:	681b      	ldr	r3, [r3, #0]
 800285e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002860:	4621      	mov	r1, r4
 8002862:	4628      	mov	r0, r5
 8002864:	f00b ff0c 	bl	800e680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002868:	6823      	ldr	r3, [r4, #0]
 800286a:	4620      	mov	r0, r4
 800286c:	691b      	ldr	r3, [r3, #16]
 800286e:	4798      	blx	r3
    newTransition->invalidate();
 8002870:	6823      	ldr	r3, [r4, #0]
 8002872:	4620      	mov	r0, r4
 8002874:	695b      	ldr	r3, [r3, #20]
}
 8002876:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800287a:	4718      	bx	r3
 800287c:	0801eb88 	.word	0x0801eb88
 8002880:	0801ef66 	.word	0x0801ef66
 8002884:	0801ecee 	.word	0x0801ecee
 8002888:	0801ed35 	.word	0x0801ed35
 800288c:	0801edd8 	.word	0x0801edd8
 8002890:	200132c8 	.word	0x200132c8
 8002894:	200132c4 	.word	0x200132c4

08002898 <_ZN8touchgfx8Drawable13getFirstChildEv>:
    }
 8002898:	2000      	movs	r0, #0
 800289a:	4770      	bx	lr

0800289c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800289c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80028a0:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80028a2:	f04f 33ff 	mov.w	r3, #4294967295
 80028a6:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80028a8:	6813      	ldr	r3, [r2, #0]
 80028aa:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80028ac:	6010      	str	r0, [r2, #0]
    }
 80028ae:	4770      	bx	lr

080028b0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80028b0:	4770      	bx	lr

080028b2 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80028b2:	4770      	bx	lr

080028b4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80028b4:	4770      	bx	lr

080028b6 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80028b6:	4770      	bx	lr

080028b8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80028b8:	4770      	bx	lr

080028ba <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80028ba:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80028bc:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 80028be:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028c0:	466d      	mov	r5, sp
        rect.width = width;
 80028c2:	8101      	strh	r1, [r0, #8]
 80028c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80028c8:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 80028ca:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028cc:	4628      	mov	r0, r5
 80028ce:	4798      	blx	r3
 80028d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028d4:	343c      	adds	r4, #60	@ 0x3c
 80028d6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028da:	b005      	add	sp, #20
 80028dc:	bd30      	pop	{r4, r5, pc}

080028de <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80028de:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80028e0:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 80028e2:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028e4:	466d      	mov	r5, sp
        rect.height = height;
 80028e6:	8141      	strh	r1, [r0, #10]
 80028e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80028ec:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 80028ee:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028f0:	4628      	mov	r0, r5
 80028f2:	4798      	blx	r3
 80028f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028f8:	343c      	adds	r4, #60	@ 0x3c
 80028fa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028fe:	b005      	add	sp, #20
 8002900:	bd30      	pop	{r4, r5, pc}

08002902 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002902:	2200      	movs	r2, #0
 8002904:	8002      	strh	r2, [r0, #0]
 8002906:	8042      	strh	r2, [r0, #2]
 8002908:	8082      	strh	r2, [r0, #4]
 800290a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800290c:	4770      	bx	lr

0800290e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800290e:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002912:	4770      	bx	lr

08002914 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002914:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002916:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002918:	4604      	mov	r4, r0
        setX(x);
 800291a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800291c:	4615      	mov	r5, r2
        setX(x);
 800291e:	4798      	blx	r3
        setBaselineY(baselineY);
 8002920:	6823      	ldr	r3, [r4, #0]
 8002922:	4629      	mov	r1, r5
 8002924:	4620      	mov	r0, r4
 8002926:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002928:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800292c:	4718      	bx	r3

0800292e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800292e:	2000      	movs	r0, #0
 8002930:	4770      	bx	lr

08002932 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002932:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002934:	4770      	bx	lr

08002936 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002936:	4770      	bx	lr

08002938 <_ZN8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002938:	4770      	bx	lr

0800293a <_ZN18GameScreenViewBaseD1Ev>:
}

GameScreenViewBase::~GameScreenViewBase()
{

}
 800293a:	4770      	bx	lr

0800293c <_ZN18GameScreenViewBase11setupScreenEv>:

void GameScreenViewBase::setupScreen()
{

}
 800293c:	4770      	bx	lr

0800293e <_ZN8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800293e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002940:	68c2      	ldr	r2, [r0, #12]
 8002942:	6844      	ldr	r4, [r0, #4]
 8002944:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002946:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002948:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800294c:	07d2      	lsls	r2, r2, #31
 800294e:	bf48      	it	mi
 8002950:	5962      	ldrmi	r2, [r4, r5]
 8002952:	689b      	ldr	r3, [r3, #8]
    }
 8002954:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002956:	bf48      	it	mi
 8002958:	58d3      	ldrmi	r3, [r2, r3]
 800295a:	4718      	bx	r3

0800295c <_ZNK8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800295c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800295e:	6840      	ldr	r0, [r0, #4]
 8002960:	b130      	cbz	r0, 8002970 <_ZNK8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002962:	689a      	ldr	r2, [r3, #8]
 8002964:	b91a      	cbnz	r2, 800296e <_ZNK8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002966:	68d8      	ldr	r0, [r3, #12]
 8002968:	f000 0001 	and.w	r0, r0, #1
 800296c:	4770      	bx	lr
 800296e:	2001      	movs	r0, #1
    }
 8002970:	4770      	bx	lr

08002972 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002972:	b510      	push	{r4, lr}
 8002974:	214c      	movs	r1, #76	@ 0x4c
 8002976:	4604      	mov	r4, r0
 8002978:	f01a fe86 	bl	801d688 <_ZdlPvj>
 800297c:	4620      	mov	r0, r4
 800297e:	bd10      	pop	{r4, pc}

08002980 <_ZN8touchgfx8CallbackI18GameScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002980:	b510      	push	{r4, lr}
 8002982:	2110      	movs	r1, #16
 8002984:	4604      	mov	r4, r0
 8002986:	f01a fe7f 	bl	801d688 <_ZdlPvj>
 800298a:	4620      	mov	r0, r4
 800298c:	bd10      	pop	{r4, pc}

0800298e <_ZN18GameScreenViewBaseD0Ev>:
GameScreenViewBase::~GameScreenViewBase()
 800298e:	b510      	push	{r4, lr}
}
 8002990:	f44f 710f 	mov.w	r1, #572	@ 0x23c
GameScreenViewBase::~GameScreenViewBase()
 8002994:	4604      	mov	r4, r0
}
 8002996:	f01a fe77 	bl	801d688 <_ZdlPvj>
 800299a:	4620      	mov	r0, r4
 800299c:	bd10      	pop	{r4, pc}

0800299e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800299e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80029a0:	f7ff fc0c 	bl	80021bc <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80029a4:	bd08      	pop	{r3, pc}

080029a6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80029a6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80029aa:	b11a      	cbz	r2, 80029b4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80029ac:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80029b0:	b102      	cbz	r2, 80029b4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80029b2:	6018      	str	r0, [r3, #0]
        }
    }
 80029b4:	4770      	bx	lr
	...

080029b8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029b8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029ba:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029bc:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029be:	4b12      	ldr	r3, [pc, #72]	@ (8002a08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80029c0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029c2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029c4:	b28d      	uxth	r5, r1
 80029c6:	b92b      	cbnz	r3, 80029d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80029c8:	4b10      	ldr	r3, [pc, #64]	@ (8002a0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80029ca:	4a11      	ldr	r2, [pc, #68]	@ (8002a10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029cc:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029ce:	4811      	ldr	r0, [pc, #68]	@ (8002a14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80029d0:	f01a fe88 	bl	801d6e4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029d4:	4910      	ldr	r1, [pc, #64]	@ (8002a18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80029d6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029d8:	8809      	ldrh	r1, [r1, #0]
 80029da:	4291      	cmp	r1, r2
 80029dc:	d803      	bhi.n	80029e6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029de:	4b0f      	ldr	r3, [pc, #60]	@ (8002a1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029e0:	4a0b      	ldr	r2, [pc, #44]	@ (8002a10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029e2:	216d      	movs	r1, #109	@ 0x6d
 80029e4:	e7f3      	b.n	80029ce <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029e6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80029ea:	4b0d      	ldr	r3, [pc, #52]	@ (8002a20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80029f2:	6803      	ldr	r3, [r0, #0]
 80029f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029f6:	4798      	blx	r3
 80029f8:	1a29      	subs	r1, r5, r0
 80029fa:	4633      	mov	r3, r6
 80029fc:	4620      	mov	r0, r4
 80029fe:	b209      	sxth	r1, r1
    }
 8002a00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002a04:	4718      	bx	r3
 8002a06:	bf00      	nop
 8002a08:	200132d8 	.word	0x200132d8
 8002a0c:	0801f051 	.word	0x0801f051
 8002a10:	0801f093 	.word	0x0801f093
 8002a14:	0801f0ce 	.word	0x0801f0ce
 8002a18:	200132dc 	.word	0x200132dc
 8002a1c:	0801f115 	.word	0x0801f115
 8002a20:	200132e0 	.word	0x200132e0

08002a24 <_ZN18GameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GameScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &menu_button)
 8002a24:	f500 70e2 	add.w	r0, r0, #452	@ 0x1c4
 8002a28:	4288      	cmp	r0, r1
{
 8002a2a:	b508      	push	{r3, lr}
    if (&src == &menu_button)
 8002a2c:	d105      	bne.n	8002a3a <_ZN18GameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a2e:	f00a f913 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When menu_button clicked change screen to MenuScreen
        //Go to MenuScreen with screen transition towards East
        application().gotoMenuScreenScreenSlideTransitionEast();
    }
}
 8002a32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMenuScreenScreenSlideTransitionEast();
 8002a36:	f7ff bd9b 	b.w	8002570 <_ZN23FrontendApplicationBase39gotoMenuScreenScreenSlideTransitionEastEv>
}
 8002a3a:	bd08      	pop	{r3, pc}

08002a3c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002a3c:	2200      	movs	r2, #0
 8002a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8002a42:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002a46:	6082      	str	r2, [r0, #8]
    }
 8002a48:	4770      	bx	lr

08002a4a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002a4a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002a4c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a4e:	4604      	mov	r4, r0
        setX(x);
 8002a50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002a52:	4615      	mov	r5, r2
        setX(x);
 8002a54:	4798      	blx	r3
        setY(y);
 8002a56:	6823      	ldr	r3, [r4, #0]
 8002a58:	4629      	mov	r1, r5
 8002a5a:	4620      	mov	r0, r4
 8002a5c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002a5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a62:	4718      	bx	r3

08002a64 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002a64:	b570      	push	{r4, r5, r6, lr}
 8002a66:	4604      	mov	r4, r0
 8002a68:	461d      	mov	r5, r3
 8002a6a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002a6e:	f7ff ffec 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002a72:	6823      	ldr	r3, [r4, #0]
 8002a74:	4629      	mov	r1, r5
 8002a76:	4620      	mov	r0, r4
 8002a78:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002a7a:	4798      	blx	r3
        setHeight(height);
 8002a7c:	6823      	ldr	r3, [r4, #0]
 8002a7e:	4631      	mov	r1, r6
 8002a80:	4620      	mov	r0, r4
 8002a82:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002a84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002a88:	4718      	bx	r3
	...

08002a8c <_ZN8touchgfx6WidgetC1Ev>:
 8002a8c:	2200      	movs	r2, #0
 8002a8e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a92:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a96:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a9a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002a9e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002aa2:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8002aa4:	4a01      	ldr	r2, [pc, #4]	@ (8002aac <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002aa6:	6002      	str	r2, [r0, #0]
 8002aa8:	4770      	bx	lr
 8002aaa:	bf00      	nop
 8002aac:	0801f8c0 	.word	0x0801f8c0

08002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8002ab0:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002ab2:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002ab8:	2100      	movs	r1, #0
 8002aba:	f01b f81a 	bl	801daf2 <memset>
 8002abe:	4620      	mov	r0, r4
 8002ac0:	f7ff ffe4 	bl	8002a8c <_ZN8touchgfx6WidgetC1Ev>
 8002ac4:	4b06      	ldr	r3, [pc, #24]	@ (8002ae0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002ac6:	6023      	str	r3, [r4, #0]
 8002ac8:	882b      	ldrh	r3, [r5, #0]
 8002aca:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8002acc:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 8002ace:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002ad0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8002ad4:	4629      	mov	r1, r5
 8002ad6:	f008 fa8a 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002ada:	4620      	mov	r0, r4
 8002adc:	bd38      	pop	{r3, r4, r5, pc}
 8002ade:	bf00      	nop
 8002ae0:	080204fc 	.word	0x080204fc

08002ae4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002ae4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002ae6:	2226      	movs	r2, #38	@ 0x26
 8002ae8:	4604      	mov	r4, r0
 8002aea:	2100      	movs	r1, #0
 8002aec:	f01b f801 	bl	801daf2 <memset>
 8002af0:	4620      	mov	r0, r4
 8002af2:	f7ff ffcb 	bl	8002a8c <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002af6:	4b0a      	ldr	r3, [pc, #40]	@ (8002b20 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8002af8:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002afa:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002afe:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 8002b00:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 8002b04:	2300      	movs	r3, #0
 8002b06:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 8002b0a:	4a06      	ldr	r2, [pc, #24]	@ (8002b24 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 8002b0c:	6022      	str	r2, [r4, #0]
 8002b0e:	8723      	strh	r3, [r4, #56]	@ 0x38
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002b10:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002b14:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 8002b18:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8002b1a:	64a3      	str	r3, [r4, #72]	@ 0x48
    }
 8002b1c:	4620      	mov	r0, r4
 8002b1e:	bd10      	pop	{r4, pc}
 8002b20:	0801f7fc 	.word	0x0801f7fc
 8002b24:	0801f928 	.word	0x0801f928

08002b28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8002b2a:	4b19      	ldr	r3, [pc, #100]	@ (8002b90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8002b2c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8002b2e:	881b      	ldrh	r3, [r3, #0]
 8002b30:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002b32:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002b34:	d92a      	bls.n	8002b8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b36:	4b17      	ldr	r3, [pc, #92]	@ (8002b94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	b92b      	cbnz	r3, 8002b48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002b3c:	4b16      	ldr	r3, [pc, #88]	@ (8002b98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002b3e:	4a17      	ldr	r2, [pc, #92]	@ (8002b9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002b40:	4817      	ldr	r0, [pc, #92]	@ (8002ba0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002b42:	216c      	movs	r1, #108	@ 0x6c
 8002b44:	f01a fdce 	bl	801d6e4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002b4c:	4b15      	ldr	r3, [pc, #84]	@ (8002ba4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002b54:	4b14      	ldr	r3, [pc, #80]	@ (8002ba8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002b56:	6818      	ldr	r0, [r3, #0]
 8002b58:	f000 fc6a 	bl	8003430 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002b5c:	682b      	ldr	r3, [r5, #0]
 8002b5e:	4607      	mov	r7, r0
 8002b60:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002b62:	4628      	mov	r0, r5
 8002b64:	4798      	blx	r3
 8002b66:	682b      	ldr	r3, [r5, #0]
 8002b68:	4604      	mov	r4, r0
 8002b6a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002b6c:	4639      	mov	r1, r7
 8002b6e:	4628      	mov	r0, r5
 8002b70:	4798      	blx	r3
 8002b72:	682b      	ldr	r3, [r5, #0]
 8002b74:	fb14 f400 	smulbb	r4, r4, r0
 8002b78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b7a:	4639      	mov	r1, r7
 8002b7c:	4628      	mov	r0, r5
 8002b7e:	4798      	blx	r3
 8002b80:	b2a4      	uxth	r4, r4
 8002b82:	1823      	adds	r3, r4, r0
 8002b84:	b21b      	sxth	r3, r3
 8002b86:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002b8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	e7fa      	b.n	8002b86 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002b90:	200132dc 	.word	0x200132dc
 8002b94:	200132d8 	.word	0x200132d8
 8002b98:	0801f051 	.word	0x0801f051
 8002b9c:	0801f093 	.word	0x0801f093
 8002ba0:	0801f0ce 	.word	0x0801f0ce
 8002ba4:	200132e0 	.word	0x200132e0
 8002ba8:	200132e4 	.word	0x200132e4

08002bac <_ZN18GameScreenViewBaseC1Ev>:
GameScreenViewBase::GameScreenViewBase() :
 8002bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bb0:	4604      	mov	r4, r0
 8002bb2:	b091      	sub	sp, #68	@ 0x44
    buttonCallback(this, &GameScreenViewBase::buttonCallbackHandler)
 8002bb4:	46a0      	mov	r8, r4
        : presenter(0)
 8002bb6:	2500      	movs	r5, #0
 8002bb8:	f00b fbb6 	bl	800e328 <_ZN8touchgfx6ScreenC1Ev>
 8002bbc:	4ba2      	ldr	r3, [pc, #648]	@ (8002e48 <_ZN18GameScreenViewBaseC1Ev+0x29c>)
 8002bbe:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8002bc0:	f848 3b40 	str.w	r3, [r8], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002bc4:	2226      	movs	r2, #38	@ 0x26
 8002bc6:	4629      	mov	r1, r5
 8002bc8:	4640      	mov	r0, r8
 8002bca:	f01a ff92 	bl	801daf2 <memset>
 8002bce:	4640      	mov	r0, r8
 8002bd0:	f7ff ff5c 	bl	8002a8c <_ZN8touchgfx6WidgetC1Ev>
 8002bd4:	4b9d      	ldr	r3, [pc, #628]	@ (8002e4c <_ZN18GameScreenViewBaseC1Ev+0x2a0>)
 8002bd6:	6423      	str	r3, [r4, #64]	@ 0x40
 8002bd8:	23ff      	movs	r3, #255	@ 0xff
 8002bda:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002bde:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002be2:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8002be6:	a90e      	add	r1, sp, #56	@ 0x38
 8002be8:	4618      	mov	r0, r3
        : color(col)
 8002bea:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002bec:	9306      	str	r3, [sp, #24]
 8002bee:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8002bf2:	f7ff ff5d 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002bf6:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8002bfa:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8002bfe:	4618      	mov	r0, r3
 8002c00:	a90e      	add	r1, sp, #56	@ 0x38
 8002c02:	9307      	str	r3, [sp, #28]
 8002c04:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8002c08:	f7ff ff52 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002c0c:	a90e      	add	r1, sp, #56	@ 0x38
 8002c0e:	4648      	mov	r0, r9
 8002c10:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8002c14:	f7ff ff4c 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002c18:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8002c1c:	4618      	mov	r0, r3
 8002c1e:	9303      	str	r3, [sp, #12]
 8002c20:	f7ff ff60 	bl	8002ae4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c24:	f504 739e 	add.w	r3, r4, #316	@ 0x13c
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8002c28:	a90e      	add	r1, sp, #56	@ 0x38
 8002c2a:	4618      	mov	r0, r3
 8002c2c:	9304      	str	r3, [sp, #16]
 8002c2e:	f8ad 6038 	strh.w	r6, [sp, #56]	@ 0x38
 8002c32:	f7ff ff3d 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002c36:	4b86      	ldr	r3, [pc, #536]	@ (8002e50 <_ZN18GameScreenViewBaseC1Ev+0x2a4>)
 8002c38:	f8c4 313c 	str.w	r3, [r4, #316]	@ 0x13c
          updateTicksInterval(updateInterval),
 8002c3c:	2701      	movs	r7, #1
 8002c3e:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8002c42:	f04f 3bff 	mov.w	fp, #4294967295
 8002c46:	4618      	mov	r0, r3
 8002c48:	e9c4 b75b 	strd	fp, r7, [r4, #364]	@ 0x16c
        : animationDoneAction(0),
 8002c4c:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
          running(false)
 8002c50:	f884 5174 	strb.w	r5, [r4, #372]	@ 0x174
 8002c54:	f504 7ae2 	add.w	sl, r4, #452	@ 0x1c4
 8002c58:	9305      	str	r3, [sp, #20]
 8002c5a:	f7ff ff43 	bl	8002ae4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c5e:	4650      	mov	r0, sl
 8002c60:	f008 fafc 	bl	800b25c <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002c64:	4b7b      	ldr	r3, [pc, #492]	@ (8002e54 <_ZN18GameScreenViewBaseC1Ev+0x2a8>)
 8002c66:	e9c4 348b 	strd	r3, r4, [r4, #556]	@ 0x22c
 8002c6a:	4b7b      	ldr	r3, [pc, #492]	@ (8002e58 <_ZN18GameScreenViewBaseC1Ev+0x2ac>)
 8002c6c:	e9c4 358d 	strd	r3, r5, [r4, #564]	@ 0x234
    __background.setPosition(0, 0, 240, 320);
 8002c70:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002c74:	462a      	mov	r2, r5
 8002c76:	4640      	mov	r0, r8
 8002c78:	9300      	str	r3, [sp, #0]
 8002c7a:	4629      	mov	r1, r5
 8002c7c:	23f0      	movs	r3, #240	@ 0xf0
 8002c7e:	f7ff fef1 	bl	8002a64 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002c82:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002c84:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002c88:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002c8a:	4641      	mov	r1, r8
 8002c8c:	4630      	mov	r0, r6
 8002c8e:	f006 fc07 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_01.setXY(134, 1);
 8002c92:	463a      	mov	r2, r7
 8002c94:	9806      	ldr	r0, [sp, #24]
 8002c96:	2186      	movs	r1, #134	@ 0x86
 8002c98:	f7ff fed7 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 8002c9c:	f04f 080c 	mov.w	r8, #12
    heart_01.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ID));
 8002ca0:	9806      	ldr	r0, [sp, #24]
 8002ca2:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 8002ca6:	a90e      	add	r1, sp, #56	@ 0x38
 8002ca8:	f008 f9a1 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002cac:	9906      	ldr	r1, [sp, #24]
 8002cae:	4630      	mov	r0, r6
 8002cb0:	f006 fbf6 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_03.setXY(204, 1);
 8002cb4:	463a      	mov	r2, r7
 8002cb6:	9807      	ldr	r0, [sp, #28]
 8002cb8:	21cc      	movs	r1, #204	@ 0xcc
 8002cba:	f7ff fec6 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
    heart_03.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ID));
 8002cbe:	9807      	ldr	r0, [sp, #28]
 8002cc0:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 8002cc4:	a90e      	add	r1, sp, #56	@ 0x38
 8002cc6:	f008 f992 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002cca:	9907      	ldr	r1, [sp, #28]
 8002ccc:	4630      	mov	r0, r6
 8002cce:	f006 fbe7 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    heart_02.setXY(169, 1);
 8002cd2:	463a      	mov	r2, r7
 8002cd4:	4648      	mov	r0, r9
 8002cd6:	21a9      	movs	r1, #169	@ 0xa9
 8002cd8:	f7ff feb7 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
    heart_02.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ID));
 8002cdc:	4648      	mov	r0, r9
 8002cde:	a90e      	add	r1, sp, #56	@ 0x38
 8002ce0:	f8ad 8038 	strh.w	r8, [sp, #56]	@ 0x38
 8002ce4:	f008 f983 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ce8:	4649      	mov	r1, r9
 8002cea:	4630      	mov	r0, r6
 8002cec:	f006 fbd8 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score_board.setPosition(8, 4, 96, 29);
 8002cf0:	231d      	movs	r3, #29
 8002cf2:	2204      	movs	r2, #4
 8002cf4:	9803      	ldr	r0, [sp, #12]
 8002cf6:	9300      	str	r3, [sp, #0]
 8002cf8:	2108      	movs	r1, #8
 8002cfa:	2360      	movs	r3, #96	@ 0x60
 8002cfc:	f7ff feb2 	bl	8002a64 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002d00:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
 8002d04:	9903      	ldr	r1, [sp, #12]
 8002d06:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8002d0a:	f8c4 b120 	str.w	fp, [r4, #288]	@ 0x120
        boundingArea = calculateBoundingArea();
 8002d0e:	f10d 0820 	add.w	r8, sp, #32
 8002d12:	4640      	mov	r0, r8
        linespace = space;
 8002d14:	f8a4 5124 	strh.w	r5, [r4, #292]	@ 0x124
        boundingArea = calculateBoundingArea();
 8002d18:	4798      	blx	r3
 8002d1a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002d1e:	f504 7396 	add.w	r3, r4, #300	@ 0x12c
 8002d22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d26:	4b4d      	ldr	r3, [pc, #308]	@ (8002e5c <_ZN18GameScreenViewBaseC1Ev+0x2b0>)
 8002d28:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(score_boardBuffer, SCORE_BOARD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SC0I).getText());
 8002d2a:	f504 7903 	add.w	r9, r4, #524	@ 0x20c
 8002d2e:	b92b      	cbnz	r3, 8002d3c <_ZN18GameScreenViewBaseC1Ev+0x190>
 8002d30:	4b4b      	ldr	r3, [pc, #300]	@ (8002e60 <_ZN18GameScreenViewBaseC1Ev+0x2b4>)
 8002d32:	4a4c      	ldr	r2, [pc, #304]	@ (8002e64 <_ZN18GameScreenViewBaseC1Ev+0x2b8>)
 8002d34:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002d36:	484c      	ldr	r0, [pc, #304]	@ (8002e68 <_ZN18GameScreenViewBaseC1Ev+0x2bc>)
 8002d38:	f01a fcd4 	bl	801d6e4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002d3c:	4b4b      	ldr	r3, [pc, #300]	@ (8002e6c <_ZN18GameScreenViewBaseC1Ev+0x2c0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002d3e:	881b      	ldrh	r3, [r3, #0]
 8002d40:	2b02      	cmp	r3, #2
 8002d42:	d803      	bhi.n	8002d4c <_ZN18GameScreenViewBaseC1Ev+0x1a0>
 8002d44:	4b4a      	ldr	r3, [pc, #296]	@ (8002e70 <_ZN18GameScreenViewBaseC1Ev+0x2c4>)
 8002d46:	4a47      	ldr	r2, [pc, #284]	@ (8002e64 <_ZN18GameScreenViewBaseC1Ev+0x2b8>)
 8002d48:	2161      	movs	r1, #97	@ 0x61
 8002d4a:	e7f4      	b.n	8002d36 <_ZN18GameScreenViewBaseC1Ev+0x18a>
        return texts->getText(typedTextId);
 8002d4c:	4b49      	ldr	r3, [pc, #292]	@ (8002e74 <_ZN18GameScreenViewBaseC1Ev+0x2c8>)
 8002d4e:	2102      	movs	r1, #2
 8002d50:	6818      	ldr	r0, [r3, #0]
 8002d52:	f000 fb6d 	bl	8003430 <_ZNK8touchgfx5Texts7getTextEt>
 8002d56:	4a48      	ldr	r2, [pc, #288]	@ (8002e78 <_ZN18GameScreenViewBaseC1Ev+0x2cc>)
 8002d58:	4603      	mov	r3, r0
 8002d5a:	2105      	movs	r1, #5
 8002d5c:	4648      	mov	r0, r9
 8002d5e:	f00c ff81 	bl	800fc64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002d62:	2303      	movs	r3, #3
    score_board.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FA5H));
 8002d64:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 8002d66:	f8c4 9138 	str.w	r9, [r4, #312]	@ 0x138
 8002d6a:	a90e      	add	r1, sp, #56	@ 0x38
 8002d6c:	f8df 910c 	ldr.w	r9, [pc, #268]	@ 8002e7c <_ZN18GameScreenViewBaseC1Ev+0x2d0>
 8002d70:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002d74:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 8002d78:	f007 ffaa 	bl	800acd0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d7c:	9903      	ldr	r1, [sp, #12]
 8002d7e:	4630      	mov	r0, r6
 8002d80:	f006 fb8e 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    animatedImage1.setXY(208, 1);
 8002d84:	9804      	ldr	r0, [sp, #16]
 8002d86:	463a      	mov	r2, r7
 8002d88:	21d0      	movs	r1, #208	@ 0xd0
 8002d8a:	f7ff fe5e 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
    animatedImage1.setBitmaps(BITMAP_ENEMY_RED_01_ID, BITMAP_ENEMY_RED_02_ID);
 8002d8e:	2209      	movs	r2, #9
 8002d90:	9804      	ldr	r0, [sp, #16]
 8002d92:	2108      	movs	r1, #8
 8002d94:	f007 fe76 	bl	800aa84 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    animatedImage1.setUpdateTicksInterval(1);
 8002d98:	9804      	ldr	r0, [sp, #16]
 8002d9a:	4639      	mov	r1, r7
 8002d9c:	f007 fe85 	bl	800aaaa <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
 8002da0:	9904      	ldr	r1, [sp, #16]
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002da2:	f884 5164 	strb.w	r5, [r4, #356]	@ 0x164
 8002da6:	4630      	mov	r0, r6
 8002da8:	f006 fb7a 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score_holder.setPosition(0, 114, 240, 34);
 8002dac:	2322      	movs	r3, #34	@ 0x22
 8002dae:	9805      	ldr	r0, [sp, #20]
 8002db0:	9300      	str	r3, [sp, #0]
 8002db2:	2272      	movs	r2, #114	@ 0x72
 8002db4:	4629      	mov	r1, r5
 8002db6:	23f0      	movs	r3, #240	@ 0xf0
 8002db8:	f7ff fe54 	bl	8002a64 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dbc:	f8d4 3178 	ldr.w	r3, [r4, #376]	@ 0x178
 8002dc0:	9905      	ldr	r1, [sp, #20]
 8002dc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8002dc6:	f8c4 b1a8 	str.w	fp, [r4, #424]	@ 0x1a8
        boundingArea = calculateBoundingArea();
 8002dca:	4640      	mov	r0, r8
        linespace = space;
 8002dcc:	f8a4 51ac 	strh.w	r5, [r4, #428]	@ 0x1ac
        boundingArea = calculateBoundingArea();
 8002dd0:	4798      	blx	r3
 8002dd2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002dd6:	f504 73da 	add.w	r3, r4, #436	@ 0x1b4
 8002dda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    score_holder.setWildcard(score_holderBuffer);
 8002dde:	f204 2316 	addw	r3, r4, #534	@ 0x216
 8002de2:	f8c4 31c0 	str.w	r3, [r4, #448]	@ 0x1c0
    score_holder.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8V5A));
 8002de6:	9805      	ldr	r0, [sp, #20]
    score_holderBuffer[0] = 0;
 8002de8:	f8a4 5216 	strh.w	r5, [r4, #534]	@ 0x216
    score_holder.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8V5A));
 8002dec:	a90e      	add	r1, sp, #56	@ 0x38
 8002dee:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 8002df2:	f8ad 703c 	strh.w	r7, [sp, #60]	@ 0x3c
 8002df6:	f007 ff6b 	bl	800acd0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002dfa:	9905      	ldr	r1, [sp, #20]
 8002dfc:	4630      	mov	r0, r6
 8002dfe:	f006 fb4f 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    menu_button.setXY(38, 160);
 8002e02:	4650      	mov	r0, sl
 8002e04:	22a0      	movs	r2, #160	@ 0xa0
 8002e06:	2126      	movs	r1, #38	@ 0x26
 8002e08:	f7ff fe1f 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 8002e0c:	2302      	movs	r3, #2
    menu_button.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_SQUARE_SMALL_PRESSED_ID));
 8002e0e:	aa0e      	add	r2, sp, #56	@ 0x38
 8002e10:	a90d      	add	r1, sp, #52	@ 0x34
 8002e12:	4650      	mov	r0, sl
 8002e14:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8002e18:	f8ad 7034 	strh.w	r7, [sp, #52]	@ 0x34
 8002e1c:	f007 ffb5 	bl	800ad8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002e20:	4650      	mov	r0, sl
class TypedText
 8002e22:	f8a4 51fc 	strh.w	r5, [r4, #508]	@ 0x1fc
 8002e26:	f7ff fe7f 	bl	8002b28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    menu_button.setAction(buttonCallback);
 8002e2a:	f504 730b 	add.w	r3, r4, #556	@ 0x22c
 8002e2e:	4630      	mov	r0, r6
        colorPressed = col;
 8002e30:	e9c4 bb80 	strd	fp, fp, [r4, #512]	@ 0x200
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e34:	f8c4 31ec 	str.w	r3, [r4, #492]	@ 0x1ec
 8002e38:	4651      	mov	r1, sl
 8002e3a:	f006 fb31 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002e3e:	4620      	mov	r0, r4
 8002e40:	b011      	add	sp, #68	@ 0x44
 8002e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e46:	bf00      	nop
 8002e48:	0801f9d0 	.word	0x0801f9d0
 8002e4c:	08020494 	.word	0x08020494
 8002e50:	08020418 	.word	0x08020418
 8002e54:	0801f9b8 	.word	0x0801f9b8
 8002e58:	08002a25 	.word	0x08002a25
 8002e5c:	200132d8 	.word	0x200132d8
 8002e60:	0801f051 	.word	0x0801f051
 8002e64:	0801f153 	.word	0x0801f153
 8002e68:	0801f0ce 	.word	0x0801f0ce
 8002e6c:	200132dc 	.word	0x200132dc
 8002e70:	0801f115 	.word	0x0801f115
 8002e74:	200132e4 	.word	0x200132e4
 8002e78:	0801f19e 	.word	0x0801f19e
 8002e7c:	0801f7fc 	.word	0x0801f7fc

08002e80 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002e80:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002e82:	4770      	bx	lr

08002e84 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002e84:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002e86:	4770      	bx	lr

08002e88 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002e88:	4770      	bx	lr

08002e8a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002e8a:	888b      	ldrh	r3, [r1, #4]
 8002e8c:	69c0      	ldr	r0, [r0, #28]
 8002e8e:	680a      	ldr	r2, [r1, #0]
 8002e90:	0adb      	lsrs	r3, r3, #11
 8002e92:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002e96:	4410      	add	r0, r2
 8002e98:	4770      	bx	lr

08002e9a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002e9a:	b510      	push	{r4, lr}
 8002e9c:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002e9e:	b1ba      	cbz	r2, 8002ed0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002ea0:	7b10      	ldrb	r0, [r2, #12]
 8002ea2:	b168      	cbz	r0, 8002ec0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002ea4:	7b53      	ldrb	r3, [r2, #13]
 8002ea6:	7ad2      	ldrb	r2, [r2, #11]
 8002ea8:	021b      	lsls	r3, r3, #8
 8002eaa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002eae:	431a      	orrs	r2, r3
 8002eb0:	6a23      	ldr	r3, [r4, #32]
 8002eb2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002eb6:	881a      	ldrh	r2, [r3, #0]
 8002eb8:	428a      	cmp	r2, r1
 8002eba:	d102      	bne.n	8002ec2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002ebc:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002ec0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002ec2:	d805      	bhi.n	8002ed0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002ec4:	3801      	subs	r0, #1
 8002ec6:	b280      	uxth	r0, r0
 8002ec8:	3304      	adds	r3, #4
 8002eca:	2800      	cmp	r0, #0
 8002ecc:	d1f3      	bne.n	8002eb6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002ece:	e7f7      	b.n	8002ec0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002ed0:	2000      	movs	r0, #0
 8002ed2:	e7f5      	b.n	8002ec0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002ed4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002ed4:	b510      	push	{r4, lr}
 8002ed6:	212c      	movs	r1, #44	@ 0x2c
 8002ed8:	4604      	mov	r4, r0
 8002eda:	f01a fbd5 	bl	801d688 <_ZdlPvj>
 8002ede:	4620      	mov	r0, r4
 8002ee0:	bd10      	pop	{r4, pc}
	...

08002ee4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002ee4:	b530      	push	{r4, r5, lr}
 8002ee6:	b08b      	sub	sp, #44	@ 0x2c
 8002ee8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002eea:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002eee:	9508      	str	r5, [sp, #32]
 8002ef0:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002ef4:	9507      	str	r5, [sp, #28]
 8002ef6:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002efa:	9506      	str	r5, [sp, #24]
 8002efc:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002f00:	9505      	str	r5, [sp, #20]
 8002f02:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002f06:	9504      	str	r5, [sp, #16]
 8002f08:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002f0c:	9503      	str	r5, [sp, #12]
 8002f0e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002f12:	9502      	str	r5, [sp, #8]
 8002f14:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002f18:	9501      	str	r5, [sp, #4]
 8002f1a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002f1e:	9500      	str	r5, [sp, #0]
 8002f20:	f00b f808 	bl	800df34 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002f24:	4b06      	ldr	r3, [pc, #24]	@ (8002f40 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002f26:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002f28:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002f2a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002f2c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002f2e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002f30:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002f32:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002f34:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002f36:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002f38:	4620      	mov	r0, r4
 8002f3a:	b00b      	add	sp, #44	@ 0x2c
 8002f3c:	bd30      	pop	{r4, r5, pc}
 8002f3e:	bf00      	nop
 8002f40:	0801fa04 	.word	0x0801fa04

08002f44 <_ZN8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f44:	4770      	bx	lr

08002f46 <_ZN18MenuScreenViewBaseD1Ev>:
}

MenuScreenViewBase::~MenuScreenViewBase()
{

}
 8002f46:	4770      	bx	lr

08002f48 <_ZN18MenuScreenViewBase11setupScreenEv>:

void MenuScreenViewBase::setupScreen()
{

}
 8002f48:	4770      	bx	lr

08002f4a <_ZN8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f4a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f4c:	68c2      	ldr	r2, [r0, #12]
 8002f4e:	6844      	ldr	r4, [r0, #4]
 8002f50:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f52:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f54:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f58:	07d2      	lsls	r2, r2, #31
 8002f5a:	bf48      	it	mi
 8002f5c:	5962      	ldrmi	r2, [r4, r5]
 8002f5e:	689b      	ldr	r3, [r3, #8]
    }
 8002f60:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f62:	bf48      	it	mi
 8002f64:	58d3      	ldrmi	r3, [r2, r3]
 8002f66:	4718      	bx	r3

08002f68 <_ZNK8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8002f68:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002f6a:	6840      	ldr	r0, [r0, #4]
 8002f6c:	b130      	cbz	r0, 8002f7c <_ZNK8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f6e:	689a      	ldr	r2, [r3, #8]
 8002f70:	b91a      	cbnz	r2, 8002f7a <_ZNK8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8002f72:	68d8      	ldr	r0, [r3, #12]
 8002f74:	f000 0001 	and.w	r0, r0, #1
 8002f78:	4770      	bx	lr
 8002f7a:	2001      	movs	r0, #1
    }
 8002f7c:	4770      	bx	lr

08002f7e <_ZN8touchgfx8CallbackI18MenuScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f7e:	b510      	push	{r4, lr}
 8002f80:	2110      	movs	r1, #16
 8002f82:	4604      	mov	r4, r0
 8002f84:	f01a fb80 	bl	801d688 <_ZdlPvj>
 8002f88:	4620      	mov	r0, r4
 8002f8a:	bd10      	pop	{r4, pc}

08002f8c <_ZN18MenuScreenViewBaseD0Ev>:
MenuScreenViewBase::~MenuScreenViewBase()
 8002f8c:	b510      	push	{r4, lr}
}
 8002f8e:	21f0      	movs	r1, #240	@ 0xf0
MenuScreenViewBase::~MenuScreenViewBase()
 8002f90:	4604      	mov	r4, r0
}
 8002f92:	f01a fb79 	bl	801d688 <_ZdlPvj>
 8002f96:	4620      	mov	r0, r4
 8002f98:	bd10      	pop	{r4, pc}

08002f9a <_ZN18MenuScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MenuScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button)
 8002f9a:	3098      	adds	r0, #152	@ 0x98
 8002f9c:	4288      	cmp	r0, r1
{
 8002f9e:	b508      	push	{r3, lr}
    if (&src == &button)
 8002fa0:	d105      	bne.n	8002fae <_ZN18MenuScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~MenuScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002fa2:	f009 fe59 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
        //ChangeToGameScreen
        //When button clicked change screen to GameScreen
        //Go to GameScreen with screen transition towards East
        application().gotoGameScreenScreenSlideTransitionEast();
    }
}
 8002fa6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoGameScreenScreenSlideTransitionEast();
 8002faa:	f7ff baf1 	b.w	8002590 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
}
 8002fae:	bd08      	pop	{r3, pc}

08002fb0 <_ZN18MenuScreenViewBaseC1Ev>:
MenuScreenViewBase::MenuScreenViewBase() :
 8002fb0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002fb4:	4604      	mov	r4, r0
 8002fb6:	f00b f9b7 	bl	800e328 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MenuScreenViewBase::buttonCallbackHandler)
 8002fba:	4b44      	ldr	r3, [pc, #272]	@ (80030cc <_ZN18MenuScreenViewBaseC1Ev+0x11c>)
 8002fbc:	6023      	str	r3, [r4, #0]
        : Widget(), alpha(255), color(0)
 8002fbe:	4b44      	ldr	r3, [pc, #272]	@ (80030d0 <_ZN18MenuScreenViewBaseC1Ev+0x120>)
 8002fc0:	2500      	movs	r5, #0
        : x(0), y(0), width(0), height(0)
 8002fc2:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
 8002fc6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002fca:	23ff      	movs	r3, #255	@ 0xff
 8002fcc:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8002fd0:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
 8002fd4:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002fd8:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
 8002fdc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8002fe0:	4a3c      	ldr	r2, [pc, #240]	@ (80030d4 <_ZN18MenuScreenViewBaseC1Ev+0x124>)
 8002fe2:	66e2      	str	r2, [r4, #108]	@ 0x6c
 8002fe4:	f104 0698 	add.w	r6, r4, #152	@ 0x98
 8002fe8:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 8002fec:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
 8002ff0:	a901      	add	r1, sp, #4
 8002ff2:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8002ff6:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8002ffa:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 8002ffe:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
 8003002:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
 8003006:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
 800300a:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
 800300e:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003010:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 8003012:	66a5      	str	r5, [r4, #104]	@ 0x68
 8003014:	4638      	mov	r0, r7
 8003016:	f8ad 3004 	strh.w	r3, [sp, #4]
 800301a:	f007 ffe8 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800301e:	4630      	mov	r0, r6
 8003020:	f008 f91c 	bl	800b25c <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003024:	4b2c      	ldr	r3, [pc, #176]	@ (80030d8 <_ZN18MenuScreenViewBaseC1Ev+0x128>)
 8003026:	e9c4 3438 	strd	r3, r4, [r4, #224]	@ 0xe0
 800302a:	4b2c      	ldr	r3, [pc, #176]	@ (80030dc <_ZN18MenuScreenViewBaseC1Ev+0x12c>)
    __background.setPosition(0, 0, 240, 320);
 800302c:	f104 0840 	add.w	r8, r4, #64	@ 0x40
 8003030:	e9c4 353a 	strd	r3, r5, [r4, #232]	@ 0xe8
        setXY(x, y);
 8003034:	462a      	mov	r2, r5
 8003036:	4629      	mov	r1, r5
 8003038:	4640      	mov	r0, r8
 800303a:	f7ff fd06 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800303e:	4640      	mov	r0, r8
 8003040:	21f0      	movs	r1, #240	@ 0xf0
 8003042:	f7ff f8a4 	bl	800218e <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003046:	4640      	mov	r0, r8
 8003048:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800304c:	f7ff f8a1 	bl	8002192 <_ZN8touchgfx8Drawable9setHeightEs>
 8003050:	1d25      	adds	r5, r4, #4
        color = newColor;
 8003052:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003056:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003058:	4641      	mov	r1, r8
 800305a:	4628      	mov	r0, r5
 800305c:	f006 fa20 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(20, 27);
 8003060:	221b      	movs	r2, #27
 8003062:	4638      	mov	r0, r7
 8003064:	2114      	movs	r1, #20
 8003066:	f7ff fcf0 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 800306a:	2310      	movs	r3, #16
    image1.setBitmap(touchgfx::Bitmap(BITMAP_TITLE_ID));
 800306c:	a901      	add	r1, sp, #4
 800306e:	4638      	mov	r0, r7
 8003070:	f8ad 3004 	strh.w	r3, [sp, #4]
 8003074:	f007 ffbb 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003078:	4639      	mov	r1, r7
 800307a:	4628      	mov	r0, r5
 800307c:	f006 fa10 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    button.setXY(35, 160);
 8003080:	4630      	mov	r0, r6
 8003082:	22a0      	movs	r2, #160	@ 0xa0
 8003084:	2123      	movs	r1, #35	@ 0x23
 8003086:	f7ff fce0 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 800308a:	2301      	movs	r3, #1
    button.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_SQUARE_SMALL_PRESSED_ID));
 800308c:	aa01      	add	r2, sp, #4
 800308e:	4669      	mov	r1, sp
 8003090:	f8ad 3000 	strh.w	r3, [sp]
 8003094:	4630      	mov	r0, r6
 8003096:	2302      	movs	r3, #2
 8003098:	f8ad 3004 	strh.w	r3, [sp, #4]
 800309c:	f007 fe75 	bl	800ad8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80030a0:	2304      	movs	r3, #4
 80030a2:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
        updateTextPosition();
 80030a6:	4630      	mov	r0, r6
 80030a8:	f7ff fd3e 	bl	8002b28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80030ac:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80030b0:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
    button.setAction(buttonCallback);
 80030b4:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
 80030b8:	4628      	mov	r0, r5
 80030ba:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80030be:	4631      	mov	r1, r6
 80030c0:	f006 f9ee 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030c4:	4620      	mov	r0, r4
 80030c6:	b002      	add	sp, #8
 80030c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80030cc:	0801fa7c 	.word	0x0801fa7c
 80030d0:	08020494 	.word	0x08020494
 80030d4:	080204fc 	.word	0x080204fc
 80030d8:	0801fa64 	.word	0x0801fa64
 80030dc:	08002f9b 	.word	0x08002f9b

080030e0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_DUBAI_REGULAR_TTF_24_4bpp();

touchgfx::GeneratedFont& getFont_DUBAI_REGULAR_TTF_24_4bpp()
{
    static touchgfx::GeneratedFont DUBAI_REGULAR_TTF_24_4bpp(glyphs_DUBAI_REGULAR_TTF_24_4bpp, 23, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_DUBAI_REGULAR_TTF_24_4bpp, kerning_DUBAI_REGULAR_TTF_24_4bpp, 63, 0, 0, &DUBAI_REGULAR_TTF_contextualFormsTable);
 80030e0:	4770      	bx	lr
	...

080030e4 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv>:
{
 80030e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont DUBAI_REGULAR_TTF_24_4bpp(glyphs_DUBAI_REGULAR_TTF_24_4bpp, 23, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_DUBAI_REGULAR_TTF_24_4bpp, kerning_DUBAI_REGULAR_TTF_24_4bpp, 63, 0, 0, &DUBAI_REGULAR_TTF_contextualFormsTable);
 80030e6:	4d17      	ldr	r5, [pc, #92]	@ (8003144 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x60>)
 80030e8:	682c      	ldr	r4, [r5, #0]
 80030ea:	f014 0401 	ands.w	r4, r4, #1
{
 80030ee:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont DUBAI_REGULAR_TTF_24_4bpp(glyphs_DUBAI_REGULAR_TTF_24_4bpp, 23, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_DUBAI_REGULAR_TTF_24_4bpp, kerning_DUBAI_REGULAR_TTF_24_4bpp, 63, 0, 0, &DUBAI_REGULAR_TTF_contextualFormsTable);
 80030f0:	f3bf 8f5b 	dmb	ish
 80030f4:	d122      	bne.n	800313c <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x58>
 80030f6:	4628      	mov	r0, r5
 80030f8:	f01a fac8 	bl	801d68c <__cxa_guard_acquire>
 80030fc:	b1f0      	cbz	r0, 800313c <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x58>
 80030fe:	4b12      	ldr	r3, [pc, #72]	@ (8003148 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x64>)
 8003100:	4912      	ldr	r1, [pc, #72]	@ (800314c <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x68>)
 8003102:	4813      	ldr	r0, [pc, #76]	@ (8003150 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x6c>)
 8003104:	940a      	str	r4, [sp, #40]	@ 0x28
 8003106:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800310a:	233f      	movs	r3, #63	@ 0x3f
 800310c:	9309      	str	r3, [sp, #36]	@ 0x24
 800310e:	4b11      	ldr	r3, [pc, #68]	@ (8003154 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x70>)
 8003110:	9308      	str	r3, [sp, #32]
 8003112:	4b11      	ldr	r3, [pc, #68]	@ (8003158 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x74>)
 8003114:	9405      	str	r4, [sp, #20]
 8003116:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800311a:	2201      	movs	r2, #1
 800311c:	2304      	movs	r3, #4
 800311e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003122:	2318      	movs	r3, #24
 8003124:	9300      	str	r3, [sp, #0]
 8003126:	2217      	movs	r2, #23
 8003128:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800312c:	f7ff feda 	bl	8002ee4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003130:	480a      	ldr	r0, [pc, #40]	@ (800315c <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x78>)
 8003132:	f01a faf5 	bl	801d720 <atexit>
 8003136:	4628      	mov	r0, r5
 8003138:	f01a fab4 	bl	801d6a4 <__cxa_guard_release>
    return DUBAI_REGULAR_TTF_24_4bpp;
}
 800313c:	4804      	ldr	r0, [pc, #16]	@ (8003150 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv+0x6c>)
 800313e:	b00f      	add	sp, #60	@ 0x3c
 8003140:	bd30      	pop	{r4, r5, pc}
 8003142:	bf00      	nop
 8003144:	20001f4c 	.word	0x20001f4c
 8003148:	0801faa8 	.word	0x0801faa8
 800314c:	080213d8 	.word	0x080213d8
 8003150:	20001f50 	.word	0x20001f50
 8003154:	0802154c 	.word	0x0802154c
 8003158:	080215a8 	.word	0x080215a8
 800315c:	080030e1 	.word	0x080030e1

08003160 <__tcf_0>:

touchgfx::GeneratedFont& getFont_tahoma_20_4bpp();

touchgfx::GeneratedFont& getFont_tahoma_20_4bpp()
{
    static touchgfx::GeneratedFont tahoma_20_4bpp(glyphs_tahoma_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_tahoma_20_4bpp, kerning_tahoma_20_4bpp, 63, 0, 0, &tahoma_contextualFormsTable);
 8003160:	4770      	bx	lr
	...

08003164 <_Z22getFont_tahoma_20_4bppv>:
{
 8003164:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont tahoma_20_4bpp(glyphs_tahoma_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_tahoma_20_4bpp, kerning_tahoma_20_4bpp, 63, 0, 0, &tahoma_contextualFormsTable);
 8003166:	4d16      	ldr	r5, [pc, #88]	@ (80031c0 <_Z22getFont_tahoma_20_4bppv+0x5c>)
 8003168:	682c      	ldr	r4, [r5, #0]
 800316a:	f014 0401 	ands.w	r4, r4, #1
{
 800316e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont tahoma_20_4bpp(glyphs_tahoma_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_tahoma_20_4bpp, kerning_tahoma_20_4bpp, 63, 0, 0, &tahoma_contextualFormsTable);
 8003170:	f3bf 8f5b 	dmb	ish
 8003174:	d121      	bne.n	80031ba <_Z22getFont_tahoma_20_4bppv+0x56>
 8003176:	4628      	mov	r0, r5
 8003178:	f01a fa88 	bl	801d68c <__cxa_guard_acquire>
 800317c:	b1e8      	cbz	r0, 80031ba <_Z22getFont_tahoma_20_4bppv+0x56>
 800317e:	4b11      	ldr	r3, [pc, #68]	@ (80031c4 <_Z22getFont_tahoma_20_4bppv+0x60>)
 8003180:	4911      	ldr	r1, [pc, #68]	@ (80031c8 <_Z22getFont_tahoma_20_4bppv+0x64>)
 8003182:	4812      	ldr	r0, [pc, #72]	@ (80031cc <_Z22getFont_tahoma_20_4bppv+0x68>)
 8003184:	940a      	str	r4, [sp, #40]	@ 0x28
 8003186:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800318a:	233f      	movs	r3, #63	@ 0x3f
 800318c:	9309      	str	r3, [sp, #36]	@ 0x24
 800318e:	4b10      	ldr	r3, [pc, #64]	@ (80031d0 <_Z22getFont_tahoma_20_4bppv+0x6c>)
 8003190:	9308      	str	r3, [sp, #32]
 8003192:	4b10      	ldr	r3, [pc, #64]	@ (80031d4 <_Z22getFont_tahoma_20_4bppv+0x70>)
 8003194:	9405      	str	r4, [sp, #20]
 8003196:	2201      	movs	r2, #1
 8003198:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800319c:	2304      	movs	r3, #4
 800319e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80031a2:	2314      	movs	r3, #20
 80031a4:	9300      	str	r3, [sp, #0]
 80031a6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80031aa:	f7ff fe9b 	bl	8002ee4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80031ae:	480a      	ldr	r0, [pc, #40]	@ (80031d8 <_Z22getFont_tahoma_20_4bppv+0x74>)
 80031b0:	f01a fab6 	bl	801d720 <atexit>
 80031b4:	4628      	mov	r0, r5
 80031b6:	f01a fa75 	bl	801d6a4 <__cxa_guard_release>
    return tahoma_20_4bpp;
}
 80031ba:	4804      	ldr	r0, [pc, #16]	@ (80031cc <_Z22getFont_tahoma_20_4bppv+0x68>)
 80031bc:	b00f      	add	sp, #60	@ 0x3c
 80031be:	bd30      	pop	{r4, r5, pc}
 80031c0:	20001f7c 	.word	0x20001f7c
 80031c4:	0801fcc4 	.word	0x0801fcc4
 80031c8:	0802151c 	.word	0x0802151c
 80031cc:	20001f80 	.word	0x20001f80
 80031d0:	0802159c 	.word	0x0802159c
 80031d4:	080215ac 	.word	0x080215ac
 80031d8:	08003161 	.word	0x08003161

080031dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80031dc:	4770      	bx	lr
	...

080031e0 <_Z23getFont_verdana_10_4bppv>:
{
 80031e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80031e2:	4d16      	ldr	r5, [pc, #88]	@ (800323c <_Z23getFont_verdana_10_4bppv+0x5c>)
 80031e4:	682c      	ldr	r4, [r5, #0]
 80031e6:	f014 0401 	ands.w	r4, r4, #1
{
 80031ea:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80031ec:	f3bf 8f5b 	dmb	ish
 80031f0:	d120      	bne.n	8003234 <_Z23getFont_verdana_10_4bppv+0x54>
 80031f2:	4628      	mov	r0, r5
 80031f4:	f01a fa4a 	bl	801d68c <__cxa_guard_acquire>
 80031f8:	b1e0      	cbz	r0, 8003234 <_Z23getFont_verdana_10_4bppv+0x54>
 80031fa:	233f      	movs	r3, #63	@ 0x3f
 80031fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80031fe:	4b10      	ldr	r3, [pc, #64]	@ (8003240 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003200:	9308      	str	r3, [sp, #32]
 8003202:	4b10      	ldr	r3, [pc, #64]	@ (8003244 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003204:	4910      	ldr	r1, [pc, #64]	@ (8003248 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003206:	4811      	ldr	r0, [pc, #68]	@ (800324c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003208:	940a      	str	r4, [sp, #40]	@ 0x28
 800320a:	2201      	movs	r2, #1
 800320c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003210:	2304      	movs	r3, #4
 8003212:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003216:	230a      	movs	r3, #10
 8003218:	9300      	str	r3, [sp, #0]
 800321a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800321e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003222:	9405      	str	r4, [sp, #20]
 8003224:	f7ff fe5e 	bl	8002ee4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003228:	4809      	ldr	r0, [pc, #36]	@ (8003250 <_Z23getFont_verdana_10_4bppv+0x70>)
 800322a:	f01a fa79 	bl	801d720 <atexit>
 800322e:	4628      	mov	r0, r5
 8003230:	f01a fa38 	bl	801d6a4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003234:	4805      	ldr	r0, [pc, #20]	@ (800324c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003236:	b00f      	add	sp, #60	@ 0x3c
 8003238:	bd30      	pop	{r4, r5, pc}
 800323a:	bf00      	nop
 800323c:	20001fac 	.word	0x20001fac
 8003240:	080215a0 	.word	0x080215a0
 8003244:	080215b0 	.word	0x080215b0
 8003248:	0802152c 	.word	0x0802152c
 800324c:	20001fb0 	.word	0x20001fb0
 8003250:	080031dd 	.word	0x080031dd

08003254 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003254:	4770      	bx	lr
	...

08003258 <_Z23getFont_verdana_40_4bppv>:
{
 8003258:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800325a:	4d16      	ldr	r5, [pc, #88]	@ (80032b4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800325c:	682c      	ldr	r4, [r5, #0]
 800325e:	f014 0401 	ands.w	r4, r4, #1
{
 8003262:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003264:	f3bf 8f5b 	dmb	ish
 8003268:	d120      	bne.n	80032ac <_Z23getFont_verdana_40_4bppv+0x54>
 800326a:	4628      	mov	r0, r5
 800326c:	f01a fa0e 	bl	801d68c <__cxa_guard_acquire>
 8003270:	b1e0      	cbz	r0, 80032ac <_Z23getFont_verdana_40_4bppv+0x54>
 8003272:	233f      	movs	r3, #63	@ 0x3f
 8003274:	9309      	str	r3, [sp, #36]	@ 0x24
 8003276:	4b10      	ldr	r3, [pc, #64]	@ (80032b8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003278:	9308      	str	r3, [sp, #32]
 800327a:	4b10      	ldr	r3, [pc, #64]	@ (80032bc <_Z23getFont_verdana_40_4bppv+0x64>)
 800327c:	4910      	ldr	r1, [pc, #64]	@ (80032c0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800327e:	4811      	ldr	r0, [pc, #68]	@ (80032c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003280:	940a      	str	r4, [sp, #40]	@ 0x28
 8003282:	2201      	movs	r2, #1
 8003284:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003288:	2304      	movs	r3, #4
 800328a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800328e:	2328      	movs	r3, #40	@ 0x28
 8003290:	9300      	str	r3, [sp, #0]
 8003292:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003296:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800329a:	9405      	str	r4, [sp, #20]
 800329c:	f7ff fe22 	bl	8002ee4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80032a0:	4809      	ldr	r0, [pc, #36]	@ (80032c8 <_Z23getFont_verdana_40_4bppv+0x70>)
 80032a2:	f01a fa3d 	bl	801d720 <atexit>
 80032a6:	4628      	mov	r0, r5
 80032a8:	f01a f9fc 	bl	801d6a4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80032ac:	4805      	ldr	r0, [pc, #20]	@ (80032c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80032ae:	b00f      	add	sp, #60	@ 0x3c
 80032b0:	bd30      	pop	{r4, r5, pc}
 80032b2:	bf00      	nop
 80032b4:	20001fdc 	.word	0x20001fdc
 80032b8:	080215a4 	.word	0x080215a4
 80032bc:	080215b4 	.word	0x080215b4
 80032c0:	0802153c 	.word	0x0802153c
 80032c4:	20001fe0 	.word	0x20001fe0
 80032c8:	08003255 	.word	0x08003255

080032cc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80032cc:	2000      	movs	r0, #0
 80032ce:	4770      	bx	lr

080032d0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80032d0:	2000      	movs	r0, #0
 80032d2:	4770      	bx	lr

080032d4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032d4:	b40e      	push	{r1, r2, r3}
 80032d6:	b503      	push	{r0, r1, lr}
 80032d8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032da:	2100      	movs	r1, #0
{
 80032dc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80032e0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032e2:	f00a fc4f 	bl	800db84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80032e6:	b002      	add	sp, #8
 80032e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80032ec:	b003      	add	sp, #12
 80032ee:	4770      	bx	lr

080032f0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032f0:	b40c      	push	{r2, r3}
 80032f2:	b507      	push	{r0, r1, r2, lr}
 80032f4:	ab04      	add	r3, sp, #16
 80032f6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80032fa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80032fc:	f00a fc42 	bl	800db84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003300:	b003      	add	sp, #12
 8003302:	f85d eb04 	ldr.w	lr, [sp], #4
 8003306:	b002      	add	sp, #8
 8003308:	4770      	bx	lr
	...

0800330c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800330c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800330e:	b510      	push	{r4, lr}
 8003310:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003312:	b373      	cbz	r3, 8003372 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003314:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8003316:	b92b      	cbnz	r3, 8003324 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003318:	4b18      	ldr	r3, [pc, #96]	@ (800337c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800331a:	4a19      	ldr	r2, [pc, #100]	@ (8003380 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800331c:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800331e:	4819      	ldr	r0, [pc, #100]	@ (8003384 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003320:	f01a f9e0 	bl	801d6e4 <__assert_func>
            return buffer[pos];
 8003324:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8003326:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800332a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 800332c:	b30b      	cbz	r3, 8003372 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800332e:	f00b fef0 	bl	800f112 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003332:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003334:	2b01      	cmp	r3, #1
 8003336:	d803      	bhi.n	8003340 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003338:	4b13      	ldr	r3, [pc, #76]	@ (8003388 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800333a:	4a14      	ldr	r2, [pc, #80]	@ (800338c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800333c:	21cb      	movs	r1, #203	@ 0xcb
 800333e:	e7ee      	b.n	800331e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003340:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003342:	1c53      	adds	r3, r2, #1
 8003344:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003346:	2b09      	cmp	r3, #9
 8003348:	4619      	mov	r1, r3
 800334a:	bf88      	it	hi
 800334c:	f1a3 010a 	subhi.w	r1, r3, #10
 8003350:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003354:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003358:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 800335a:	4281      	cmp	r1, r0
 800335c:	d109      	bne.n	8003372 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800335e:	2b0a      	cmp	r3, #10
 8003360:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003364:	bf28      	it	cs
 8003366:	2300      	movcs	r3, #0
 8003368:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800336c:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 800336e:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003370:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003372:	4620      	mov	r0, r4
}
 8003374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003378:	f00b bdce 	b.w	800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800337c:	0801f1a1 	.word	0x0801f1a1
 8003380:	0801f1aa 	.word	0x0801f1aa
 8003384:	0801f255 	.word	0x0801f255
 8003388:	0801f29f 	.word	0x0801f29f
 800338c:	0801f2ad 	.word	0x0801f2ad

08003390 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003390:	f00b bd89 	b.w	800eea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003394:	b510      	push	{r4, lr}
 8003396:	b086      	sub	sp, #24
 8003398:	ac02      	add	r4, sp, #8
 800339a:	e884 0006 	stmia.w	r4, {r1, r2}
 800339e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80033a0:	ab0a      	add	r3, sp, #40	@ 0x28
 80033a2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80033a4:	9301      	str	r3, [sp, #4]
 80033a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033a8:	9300      	str	r3, [sp, #0]
 80033aa:	4621      	mov	r1, r4
 80033ac:	9b08      	ldr	r3, [sp, #32]
 80033ae:	f008 fff1 	bl	800c394 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80033b2:	b006      	add	sp, #24
 80033b4:	bd10      	pop	{r4, pc}
	...

080033b8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80033b8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80033ba:	bb18      	cbnz	r0, 8003404 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80033bc:	4b12      	ldr	r3, [pc, #72]	@ (8003408 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80033be:	4813      	ldr	r0, [pc, #76]	@ (800340c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80033c0:	681c      	ldr	r4, [r3, #0]
 80033c2:	4913      	ldr	r1, [pc, #76]	@ (8003410 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80033c4:	b1b4      	cbz	r4, 80033f4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80033c6:	6822      	ldr	r2, [r4, #0]
 80033c8:	4422      	add	r2, r4
 80033ca:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80033cc:	6862      	ldr	r2, [r4, #4]
 80033ce:	4422      	add	r2, r4
 80033d0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80033d2:	68a2      	ldr	r2, [r4, #8]
 80033d4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80033d6:	4b0f      	ldr	r3, [pc, #60]	@ (8003414 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80033d8:	2200      	movs	r2, #0
 80033da:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80033dc:	f000 f838 	bl	8003450 <_ZN17TypedTextDatabase8getFontsEv>
 80033e0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80033e2:	f000 f833 	bl	800344c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80033e6:	4b0c      	ldr	r3, [pc, #48]	@ (8003418 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80033e8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80033ea:	4b0c      	ldr	r3, [pc, #48]	@ (800341c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80033ec:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80033ee:	4b0c      	ldr	r3, [pc, #48]	@ (8003420 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80033f0:	8018      	strh	r0, [r3, #0]
    }
}
 80033f2:	e007      	b.n	8003404 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80033f4:	4b0b      	ldr	r3, [pc, #44]	@ (8003424 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80033f6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80033f8:	4b0b      	ldr	r3, [pc, #44]	@ (8003428 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80033fa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80033fc:	4b0b      	ldr	r3, [pc, #44]	@ (800342c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80033fe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003400:	2c00      	cmp	r4, #0
 8003402:	d1e8      	bne.n	80033d6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003404:	bd38      	pop	{r3, r4, r5, pc}
 8003406:	bf00      	nop
 8003408:	20002018 	.word	0x20002018
 800340c:	20002010 	.word	0x20002010
 8003410:	2000200c 	.word	0x2000200c
 8003414:	20002014 	.word	0x20002014
 8003418:	200132d8 	.word	0x200132d8
 800341c:	200132e0 	.word	0x200132e0
 8003420:	200132dc 	.word	0x200132dc
 8003424:	080215cc 	.word	0x080215cc
 8003428:	080215b8 	.word	0x080215b8
 800342c:	08021600 	.word	0x08021600

08003430 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003430:	4b04      	ldr	r3, [pc, #16]	@ (8003444 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003438:	4b03      	ldr	r3, [pc, #12]	@ (8003448 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800343a:	681b      	ldr	r3, [r3, #0]
}
 800343c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003440:	4770      	bx	lr
 8003442:	bf00      	nop
 8003444:	2000200c 	.word	0x2000200c
 8003448:	20002010 	.word	0x20002010

0800344c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800344c:	2005      	movs	r0, #5
 800344e:	4770      	bx	lr

08003450 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003450:	4800      	ldr	r0, [pc, #0]	@ (8003454 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003452:	4770      	bx	lr
 8003454:	2000201c 	.word	0x2000201c

08003458 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_DUBAI_REGULAR_TTF_24_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003458:	b510      	push	{r4, lr}
    &(getFont_tahoma_20_4bpp()),
 800345a:	f7ff fe83 	bl	8003164 <_Z22getFont_tahoma_20_4bppv>
};
 800345e:	4c06      	ldr	r4, [pc, #24]	@ (8003478 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8003460:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003462:	f7ff fef9 	bl	8003258 <_Z23getFont_verdana_40_4bppv>
};
 8003466:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003468:	f7ff feba 	bl	80031e0 <_Z23getFont_verdana_10_4bppv>
};
 800346c:	60a0      	str	r0, [r4, #8]
    &(getFont_DUBAI_REGULAR_TTF_24_4bpp())
 800346e:	f7ff fe39 	bl	80030e4 <_Z33getFont_DUBAI_REGULAR_TTF_24_4bppv>
};
 8003472:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8003474:	bd10      	pop	{r4, pc}
 8003476:	bf00      	nop
 8003478:	2000201c 	.word	0x2000201c

0800347c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800347c:	4770      	bx	lr

0800347e <_ZN19FrontendApplicationD0Ev>:
 800347e:	b510      	push	{r4, lr}
 8003480:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003484:	4604      	mov	r4, r0
 8003486:	f01a f8ff 	bl	801d688 <_ZdlPvj>
 800348a:	4620      	mov	r0, r4
 800348c:	bd10      	pop	{r4, pc}

0800348e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800348e:	b510      	push	{r4, lr}
 8003490:	4604      	mov	r4, r0
    {
        model.tick();
 8003492:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003496:	f000 fb96 	bl	8003bc6 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800349a:	4620      	mov	r0, r4
    }
 800349c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80034a0:	f009 bc76 	b.w	800cd90 <_ZN8touchgfx11Application15handleTickEventEv>

080034a4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80034a4:	b510      	push	{r4, lr}
 80034a6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80034a8:	f7ff f822 	bl	80024f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80034ac:	4b01      	ldr	r3, [pc, #4]	@ (80034b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80034ae:	6023      	str	r3, [r4, #0]
{

}
 80034b0:	4620      	mov	r0, r4
 80034b2:	bd10      	pop	{r4, pc}
 80034b4:	08020124 	.word	0x08020124

080034b8 <_ZN19GameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreenPresenter() {};
 80034b8:	4770      	bx	lr

080034ba <_ZThn4_N19GameScreenPresenterD1Ev>:
 80034ba:	3804      	subs	r0, #4
 80034bc:	4770      	bx	lr

080034be <_ZN19GameScreenPresenter10deactivateEv>:
}

void GameScreenPresenter::activate()
{

}
 80034be:	4770      	bx	lr

080034c0 <_ZN19GameScreenPresenterD0Ev>:
 80034c0:	b510      	push	{r4, lr}
 80034c2:	2110      	movs	r1, #16
 80034c4:	4604      	mov	r4, r0
 80034c6:	f01a f8df 	bl	801d688 <_ZdlPvj>
 80034ca:	4620      	mov	r0, r4
 80034cc:	bd10      	pop	{r4, pc}

080034ce <_ZThn4_N19GameScreenPresenterD0Ev>:
 80034ce:	f1a0 0004 	sub.w	r0, r0, #4
 80034d2:	e7f5      	b.n	80034c0 <_ZN19GameScreenPresenterD0Ev>

080034d4 <_ZN19GameScreenPresenterC1ER14GameScreenView>:
    ModelListener() : model(0) {}
 80034d4:	2200      	movs	r2, #0
 80034d6:	6082      	str	r2, [r0, #8]
    : view(v)
 80034d8:	4a02      	ldr	r2, [pc, #8]	@ (80034e4 <_ZN19GameScreenPresenterC1ER14GameScreenView+0x10>)
 80034da:	6002      	str	r2, [r0, #0]
 80034dc:	3218      	adds	r2, #24
 80034de:	6042      	str	r2, [r0, #4]
 80034e0:	60c1      	str	r1, [r0, #12]
}
 80034e2:	4770      	bx	lr
 80034e4:	08020178 	.word	0x08020178

080034e8 <_ZN14GameScreenView14tearDownScreenEv>:
}

void GameScreenView::tearDownScreen()
{
    GameScreenViewBase::tearDownScreen();
}
 80034e8:	4770      	bx	lr
	...

080034ec <_ZN14GameScreenViewD1Ev>:

class GameScreenView : public GameScreenViewBase
{
public:
    GameScreenView();
    virtual ~GameScreenView() {}
 80034ec:	4b13      	ldr	r3, [pc, #76]	@ (800353c <_ZN14GameScreenViewD1Ev+0x50>)
 80034ee:	b570      	push	{r4, r5, r6, lr}
 80034f0:	4604      	mov	r4, r0
 80034f2:	6003      	str	r3, [r0, #0]
 80034f4:	f640 255c 	movw	r5, #2652	@ 0xa5c
 80034f8:	f640 06a4 	movw	r6, #2212	@ 0x8a4
 80034fc:	42b5      	cmp	r5, r6
 80034fe:	d117      	bne.n	8003530 <_ZN14GameScreenViewD1Ev+0x44>
 8003500:	f240 66ec 	movw	r6, #1772	@ 0x6ec
 8003504:	5963      	ldr	r3, [r4, r5]
 8003506:	1960      	adds	r0, r4, r5
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	3d2c      	subs	r5, #44	@ 0x2c
 800350c:	4798      	blx	r3
 800350e:	42b5      	cmp	r5, r6
 8003510:	d1f8      	bne.n	8003504 <_ZN14GameScreenViewD1Ev+0x18>
 8003512:	f240 65dc 	movw	r5, #1756	@ 0x6dc
 8003516:	5963      	ldr	r3, [r4, r5]
 8003518:	1960      	adds	r0, r4, r5
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	3d3c      	subs	r5, #60	@ 0x3c
 800351e:	4798      	blx	r3
 8003520:	f5b5 7f0b 	cmp.w	r5, #556	@ 0x22c
 8003524:	d1f7      	bne.n	8003516 <_ZN14GameScreenViewD1Ev+0x2a>
 8003526:	4620      	mov	r0, r4
 8003528:	f7ff fa07 	bl	800293a <_ZN18GameScreenViewBaseD1Ev>
 800352c:	4620      	mov	r0, r4
 800352e:	bd70      	pop	{r4, r5, r6, pc}
 8003530:	5963      	ldr	r3, [r4, r5]
 8003532:	1960      	adds	r0, r4, r5
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	4798      	blx	r3
 8003538:	3d2c      	subs	r5, #44	@ 0x2c
 800353a:	e7df      	b.n	80034fc <_ZN14GameScreenViewD1Ev+0x10>
 800353c:	080201a0 	.word	0x080201a0

08003540 <_ZN14GameScreenViewD0Ev>:
 8003540:	b510      	push	{r4, lr}
 8003542:	4604      	mov	r4, r0
 8003544:	f7ff ffd2 	bl	80034ec <_ZN14GameScreenViewD1Ev>
 8003548:	4620      	mov	r0, r4
 800354a:	f640 2188 	movw	r1, #2696	@ 0xa88
 800354e:	f01a f89b 	bl	801d688 <_ZdlPvj>
 8003552:	4620      	mov	r0, r4
 8003554:	bd10      	pop	{r4, pc}
	...

08003558 <_ZN14GameScreenViewC1Ev>:
GameScreenView::GameScreenView()
 8003558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800355c:	4605      	mov	r5, r0
 800355e:	b08d      	sub	sp, #52	@ 0x34
 8003560:	f7ff fb24 	bl	8002bac <_ZN18GameScreenViewBaseC1Ev>
 8003564:	f505 790f 	add.w	r9, r5, #572	@ 0x23c
 8003568:	4b65      	ldr	r3, [pc, #404]	@ (8003700 <_ZN14GameScreenViewC1Ev+0x1a8>)
 800356a:	602b      	str	r3, [r5, #0]
 800356c:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 8003570:	4669      	mov	r1, sp
 8003572:	4648      	mov	r0, r9
 8003574:	f8ad 8000 	strh.w	r8, [sp]
 8003578:	f7ff fa9a 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800357c:	f505 771a 	add.w	r7, r5, #616	@ 0x268
 8003580:	f8df b184 	ldr.w	fp, [pc, #388]	@ 8003708 <_ZN14GameScreenViewC1Ev+0x1b0>
 8003584:	f505 6ae3 	add.w	sl, r5, #1816	@ 0x718
 8003588:	463c      	mov	r4, r7
        : animationDoneAction(0),
 800358a:	2600      	movs	r6, #0
          running(false)
 800358c:	4620      	mov	r0, r4
 800358e:	4669      	mov	r1, sp
 8003590:	f8ad 8000 	strh.w	r8, [sp]
 8003594:	f7ff fa8c 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          updateTicksInterval(updateInterval),
 8003598:	2301      	movs	r3, #1
          running(false)
 800359a:	f8c4 b000 	str.w	fp, [r4]
        : animationDoneAction(0),
 800359e:	62e6      	str	r6, [r4, #44]	@ 0x2c
          startId(BITMAP_INVALID),
 80035a0:	f8a4 8030 	strh.w	r8, [r4, #48]	@ 0x30
          endId(BITMAP_INVALID),
 80035a4:	f8a4 8032 	strh.w	r8, [r4, #50]	@ 0x32
          updateTicksInterval(updateInterval),
 80035a8:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
          ticksSinceUpdate(0),
 80035ac:	f884 6035 	strb.w	r6, [r4, #53]	@ 0x35
          reverse(false),
 80035b0:	f884 6036 	strb.w	r6, [r4, #54]	@ 0x36
          loopAnimation(false),
 80035b4:	f884 6037 	strb.w	r6, [r4, #55]	@ 0x37
          running(false)
 80035b8:	f884 6038 	strb.w	r6, [r4, #56]	@ 0x38
 80035bc:	343c      	adds	r4, #60	@ 0x3c
 80035be:	4554      	cmp	r4, sl
 80035c0:	d1e4      	bne.n	800358c <_ZN14GameScreenViewC1Ev+0x34>
 80035c2:	f505 6a0d 	add.w	sl, r5, #2256	@ 0x8d0
 80035c6:	4626      	mov	r6, r4
 80035c8:	f64f 78ff 	movw	r8, #65535	@ 0xffff
 80035cc:	4630      	mov	r0, r6
 80035ce:	4669      	mov	r1, sp
 80035d0:	362c      	adds	r6, #44	@ 0x2c
 80035d2:	f8ad 8000 	strh.w	r8, [sp]
 80035d6:	f7ff fa6b 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035da:	4556      	cmp	r6, sl
 80035dc:	d1f6      	bne.n	80035cc <_ZN14GameScreenViewC1Ev+0x74>
 80035de:	4656      	mov	r6, sl
 80035e0:	f605 2888 	addw	r8, r5, #2696	@ 0xa88
 80035e4:	f64f 7bff 	movw	fp, #65535	@ 0xffff
 80035e8:	4630      	mov	r0, r6
 80035ea:	4669      	mov	r1, sp
 80035ec:	362c      	adds	r6, #44	@ 0x2c
 80035ee:	f8ad b000 	strh.w	fp, [sp]
 80035f2:	f7ff fa5d 	bl	8002ab0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80035f6:	4546      	cmp	r6, r8
 80035f8:	d1f6      	bne.n	80035e8 <_ZN14GameScreenViewC1Ev+0x90>
#define APPLICATION_USER_SRC_GAME_HPP_
#include "Ship.hpp"
#include "Bullet.hpp"
#include "Enemy.hpp"

class Game {
 80035fa:	4e42      	ldr	r6, [pc, #264]	@ (8003704 <_ZN14GameScreenViewC1Ev+0x1ac>)
	gameInstance = Game();
 80035fc:	4668      	mov	r0, sp
 80035fe:	f000 fbd9 	bl	8003db4 <_ZN4GameC1Ev>
 8003602:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8003606:	80b3      	strh	r3, [r6, #4]
const uint8_t IS_SHOWN = 1;
const uint8_t SHOULD_SHOW = 2;
const uint8_t IS_HIDDEN = 3;
const uint8_t SHOULD_HIDE = 4;

class Entity {
 8003608:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800360c:	9a03      	ldr	r2, [sp, #12]
 800360e:	83b3      	strh	r3, [r6, #28]

#include <BitmapDatabase.hpp>
#include <touchgfx/widgets/Image.hpp>
#include "Entity.hpp"

class Ship: public Entity {
 8003610:	9b08      	ldr	r3, [sp, #32]
 8003612:	60f2      	str	r2, [r6, #12]
 8003614:	6233      	str	r3, [r6, #32]
 8003616:	9a04      	ldr	r2, [sp, #16]
 8003618:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800361a:	6132      	str	r2, [r6, #16]
 800361c:	6273      	str	r3, [r6, #36]	@ 0x24
 800361e:	9a05      	ldr	r2, [sp, #20]
 8003620:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003622:	6172      	str	r2, [r6, #20]
     *
     * @param [in] d The Drawable to remove.
     */
    void remove(Drawable& d)
    {
        container.remove(d);
 8003624:	f105 0804 	add.w	r8, r5, #4
 8003628:	9a06      	ldr	r2, [sp, #24]
 800362a:	62b3      	str	r3, [r6, #40]	@ 0x28
 800362c:	4668      	mov	r0, sp
 800362e:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8003632:	61b2      	str	r2, [r6, #24]
 8003634:	85b3      	strh	r3, [r6, #44]	@ 0x2c
 8003636:	f000 fbcf 	bl	8003dd8 <_ZN4GameD1Ev>
 800363a:	4640      	mov	r0, r8
 800363c:	f505 71e2 	add.w	r1, r5, #452	@ 0x1c4
 8003640:	f005 ff6f 	bl	8009522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8003644:	4640      	mov	r0, r8
 8003646:	f505 71bc 	add.w	r1, r5, #376	@ 0x178
 800364a:	f005 ff6a 	bl	8009522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800364e:	230e      	movs	r3, #14
	shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
 8003650:	4669      	mov	r1, sp
 8003652:	4648      	mov	r0, r9
 8003654:	f8ad 3000 	strh.w	r3, [sp]
 8003658:	f007 fcc9 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	shipImage.setXY(gameInstance.ship.coordinateX, gameInstance.ship.coordinateY);
 800365c:	f9b6 200e 	ldrsh.w	r2, [r6, #14]
 8003660:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 8003664:	4648      	mov	r0, r9
 8003666:	f7ff f9f0 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
        container.add(d);
 800366a:	4640      	mov	r0, r8
 800366c:	4649      	mov	r1, r9
 800366e:	f005 ff17 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003672:	f04f 0804 	mov.w	r8, #4
		enemyBulletImage[i].setXY(321, 33);
 8003676:	f504 76dc 	add.w	r6, r4, #440	@ 0x1b8
 800367a:	2221      	movs	r2, #33	@ 0x21
 800367c:	4630      	mov	r0, r6
 800367e:	f240 1141 	movw	r1, #321	@ 0x141
 8003682:	f7ff f9e2 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
    enemyBulletImage[i].setBitmap(touchgfx::Bitmap(BITMAP_ENEMY_BULLET_RED_ID));
 8003686:	f8d4 31b8 	ldr.w	r3, [r4, #440]	@ 0x1b8
 800368a:	4630      	mov	r0, r6
 800368c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800368e:	f8ad 8000 	strh.w	r8, [sp]
 8003692:	4669      	mov	r1, sp
 8003694:	4798      	blx	r3
    shipBulletImage[i].setXY(321, 33);
 8003696:	4620      	mov	r0, r4
 8003698:	2221      	movs	r2, #33	@ 0x21
 800369a:	f240 1141 	movw	r1, #321	@ 0x141
 800369e:	f7ff f9d4 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
    shipBulletImage[i].setBitmap(touchgfx::Bitmap(BITMAP_BULLET_DOUBLE_ID));
 80036a2:	6823      	ldr	r3, [r4, #0]
 80036a4:	2600      	movs	r6, #0
 80036a6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80036a8:	f8ad 6000 	strh.w	r6, [sp]
 80036ac:	4620      	mov	r0, r4
 80036ae:	4669      	mov	r1, sp
	for(int i=0;i<MAX_BULLET;i++) {
 80036b0:	342c      	adds	r4, #44	@ 0x2c
    shipBulletImage[i].setBitmap(touchgfx::Bitmap(BITMAP_BULLET_DOUBLE_ID));
 80036b2:	4798      	blx	r3
	for(int i=0;i<MAX_BULLET;i++) {
 80036b4:	4554      	cmp	r4, sl
 80036b6:	d1de      	bne.n	8003676 <_ZN14GameScreenViewC1Ev+0x11e>
	for(int i=0;i<MAX_ENEMY;i++) {
 80036b8:	4634      	mov	r4, r6
		switch(i%3) {
 80036ba:	2603      	movs	r6, #3
 80036bc:	fbb4 f3f6 	udiv	r3, r4, r6
 80036c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80036c4:	1ae3      	subs	r3, r4, r3
 80036c6:	2b01      	cmp	r3, #1
 80036c8:	d013      	beq.n	80036f2 <_ZN14GameScreenViewC1Ev+0x19a>
 80036ca:	2b02      	cmp	r3, #2
 80036cc:	d014      	beq.n	80036f8 <_ZN14GameScreenViewC1Ev+0x1a0>
			enemyImage[i].setBitmaps(BITMAP_ENEMY_GREEN_01_ID, BITMAP_ENEMY_GREEN_02_ID);
 80036ce:	2207      	movs	r2, #7
 80036d0:	2106      	movs	r1, #6
			enemyImage[i].setBitmaps(BITMAP_ENEMY_YELLOW_01_ID, BITMAP_ENEMY_YELLOW_02_ID);
 80036d2:	4638      	mov	r0, r7
 80036d4:	f007 f9d6 	bl	800aa84 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
	for(int i=0;i<MAX_ENEMY;i++) {
 80036d8:	3401      	adds	r4, #1
		enemyImage[i].setUpdateTicksInterval(20);
 80036da:	4638      	mov	r0, r7
 80036dc:	2114      	movs	r1, #20
 80036de:	f007 f9e4 	bl	800aaaa <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
	for(int i=0;i<MAX_ENEMY;i++) {
 80036e2:	2c14      	cmp	r4, #20
 80036e4:	f107 073c 	add.w	r7, r7, #60	@ 0x3c
 80036e8:	d1e8      	bne.n	80036bc <_ZN14GameScreenViewC1Ev+0x164>
}
 80036ea:	4628      	mov	r0, r5
 80036ec:	b00d      	add	sp, #52	@ 0x34
 80036ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			enemyImage[i].setBitmaps(BITMAP_ENEMY_RED_01_ID, BITMAP_ENEMY_RED_02_ID);
 80036f2:	2209      	movs	r2, #9
 80036f4:	2108      	movs	r1, #8
 80036f6:	e7ec      	b.n	80036d2 <_ZN14GameScreenViewC1Ev+0x17a>
			enemyImage[i].setBitmaps(BITMAP_ENEMY_YELLOW_01_ID, BITMAP_ENEMY_YELLOW_02_ID);
 80036f8:	220b      	movs	r2, #11
 80036fa:	210a      	movs	r1, #10
 80036fc:	e7e9      	b.n	80036d2 <_ZN14GameScreenViewC1Ev+0x17a>
 80036fe:	bf00      	nop
 8003700:	080201a0 	.word	0x080201a0
 8003704:	200024f0 	.word	0x200024f0
 8003708:	08020418 	.word	0x08020418

0800370c <_ZN14GameScreenView15handleTickEventEv>:

// Render game objects
void GameScreenView::handleTickEvent() {
	GameScreenViewBase::handleTickEvent();

	if(shouldEndGame && shouldStopTask && !shouldStopScreen) {
 800370c:	4bc5      	ldr	r3, [pc, #788]	@ (8003a24 <_ZN14GameScreenView15handleTickEventEv+0x318>)
 800370e:	781b      	ldrb	r3, [r3, #0]
void GameScreenView::handleTickEvent() {
 8003710:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003714:	4ec4      	ldr	r6, [pc, #784]	@ (8003a28 <_ZN14GameScreenView15handleTickEventEv+0x31c>)
 8003716:	4604      	mov	r4, r0
	if(shouldEndGame && shouldStopTask && !shouldStopScreen) {
 8003718:	b343      	cbz	r3, 800376c <_ZN14GameScreenView15handleTickEventEv+0x60>
 800371a:	4bc4      	ldr	r3, [pc, #784]	@ (8003a2c <_ZN14GameScreenView15handleTickEventEv+0x320>)
 800371c:	781b      	ldrb	r3, [r3, #0]
 800371e:	b32b      	cbz	r3, 800376c <_ZN14GameScreenView15handleTickEventEv+0x60>
 8003720:	f8df 8330 	ldr.w	r8, [pc, #816]	@ 8003a54 <_ZN14GameScreenView15handleTickEventEv+0x348>
 8003724:	f898 3000 	ldrb.w	r3, [r8]
 8003728:	bb03      	cbnz	r3, 800376c <_ZN14GameScreenView15handleTickEventEv+0x60>
		add(menu_button);
 800372a:	f500 75e2 	add.w	r5, r0, #452	@ 0x1c4
 800372e:	1d07      	adds	r7, r0, #4
 8003730:	4629      	mov	r1, r5
 8003732:	4638      	mov	r0, r7
 8003734:	f005 feb4 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
		Unicode::snprintf(score_holderBuffer, SCORE_HOLDER_SIZE, "%d", gameInstance.score);
		add(score_holder);
 8003738:	f504 79bc 	add.w	r9, r4, #376	@ 0x178
		Unicode::snprintf(score_holderBuffer, SCORE_HOLDER_SIZE, "%d", gameInstance.score);
 800373c:	88b3      	ldrh	r3, [r6, #4]
 800373e:	4abc      	ldr	r2, [pc, #752]	@ (8003a30 <_ZN14GameScreenView15handleTickEventEv+0x324>)
 8003740:	210a      	movs	r1, #10
 8003742:	f204 2016 	addw	r0, r4, #534	@ 0x216
 8003746:	f00c fa8d 	bl	800fc64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800374a:	4649      	mov	r1, r9
 800374c:	4638      	mov	r0, r7
 800374e:	f005 fea7 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
		menu_button.invalidate();
 8003752:	4628      	mov	r0, r5
 8003754:	f00a fb40 	bl	800ddd8 <_ZNK8touchgfx8Drawable10invalidateEv>
		score_holder.invalidate();
 8003758:	4648      	mov	r0, r9
 800375a:	f00a fb3d 	bl	800ddd8 <_ZNK8touchgfx8Drawable10invalidateEv>
		shouldStopScreen = true;
 800375e:	2301      	movs	r3, #1
 8003760:	f888 3000 	strb.w	r3, [r8]
    osThreadTerminate(gameTaskHandle);
 8003764:	4bb3      	ldr	r3, [pc, #716]	@ (8003a34 <_ZN14GameScreenView15handleTickEventEv+0x328>)
 8003766:	6818      	ldr	r0, [r3, #0]
 8003768:	f003 fd2a 	bl	80071c0 <osThreadTerminate>
	}

	// Get input
	uint8_t res = 0;
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800376c:	4fb2      	ldr	r7, [pc, #712]	@ (8003a38 <_ZN14GameScreenView15handleTickEventEv+0x32c>)
 800376e:	f8df 82e8 	ldr.w	r8, [pc, #744]	@ 8003a58 <_ZN14GameScreenView15handleTickEventEv+0x34c>
 8003772:	6838      	ldr	r0, [r7, #0]
	uint8_t res = 0;
 8003774:	f04f 0900 	mov.w	r9, #0
 8003778:	f88d 9003 	strb.w	r9, [sp, #3]
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800377c:	f003 fe88 	bl	8007490 <osMessageQueueGetCount>
	if(count > 0) {
 8003780:	f504 750f 	add.w	r5, r4, #572	@ 0x23c
 8003784:	b1e0      	cbz	r0, 80037c0 <_ZN14GameScreenView15handleTickEventEv+0xb4>
			osMessageQueueGet(Queue1Handle,&res, NULL, osWaitForever);
 8003786:	f04f 33ff 	mov.w	r3, #4294967295
 800378a:	6838      	ldr	r0, [r7, #0]
 800378c:	464a      	mov	r2, r9
 800378e:	f10d 0103 	add.w	r1, sp, #3
 8003792:	f003 fe4d 	bl	8007430 <osMessageQueueGet>
			if(res == 'R') {
 8003796:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800379a:	2b52      	cmp	r3, #82	@ 0x52
 800379c:	f040 80fc 	bne.w	8003998 <_ZN14GameScreenView15handleTickEventEv+0x28c>
				gameInstance.ship.updateVelocityX(gameInstance.ship.VELOCITY);
 80037a0:	f9b6 1028 	ldrsh.w	r1, [r6, #40]	@ 0x28
 80037a4:	48a5      	ldr	r0, [pc, #660]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 80037a6:	f000 fb97 	bl	8003ed8 <_ZN4Ship15updateVelocityXEs>
 80037aa:	230f      	movs	r3, #15
				shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_RIGHT_ID));
 80037ac:	4628      	mov	r0, r5
 80037ae:	a901      	add	r1, sp, #4
 80037b0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80037b4:	f007 fc1b 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
				osMessageQueueReset(Queue2Handle);
 80037b8:	f8d8 0000 	ldr.w	r0, [r8]
 80037bc:	f003 fe6a 	bl	8007494 <osMessageQueueReset>
			} else if(res == 'N'){
				gameInstance.ship.updateVelocityX(0);
				shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
			}
	}
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 80037c0:	f8d8 0000 	ldr.w	r0, [r8]
 80037c4:	f003 fe64 	bl	8007490 <osMessageQueueGetCount>
	if(count2 > 0) {
 80037c8:	b1e8      	cbz	r0, 8003806 <_ZN14GameScreenView15handleTickEventEv+0xfa>
			osMessageQueueGet(Queue2Handle,&res, NULL, osWaitForever);
 80037ca:	f04f 33ff 	mov.w	r3, #4294967295
 80037ce:	f8d8 0000 	ldr.w	r0, [r8]
 80037d2:	2200      	movs	r2, #0
 80037d4:	f10d 0103 	add.w	r1, sp, #3
 80037d8:	f003 fe2a 	bl	8007430 <osMessageQueueGet>
			if(res == 'L') {
 80037dc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80037e0:	2b4c      	cmp	r3, #76	@ 0x4c
 80037e2:	f040 80e8 	bne.w	80039b6 <_ZN14GameScreenView15handleTickEventEv+0x2aa>
				gameInstance.ship.updateVelocityX(-gameInstance.ship.VELOCITY);
 80037e6:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 80037e8:	4894      	ldr	r0, [pc, #592]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 80037ea:	4249      	negs	r1, r1
 80037ec:	b209      	sxth	r1, r1
 80037ee:	f000 fb73 	bl	8003ed8 <_ZN4Ship15updateVelocityXEs>
 80037f2:	230d      	movs	r3, #13
				shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_LEFT_ID));
 80037f4:	4628      	mov	r0, r5
 80037f6:	a901      	add	r1, sp, #4
 80037f8:	f8ad 3004 	strh.w	r3, [sp, #4]
 80037fc:	f007 fbf7 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
				osMessageQueueReset(Queue1Handle);
 8003800:	6838      	ldr	r0, [r7, #0]
 8003802:	f003 fe47 	bl	8007494 <osMessageQueueReset>
				gameInstance.ship.updateVelocityX(0);
				shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
			}
	}

	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8003806:	4f8e      	ldr	r7, [pc, #568]	@ (8003a40 <_ZN14GameScreenView15handleTickEventEv+0x334>)
 8003808:	f8df 8250 	ldr.w	r8, [pc, #592]	@ 8003a5c <_ZN14GameScreenView15handleTickEventEv+0x350>
 800380c:	6838      	ldr	r0, [r7, #0]
 800380e:	f003 fe3f 	bl	8007490 <osMessageQueueGetCount>
	if(count3 > 0) {
 8003812:	b1a8      	cbz	r0, 8003840 <_ZN14GameScreenView15handleTickEventEv+0x134>
			osMessageQueueGet(Queue3Handle,&res, NULL, osWaitForever);
 8003814:	f04f 33ff 	mov.w	r3, #4294967295
 8003818:	6838      	ldr	r0, [r7, #0]
 800381a:	2200      	movs	r2, #0
 800381c:	f10d 0103 	add.w	r1, sp, #3
 8003820:	f003 fe06 	bl	8007430 <osMessageQueueGet>
			if(res == 'U') {
 8003824:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003828:	2b55      	cmp	r3, #85	@ 0x55
 800382a:	f040 80d3 	bne.w	80039d4 <_ZN14GameScreenView15handleTickEventEv+0x2c8>
				gameInstance.ship.updateVelocityY(gameInstance.ship.VELOCITY);
 800382e:	4883      	ldr	r0, [pc, #524]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 8003830:	f9b6 1028 	ldrsh.w	r1, [r6, #40]	@ 0x28
 8003834:	f000 fb52 	bl	8003edc <_ZN4Ship15updateVelocityYEs>
				osMessageQueueReset(Queue4Handle);
 8003838:	f8d8 0000 	ldr.w	r0, [r8]
 800383c:	f003 fe2a 	bl	8007494 <osMessageQueueReset>
			} else if(res == 'N'){
				gameInstance.ship.updateVelocityY(0);
			}
	}

	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8003840:	f8d8 0000 	ldr.w	r0, [r8]
 8003844:	f003 fe24 	bl	8007490 <osMessageQueueGetCount>
	if(count4 > 0) {
 8003848:	b1b0      	cbz	r0, 8003878 <_ZN14GameScreenView15handleTickEventEv+0x16c>
			osMessageQueueGet(Queue4Handle,&res, NULL, osWaitForever);
 800384a:	f04f 33ff 	mov.w	r3, #4294967295
 800384e:	f8d8 0000 	ldr.w	r0, [r8]
 8003852:	2200      	movs	r2, #0
 8003854:	f10d 0103 	add.w	r1, sp, #3
 8003858:	f003 fdea 	bl	8007430 <osMessageQueueGet>
			if(res == 'D') {
 800385c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003860:	2b44      	cmp	r3, #68	@ 0x44
 8003862:	f040 80bf 	bne.w	80039e4 <_ZN14GameScreenView15handleTickEventEv+0x2d8>
				gameInstance.ship.updateVelocityY(-gameInstance.ship.VELOCITY);
 8003866:	6ab1      	ldr	r1, [r6, #40]	@ 0x28
 8003868:	4874      	ldr	r0, [pc, #464]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 800386a:	4249      	negs	r1, r1
 800386c:	b209      	sxth	r1, r1
 800386e:	f000 fb35 	bl	8003edc <_ZN4Ship15updateVelocityYEs>
				osMessageQueueReset(Queue3Handle);
 8003872:	6838      	ldr	r0, [r7, #0]
 8003874:	f003 fe0e 	bl	8007494 <osMessageQueueReset>
				gameInstance.ship.updateVelocityY(0);
			}
	}

	// update player position and sprite
	shipImage.moveTo(gameInstance.ship.coordinateX, gameInstance.ship.coordinateY);
 8003878:	4628      	mov	r0, r5
 800387a:	f9b6 200e 	ldrsh.w	r2, [r6, #14]
 800387e:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 8003882:	4f70      	ldr	r7, [pc, #448]	@ (8003a44 <_ZN14GameScreenView15handleTickEventEv+0x338>)
 8003884:	f7fe fc8c 	bl	80021a0 <_ZN8touchgfx8Drawable6moveToEss>

	// render ship bullet
	for(int i=0; i<MAX_BULLET;i++) {
 8003888:	f504 65e3 	add.w	r5, r4, #1816	@ 0x718
 800388c:	46a0      	mov	r8, r4
 800388e:	f504 6a0d 	add.w	sl, r4, #2256	@ 0x8d0
 8003892:	f104 0904 	add.w	r9, r4, #4
		switch(shipBullet[i].displayStatus){
 8003896:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800389a:	2b02      	cmp	r3, #2
 800389c:	f000 80aa 	beq.w	80039f4 <_ZN14GameScreenView15handleTickEventEv+0x2e8>
 80038a0:	2b04      	cmp	r3, #4
 80038a2:	f000 80b8 	beq.w	8003a16 <_ZN14GameScreenView15handleTickEventEv+0x30a>
 80038a6:	2b01      	cmp	r3, #1
 80038a8:	d107      	bne.n	80038ba <_ZN14GameScreenView15handleTickEventEv+0x1ae>
		case IS_HIDDEN:
			break;
		case IS_SHOWN:
			shipBulletImage[i].moveTo(shipBullet[i].coordinateX, shipBullet[i].coordinateY);
 80038aa:	682b      	ldr	r3, [r5, #0]
 80038ac:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80038b0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80038b2:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 80038b6:	4628      	mov	r0, r5
 80038b8:	4798      	blx	r3
	for(int i=0; i<MAX_BULLET;i++) {
 80038ba:	352c      	adds	r5, #44	@ 0x2c
 80038bc:	4555      	cmp	r5, sl
 80038be:	f107 071c 	add.w	r7, r7, #28
 80038c2:	d1e8      	bne.n	8003896 <_ZN14GameScreenView15handleTickEventEv+0x18a>
 80038c4:	4f60      	ldr	r7, [pc, #384]	@ (8003a48 <_ZN14GameScreenView15handleTickEventEv+0x33c>)
 80038c6:	f604 2a88 	addw	sl, r4, #2696	@ 0xa88
 80038ca:	f104 0904 	add.w	r9, r4, #4
		}
	}

	// render enemy bullet
	for(int i=0; i<MAX_BULLET;i++) {
		switch(enemyBullet[i].displayStatus){
 80038ce:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 80038d2:	2b02      	cmp	r3, #2
 80038d4:	f000 80c4 	beq.w	8003a60 <_ZN14GameScreenView15handleTickEventEv+0x354>
 80038d8:	2b04      	cmp	r3, #4
 80038da:	f000 80d2 	beq.w	8003a82 <_ZN14GameScreenView15handleTickEventEv+0x376>
 80038de:	2b01      	cmp	r3, #1
 80038e0:	d107      	bne.n	80038f2 <_ZN14GameScreenView15handleTickEventEv+0x1e6>
		case IS_HIDDEN:
			break;
		case IS_SHOWN:
			enemyBulletImage[i].moveTo(enemyBullet[i].coordinateX, enemyBullet[i].coordinateY);
 80038e2:	682b      	ldr	r3, [r5, #0]
 80038e4:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80038e8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80038ea:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 80038ee:	4628      	mov	r0, r5
 80038f0:	4798      	blx	r3
	for(int i=0; i<MAX_BULLET;i++) {
 80038f2:	352c      	adds	r5, #44	@ 0x2c
 80038f4:	4555      	cmp	r5, sl
 80038f6:	f107 071c 	add.w	r7, r7, #28
 80038fa:	d1e8      	bne.n	80038ce <_ZN14GameScreenView15handleTickEventEv+0x1c2>
 80038fc:	4d53      	ldr	r5, [pc, #332]	@ (8003a4c <_ZN14GameScreenView15handleTickEventEv+0x340>)
 80038fe:	f504 771a 	add.w	r7, r4, #616	@ 0x268
 8003902:	f504 6a96 	add.w	sl, r4, #1200	@ 0x4b0
 8003906:	f104 0904 	add.w	r9, r4, #4
		}
	}

	// render enemy
	for(int i=0; i<MAX_ENEMY;i++) {
		switch(enemy[i].displayStatus){
 800390a:	f9b5 3010 	ldrsh.w	r3, [r5, #16]
 800390e:	2b02      	cmp	r3, #2
 8003910:	f000 80bd 	beq.w	8003a8e <_ZN14GameScreenView15handleTickEventEv+0x382>
 8003914:	2b04      	cmp	r3, #4
 8003916:	f000 80d5 	beq.w	8003ac4 <_ZN14GameScreenView15handleTickEventEv+0x3b8>
 800391a:	2b01      	cmp	r3, #1
 800391c:	d108      	bne.n	8003930 <_ZN14GameScreenView15handleTickEventEv+0x224>
		case IS_SHOWN:
			enemyImage[i].moveTo(enemy[i].coordinateX, enemy[i].coordinateY);
 800391e:	f8d8 3268 	ldr.w	r3, [r8, #616]	@ 0x268
 8003922:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8003926:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003928:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
 800392c:	4638      	mov	r0, r7
 800392e:	4798      	blx	r3
	for(int i=0; i<MAX_ENEMY;i++) {
 8003930:	f108 083c 	add.w	r8, r8, #60	@ 0x3c
 8003934:	45d0      	cmp	r8, sl
 8003936:	f105 0520 	add.w	r5, r5, #32
 800393a:	f107 073c 	add.w	r7, r7, #60	@ 0x3c
 800393e:	d1e4      	bne.n	800390a <_ZN14GameScreenView15handleTickEventEv+0x1fe>
			break;
		}
	}

	// check if player is out of health and should end game
	if(gameInstance.ship.lives != hearts) {
 8003940:	4a43      	ldr	r2, [pc, #268]	@ (8003a50 <_ZN14GameScreenView15handleTickEventEv+0x344>)
 8003942:	f9b6 302c 	ldrsh.w	r3, [r6, #44]	@ 0x2c
 8003946:	7811      	ldrb	r1, [r2, #0]
 8003948:	428b      	cmp	r3, r1
 800394a:	f104 0504 	add.w	r5, r4, #4
 800394e:	d016      	beq.n	800397e <_ZN14GameScreenView15handleTickEventEv+0x272>
		hearts = gameInstance.ship.lives;
 8003950:	b2db      	uxtb	r3, r3
 8003952:	7013      	strb	r3, [r2, #0]
        alpha = newAlpha;
 8003954:	2250      	movs	r2, #80	@ 0x50
 8003956:	f884 20c0 	strb.w	r2, [r4, #192]	@ 0xc0
 800395a:	f884 20ec 	strb.w	r2, [r4, #236]	@ 0xec
 800395e:	f884 2094 	strb.w	r2, [r4, #148]	@ 0x94
		// reset hearts
		heart_03.setAlpha(80);
		heart_02.setAlpha(80);
		heart_01.setAlpha(80);
		if(hearts >= 1) heart_03.setAlpha(255);
 8003962:	2b00      	cmp	r3, #0
 8003964:	f000 80b9 	beq.w	8003ada <_ZN14GameScreenView15handleTickEventEv+0x3ce>
 8003968:	22ff      	movs	r2, #255	@ 0xff
		if(hearts >= 2) heart_02.setAlpha(255);
 800396a:	2b01      	cmp	r3, #1
 800396c:	f884 20c0 	strb.w	r2, [r4, #192]	@ 0xc0
 8003970:	d005      	beq.n	800397e <_ZN14GameScreenView15handleTickEventEv+0x272>
		if(hearts >= 3) heart_01.setAlpha(255);
 8003972:	2b02      	cmp	r3, #2
 8003974:	f884 20ec 	strb.w	r2, [r4, #236]	@ 0xec
 8003978:	bf18      	it	ne
 800397a:	f884 2094 	strbne.w	r2, [r4, #148]	@ 0x94
			shouldStopTask = true;
			invalidate();
		}
	}

	Unicode::snprintf(score_boardBuffer, SCORE_BOARD_SIZE, "%d", gameInstance.score);
 800397e:	88b3      	ldrh	r3, [r6, #4]
 8003980:	4a2b      	ldr	r2, [pc, #172]	@ (8003a30 <_ZN14GameScreenView15handleTickEventEv+0x324>)
 8003982:	2105      	movs	r1, #5
 8003984:	f504 7003 	add.w	r0, r4, #524	@ 0x20c
 8003988:	f00c f96c 	bl	800fc64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        container.invalidate();
 800398c:	4628      	mov	r0, r5
 800398e:	f00a fa23 	bl	800ddd8 <_ZNK8touchgfx8Drawable10invalidateEv>
	invalidate();
}
 8003992:	b003      	add	sp, #12
 8003994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			} else if(res == 'N'){
 8003998:	2b4e      	cmp	r3, #78	@ 0x4e
 800399a:	f47f af11 	bne.w	80037c0 <_ZN14GameScreenView15handleTickEventEv+0xb4>
				gameInstance.ship.updateVelocityX(0);
 800399e:	4649      	mov	r1, r9
 80039a0:	4826      	ldr	r0, [pc, #152]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 80039a2:	f000 fa99 	bl	8003ed8 <_ZN4Ship15updateVelocityXEs>
 80039a6:	230e      	movs	r3, #14
				shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
 80039a8:	a901      	add	r1, sp, #4
 80039aa:	4628      	mov	r0, r5
 80039ac:	f8ad 3004 	strh.w	r3, [sp, #4]
 80039b0:	f007 fb1d 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80039b4:	e704      	b.n	80037c0 <_ZN14GameScreenView15handleTickEventEv+0xb4>
			} else if(res == 'N'){
 80039b6:	2b4e      	cmp	r3, #78	@ 0x4e
 80039b8:	f47f af25 	bne.w	8003806 <_ZN14GameScreenView15handleTickEventEv+0xfa>
				gameInstance.ship.updateVelocityX(0);
 80039bc:	481f      	ldr	r0, [pc, #124]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 80039be:	2100      	movs	r1, #0
 80039c0:	f000 fa8a 	bl	8003ed8 <_ZN4Ship15updateVelocityXEs>
 80039c4:	230e      	movs	r3, #14
				shipImage.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
 80039c6:	a901      	add	r1, sp, #4
 80039c8:	4628      	mov	r0, r5
 80039ca:	f8ad 3004 	strh.w	r3, [sp, #4]
 80039ce:	f007 fb0e 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80039d2:	e718      	b.n	8003806 <_ZN14GameScreenView15handleTickEventEv+0xfa>
			} else if(res == 'N'){
 80039d4:	2b4e      	cmp	r3, #78	@ 0x4e
 80039d6:	f47f af33 	bne.w	8003840 <_ZN14GameScreenView15handleTickEventEv+0x134>
				gameInstance.ship.updateVelocityY(0);
 80039da:	4818      	ldr	r0, [pc, #96]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 80039dc:	2100      	movs	r1, #0
 80039de:	f000 fa7d 	bl	8003edc <_ZN4Ship15updateVelocityYEs>
 80039e2:	e72d      	b.n	8003840 <_ZN14GameScreenView15handleTickEventEv+0x134>
			} else if(res == 'N'){
 80039e4:	2b4e      	cmp	r3, #78	@ 0x4e
 80039e6:	f47f af47 	bne.w	8003878 <_ZN14GameScreenView15handleTickEventEv+0x16c>
				gameInstance.ship.updateVelocityY(0);
 80039ea:	4814      	ldr	r0, [pc, #80]	@ (8003a3c <_ZN14GameScreenView15handleTickEventEv+0x330>)
 80039ec:	2100      	movs	r1, #0
 80039ee:	f000 fa75 	bl	8003edc <_ZN4Ship15updateVelocityYEs>
 80039f2:	e741      	b.n	8003878 <_ZN14GameScreenView15handleTickEventEv+0x16c>
			shipBulletImage[i].moveTo(shipBullet[i].coordinateX, shipBullet[i].coordinateY);
 80039f4:	682b      	ldr	r3, [r5, #0]
 80039f6:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80039fa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039fc:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8003a00:	4628      	mov	r0, r5
 8003a02:	4798      	blx	r3
        container.add(d);
 8003a04:	4629      	mov	r1, r5
 8003a06:	4648      	mov	r0, r9
 8003a08:	f005 fd4a 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			shipBullet[i].updateDisplayStatus(IS_SHOWN);
 8003a0c:	2101      	movs	r1, #1
			shipBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003a0e:	4638      	mov	r0, r7
 8003a10:	f000 f9a6 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
			break;
 8003a14:	e751      	b.n	80038ba <_ZN14GameScreenView15handleTickEventEv+0x1ae>
        container.remove(d);
 8003a16:	4629      	mov	r1, r5
 8003a18:	4648      	mov	r0, r9
 8003a1a:	f005 fd82 	bl	8009522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
			shipBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003a1e:	2103      	movs	r1, #3
 8003a20:	e7f5      	b.n	8003a0e <_ZN14GameScreenView15handleTickEventEv+0x302>
 8003a22:	bf00      	nop
 8003a24:	20002036 	.word	0x20002036
 8003a28:	200024f0 	.word	0x200024f0
 8003a2c:	20002035 	.word	0x20002035
 8003a30:	0801f37f 	.word	0x0801f37f
 8003a34:	20002030 	.word	0x20002030
 8003a38:	20001cd8 	.word	0x20001cd8
 8003a3c:	200024f8 	.word	0x200024f8
 8003a40:	20001cd0 	.word	0x20001cd0
 8003a44:	200023d8 	.word	0x200023d8
 8003a48:	200022c0 	.word	0x200022c0
 8003a4c:	20002040 	.word	0x20002040
 8003a50:	20000014 	.word	0x20000014
 8003a54:	2000202c 	.word	0x2000202c
 8003a58:	20001cd4 	.word	0x20001cd4
 8003a5c:	20001ccc 	.word	0x20001ccc
			enemyBulletImage[i].moveTo(enemyBullet[i].coordinateX, enemyBullet[i].coordinateY);
 8003a60:	682b      	ldr	r3, [r5, #0]
 8003a62:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8003a66:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a68:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8003a6c:	4628      	mov	r0, r5
 8003a6e:	4798      	blx	r3
        container.add(d);
 8003a70:	4629      	mov	r1, r5
 8003a72:	4648      	mov	r0, r9
 8003a74:	f005 fd14 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			enemyBullet[i].updateDisplayStatus(IS_SHOWN);
 8003a78:	2101      	movs	r1, #1
			enemyBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003a7a:	4638      	mov	r0, r7
 8003a7c:	f000 f970 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
			break;
 8003a80:	e737      	b.n	80038f2 <_ZN14GameScreenView15handleTickEventEv+0x1e6>
        container.remove(d);
 8003a82:	4629      	mov	r1, r5
 8003a84:	4648      	mov	r0, r9
 8003a86:	f005 fd4c 	bl	8009522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
			enemyBullet[i].updateDisplayStatus(IS_HIDDEN);
 8003a8a:	2103      	movs	r1, #3
 8003a8c:	e7f5      	b.n	8003a7a <_ZN14GameScreenView15handleTickEventEv+0x36e>
			enemyImage[i].moveTo(enemy[i].coordinateX, enemy[i].coordinateY);
 8003a8e:	f8d8 3268 	ldr.w	r3, [r8, #616]	@ 0x268
 8003a92:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8003a96:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a98:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
 8003a9c:	4638      	mov	r0, r7
 8003a9e:	4798      	blx	r3
			enemyImage[i].startAnimation(false, true, true);
 8003aa0:	f8d8 3268 	ldr.w	r3, [r8, #616]	@ 0x268
 8003aa4:	f8d3 b064 	ldr.w	fp, [r3, #100]	@ 0x64
 8003aa8:	2301      	movs	r3, #1
 8003aaa:	461a      	mov	r2, r3
 8003aac:	2100      	movs	r1, #0
 8003aae:	4638      	mov	r0, r7
 8003ab0:	47d8      	blx	fp
        container.add(d);
 8003ab2:	4639      	mov	r1, r7
 8003ab4:	4648      	mov	r0, r9
 8003ab6:	f005 fcf3 	bl	80094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			enemy[i].updateDisplayStatus(IS_SHOWN);
 8003aba:	2101      	movs	r1, #1
			enemy[i].updateDisplayStatus(IS_HIDDEN);
 8003abc:	4628      	mov	r0, r5
 8003abe:	f000 f94f 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
			break;
 8003ac2:	e735      	b.n	8003930 <_ZN14GameScreenView15handleTickEventEv+0x224>
			enemyImage[i].stopAnimation();
 8003ac4:	f8d8 3268 	ldr.w	r3, [r8, #616]	@ 0x268
 8003ac8:	4638      	mov	r0, r7
 8003aca:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003acc:	4798      	blx	r3
        container.remove(d);
 8003ace:	4639      	mov	r1, r7
 8003ad0:	4648      	mov	r0, r9
 8003ad2:	f005 fd26 	bl	8009522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
			enemy[i].updateDisplayStatus(IS_HIDDEN);
 8003ad6:	2103      	movs	r1, #3
 8003ad8:	e7f0      	b.n	8003abc <_ZN14GameScreenView15handleTickEventEv+0x3b0>
			shouldStopTask = true;
 8003ada:	4b03      	ldr	r3, [pc, #12]	@ (8003ae8 <_ZN14GameScreenView15handleTickEventEv+0x3dc>)
 8003adc:	2201      	movs	r2, #1
        container.invalidate();
 8003ade:	4628      	mov	r0, r5
 8003ae0:	701a      	strb	r2, [r3, #0]
 8003ae2:	f00a f979 	bl	800ddd8 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ae6:	e74a      	b.n	800397e <_ZN14GameScreenView15handleTickEventEv+0x272>
 8003ae8:	20002035 	.word	0x20002035

08003aec <_ZN14GameScreenView11setupScreenEv>:
{
 8003aec:	b510      	push	{r4, lr}
  osThreadTerminate(gameTaskHandle);
 8003aee:	4c11      	ldr	r4, [pc, #68]	@ (8003b34 <_ZN14GameScreenView11setupScreenEv+0x48>)
{
 8003af0:	b08a      	sub	sp, #40	@ 0x28
	GameScreenViewBase::setupScreen();
 8003af2:	f7fe ff23 	bl	800293c <_ZN18GameScreenViewBase11setupScreenEv>
  osThreadTerminate(gameTaskHandle);
 8003af6:	6820      	ldr	r0, [r4, #0]
 8003af8:	f003 fb62 	bl	80071c0 <osThreadTerminate>
	const osThreadAttr_t gameTask_attributes = {
 8003afc:	2220      	movs	r2, #32
 8003afe:	2100      	movs	r1, #0
 8003b00:	a802      	add	r0, sp, #8
 8003b02:	f019 fff6 	bl	801daf2 <memset>
 8003b06:	4b0c      	ldr	r3, [pc, #48]	@ (8003b38 <_ZN14GameScreenView11setupScreenEv+0x4c>)
 8003b08:	9301      	str	r3, [sp, #4]
 8003b0a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8003b0e:	2318      	movs	r3, #24
 8003b10:	e9cd 2306 	strd	r2, r3, [sp, #24]
	gameTaskHandle = osThreadNew(gameTask, NULL, &gameTask_attributes);
 8003b14:	2100      	movs	r1, #0
 8003b16:	aa01      	add	r2, sp, #4
 8003b18:	4808      	ldr	r0, [pc, #32]	@ (8003b3c <_ZN14GameScreenView11setupScreenEv+0x50>)
 8003b1a:	f003 fb0d 	bl	8007138 <osThreadNew>
	shouldEndGame = false;
 8003b1e:	4a08      	ldr	r2, [pc, #32]	@ (8003b40 <_ZN14GameScreenView11setupScreenEv+0x54>)
	gameTaskHandle = osThreadNew(gameTask, NULL, &gameTask_attributes);
 8003b20:	6020      	str	r0, [r4, #0]
	shouldEndGame = false;
 8003b22:	2300      	movs	r3, #0
 8003b24:	7013      	strb	r3, [r2, #0]
	shouldStopTask = false;
 8003b26:	4a07      	ldr	r2, [pc, #28]	@ (8003b44 <_ZN14GameScreenView11setupScreenEv+0x58>)
 8003b28:	7013      	strb	r3, [r2, #0]
	shouldStopScreen = false;
 8003b2a:	4a07      	ldr	r2, [pc, #28]	@ (8003b48 <_ZN14GameScreenView11setupScreenEv+0x5c>)
 8003b2c:	7013      	strb	r3, [r2, #0]
}
 8003b2e:	b00a      	add	sp, #40	@ 0x28
 8003b30:	bd10      	pop	{r4, pc}
 8003b32:	bf00      	nop
 8003b34:	20002030 	.word	0x20002030
 8003b38:	0801f382 	.word	0x0801f382
 8003b3c:	08004075 	.word	0x08004075
 8003b40:	20002036 	.word	0x20002036
 8003b44:	20002035 	.word	0x20002035
 8003b48:	2000202c 	.word	0x2000202c

08003b4c <_ZN19MenuScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MenuScreenPresenter() {};
 8003b4c:	4770      	bx	lr

08003b4e <_ZThn4_N19MenuScreenPresenterD1Ev>:
 8003b4e:	3804      	subs	r0, #4
 8003b50:	4770      	bx	lr

08003b52 <_ZN19MenuScreenPresenter10deactivateEv>:
}

void MenuScreenPresenter::activate()
{

}
 8003b52:	4770      	bx	lr

08003b54 <_ZN19MenuScreenPresenterD0Ev>:
 8003b54:	b510      	push	{r4, lr}
 8003b56:	2110      	movs	r1, #16
 8003b58:	4604      	mov	r4, r0
 8003b5a:	f019 fd95 	bl	801d688 <_ZdlPvj>
 8003b5e:	4620      	mov	r0, r4
 8003b60:	bd10      	pop	{r4, pc}

08003b62 <_ZThn4_N19MenuScreenPresenterD0Ev>:
 8003b62:	f1a0 0004 	sub.w	r0, r0, #4
 8003b66:	e7f5      	b.n	8003b54 <_ZN19MenuScreenPresenterD0Ev>

08003b68 <_ZN19MenuScreenPresenterC1ER14MenuScreenView>:
 8003b68:	2200      	movs	r2, #0
 8003b6a:	6082      	str	r2, [r0, #8]
    : view(v)
 8003b6c:	4a02      	ldr	r2, [pc, #8]	@ (8003b78 <_ZN19MenuScreenPresenterC1ER14MenuScreenView+0x10>)
 8003b6e:	6002      	str	r2, [r0, #0]
 8003b70:	3218      	adds	r2, #24
 8003b72:	6042      	str	r2, [r0, #4]
 8003b74:	60c1      	str	r1, [r0, #12]
}
 8003b76:	4770      	bx	lr
 8003b78:	080201d4 	.word	0x080201d4

08003b7c <_ZN14MenuScreenView14tearDownScreenEv>:
}

void MenuScreenView::tearDownScreen()
{
    MenuScreenViewBase::tearDownScreen();
}
 8003b7c:	4770      	bx	lr
	...

08003b80 <_ZN14MenuScreenViewD1Ev>:

class MenuScreenView : public MenuScreenViewBase
{
public:
    MenuScreenView();
    virtual ~MenuScreenView() {}
 8003b80:	b510      	push	{r4, lr}
 8003b82:	4b03      	ldr	r3, [pc, #12]	@ (8003b90 <_ZN14MenuScreenViewD1Ev+0x10>)
 8003b84:	6003      	str	r3, [r0, #0]
 8003b86:	4604      	mov	r4, r0
 8003b88:	f7ff f9dd 	bl	8002f46 <_ZN18MenuScreenViewBaseD1Ev>
 8003b8c:	4620      	mov	r0, r4
 8003b8e:	bd10      	pop	{r4, pc}
 8003b90:	080201fc 	.word	0x080201fc

08003b94 <_ZN14MenuScreenViewD0Ev>:
 8003b94:	b510      	push	{r4, lr}
 8003b96:	4604      	mov	r4, r0
 8003b98:	f7ff fff2 	bl	8003b80 <_ZN14MenuScreenViewD1Ev>
 8003b9c:	4620      	mov	r0, r4
 8003b9e:	21f0      	movs	r1, #240	@ 0xf0
 8003ba0:	f019 fd72 	bl	801d688 <_ZdlPvj>
 8003ba4:	4620      	mov	r0, r4
 8003ba6:	bd10      	pop	{r4, pc}

08003ba8 <_ZN14MenuScreenViewC1Ev>:
MenuScreenView::MenuScreenView()
 8003ba8:	b510      	push	{r4, lr}
 8003baa:	4604      	mov	r4, r0
 8003bac:	f7ff fa00 	bl	8002fb0 <_ZN18MenuScreenViewBaseC1Ev>
 8003bb0:	4b01      	ldr	r3, [pc, #4]	@ (8003bb8 <_ZN14MenuScreenViewC1Ev+0x10>)
 8003bb2:	6023      	str	r3, [r4, #0]
}
 8003bb4:	4620      	mov	r0, r4
 8003bb6:	bd10      	pop	{r4, pc}
 8003bb8:	080201fc 	.word	0x080201fc

08003bbc <_ZN14MenuScreenView11setupScreenEv>:
    MenuScreenViewBase::setupScreen();
 8003bbc:	f7ff b9c4 	b.w	8002f48 <_ZN18MenuScreenViewBase11setupScreenEv>

08003bc0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003bc0:	2200      	movs	r2, #0
 8003bc2:	6002      	str	r2, [r0, #0]
{

}
 8003bc4:	4770      	bx	lr

08003bc6 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003bc6:	4770      	bx	lr

08003bc8 <_ZN6BulletD1Ev>:

	// Khởi tạo tỷ lệ di chuyển của đạn (tính bằng mili giây)
	this->moveRate = MOVE_RATE;
}

Bullet::~Bullet() {
 8003bc8:	b510      	push	{r4, lr}
 8003bca:	4b03      	ldr	r3, [pc, #12]	@ (8003bd8 <_ZN6BulletD1Ev+0x10>)
 8003bcc:	6003      	str	r3, [r0, #0]
 8003bce:	4604      	mov	r4, r0

}
 8003bd0:	f000 f8b1 	bl	8003d36 <_ZN6EntityD1Ev>
 8003bd4:	4620      	mov	r0, r4
 8003bd6:	bd10      	pop	{r4, pc}
 8003bd8:	08020230 	.word	0x08020230

08003bdc <_ZN6BulletD0Ev>:
Bullet::~Bullet() {
 8003bdc:	b510      	push	{r4, lr}
 8003bde:	4604      	mov	r4, r0
}
 8003be0:	f7ff fff2 	bl	8003bc8 <_ZN6BulletD1Ev>
 8003be4:	4620      	mov	r0, r4
 8003be6:	211c      	movs	r1, #28
 8003be8:	f019 fd4e 	bl	801d688 <_ZdlPvj>
 8003bec:	4620      	mov	r0, r4
 8003bee:	bd10      	pop	{r4, pc}

08003bf0 <_ZN6BulletC1Ev>:
Bullet::Bullet() {
 8003bf0:	b510      	push	{r4, lr}
 8003bf2:	4604      	mov	r4, r0
 8003bf4:	f000 f8aa 	bl	8003d4c <_ZN6EntityC1Ev>
 8003bf8:	4b06      	ldr	r3, [pc, #24]	@ (8003c14 <_ZN6BulletC1Ev+0x24>)
 8003bfa:	6023      	str	r3, [r4, #0]
 8003bfc:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8003c00:	61a3      	str	r3, [r4, #24]
	this->velocityX = 0;
 8003c02:	f04f 1118 	mov.w	r1, #1572888	@ 0x180018
 8003c06:	2300      	movs	r3, #0
 8003c08:	e9c4 1302 	strd	r1, r3, [r4, #8]
	this->displayStatus = IS_HIDDEN;
 8003c0c:	4b02      	ldr	r3, [pc, #8]	@ (8003c18 <_ZN6BulletC1Ev+0x28>)
 8003c0e:	6123      	str	r3, [r4, #16]
}
 8003c10:	4620      	mov	r0, r4
 8003c12:	bd10      	pop	{r4, pc}
 8003c14:	08020230 	.word	0x08020230
 8003c18:	01900003 	.word	0x01900003

08003c1c <_ZN6Bullet6updateEh>:

bool Bullet::update(uint8_t dt) {
	// Kiểm tra xem đạn có nằm ngoài khu vực màn hình hiển thị không
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003c1c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
bool Bullet::update(uint8_t dt) {
 8003c20:	b510      	push	{r4, lr}
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003c22:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8003c26:	425b      	negs	r3, r3
 8003c28:	429c      	cmp	r4, r3
 8003c2a:	db0b      	blt.n	8003c44 <_ZN6Bullet6updateEh+0x28>
 8003c2c:	2cf0      	cmp	r4, #240	@ 0xf0
 8003c2e:	dc09      	bgt.n	8003c44 <_ZN6Bullet6updateEh+0x28>
			this->coordinateY < -this->height || this->coordinateY > 320) {
 8003c30:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8003c34:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8003c38:	425b      	negs	r3, r3
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003c3a:	429a      	cmp	r2, r3
 8003c3c:	db02      	blt.n	8003c44 <_ZN6Bullet6updateEh+0x28>
			this->coordinateY < -this->height || this->coordinateY > 320) {
 8003c3e:	f5b2 7fa0 	cmp.w	r2, #320	@ 0x140
 8003c42:	dd05      	ble.n	8003c50 <_ZN6Bullet6updateEh+0x34>

		// Nếu đạn nằm ngoài màn hình, đặt trạng thái hiển thị thành "SHOULD_HIDE"
		this->displayStatus = SHOULD_HIDE;
 8003c44:	2304      	movs	r3, #4
 8003c46:	8203      	strh	r3, [r0, #16]
		// Đặt lại tỷ lệ di chuyển để chuẩn bị cho lần di chuyển tiếp theo
		this->moveRate = MOVE_RATE;
 8003c48:	6983      	ldr	r3, [r0, #24]
 8003c4a:	8243      	strh	r3, [r0, #18]
		return false;
 8003c4c:	2000      	movs	r0, #0
	// Đặt lại tỷ lệ di chuyển để chuẩn bị cho lần di chuyển tiếp theo
	this->moveRate = MOVE_RATE;

	// Trả về true để cho biết đạn vẫn còn hiển thị và trong khu vực màn hình
	return true;
}
 8003c4e:	bd10      	pop	{r4, pc}
	this->moveRate -= dt;
 8003c50:	8a43      	ldrh	r3, [r0, #18]
 8003c52:	1a59      	subs	r1, r3, r1
 8003c54:	b209      	sxth	r1, r1
	if(this->moveRate > 0) return false;
 8003c56:	2900      	cmp	r1, #0
	this->moveRate -= dt;
 8003c58:	8241      	strh	r1, [r0, #18]
	if(this->moveRate > 0) return false;
 8003c5a:	dcf7      	bgt.n	8003c4c <_ZN6Bullet6updateEh+0x30>
	this->coordinateX += this->velocityX;
 8003c5c:	8983      	ldrh	r3, [r0, #12]
 8003c5e:	441c      	add	r4, r3
	this->coordinateY += this->velocityY;
 8003c60:	89c3      	ldrh	r3, [r0, #14]
	this->coordinateX += this->velocityX;
 8003c62:	8084      	strh	r4, [r0, #4]
	this->coordinateY += this->velocityY;
 8003c64:	441a      	add	r2, r3
	this->moveRate = MOVE_RATE;
 8003c66:	6983      	ldr	r3, [r0, #24]
	this->coordinateY += this->velocityY;
 8003c68:	80c2      	strh	r2, [r0, #6]
	this->moveRate = MOVE_RATE;
 8003c6a:	8243      	strh	r3, [r0, #18]
	return true;
 8003c6c:	2001      	movs	r0, #1
 8003c6e:	e7ee      	b.n	8003c4e <_ZN6Bullet6updateEh+0x32>

08003c70 <_ZN5EnemyD1Ev>:

  // Khởi tạo tốc độ bắn đạn của kẻ địch
  this->fireRate = FIRE_RATE;
}

Enemy::~Enemy() {
 8003c70:	b510      	push	{r4, lr}
 8003c72:	4b03      	ldr	r3, [pc, #12]	@ (8003c80 <_ZN5EnemyD1Ev+0x10>)
 8003c74:	6003      	str	r3, [r0, #0]
 8003c76:	4604      	mov	r4, r0

}
 8003c78:	f000 f85d 	bl	8003d36 <_ZN6EntityD1Ev>
 8003c7c:	4620      	mov	r0, r4
 8003c7e:	bd10      	pop	{r4, pc}
 8003c80:	08020244 	.word	0x08020244

08003c84 <_ZN5EnemyD0Ev>:
Enemy::~Enemy() {
 8003c84:	b510      	push	{r4, lr}
 8003c86:	4604      	mov	r4, r0
}
 8003c88:	f7ff fff2 	bl	8003c70 <_ZN5EnemyD1Ev>
 8003c8c:	4620      	mov	r0, r4
 8003c8e:	2120      	movs	r1, #32
 8003c90:	f019 fcfa 	bl	801d688 <_ZdlPvj>
 8003c94:	4620      	mov	r0, r4
 8003c96:	bd10      	pop	{r4, pc}

08003c98 <_ZN5EnemyC1Ev>:
Enemy::Enemy() {
 8003c98:	b510      	push	{r4, lr}
 8003c9a:	4604      	mov	r4, r0
 8003c9c:	f000 f856 	bl	8003d4c <_ZN6EntityC1Ev>
 8003ca0:	4b08      	ldr	r3, [pc, #32]	@ (8003cc4 <_ZN5EnemyC1Ev+0x2c>)
 8003ca2:	6023      	str	r3, [r4, #0]
 8003ca4:	f44f 7216 	mov.w	r2, #600	@ 0x258
 8003ca8:	f246 13a8 	movw	r3, #25000	@ 0x61a8
 8003cac:	e9c4 2306 	strd	r2, r3, [r4, #24]
	this->velocityX = 0;
 8003cb0:	f04f 1120 	mov.w	r1, #2097184	@ 0x200020
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	e9c4 1202 	strd	r1, r2, [r4, #8]
	this->displayStatus = IS_HIDDEN;
 8003cba:	4a03      	ldr	r2, [pc, #12]	@ (8003cc8 <_ZN5EnemyC1Ev+0x30>)
 8003cbc:	6122      	str	r2, [r4, #16]
  this->fireRate = FIRE_RATE;
 8003cbe:	82a3      	strh	r3, [r4, #20]
}
 8003cc0:	4620      	mov	r0, r4
 8003cc2:	bd10      	pop	{r4, pc}
 8003cc4:	08020244 	.word	0x08020244
 8003cc8:	02580003 	.word	0x02580003

08003ccc <_ZN5Enemy6updateEh>:

bool Enemy::update(uint8_t dt) {
	// Kiểm tra xem kẻ địch có nằm ngoài khu vực màn hình hiển thị không
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003ccc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8003cd0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8003cd4:	425b      	negs	r3, r3
 8003cd6:	429a      	cmp	r2, r3
bool Enemy::update(uint8_t dt) {
 8003cd8:	b510      	push	{r4, lr}
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003cda:	db08      	blt.n	8003cee <_ZN5Enemy6updateEh+0x22>
 8003cdc:	2af0      	cmp	r2, #240	@ 0xf0
 8003cde:	dc06      	bgt.n	8003cee <_ZN5Enemy6updateEh+0x22>
			this->coordinateY < -this->height || this->coordinateX > 320) {
 8003ce0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8003ce4:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8003ce8:	425b      	negs	r3, r3
	if(this->coordinateX < -this->width || this->coordinateX > 240 ||
 8003cea:	429c      	cmp	r4, r3
 8003cec:	da07      	bge.n	8003cfe <_ZN5Enemy6updateEh+0x32>
		// Nếu kẻ địch nằm ngoài màn hình, đặt trạng thái hiển thị thành "SHOULD_HIDE"
		this->displayStatus = SHOULD_HIDE;
 8003cee:	2304      	movs	r3, #4
 8003cf0:	8203      	strh	r3, [r0, #16]

		// Đặt lại tốc độ bắn đạn và tốc độ di chuyển để chuẩn bị cho lần xuất hiện kế tiếp
		this->fireRate = FIRE_RATE;
 8003cf2:	69c3      	ldr	r3, [r0, #28]
 8003cf4:	8283      	strh	r3, [r0, #20]
		this->moveRate = MOVE_RATE;
 8003cf6:	6983      	ldr	r3, [r0, #24]
 8003cf8:	8243      	strh	r3, [r0, #18]
		return false;
 8003cfa:	2000      	movs	r0, #0
	// Đặt lại tốc độ di chuyển để chuẩn bị cho lần di chuyển tiếp theo
	this->moveRate = MOVE_RATE;

	// Trả về true để cho biết kẻ địch vẫn còn hiển thị và trong khu vực màn hình
	return true;
}
 8003cfc:	bd10      	pop	{r4, pc}
	this->moveRate -= dt;
 8003cfe:	8a43      	ldrh	r3, [r0, #18]
 8003d00:	1a59      	subs	r1, r3, r1
 8003d02:	b209      	sxth	r1, r1
	if(this->moveRate > 0) return false;
 8003d04:	2900      	cmp	r1, #0
	this->moveRate -= dt;
 8003d06:	8241      	strh	r1, [r0, #18]
	if(this->moveRate > 0) return false;
 8003d08:	dcf7      	bgt.n	8003cfa <_ZN5Enemy6updateEh+0x2e>
	this->coordinateX += this->velocityX;
 8003d0a:	8983      	ldrh	r3, [r0, #12]
 8003d0c:	441a      	add	r2, r3
	this->coordinateY += this->velocityY;
 8003d0e:	89c3      	ldrh	r3, [r0, #14]
	this->coordinateX += this->velocityX;
 8003d10:	8082      	strh	r2, [r0, #4]
	this->coordinateY += this->velocityY;
 8003d12:	441c      	add	r4, r3
	this->moveRate = MOVE_RATE;
 8003d14:	6983      	ldr	r3, [r0, #24]
	this->coordinateY += this->velocityY;
 8003d16:	80c4      	strh	r4, [r0, #6]
	this->moveRate = MOVE_RATE;
 8003d18:	8243      	strh	r3, [r0, #18]
	return true;
 8003d1a:	2001      	movs	r0, #1
 8003d1c:	e7ee      	b.n	8003cfc <_ZN5Enemy6updateEh+0x30>

08003d1e <_ZN5Enemy12updateBulletEh>:

bool Enemy::updateBullet(uint8_t dt) {
	this->fireRate -= dt;
 8003d1e:	8a83      	ldrh	r3, [r0, #20]
 8003d20:	1a59      	subs	r1, r3, r1
 8003d22:	b209      	sxth	r1, r1
	if(this->fireRate > 0) return false;
 8003d24:	2900      	cmp	r1, #0
	this->fireRate = FIRE_RATE;
 8003d26:	bfd8      	it	le
 8003d28:	69c3      	ldrle	r3, [r0, #28]
	this->fireRate -= dt;
 8003d2a:	8281      	strh	r1, [r0, #20]
	this->fireRate = FIRE_RATE;
 8003d2c:	bfda      	itte	le
 8003d2e:	8283      	strhle	r3, [r0, #20]
	return true;
 8003d30:	2001      	movle	r0, #1
	if(this->fireRate > 0) return false;
 8003d32:	2000      	movgt	r0, #0
}
 8003d34:	4770      	bx	lr

08003d36 <_ZN6EntityD1Ev>:
	this->height = 32;
}

Entity::~Entity() {
	// TODO Auto-generated destructor stub
}
 8003d36:	4770      	bx	lr

08003d38 <_ZN6Entity6updateEv>:

bool Entity::update() {
	// TODO Auto-generated destructor stub
	return false;
}
 8003d38:	2000      	movs	r0, #0
 8003d3a:	4770      	bx	lr

08003d3c <_ZN6EntityD0Ev>:
Entity::~Entity() {
 8003d3c:	b510      	push	{r4, lr}
}
 8003d3e:	2118      	movs	r1, #24
Entity::~Entity() {
 8003d40:	4604      	mov	r4, r0
}
 8003d42:	f019 fca1 	bl	801d688 <_ZdlPvj>
 8003d46:	4620      	mov	r0, r4
 8003d48:	bd10      	pop	{r4, pc}
	...

08003d4c <_ZN6EntityC1Ev>:
Entity::Entity() {
 8003d4c:	4a03      	ldr	r2, [pc, #12]	@ (8003d5c <_ZN6EntityC1Ev+0x10>)
 8003d4e:	6002      	str	r2, [r0, #0]
	this->displayStatus = IS_HIDDEN;
 8003d50:	2203      	movs	r2, #3
 8003d52:	8202      	strh	r2, [r0, #16]
	this->width = 32;
 8003d54:	f04f 1220 	mov.w	r2, #2097184	@ 0x200020
 8003d58:	6082      	str	r2, [r0, #8]
}
 8003d5a:	4770      	bx	lr
 8003d5c:	08020258 	.word	0x08020258

08003d60 <_ZN6Entity19updateDisplayStatusEh>:

void Entity::updateDisplayStatus(uint8_t status) {
	this->displayStatus = status;
 8003d60:	8201      	strh	r1, [r0, #16]
}
 8003d62:	4770      	bx	lr

08003d64 <_ZN6Entity16updateCoordinateEtt>:
void Entity::updateCoordinate(uint16_t x, uint16_t y) {
	this->coordinateX = x;
 8003d64:	8081      	strh	r1, [r0, #4]
	this->coordinateY = y;
 8003d66:	80c2      	strh	r2, [r0, #6]
}
 8003d68:	4770      	bx	lr

08003d6a <_ZN6Entity14updateVelocityEtt>:

void Entity::updateVelocity(uint16_t x, uint16_t y) {
	this->velocityX = x;
 8003d6a:	8181      	strh	r1, [r0, #12]
	this->velocityY = y;
 8003d6c:	81c2      	strh	r2, [r0, #14]
}
 8003d6e:	4770      	bx	lr

08003d70 <_ZN6Entity9isCollideERS_S0_>:

bool Entity::isCollide(Entity &a, Entity &b) {
	if((a.coordinateX + a.width > b.coordinateX) && (b.coordinateX + b.width > a.coordinateX) &&
 8003d70:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8003d74:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
bool Entity::isCollide(Entity &a, Entity &b) {
 8003d78:	b510      	push	{r4, lr}
	if((a.coordinateX + a.width > b.coordinateX) && (b.coordinateX + b.width > a.coordinateX) &&
 8003d7a:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8003d7e:	4413      	add	r3, r2
 8003d80:	42a3      	cmp	r3, r4
 8003d82:	dd15      	ble.n	8003db0 <_ZN6Entity9isCollideERS_S0_+0x40>
 8003d84:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 8003d88:	4423      	add	r3, r4
 8003d8a:	429a      	cmp	r2, r3
 8003d8c:	da10      	bge.n	8003db0 <_ZN6Entity9isCollideERS_S0_+0x40>
			(a.coordinateY + a.height > b.coordinateY) && (b.coordinateY + b.height > a.coordinateY))
 8003d8e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8003d92:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8003d96:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
 8003d9a:	441a      	add	r2, r3
	if((a.coordinateX + a.width > b.coordinateX) && (b.coordinateX + b.width > a.coordinateX) &&
 8003d9c:	42a2      	cmp	r2, r4
 8003d9e:	dd07      	ble.n	8003db0 <_ZN6Entity9isCollideERS_S0_+0x40>
			(a.coordinateY + a.height > b.coordinateY) && (b.coordinateY + b.height > a.coordinateY))
 8003da0:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8003da4:	4422      	add	r2, r4
 8003da6:	4293      	cmp	r3, r2
 8003da8:	bfac      	ite	ge
 8003daa:	2000      	movge	r0, #0
 8003dac:	2001      	movlt	r0, #1
		return true;
	return false;
}
 8003dae:	bd10      	pop	{r4, pc}
	return false;
 8003db0:	2000      	movs	r0, #0
 8003db2:	e7fc      	b.n	8003dae <_ZN6Entity9isCollideERS_S0_+0x3e>

08003db4 <_ZN4GameC1Ev>:
 * Game.cpp
 */

#include "Game.hpp"

Game::Game() {
 8003db4:	b510      	push	{r4, lr}
 8003db6:	4b05      	ldr	r3, [pc, #20]	@ (8003dcc <_ZN4GameC1Ev+0x18>)
 8003db8:	6003      	str	r3, [r0, #0]
 8003dba:	2300      	movs	r3, #0
 8003dbc:	4604      	mov	r4, r0
 8003dbe:	8083      	strh	r3, [r0, #4]
 8003dc0:	3008      	adds	r0, #8
 8003dc2:	f000 f833 	bl	8003e2c <_ZN4ShipC1Ev>

}
 8003dc6:	4620      	mov	r0, r4
 8003dc8:	bd10      	pop	{r4, pc}
 8003dca:	bf00      	nop
 8003dcc:	0802026c 	.word	0x0802026c

08003dd0 <_ZN4Game11updateScoreEs>:

Game::~Game() {
}

void Game::updateScore(short score) {
	this->score += score;
 8003dd0:	8883      	ldrh	r3, [r0, #4]
 8003dd2:	4419      	add	r1, r3
 8003dd4:	8081      	strh	r1, [r0, #4]
}
 8003dd6:	4770      	bx	lr

08003dd8 <_ZN4GameD1Ev>:
Game::~Game() {
 8003dd8:	b510      	push	{r4, lr}
 8003dda:	4b04      	ldr	r3, [pc, #16]	@ (8003dec <_ZN4GameD1Ev+0x14>)
 8003ddc:	4604      	mov	r4, r0
 8003dde:	f840 3b08 	str.w	r3, [r0], #8
}
 8003de2:	f000 f80f 	bl	8003e04 <_ZN4ShipD1Ev>
 8003de6:	4620      	mov	r0, r4
 8003de8:	bd10      	pop	{r4, pc}
 8003dea:	bf00      	nop
 8003dec:	0802026c 	.word	0x0802026c

08003df0 <_ZN4GameD0Ev>:
Game::~Game() {
 8003df0:	b510      	push	{r4, lr}
 8003df2:	4604      	mov	r4, r0
}
 8003df4:	f7ff fff0 	bl	8003dd8 <_ZN4GameD1Ev>
 8003df8:	4620      	mov	r0, r4
 8003dfa:	2130      	movs	r1, #48	@ 0x30
 8003dfc:	f019 fc44 	bl	801d688 <_ZdlPvj>
 8003e00:	4620      	mov	r0, r4
 8003e02:	bd10      	pop	{r4, pc}

08003e04 <_ZN4ShipD1Ev>:
	this->height = 28;
	this->fireRate = FIRE_RATE;
	this->moveRate = MOVE_RATE;
}

Ship::~Ship() {
 8003e04:	b510      	push	{r4, lr}
 8003e06:	4b03      	ldr	r3, [pc, #12]	@ (8003e14 <_ZN4ShipD1Ev+0x10>)
 8003e08:	6003      	str	r3, [r0, #0]
 8003e0a:	4604      	mov	r4, r0
	// TODO Auto-generated destructor stub

}
 8003e0c:	f7ff ff93 	bl	8003d36 <_ZN6EntityD1Ev>
 8003e10:	4620      	mov	r0, r4
 8003e12:	bd10      	pop	{r4, pc}
 8003e14:	0802027c 	.word	0x0802027c

08003e18 <_ZN4ShipD0Ev>:
Ship::~Ship() {
 8003e18:	b510      	push	{r4, lr}
 8003e1a:	4604      	mov	r4, r0
}
 8003e1c:	f7ff fff2 	bl	8003e04 <_ZN4ShipD1Ev>
 8003e20:	4620      	mov	r0, r4
 8003e22:	2128      	movs	r1, #40	@ 0x28
 8003e24:	f019 fc30 	bl	801d688 <_ZdlPvj>
 8003e28:	4620      	mov	r0, r4
 8003e2a:	bd10      	pop	{r4, pc}

08003e2c <_ZN4ShipC1Ev>:
Ship::Ship() {
 8003e2c:	b510      	push	{r4, lr}
 8003e2e:	4604      	mov	r4, r0
 8003e30:	f7ff ff8c 	bl	8003d4c <_ZN6EntityC1Ev>
 8003e34:	2103      	movs	r1, #3
	this->width = 28;
 8003e36:	480a      	ldr	r0, [pc, #40]	@ (8003e60 <_ZN4ShipC1Ev+0x34>)
Ship::Ship() {
 8003e38:	4b0a      	ldr	r3, [pc, #40]	@ (8003e64 <_ZN4ShipC1Ev+0x38>)
 8003e3a:	6221      	str	r1, [r4, #32]
 8003e3c:	84a1      	strh	r1, [r4, #36]	@ 0x24
	this->width = 28;
 8003e3e:	f04f 111c 	mov.w	r1, #1835036	@ 0x1c001c
 8003e42:	e9c4 0101 	strd	r0, r1, [r4, #4]
Ship::Ship() {
 8003e46:	f242 7210 	movw	r2, #10000	@ 0x2710
 8003e4a:	6023      	str	r3, [r4, #0]
	this->velocityX = 0;
 8003e4c:	2100      	movs	r1, #0
Ship::Ship() {
 8003e4e:	f44f 73c8 	mov.w	r3, #400	@ 0x190
 8003e52:	e9c4 3206 	strd	r3, r2, [r4, #24]
	this->velocityX = 0;
 8003e56:	60e1      	str	r1, [r4, #12]
	this->fireRate = FIRE_RATE;
 8003e58:	82a2      	strh	r2, [r4, #20]
	this->moveRate = MOVE_RATE;
 8003e5a:	8263      	strh	r3, [r4, #18]
}
 8003e5c:	4620      	mov	r0, r4
 8003e5e:	bd10      	pop	{r4, pc}
 8003e60:	01040068 	.word	0x01040068
 8003e64:	0802027c 	.word	0x0802027c

08003e68 <_ZN4Ship6updateEh>:

bool Ship::update(uint8_t dt) {
	this->moveRate -= dt;
 8003e68:	8a43      	ldrh	r3, [r0, #18]
 8003e6a:	1a59      	subs	r1, r3, r1
 8003e6c:	b209      	sxth	r1, r1
	if(this->moveRate > 0) return false;
 8003e6e:	2900      	cmp	r1, #0
	this->moveRate -= dt;
 8003e70:	8241      	strh	r1, [r0, #18]
	if(this->moveRate > 0) return false;
 8003e72:	dc1f      	bgt.n	8003eb4 <_ZN4Ship6updateEh+0x4c>
	this->coordinateX += this->velocityX;
 8003e74:	8882      	ldrh	r2, [r0, #4]
 8003e76:	8983      	ldrh	r3, [r0, #12]
	this->coordinateY += this->velocityY;
 8003e78:	89c1      	ldrh	r1, [r0, #14]
	this->coordinateX += this->velocityX;
 8003e7a:	441a      	add	r2, r3
	this->coordinateY += this->velocityY;
 8003e7c:	88c3      	ldrh	r3, [r0, #6]
	this->coordinateX += this->velocityX;
 8003e7e:	b212      	sxth	r2, r2
	this->coordinateY += this->velocityY;
 8003e80:	440b      	add	r3, r1
 8003e82:	b21b      	sxth	r3, r3
	this->moveRate = MOVE_RATE;
 8003e84:	6981      	ldr	r1, [r0, #24]
	this->coordinateX += this->velocityX;
 8003e86:	8082      	strh	r2, [r0, #4]

	if(this->coordinateX < 0) this->coordinateX = 0;
 8003e88:	2a00      	cmp	r2, #0
	this->coordinateY += this->velocityY;
 8003e8a:	80c3      	strh	r3, [r0, #6]
	this->moveRate = MOVE_RATE;
 8003e8c:	8241      	strh	r1, [r0, #18]
	if(this->coordinateX < 0) this->coordinateX = 0;
 8003e8e:	da07      	bge.n	8003ea0 <_ZN4Ship6updateEh+0x38>
 8003e90:	2200      	movs	r2, #0
	else if(this->coordinateX > 208) this->coordinateX = 208;
 8003e92:	8082      	strh	r2, [r0, #4]
	if(this->coordinateY < 0) this->coordinateY = 0;
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	da07      	bge.n	8003ea8 <_ZN4Ship6updateEh+0x40>
 8003e98:	2300      	movs	r3, #0
 8003e9a:	80c3      	strh	r3, [r0, #6]
	else if(this->coordinateY > 288) this->coordinateY = 288;

	return true;
 8003e9c:	2001      	movs	r0, #1
 8003e9e:	4770      	bx	lr
	else if(this->coordinateX > 208) this->coordinateX = 208;
 8003ea0:	2ad0      	cmp	r2, #208	@ 0xd0
 8003ea2:	ddf7      	ble.n	8003e94 <_ZN4Ship6updateEh+0x2c>
 8003ea4:	22d0      	movs	r2, #208	@ 0xd0
 8003ea6:	e7f4      	b.n	8003e92 <_ZN4Ship6updateEh+0x2a>
	else if(this->coordinateY > 288) this->coordinateY = 288;
 8003ea8:	f5b3 7f90 	cmp.w	r3, #288	@ 0x120
 8003eac:	ddf6      	ble.n	8003e9c <_ZN4Ship6updateEh+0x34>
 8003eae:	f44f 7390 	mov.w	r3, #288	@ 0x120
 8003eb2:	e7f2      	b.n	8003e9a <_ZN4Ship6updateEh+0x32>
	if(this->moveRate > 0) return false;
 8003eb4:	2000      	movs	r0, #0
}
 8003eb6:	4770      	bx	lr

08003eb8 <_ZN4Ship12updateBulletEh>:

bool Ship::updateBullet(uint8_t dt) {
	this->fireRate -= dt;
 8003eb8:	8a83      	ldrh	r3, [r0, #20]
 8003eba:	1a59      	subs	r1, r3, r1
 8003ebc:	b209      	sxth	r1, r1
	if(this->fireRate > 0) return false;
 8003ebe:	2900      	cmp	r1, #0
	this->fireRate = FIRE_RATE;
 8003ec0:	bfd8      	it	le
 8003ec2:	69c3      	ldrle	r3, [r0, #28]
	this->fireRate -= dt;
 8003ec4:	8281      	strh	r1, [r0, #20]
	this->fireRate = FIRE_RATE;
 8003ec6:	bfda      	itte	le
 8003ec8:	8283      	strhle	r3, [r0, #20]
	return true;
 8003eca:	2001      	movle	r0, #1
	if(this->fireRate > 0) return false;
 8003ecc:	2000      	movgt	r0, #0
}
 8003ece:	4770      	bx	lr

08003ed0 <_ZN4Ship12updateShipHpEs>:

void Ship::updateShipHp(short change) {
 this->lives += change;
 8003ed0:	8c83      	ldrh	r3, [r0, #36]	@ 0x24
 8003ed2:	4419      	add	r1, r3
 8003ed4:	8481      	strh	r1, [r0, #36]	@ 0x24
}
 8003ed6:	4770      	bx	lr

08003ed8 <_ZN4Ship15updateVelocityXEs>:

void Ship::updateVelocityX(short X) {
	this->velocityX = X;
 8003ed8:	8181      	strh	r1, [r0, #12]
}
 8003eda:	4770      	bx	lr

08003edc <_ZN4Ship15updateVelocityYEs>:
void Ship::updateVelocityY(short Y) {
	this->velocityY = Y;
 8003edc:	81c1      	strh	r1, [r0, #14]
}
 8003ede:	4770      	bx	lr

08003ee0 <_Z11updateEnemyh>:
		}
	}
}

// Cập nhật vị trí của kẻ địch
void updateEnemy(uint8_t dt) {
 8003ee0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	spawnRate -=dt;
 8003ee4:	f8df a090 	ldr.w	sl, [pc, #144]	@ 8003f78 <_Z11updateEnemyh+0x98>
 8003ee8:	4c22      	ldr	r4, [pc, #136]	@ (8003f74 <_Z11updateEnemyh+0x94>)
 8003eea:	f8da 3000 	ldr.w	r3, [sl]
		uint16_t ey = 0;
		uint16_t vx;
		uint16_t vy = 0;

		// Tạo mới kẻ địch từ vị trí và hướng di chuyển đã được xác định bởi spawnSeed
		if(spawnSeed%2) {
 8003eee:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 8003f7c <_Z11updateEnemyh+0x9c>
 8003ef2:	f8df 908c 	ldr.w	r9, [pc, #140]	@ 8003f80 <_Z11updateEnemyh+0xa0>
	spawnRate -=dt;
 8003ef6:	1a1b      	subs	r3, r3, r0
void updateEnemy(uint8_t dt) {
 8003ef8:	4605      	mov	r5, r0
	spawnRate -=dt;
 8003efa:	f8ca 3000 	str.w	r3, [sl]
 8003efe:	2614      	movs	r6, #20
		if(enemy[i].displayStatus != IS_HIDDEN) {
 8003f00:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8003f04:	2b03      	cmp	r3, #3
 8003f06:	d009      	beq.n	8003f1c <_Z11updateEnemyh+0x3c>
			enemy[i].update(dt);
 8003f08:	4629      	mov	r1, r5
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	f7ff fede 	bl	8003ccc <_ZN5Enemy6updateEh>
	for(int i=0;i<MAX_ENEMY;i++) {
 8003f10:	3e01      	subs	r6, #1
 8003f12:	f104 0420 	add.w	r4, r4, #32
 8003f16:	d1f3      	bne.n	8003f00 <_Z11updateEnemyh+0x20>
		enemy[i].updateDisplayStatus(SHOULD_SHOW);

		// Đặt lại spawnRate để đợi cho lần xuất hiện kế tiếp
		spawnRate = MAX_SPAWN_RATE;
	}
}
 8003f18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if(spawnRate > 0) continue;
 8003f1c:	f8da 3000 	ldr.w	r3, [sl]
 8003f20:	2b00      	cmp	r3, #0
 8003f22:	dcf5      	bgt.n	8003f10 <_Z11updateEnemyh+0x30>
		if(spawnSeed%2) {
 8003f24:	f8d8 3000 	ldr.w	r3, [r8]
 8003f28:	f003 0201 	and.w	r2, r3, #1
			vx = 1;
 8003f2c:	2a00      	cmp	r2, #0
 8003f2e:	f64f 71e0 	movw	r1, #65504	@ 0xffe0
 8003f32:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8003f36:	bf0c      	ite	eq
 8003f38:	21f0      	moveq	r1, #240	@ 0xf0
 8003f3a:	2701      	movne	r7, #1
		switch(spawnSeed) {
 8003f3c:	2b03      	cmp	r3, #3
 8003f3e:	bf94      	ite	ls
 8003f40:	f819 2003 	ldrbls.w	r2, [r9, r3]
			ex = 240;
 8003f44:	2200      	movhi	r2, #0
		if(spawnSeed >= 3) {
 8003f46:	2b02      	cmp	r3, #2
			spawnSeed++;
 8003f48:	bfd4      	ite	le
 8003f4a:	3301      	addle	r3, #1
			spawnSeed = 0;
 8003f4c:	2300      	movgt	r3, #0
		enemy[i].updateCoordinate(ex, ey);
 8003f4e:	4620      	mov	r0, r4
 8003f50:	f8c8 3000 	str.w	r3, [r8]
 8003f54:	f7ff ff06 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
		enemy[i].updateVelocity(vx, vy);
 8003f58:	2200      	movs	r2, #0
 8003f5a:	4639      	mov	r1, r7
 8003f5c:	4620      	mov	r0, r4
 8003f5e:	f7ff ff04 	bl	8003d6a <_ZN6Entity14updateVelocityEtt>
		enemy[i].updateDisplayStatus(SHOULD_SHOW);
 8003f62:	2102      	movs	r1, #2
 8003f64:	4620      	mov	r0, r4
 8003f66:	f7ff fefb 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
		spawnRate = MAX_SPAWN_RATE;
 8003f6a:	f242 7310 	movw	r3, #10000	@ 0x2710
 8003f6e:	f8ca 3000 	str.w	r3, [sl]
 8003f72:	e7cd      	b.n	8003f10 <_Z11updateEnemyh+0x30>
 8003f74:	20002040 	.word	0x20002040
 8003f78:	20000018 	.word	0x20000018
 8003f7c:	2000203c 	.word	0x2000203c
 8003f80:	08020288 	.word	0x08020288

08003f84 <_Z16updateShipBulleth>:

// Cập nhật vị trí của đạn từ tàu
void updateShipBullet(uint8_t dt) {
 8003f84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	// kiem tra tau con het dan chua
	bool shouldFire = gameInstance.ship.updateBullet(dt);
 8003f88:	4601      	mov	r1, r0
void updateShipBullet(uint8_t dt) {
 8003f8a:	4606      	mov	r6, r0
	bool shouldFire = gameInstance.ship.updateBullet(dt);
 8003f8c:	4813      	ldr	r0, [pc, #76]	@ (8003fdc <_Z16updateShipBulleth+0x58>)
 8003f8e:	4c14      	ldr	r4, [pc, #80]	@ (8003fe0 <_Z16updateShipBulleth+0x5c>)
				shipBullet[i].update(dt);
				continue;
			}

			if(shouldFire) {
				shipBullet[i].updateCoordinate(sx, sy - 16);
 8003f90:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 8003fe4 <_Z16updateShipBulleth+0x60>
 8003f94:	f8df 9050 	ldr.w	r9, [pc, #80]	@ 8003fe8 <_Z16updateShipBulleth+0x64>
	bool shouldFire = gameInstance.ship.updateBullet(dt);
 8003f98:	f7ff ff8e 	bl	8003eb8 <_ZN4Ship12updateBulletEh>
 8003f9c:	f504 778c 	add.w	r7, r4, #280	@ 0x118
 8003fa0:	4605      	mov	r5, r0
			if(shipBullet[i].displayStatus != IS_HIDDEN) {
 8003fa2:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8003fa6:	2b03      	cmp	r3, #3
 8003fa8:	d008      	beq.n	8003fbc <_Z16updateShipBulleth+0x38>
				shipBullet[i].update(dt);
 8003faa:	4631      	mov	r1, r6
 8003fac:	4620      	mov	r0, r4
 8003fae:	f7ff fe35 	bl	8003c1c <_ZN6Bullet6updateEh>
	for(int i=0; i<MAX_BULLET;i++) {
 8003fb2:	341c      	adds	r4, #28
 8003fb4:	42bc      	cmp	r4, r7
 8003fb6:	d1f4      	bne.n	8003fa2 <_Z16updateShipBulleth+0x1e>
				shipBullet[i].updateDisplayStatus(SHOULD_SHOW);
				shouldFire = false;
			}
		}
}
 8003fb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			if(shouldFire) {
 8003fbc:	b165      	cbz	r5, 8003fd8 <_Z16updateShipBulleth+0x54>
				shipBullet[i].updateCoordinate(sx, sy - 16);
 8003fbe:	f8b8 2000 	ldrh.w	r2, [r8]
 8003fc2:	f8b9 1000 	ldrh.w	r1, [r9]
 8003fc6:	3a10      	subs	r2, #16
 8003fc8:	4620      	mov	r0, r4
 8003fca:	b292      	uxth	r2, r2
 8003fcc:	f7ff feca 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
				shipBullet[i].updateDisplayStatus(SHOULD_SHOW);
 8003fd0:	2102      	movs	r1, #2
 8003fd2:	4620      	mov	r0, r4
 8003fd4:	f7ff fec4 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
void updateShipBullet(uint8_t dt) {
 8003fd8:	2500      	movs	r5, #0
 8003fda:	e7ea      	b.n	8003fb2 <_Z16updateShipBulleth+0x2e>
 8003fdc:	200024f8 	.word	0x200024f8
 8003fe0:	200023d8 	.word	0x200023d8
 8003fe4:	20002038 	.word	0x20002038
 8003fe8:	2000203a 	.word	0x2000203a

08003fec <_Z17updateEnemyBulleth>:

// Cập nhật vị trí của đạn từ kẻ địch

void updateEnemyBullet(uint8_t dt) {
 8003fec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ff0:	4c1e      	ldr	r4, [pc, #120]	@ (800406c <_Z17updateEnemyBulleth+0x80>)
 8003ff2:	4605      	mov	r5, r0
	for(int j=0; j<MAX_ENEMY;j++) {
 8003ff4:	2700      	movs	r7, #0

		for(int i=0; i<MAX_BULLET;i++) {
			if(enemyBullet[i].displayStatus != IS_HIDDEN) continue;

			// Tạo mới đạn từ kẻ địch và hiển thị lên màn hình
			enemyBullet[i].updateCoordinate(enemy[j].coordinateX, enemy[j].coordinateY + 16);
 8003ff6:	f04f 081c 	mov.w	r8, #28
		if(enemy[j].displayStatus != IS_SHOWN) continue;
 8003ffa:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8003ffe:	2b01      	cmp	r3, #1
 8004000:	d110      	bne.n	8004024 <_Z17updateEnemyBulleth+0x38>
		if(enemy[j].updateBullet(dt) == false) continue;
 8004002:	4629      	mov	r1, r5
 8004004:	4620      	mov	r0, r4
 8004006:	f7ff fe8a 	bl	8003d1e <_ZN5Enemy12updateBulletEh>
 800400a:	b158      	cbz	r0, 8004024 <_Z17updateEnemyBulleth+0x38>
 800400c:	4a18      	ldr	r2, [pc, #96]	@ (8004070 <_Z17updateEnemyBulleth+0x84>)
		for(int i=0; i<MAX_BULLET;i++) {
 800400e:	2300      	movs	r3, #0
 8004010:	4616      	mov	r6, r2
			if(enemyBullet[i].displayStatus != IS_HIDDEN) continue;
 8004012:	f9b2 1010 	ldrsh.w	r1, [r2, #16]
 8004016:	2903      	cmp	r1, #3
 8004018:	d019      	beq.n	800404e <_Z17updateEnemyBulleth+0x62>
		for(int i=0; i<MAX_BULLET;i++) {
 800401a:	3301      	adds	r3, #1
 800401c:	2b0a      	cmp	r3, #10
 800401e:	f102 021c 	add.w	r2, r2, #28
 8004022:	d1f6      	bne.n	8004012 <_Z17updateEnemyBulleth+0x26>
	for(int j=0; j<MAX_ENEMY;j++) {
 8004024:	3701      	adds	r7, #1
 8004026:	2f14      	cmp	r7, #20
 8004028:	f104 0420 	add.w	r4, r4, #32
 800402c:	d1e5      	bne.n	8003ffa <_Z17updateEnemyBulleth+0xe>
 800402e:	4c10      	ldr	r4, [pc, #64]	@ (8004070 <_Z17updateEnemyBulleth+0x84>)
 8004030:	260a      	movs	r6, #10
		}
	}

	// Cập nhật vị trí của các đạn từ kẻ địch đã xuất hiện
	for(int i=0; i<MAX_BULLET;i++) {
		if(enemyBullet[i].displayStatus != IS_SHOWN) continue;
 8004032:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8004036:	2b01      	cmp	r3, #1
 8004038:	d103      	bne.n	8004042 <_Z17updateEnemyBulleth+0x56>
		enemyBullet[i].update(dt);
 800403a:	4629      	mov	r1, r5
 800403c:	4620      	mov	r0, r4
 800403e:	f7ff fded 	bl	8003c1c <_ZN6Bullet6updateEh>
	for(int i=0; i<MAX_BULLET;i++) {
 8004042:	3e01      	subs	r6, #1
 8004044:	f104 041c 	add.w	r4, r4, #28
 8004048:	d1f3      	bne.n	8004032 <_Z17updateEnemyBulleth+0x46>
	}

}
 800404a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			enemyBullet[i].updateCoordinate(enemy[j].coordinateX, enemy[j].coordinateY + 16);
 800404e:	88e2      	ldrh	r2, [r4, #6]
 8004050:	88a1      	ldrh	r1, [r4, #4]
 8004052:	fb08 6603 	mla	r6, r8, r3, r6
 8004056:	3210      	adds	r2, #16
 8004058:	4630      	mov	r0, r6
 800405a:	b292      	uxth	r2, r2
 800405c:	f7ff fe82 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
			enemyBullet[i].updateDisplayStatus(SHOULD_SHOW);
 8004060:	2102      	movs	r1, #2
 8004062:	4630      	mov	r0, r6
 8004064:	f7ff fe7c 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
			break;
 8004068:	e7dc      	b.n	8004024 <_Z17updateEnemyBulleth+0x38>
 800406a:	bf00      	nop
 800406c:	20002040 	.word	0x20002040
 8004070:	200022c0 	.word	0x200022c0

08004074 <_Z8gameTaskPv>:
void gameTask(void *argument) {
 8004074:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	int last_lives = gameInstance.ship.lives; // Lưu số mạng trước đó
 8004078:	4c74      	ldr	r4, [pc, #464]	@ (800424c <_Z8gameTaskPv+0x1d8>)
 800407a:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	@ 0x2c
 800407e:	2500      	movs	r5, #0
		shipBullet[i].updateCoordinate(-50, -50);
 8004080:	4b73      	ldr	r3, [pc, #460]	@ (8004250 <_Z8gameTaskPv+0x1dc>)
 8004082:	f64f 72ce 	movw	r2, #65486	@ 0xffce
 8004086:	18ef      	adds	r7, r5, r3
 8004088:	4611      	mov	r1, r2
 800408a:	4638      	mov	r0, r7
 800408c:	f7ff fe6a 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
		enemyBullet[i].updateCoordinate(-50, -50);
 8004090:	4b70      	ldr	r3, [pc, #448]	@ (8004254 <_Z8gameTaskPv+0x1e0>)
 8004092:	f64f 72ce 	movw	r2, #65486	@ 0xffce
 8004096:	18ee      	adds	r6, r5, r3
 8004098:	4611      	mov	r1, r2
 800409a:	4630      	mov	r0, r6
 800409c:	f7ff fe62 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
		shipBullet[i].updateVelocity(0, -5);
 80040a0:	f64f 72fb 	movw	r2, #65531	@ 0xfffb
 80040a4:	2100      	movs	r1, #0
 80040a6:	4638      	mov	r0, r7
 80040a8:	f7ff fe5f 	bl	8003d6a <_ZN6Entity14updateVelocityEtt>
		enemyBullet[i].updateVelocity(0, 5);
 80040ac:	2205      	movs	r2, #5
 80040ae:	2100      	movs	r1, #0
 80040b0:	4630      	mov	r0, r6
 80040b2:	f7ff fe5a 	bl	8003d6a <_ZN6Entity14updateVelocityEtt>
		shipBullet[i].updateDisplayStatus(IS_HIDDEN);
 80040b6:	2103      	movs	r1, #3
 80040b8:	4638      	mov	r0, r7
 80040ba:	f7ff fe51 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
	for(int i=0; i<MAX_BULLET;i++) {
 80040be:	351c      	adds	r5, #28
		enemyBullet[i].updateDisplayStatus(IS_HIDDEN);
 80040c0:	2103      	movs	r1, #3
 80040c2:	4630      	mov	r0, r6
 80040c4:	f7ff fe4c 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
	for(int i=0; i<MAX_BULLET;i++) {
 80040c8:	f5b5 7f8c 	cmp.w	r5, #280	@ 0x118
 80040cc:	d1d8      	bne.n	8004080 <_Z8gameTaskPv+0xc>
 80040ce:	f8df 9198 	ldr.w	r9, [pc, #408]	@ 8004268 <_Z8gameTaskPv+0x1f4>
	for(int i=0; i<MAX_ENEMY;i++) {
 80040d2:	2600      	movs	r6, #0
	for(int i=0; i<MAX_BULLET;i++) {
 80040d4:	464d      	mov	r5, r9
		enemy[i].updateCoordinate(-50, -50);
 80040d6:	f64f 72ce 	movw	r2, #65486	@ 0xffce
 80040da:	4611      	mov	r1, r2
 80040dc:	4628      	mov	r0, r5
 80040de:	f7ff fe41 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
	for(int i=0; i<MAX_ENEMY;i++) {
 80040e2:	3601      	adds	r6, #1
		enemy[i].updateDisplayStatus(IS_HIDDEN);
 80040e4:	4628      	mov	r0, r5
 80040e6:	2103      	movs	r1, #3
 80040e8:	f7ff fe3a 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
	for(int i=0; i<MAX_ENEMY;i++) {
 80040ec:	2e14      	cmp	r6, #20
 80040ee:	f105 0520 	add.w	r5, r5, #32
 80040f2:	d1f0      	bne.n	80040d6 <_Z8gameTaskPv+0x62>
 80040f4:	f8df 8174 	ldr.w	r8, [pc, #372]	@ 800426c <_Z8gameTaskPv+0x1f8>
	int loopCount = 0;
 80040f8:	2700      	movs	r7, #0
		if(shouldEndGame == true && shouldStopTask == true) break;
 80040fa:	4b57      	ldr	r3, [pc, #348]	@ (8004258 <_Z8gameTaskPv+0x1e4>)
 80040fc:	781b      	ldrb	r3, [r3, #0]
		loopCount++;
 80040fe:	3701      	adds	r7, #1
		if(shouldEndGame == true && shouldStopTask == true) break;
 8004100:	2b00      	cmp	r3, #0
 8004102:	f040 80a0 	bne.w	8004246 <_Z8gameTaskPv+0x1d2>
		if(loopCount >= 2) {
 8004106:	2f02      	cmp	r7, #2
			dt = 0;
 8004108:	bf14      	ite	ne
 800410a:	4618      	movne	r0, r3
			loopCount = 0;
 800410c:	461f      	moveq	r7, r3
		sx = gameInstance.ship.coordinateX;
 800410e:	4b53      	ldr	r3, [pc, #332]	@ (800425c <_Z8gameTaskPv+0x1e8>)
 8004110:	89a2      	ldrh	r2, [r4, #12]
 8004112:	801a      	strh	r2, [r3, #0]
		sy = gameInstance.ship.coordinateY;
 8004114:	4b52      	ldr	r3, [pc, #328]	@ (8004260 <_Z8gameTaskPv+0x1ec>)
 8004116:	89e2      	ldrh	r2, [r4, #14]
 8004118:	801a      	strh	r2, [r3, #0]
			dt = 1;
 800411a:	bf08      	it	eq
 800411c:	2001      	moveq	r0, #1
 800411e:	f888 0000 	strb.w	r0, [r8]
		updateEnemy(dt);
 8004122:	f7ff fedd 	bl	8003ee0 <_Z11updateEnemyh>
		gameInstance.ship.update(dt);
 8004126:	f898 1000 	ldrb.w	r1, [r8]
 800412a:	484e      	ldr	r0, [pc, #312]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
			if(Entity::isCollide(enemy[i], gameInstance.ship)) {
 800412c:	f8df b134 	ldr.w	fp, [pc, #308]	@ 8004264 <_Z8gameTaskPv+0x1f0>
		gameInstance.ship.update(dt);
 8004130:	f7ff fe9a 	bl	8003e68 <_ZN4Ship6updateEh>
		updateShipBullet(dt);
 8004134:	f898 0000 	ldrb.w	r0, [r8]
 8004138:	f7ff ff24 	bl	8003f84 <_Z16updateShipBulleth>
		updateEnemyBullet(dt);
 800413c:	f898 0000 	ldrb.w	r0, [r8]
 8004140:	f7ff ff54 	bl	8003fec <_Z17updateEnemyBulleth>
 8004144:	464d      	mov	r5, r9
		for(int i=0;i<MAX_ENEMY;i++) {
 8004146:	2600      	movs	r6, #0
			if(enemy[i].displayStatus != IS_SHOWN) continue;
 8004148:	f9b5 3010 	ldrsh.w	r3, [r5, #16]
 800414c:	2b01      	cmp	r3, #1
 800414e:	d16a      	bne.n	8004226 <_Z8gameTaskPv+0x1b2>
			if(Entity::isCollide(enemy[i], gameInstance.ship)) {
 8004150:	4659      	mov	r1, fp
 8004152:	4628      	mov	r0, r5
 8004154:	f7ff fe0c 	bl	8003d70 <_ZN6Entity9isCollideERS_S0_>
 8004158:	2800      	cmp	r0, #0
 800415a:	d064      	beq.n	8004226 <_Z8gameTaskPv+0x1b2>
				gameInstance.ship.updateShipHp(-1);
 800415c:	4841      	ldr	r0, [pc, #260]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
 800415e:	f04f 31ff 	mov.w	r1, #4294967295
 8004162:	f7ff feb5 	bl	8003ed0 <_ZN4Ship12updateShipHpEs>
				enemy[i].updateDisplayStatus(SHOULD_HIDE);
 8004166:	2104      	movs	r1, #4
 8004168:	4628      	mov	r0, r5
 800416a:	f7ff fdf9 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
				gameInstance.ship.updateCoordinate(104, 260);
 800416e:	483d      	ldr	r0, [pc, #244]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
 8004170:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004174:	2168      	movs	r1, #104	@ 0x68
 8004176:	f7ff fdf5 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
				if (gameInstance.ship.lives < last_lives) {
 800417a:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	@ 0x2c
 800417e:	4553      	cmp	r3, sl
 8004180:	da03      	bge.n	800418a <_Z8gameTaskPv+0x116>
				    Buzzer_LoseLife(); // Phát âm khi mất mạng
 8004182:	f7fd fc8d 	bl	8001aa0 <Buzzer_LoseLife>
				    last_lives = gameInstance.ship.lives;
 8004186:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	@ 0x2c
		for(int i=0;i<MAX_ENEMY;i++) {
 800418a:	464d      	mov	r5, r9
		for(int i=0;i<MAX_ENEMY;i++) {
 800418c:	f04f 0b00 	mov.w	fp, #0
			if(enemy[i].displayStatus != IS_SHOWN) continue;
 8004190:	f9b5 2010 	ldrsh.w	r2, [r5, #16]
 8004194:	2a01      	cmp	r2, #1
 8004196:	d119      	bne.n	80041cc <_Z8gameTaskPv+0x158>
 8004198:	4e2d      	ldr	r6, [pc, #180]	@ (8004250 <_Z8gameTaskPv+0x1dc>)
 800419a:	220a      	movs	r2, #10
				if(shipBullet[j].displayStatus != IS_SHOWN) continue;
 800419c:	f9b6 1010 	ldrsh.w	r1, [r6, #16]
 80041a0:	2901      	cmp	r1, #1
 80041a2:	d146      	bne.n	8004232 <_Z8gameTaskPv+0x1be>
				if(Entity::isCollide(enemy[i], shipBullet[j])) {
 80041a4:	4631      	mov	r1, r6
 80041a6:	4628      	mov	r0, r5
 80041a8:	9201      	str	r2, [sp, #4]
 80041aa:	f7ff fde1 	bl	8003d70 <_ZN6Entity9isCollideERS_S0_>
 80041ae:	9a01      	ldr	r2, [sp, #4]
 80041b0:	2800      	cmp	r0, #0
 80041b2:	d03e      	beq.n	8004232 <_Z8gameTaskPv+0x1be>
					enemy[i].updateDisplayStatus(SHOULD_HIDE);
 80041b4:	2104      	movs	r1, #4
 80041b6:	4628      	mov	r0, r5
 80041b8:	f7ff fdd2 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
					shipBullet[j].updateDisplayStatus(SHOULD_HIDE);
 80041bc:	2104      	movs	r1, #4
 80041be:	4630      	mov	r0, r6
 80041c0:	f7ff fdce 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
					gameInstance.updateScore(5);
 80041c4:	4821      	ldr	r0, [pc, #132]	@ (800424c <_Z8gameTaskPv+0x1d8>)
 80041c6:	2105      	movs	r1, #5
 80041c8:	f7ff fe02 	bl	8003dd0 <_ZN4Game11updateScoreEs>
		for(int i=0;i<MAX_ENEMY;i++) {
 80041cc:	f10b 0b01 	add.w	fp, fp, #1
 80041d0:	f1bb 0f14 	cmp.w	fp, #20
 80041d4:	f105 0520 	add.w	r5, r5, #32
 80041d8:	d1da      	bne.n	8004190 <_Z8gameTaskPv+0x11c>
 80041da:	4d1e      	ldr	r5, [pc, #120]	@ (8004254 <_Z8gameTaskPv+0x1e0>)
			if(Entity::isCollide(enemyBullet[i], gameInstance.ship)) {
 80041dc:	4921      	ldr	r1, [pc, #132]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
 80041de:	260a      	movs	r6, #10
			if(enemyBullet[i].displayStatus != IS_SHOWN) continue;
 80041e0:	f9b5 3010 	ldrsh.w	r3, [r5, #16]
 80041e4:	2b01      	cmp	r3, #1
 80041e6:	d129      	bne.n	800423c <_Z8gameTaskPv+0x1c8>
			if(Entity::isCollide(enemyBullet[i], gameInstance.ship)) {
 80041e8:	4628      	mov	r0, r5
 80041ea:	f7ff fdc1 	bl	8003d70 <_ZN6Entity9isCollideERS_S0_>
 80041ee:	491d      	ldr	r1, [pc, #116]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
 80041f0:	b320      	cbz	r0, 800423c <_Z8gameTaskPv+0x1c8>
				gameInstance.ship.updateShipHp(-1);
 80041f2:	481c      	ldr	r0, [pc, #112]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
 80041f4:	f04f 31ff 	mov.w	r1, #4294967295
 80041f8:	f7ff fe6a 	bl	8003ed0 <_ZN4Ship12updateShipHpEs>
				enemyBullet[i].updateDisplayStatus(SHOULD_HIDE);
 80041fc:	2104      	movs	r1, #4
 80041fe:	4628      	mov	r0, r5
 8004200:	f7ff fdae 	bl	8003d60 <_ZN6Entity19updateDisplayStatusEh>
				gameInstance.ship.updateCoordinate(104, 260);
 8004204:	4817      	ldr	r0, [pc, #92]	@ (8004264 <_Z8gameTaskPv+0x1f0>)
 8004206:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800420a:	2168      	movs	r1, #104	@ 0x68
 800420c:	f7ff fdaa 	bl	8003d64 <_ZN6Entity16updateCoordinateEtt>
		if(gameInstance.ship.lives <= 0) {
 8004210:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	@ 0x2c
 8004214:	2b00      	cmp	r3, #0
 8004216:	f73f af70 	bgt.w	80040fa <_Z8gameTaskPv+0x86>
			shouldEndGame = true;
 800421a:	4a0f      	ldr	r2, [pc, #60]	@ (8004258 <_Z8gameTaskPv+0x1e4>)
 800421c:	2301      	movs	r3, #1
 800421e:	7013      	strb	r3, [r2, #0]
			Buzzer_GameOver(); // Phát âm khi thua cuộc
 8004220:	f7fd fc56 	bl	8001ad0 <Buzzer_GameOver>
 8004224:	e769      	b.n	80040fa <_Z8gameTaskPv+0x86>
		for(int i=0;i<MAX_ENEMY;i++) {
 8004226:	3601      	adds	r6, #1
 8004228:	2e14      	cmp	r6, #20
 800422a:	f105 0520 	add.w	r5, r5, #32
 800422e:	d18b      	bne.n	8004148 <_Z8gameTaskPv+0xd4>
 8004230:	e7ab      	b.n	800418a <_Z8gameTaskPv+0x116>
			for(int j=0;j<MAX_BULLET;j++) {
 8004232:	3a01      	subs	r2, #1
 8004234:	f106 061c 	add.w	r6, r6, #28
 8004238:	d1b0      	bne.n	800419c <_Z8gameTaskPv+0x128>
 800423a:	e7c7      	b.n	80041cc <_Z8gameTaskPv+0x158>
		for(int i=0;i<MAX_BULLET;i++) {
 800423c:	3e01      	subs	r6, #1
 800423e:	f105 051c 	add.w	r5, r5, #28
 8004242:	d1cd      	bne.n	80041e0 <_Z8gameTaskPv+0x16c>
 8004244:	e7e4      	b.n	8004210 <_Z8gameTaskPv+0x19c>
}
 8004246:	b003      	add	sp, #12
 8004248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800424c:	200024f0 	.word	0x200024f0
 8004250:	200023d8 	.word	0x200023d8
 8004254:	200022c0 	.word	0x200022c0
 8004258:	20002036 	.word	0x20002036
 800425c:	2000203a 	.word	0x2000203a
 8004260:	20002038 	.word	0x20002038
 8004264:	200024f8 	.word	0x200024f8
 8004268:	20002040 	.word	0x20002040
 800426c:	20002034 	.word	0x20002034

08004270 <_GLOBAL__sub_I_gameInstance>:
}
 8004270:	b538      	push	{r3, r4, r5, lr}
Game gameInstance;
 8004272:	480f      	ldr	r0, [pc, #60]	@ (80042b0 <_GLOBAL__sub_I_gameInstance+0x40>)
Bullet shipBullet[MAX_BULLET];
 8004274:	4d0f      	ldr	r5, [pc, #60]	@ (80042b4 <_GLOBAL__sub_I_gameInstance+0x44>)
Game gameInstance;
 8004276:	f7ff fd9d 	bl	8003db4 <_ZN4GameC1Ev>
 800427a:	2400      	movs	r4, #0
Bullet shipBullet[MAX_BULLET];
 800427c:	1928      	adds	r0, r5, r4
 800427e:	341c      	adds	r4, #28
 8004280:	f7ff fcb6 	bl	8003bf0 <_ZN6BulletC1Ev>
 8004284:	f5b4 7f8c 	cmp.w	r4, #280	@ 0x118
 8004288:	d1f8      	bne.n	800427c <_GLOBAL__sub_I_gameInstance+0xc>
Bullet enemyBullet[MAX_BULLET];
 800428a:	4d0b      	ldr	r5, [pc, #44]	@ (80042b8 <_GLOBAL__sub_I_gameInstance+0x48>)
 800428c:	2400      	movs	r4, #0
 800428e:	1928      	adds	r0, r5, r4
 8004290:	341c      	adds	r4, #28
 8004292:	f7ff fcad 	bl	8003bf0 <_ZN6BulletC1Ev>
 8004296:	f5b4 7f8c 	cmp.w	r4, #280	@ 0x118
 800429a:	d1f8      	bne.n	800428e <_GLOBAL__sub_I_gameInstance+0x1e>
Enemy enemy[MAX_ENEMY];
 800429c:	4d07      	ldr	r5, [pc, #28]	@ (80042bc <_GLOBAL__sub_I_gameInstance+0x4c>)
 800429e:	2400      	movs	r4, #0
 80042a0:	1928      	adds	r0, r5, r4
 80042a2:	3420      	adds	r4, #32
 80042a4:	f7ff fcf8 	bl	8003c98 <_ZN5EnemyC1Ev>
 80042a8:	f5b4 7f20 	cmp.w	r4, #640	@ 0x280
 80042ac:	d1f8      	bne.n	80042a0 <_GLOBAL__sub_I_gameInstance+0x30>
}
 80042ae:	bd38      	pop	{r3, r4, r5, pc}
 80042b0:	200024f0 	.word	0x200024f0
 80042b4:	200023d8 	.word	0x200023d8
 80042b8:	200022c0 	.word	0x200022c0
 80042bc:	20002040 	.word	0x20002040

080042c0 <_GLOBAL__sub_D_gameInstance>:
 80042c0:	4816      	ldr	r0, [pc, #88]	@ (800431c <_GLOBAL__sub_D_gameInstance+0x5c>)
 80042c2:	b538      	push	{r3, r4, r5, lr}
 80042c4:	2415      	movs	r4, #21
Enemy enemy[MAX_ENEMY];
 80042c6:	3c01      	subs	r4, #1
 80042c8:	f1a0 0520 	sub.w	r5, r0, #32
 80042cc:	d112      	bne.n	80042f4 <_GLOBAL__sub_D_gameInstance+0x34>
 80042ce:	4814      	ldr	r0, [pc, #80]	@ (8004320 <_GLOBAL__sub_D_gameInstance+0x60>)
 80042d0:	240b      	movs	r4, #11
Bullet enemyBullet[MAX_BULLET];
 80042d2:	3c01      	subs	r4, #1
 80042d4:	f1a0 051c 	sub.w	r5, r0, #28
 80042d8:	d114      	bne.n	8004304 <_GLOBAL__sub_D_gameInstance+0x44>
 80042da:	4812      	ldr	r0, [pc, #72]	@ (8004324 <_GLOBAL__sub_D_gameInstance+0x64>)
 80042dc:	240b      	movs	r4, #11
Bullet shipBullet[MAX_BULLET];
 80042de:	3c01      	subs	r4, #1
 80042e0:	f1a0 051c 	sub.w	r5, r0, #28
 80042e4:	d015      	beq.n	8004312 <_GLOBAL__sub_D_gameInstance+0x52>
 80042e6:	f8d0 30fc 	ldr.w	r3, [r0, #252]	@ 0xfc
 80042ea:	30fc      	adds	r0, #252	@ 0xfc
 80042ec:	685b      	ldr	r3, [r3, #4]
 80042ee:	4798      	blx	r3
 80042f0:	4628      	mov	r0, r5
 80042f2:	e7f4      	b.n	80042de <_GLOBAL__sub_D_gameInstance+0x1e>
Enemy enemy[MAX_ENEMY];
 80042f4:	f8d5 3280 	ldr.w	r3, [r5, #640]	@ 0x280
 80042f8:	f500 7018 	add.w	r0, r0, #608	@ 0x260
 80042fc:	685b      	ldr	r3, [r3, #4]
 80042fe:	4798      	blx	r3
 8004300:	4628      	mov	r0, r5
 8004302:	e7e0      	b.n	80042c6 <_GLOBAL__sub_D_gameInstance+0x6>
Bullet enemyBullet[MAX_BULLET];
 8004304:	f8d5 3118 	ldr.w	r3, [r5, #280]	@ 0x118
 8004308:	30fc      	adds	r0, #252	@ 0xfc
 800430a:	685b      	ldr	r3, [r3, #4]
 800430c:	4798      	blx	r3
 800430e:	4628      	mov	r0, r5
 8004310:	e7df      	b.n	80042d2 <_GLOBAL__sub_D_gameInstance+0x12>
}
 8004312:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
Game gameInstance;
 8004316:	4804      	ldr	r0, [pc, #16]	@ (8004328 <_GLOBAL__sub_D_gameInstance+0x68>)
 8004318:	f7ff bd5e 	b.w	8003dd8 <_ZN4GameD1Ev>
 800431c:	20002040 	.word	0x20002040
 8004320:	200022c0 	.word	0x200022c0
 8004324:	200023d8 	.word	0x200023d8
 8004328:	200024f0 	.word	0x200024f0

0800432c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800432c:	20f0      	movs	r0, #240	@ 0xf0
 800432e:	4770      	bx	lr

08004330 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8004330:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8004334:	4770      	bx	lr

08004336 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004336:	2029      	movs	r0, #41	@ 0x29
 8004338:	f7fd bb56 	b.w	80019e8 <LCD_IO_WriteReg>

0800433c <ili9341_DisplayOff>:
 800433c:	2028      	movs	r0, #40	@ 0x28
 800433e:	f7fd bb53 	b.w	80019e8 <LCD_IO_WriteReg>

08004342 <ili9341_Init>:
{
 8004342:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004344:	f7fd fb24 	bl	8001990 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004348:	20ca      	movs	r0, #202	@ 0xca
 800434a:	f7fd fb4d 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800434e:	20c3      	movs	r0, #195	@ 0xc3
 8004350:	f7fd fb2e 	bl	80019b0 <LCD_IO_WriteData>
 8004354:	2008      	movs	r0, #8
 8004356:	f7fd fb2b 	bl	80019b0 <LCD_IO_WriteData>
 800435a:	2050      	movs	r0, #80	@ 0x50
 800435c:	f7fd fb28 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004360:	20cf      	movs	r0, #207	@ 0xcf
 8004362:	f7fd fb41 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004366:	2000      	movs	r0, #0
 8004368:	f7fd fb22 	bl	80019b0 <LCD_IO_WriteData>
 800436c:	20c1      	movs	r0, #193	@ 0xc1
 800436e:	f7fd fb1f 	bl	80019b0 <LCD_IO_WriteData>
 8004372:	2030      	movs	r0, #48	@ 0x30
 8004374:	f7fd fb1c 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004378:	20ed      	movs	r0, #237	@ 0xed
 800437a:	f7fd fb35 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800437e:	2064      	movs	r0, #100	@ 0x64
 8004380:	f7fd fb16 	bl	80019b0 <LCD_IO_WriteData>
 8004384:	2003      	movs	r0, #3
 8004386:	f7fd fb13 	bl	80019b0 <LCD_IO_WriteData>
 800438a:	2012      	movs	r0, #18
 800438c:	f7fd fb10 	bl	80019b0 <LCD_IO_WriteData>
 8004390:	2081      	movs	r0, #129	@ 0x81
 8004392:	f7fd fb0d 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004396:	20e8      	movs	r0, #232	@ 0xe8
 8004398:	f7fd fb26 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800439c:	2085      	movs	r0, #133	@ 0x85
 800439e:	f7fd fb07 	bl	80019b0 <LCD_IO_WriteData>
 80043a2:	2000      	movs	r0, #0
 80043a4:	f7fd fb04 	bl	80019b0 <LCD_IO_WriteData>
 80043a8:	2078      	movs	r0, #120	@ 0x78
 80043aa:	f7fd fb01 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043ae:	20cb      	movs	r0, #203	@ 0xcb
 80043b0:	f7fd fb1a 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043b4:	2039      	movs	r0, #57	@ 0x39
 80043b6:	f7fd fafb 	bl	80019b0 <LCD_IO_WriteData>
 80043ba:	202c      	movs	r0, #44	@ 0x2c
 80043bc:	f7fd faf8 	bl	80019b0 <LCD_IO_WriteData>
 80043c0:	2000      	movs	r0, #0
 80043c2:	f7fd faf5 	bl	80019b0 <LCD_IO_WriteData>
 80043c6:	2034      	movs	r0, #52	@ 0x34
 80043c8:	f7fd faf2 	bl	80019b0 <LCD_IO_WriteData>
 80043cc:	2002      	movs	r0, #2
 80043ce:	f7fd faef 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043d2:	20f7      	movs	r0, #247	@ 0xf7
 80043d4:	f7fd fb08 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043d8:	2020      	movs	r0, #32
 80043da:	f7fd fae9 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043de:	20ea      	movs	r0, #234	@ 0xea
 80043e0:	f7fd fb02 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043e4:	2000      	movs	r0, #0
 80043e6:	f7fd fae3 	bl	80019b0 <LCD_IO_WriteData>
 80043ea:	2000      	movs	r0, #0
 80043ec:	f7fd fae0 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043f0:	20b1      	movs	r0, #177	@ 0xb1
 80043f2:	f7fd faf9 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043f6:	2000      	movs	r0, #0
 80043f8:	f7fd fada 	bl	80019b0 <LCD_IO_WriteData>
 80043fc:	201b      	movs	r0, #27
 80043fe:	f7fd fad7 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004402:	20b6      	movs	r0, #182	@ 0xb6
 8004404:	f7fd faf0 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004408:	200a      	movs	r0, #10
 800440a:	f7fd fad1 	bl	80019b0 <LCD_IO_WriteData>
 800440e:	20a2      	movs	r0, #162	@ 0xa2
 8004410:	f7fd face 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004414:	20c0      	movs	r0, #192	@ 0xc0
 8004416:	f7fd fae7 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800441a:	2010      	movs	r0, #16
 800441c:	f7fd fac8 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004420:	20c1      	movs	r0, #193	@ 0xc1
 8004422:	f7fd fae1 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004426:	2010      	movs	r0, #16
 8004428:	f7fd fac2 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800442c:	20c5      	movs	r0, #197	@ 0xc5
 800442e:	f7fd fadb 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004432:	2045      	movs	r0, #69	@ 0x45
 8004434:	f7fd fabc 	bl	80019b0 <LCD_IO_WriteData>
 8004438:	2015      	movs	r0, #21
 800443a:	f7fd fab9 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800443e:	20c7      	movs	r0, #199	@ 0xc7
 8004440:	f7fd fad2 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004444:	2090      	movs	r0, #144	@ 0x90
 8004446:	f7fd fab3 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800444a:	2036      	movs	r0, #54	@ 0x36
 800444c:	f7fd facc 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004450:	20c8      	movs	r0, #200	@ 0xc8
 8004452:	f7fd faad 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004456:	20f2      	movs	r0, #242	@ 0xf2
 8004458:	f7fd fac6 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800445c:	2000      	movs	r0, #0
 800445e:	f7fd faa7 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004462:	20b0      	movs	r0, #176	@ 0xb0
 8004464:	f7fd fac0 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004468:	20c2      	movs	r0, #194	@ 0xc2
 800446a:	f7fd faa1 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800446e:	20b6      	movs	r0, #182	@ 0xb6
 8004470:	f7fd faba 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004474:	200a      	movs	r0, #10
 8004476:	f7fd fa9b 	bl	80019b0 <LCD_IO_WriteData>
 800447a:	20a7      	movs	r0, #167	@ 0xa7
 800447c:	f7fd fa98 	bl	80019b0 <LCD_IO_WriteData>
 8004480:	2027      	movs	r0, #39	@ 0x27
 8004482:	f7fd fa95 	bl	80019b0 <LCD_IO_WriteData>
 8004486:	2004      	movs	r0, #4
 8004488:	f7fd fa92 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800448c:	202a      	movs	r0, #42	@ 0x2a
 800448e:	f7fd faab 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004492:	2000      	movs	r0, #0
 8004494:	f7fd fa8c 	bl	80019b0 <LCD_IO_WriteData>
 8004498:	2000      	movs	r0, #0
 800449a:	f7fd fa89 	bl	80019b0 <LCD_IO_WriteData>
 800449e:	2000      	movs	r0, #0
 80044a0:	f7fd fa86 	bl	80019b0 <LCD_IO_WriteData>
 80044a4:	20ef      	movs	r0, #239	@ 0xef
 80044a6:	f7fd fa83 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044aa:	202b      	movs	r0, #43	@ 0x2b
 80044ac:	f7fd fa9c 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044b0:	2000      	movs	r0, #0
 80044b2:	f7fd fa7d 	bl	80019b0 <LCD_IO_WriteData>
 80044b6:	2000      	movs	r0, #0
 80044b8:	f7fd fa7a 	bl	80019b0 <LCD_IO_WriteData>
 80044bc:	2001      	movs	r0, #1
 80044be:	f7fd fa77 	bl	80019b0 <LCD_IO_WriteData>
 80044c2:	203f      	movs	r0, #63	@ 0x3f
 80044c4:	f7fd fa74 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044c8:	20f6      	movs	r0, #246	@ 0xf6
 80044ca:	f7fd fa8d 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044ce:	2001      	movs	r0, #1
 80044d0:	f7fd fa6e 	bl	80019b0 <LCD_IO_WriteData>
 80044d4:	2000      	movs	r0, #0
 80044d6:	f7fd fa6b 	bl	80019b0 <LCD_IO_WriteData>
 80044da:	2006      	movs	r0, #6
 80044dc:	f7fd fa68 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044e0:	202c      	movs	r0, #44	@ 0x2c
 80044e2:	f7fd fa81 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80044e6:	20c8      	movs	r0, #200	@ 0xc8
 80044e8:	f7fd facc 	bl	8001a84 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80044ec:	2026      	movs	r0, #38	@ 0x26
 80044ee:	f7fd fa7b 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044f2:	2001      	movs	r0, #1
 80044f4:	f7fd fa5c 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044f8:	20e0      	movs	r0, #224	@ 0xe0
 80044fa:	f7fd fa75 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044fe:	200f      	movs	r0, #15
 8004500:	f7fd fa56 	bl	80019b0 <LCD_IO_WriteData>
 8004504:	2029      	movs	r0, #41	@ 0x29
 8004506:	f7fd fa53 	bl	80019b0 <LCD_IO_WriteData>
 800450a:	2024      	movs	r0, #36	@ 0x24
 800450c:	f7fd fa50 	bl	80019b0 <LCD_IO_WriteData>
 8004510:	200c      	movs	r0, #12
 8004512:	f7fd fa4d 	bl	80019b0 <LCD_IO_WriteData>
 8004516:	200e      	movs	r0, #14
 8004518:	f7fd fa4a 	bl	80019b0 <LCD_IO_WriteData>
 800451c:	2009      	movs	r0, #9
 800451e:	f7fd fa47 	bl	80019b0 <LCD_IO_WriteData>
 8004522:	204e      	movs	r0, #78	@ 0x4e
 8004524:	f7fd fa44 	bl	80019b0 <LCD_IO_WriteData>
 8004528:	2078      	movs	r0, #120	@ 0x78
 800452a:	f7fd fa41 	bl	80019b0 <LCD_IO_WriteData>
 800452e:	203c      	movs	r0, #60	@ 0x3c
 8004530:	f7fd fa3e 	bl	80019b0 <LCD_IO_WriteData>
 8004534:	2009      	movs	r0, #9
 8004536:	f7fd fa3b 	bl	80019b0 <LCD_IO_WriteData>
 800453a:	2013      	movs	r0, #19
 800453c:	f7fd fa38 	bl	80019b0 <LCD_IO_WriteData>
 8004540:	2005      	movs	r0, #5
 8004542:	f7fd fa35 	bl	80019b0 <LCD_IO_WriteData>
 8004546:	2017      	movs	r0, #23
 8004548:	f7fd fa32 	bl	80019b0 <LCD_IO_WriteData>
 800454c:	2011      	movs	r0, #17
 800454e:	f7fd fa2f 	bl	80019b0 <LCD_IO_WriteData>
 8004552:	2000      	movs	r0, #0
 8004554:	f7fd fa2c 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004558:	20e1      	movs	r0, #225	@ 0xe1
 800455a:	f7fd fa45 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800455e:	2000      	movs	r0, #0
 8004560:	f7fd fa26 	bl	80019b0 <LCD_IO_WriteData>
 8004564:	2016      	movs	r0, #22
 8004566:	f7fd fa23 	bl	80019b0 <LCD_IO_WriteData>
 800456a:	201b      	movs	r0, #27
 800456c:	f7fd fa20 	bl	80019b0 <LCD_IO_WriteData>
 8004570:	2004      	movs	r0, #4
 8004572:	f7fd fa1d 	bl	80019b0 <LCD_IO_WriteData>
 8004576:	2011      	movs	r0, #17
 8004578:	f7fd fa1a 	bl	80019b0 <LCD_IO_WriteData>
 800457c:	2007      	movs	r0, #7
 800457e:	f7fd fa17 	bl	80019b0 <LCD_IO_WriteData>
 8004582:	2031      	movs	r0, #49	@ 0x31
 8004584:	f7fd fa14 	bl	80019b0 <LCD_IO_WriteData>
 8004588:	2033      	movs	r0, #51	@ 0x33
 800458a:	f7fd fa11 	bl	80019b0 <LCD_IO_WriteData>
 800458e:	2042      	movs	r0, #66	@ 0x42
 8004590:	f7fd fa0e 	bl	80019b0 <LCD_IO_WriteData>
 8004594:	2005      	movs	r0, #5
 8004596:	f7fd fa0b 	bl	80019b0 <LCD_IO_WriteData>
 800459a:	200c      	movs	r0, #12
 800459c:	f7fd fa08 	bl	80019b0 <LCD_IO_WriteData>
 80045a0:	200a      	movs	r0, #10
 80045a2:	f7fd fa05 	bl	80019b0 <LCD_IO_WriteData>
 80045a6:	2028      	movs	r0, #40	@ 0x28
 80045a8:	f7fd fa02 	bl	80019b0 <LCD_IO_WriteData>
 80045ac:	202f      	movs	r0, #47	@ 0x2f
 80045ae:	f7fd f9ff 	bl	80019b0 <LCD_IO_WriteData>
 80045b2:	200f      	movs	r0, #15
 80045b4:	f7fd f9fc 	bl	80019b0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80045b8:	2011      	movs	r0, #17
 80045ba:	f7fd fa15 	bl	80019e8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80045be:	20c8      	movs	r0, #200	@ 0xc8
 80045c0:	f7fd fa60 	bl	8001a84 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80045c4:	2029      	movs	r0, #41	@ 0x29
 80045c6:	f7fd fa0f 	bl	80019e8 <LCD_IO_WriteReg>
}
 80045ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80045ce:	202c      	movs	r0, #44	@ 0x2c
 80045d0:	f7fd ba0a 	b.w	80019e8 <LCD_IO_WriteReg>

080045d4 <ili9341_ReadID>:
{
 80045d4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80045d6:	f7fd f9db 	bl	8001990 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80045da:	2103      	movs	r1, #3
 80045dc:	20d3      	movs	r0, #211	@ 0xd3
 80045de:	f7fd fa1f 	bl	8001a20 <LCD_IO_ReadData>
}
 80045e2:	b280      	uxth	r0, r0
 80045e4:	bd08      	pop	{r3, pc}

080045e6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80045e6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80045e8:	b2c4      	uxtb	r4, r0
 80045ea:	2202      	movs	r2, #2
 80045ec:	2103      	movs	r1, #3
 80045ee:	4620      	mov	r0, r4
 80045f0:	f7fd f984 	bl	80018fc <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80045f4:	200a      	movs	r0, #10
 80045f6:	f7fd f9c9 	bl	800198c <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80045fa:	4620      	mov	r0, r4
 80045fc:	2200      	movs	r2, #0
 80045fe:	2103      	movs	r1, #3
 8004600:	f7fd f97c 	bl	80018fc <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8004604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004608:	2002      	movs	r0, #2
 800460a:	f7fd b9bf 	b.w	800198c <IOE_Delay>

0800460e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800460e:	b538      	push	{r3, r4, r5, lr}
 8004610:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004612:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004614:	f7fd f970 	bl	80018f8 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004618:	2100      	movs	r1, #0
 800461a:	4620      	mov	r0, r4
 800461c:	f7fd f986 	bl	800192c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004620:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004622:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004624:	4620      	mov	r0, r4
 8004626:	f7fd f981 	bl	800192c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800462a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800462e:	b280      	uxth	r0, r0
 8004630:	bd38      	pop	{r3, r4, r5, pc}

08004632 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8004632:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004634:	b2c4      	uxtb	r4, r0
 8004636:	2140      	movs	r1, #64	@ 0x40
 8004638:	4620      	mov	r0, r4
 800463a:	f7fd f977 	bl	800192c <IOE_Read>
  
  if(state > 0)
 800463e:	0603      	lsls	r3, r0, #24
 8004640:	d507      	bpl.n	8004652 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004642:	214c      	movs	r1, #76	@ 0x4c
 8004644:	4620      	mov	r0, r4
 8004646:	f7fd f971 	bl	800192c <IOE_Read>
 800464a:	3800      	subs	r0, #0
 800464c:	bf18      	it	ne
 800464e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004650:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004652:	2201      	movs	r2, #1
 8004654:	214b      	movs	r1, #75	@ 0x4b
 8004656:	4620      	mov	r0, r4
 8004658:	f7fd f950 	bl	80018fc <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800465c:	4620      	mov	r0, r4
 800465e:	2200      	movs	r2, #0
 8004660:	214b      	movs	r1, #75	@ 0x4b
 8004662:	f7fd f94b 	bl	80018fc <IOE_Write>
  uint8_t ret = 0;
 8004666:	2000      	movs	r0, #0
 8004668:	e7f2      	b.n	8004650 <stmpe811_TS_DetectTouch+0x1e>

0800466a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800466a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800466c:	2304      	movs	r3, #4
 800466e:	b2c4      	uxtb	r4, r0
{
 8004670:	460e      	mov	r6, r1
 8004672:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004674:	21d7      	movs	r1, #215	@ 0xd7
 8004676:	eb0d 0203 	add.w	r2, sp, r3
 800467a:	4620      	mov	r0, r4
 800467c:	f7fd f970 	bl	8001960 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004680:	9b01      	ldr	r3, [sp, #4]
 8004682:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004684:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004686:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800468a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800468c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800468e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004690:	2201      	movs	r2, #1
 8004692:	214b      	movs	r1, #75	@ 0x4b
 8004694:	f7fd f932 	bl	80018fc <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004698:	2200      	movs	r2, #0
 800469a:	214b      	movs	r1, #75	@ 0x4b
 800469c:	4620      	mov	r0, r4
 800469e:	f7fd f92d 	bl	80018fc <IOE_Write>
}
 80046a2:	b002      	add	sp, #8
 80046a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080046a8 <stmpe811_Init>:
{
 80046a8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80046aa:	4a0a      	ldr	r2, [pc, #40]	@ (80046d4 <stmpe811_Init+0x2c>)
 80046ac:	7813      	ldrb	r3, [r2, #0]
 80046ae:	4298      	cmp	r0, r3
{
 80046b0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80046b2:	d00d      	beq.n	80046d0 <stmpe811_Init+0x28>
 80046b4:	7851      	ldrb	r1, [r2, #1]
 80046b6:	4288      	cmp	r0, r1
 80046b8:	d00a      	beq.n	80046d0 <stmpe811_Init+0x28>
 80046ba:	b10b      	cbz	r3, 80046c0 <stmpe811_Init+0x18>
 80046bc:	b941      	cbnz	r1, 80046d0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80046be:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 80046c0:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80046c2:	f7fd f919 	bl	80018f8 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80046c6:	4620      	mov	r0, r4
}
 80046c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80046cc:	f7ff bf8b 	b.w	80045e6 <stmpe811_Reset>
}
 80046d0:	bd10      	pop	{r4, pc}
 80046d2:	bf00      	nop
 80046d4:	20002520 	.word	0x20002520

080046d8 <stmpe811_EnableGlobalIT>:
{
 80046d8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80046da:	b2c4      	uxtb	r4, r0
 80046dc:	2109      	movs	r1, #9
 80046de:	4620      	mov	r0, r4
 80046e0:	f7fd f924 	bl	800192c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80046e4:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80046e8:	b2d2      	uxtb	r2, r2
 80046ea:	4620      	mov	r0, r4
 80046ec:	2109      	movs	r1, #9
}
 80046ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80046f2:	f7fd b903 	b.w	80018fc <IOE_Write>

080046f6 <stmpe811_DisableGlobalIT>:
{
 80046f6:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80046f8:	b2c4      	uxtb	r4, r0
 80046fa:	2109      	movs	r1, #9
 80046fc:	4620      	mov	r0, r4
 80046fe:	f7fd f915 	bl	800192c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004702:	2109      	movs	r1, #9
 8004704:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8004708:	4620      	mov	r0, r4
}
 800470a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800470e:	f7fd b8f5 	b.w	80018fc <IOE_Write>

08004712 <stmpe811_EnableITSource>:
{
 8004712:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004714:	b2c4      	uxtb	r4, r0
{
 8004716:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004718:	4620      	mov	r0, r4
 800471a:	210a      	movs	r1, #10
 800471c:	f7fd f906 	bl	800192c <IOE_Read>
  tmp |= Source; 
 8004720:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004724:	b2d2      	uxtb	r2, r2
 8004726:	4620      	mov	r0, r4
 8004728:	210a      	movs	r1, #10
}
 800472a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800472e:	f7fd b8e5 	b.w	80018fc <IOE_Write>

08004732 <stmpe811_TS_EnableIT>:
{
 8004732:	b510      	push	{r4, lr}
 8004734:	4604      	mov	r4, r0
  IOE_ITConfig();
 8004736:	f7fd f8e0 	bl	80018fa <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800473a:	4620      	mov	r0, r4
 800473c:	211f      	movs	r1, #31
 800473e:	f7ff ffe8 	bl	8004712 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004742:	4620      	mov	r0, r4
}
 8004744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004748:	f7ff bfc6 	b.w	80046d8 <stmpe811_EnableGlobalIT>

0800474c <stmpe811_DisableITSource>:
{
 800474c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800474e:	b2c4      	uxtb	r4, r0
{
 8004750:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004752:	4620      	mov	r0, r4
 8004754:	210a      	movs	r1, #10
 8004756:	f7fd f8e9 	bl	800192c <IOE_Read>
  tmp &= ~Source; 
 800475a:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800475e:	b2d2      	uxtb	r2, r2
 8004760:	4620      	mov	r0, r4
 8004762:	210a      	movs	r1, #10
}
 8004764:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004768:	f7fd b8c8 	b.w	80018fc <IOE_Write>

0800476c <stmpe811_TS_DisableIT>:
{
 800476c:	b510      	push	{r4, lr}
 800476e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004770:	f7ff ffc1 	bl	80046f6 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004774:	4620      	mov	r0, r4
 8004776:	211f      	movs	r1, #31
}
 8004778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800477c:	f7ff bfe6 	b.w	800474c <stmpe811_DisableITSource>

08004780 <stmpe811_ReadGITStatus>:
{
 8004780:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004782:	b2c0      	uxtb	r0, r0
{
 8004784:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004786:	210b      	movs	r1, #11
 8004788:	f7fd f8d0 	bl	800192c <IOE_Read>
}
 800478c:	4020      	ands	r0, r4
 800478e:	bd10      	pop	{r4, pc}

08004790 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004790:	211f      	movs	r1, #31
 8004792:	f7ff bff5 	b.w	8004780 <stmpe811_ReadGITStatus>

08004796 <stmpe811_ClearGlobalIT>:
{
 8004796:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004798:	b2c0      	uxtb	r0, r0
 800479a:	210b      	movs	r1, #11
 800479c:	f7fd b8ae 	b.w	80018fc <IOE_Write>

080047a0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80047a0:	211f      	movs	r1, #31
 80047a2:	f7ff bff8 	b.w	8004796 <stmpe811_ClearGlobalIT>

080047a6 <stmpe811_IO_EnableAF>:
{
 80047a6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80047a8:	b2c4      	uxtb	r4, r0
{
 80047aa:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80047ac:	4620      	mov	r0, r4
 80047ae:	2117      	movs	r1, #23
 80047b0:	f7fd f8bc 	bl	800192c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80047b4:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80047b8:	b2d2      	uxtb	r2, r2
 80047ba:	4620      	mov	r0, r4
 80047bc:	2117      	movs	r1, #23
}
 80047be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80047c2:	f7fd b89b 	b.w	80018fc <IOE_Write>

080047c6 <stmpe811_TS_Start>:
{
 80047c6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80047c8:	b2c4      	uxtb	r4, r0
{
 80047ca:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80047cc:	2104      	movs	r1, #4
 80047ce:	4620      	mov	r0, r4
 80047d0:	f7fd f8ac 	bl	800192c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80047d4:	2104      	movs	r1, #4
 80047d6:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80047da:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80047dc:	4620      	mov	r0, r4
 80047de:	f7fd f88d 	bl	80018fc <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80047e2:	4630      	mov	r0, r6
 80047e4:	21f0      	movs	r1, #240	@ 0xf0
 80047e6:	f7ff ffde 	bl	80047a6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80047ea:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 80047ee:	4620      	mov	r0, r4
 80047f0:	2104      	movs	r1, #4
 80047f2:	f7fd f883 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80047f6:	2249      	movs	r2, #73	@ 0x49
 80047f8:	2120      	movs	r1, #32
 80047fa:	4620      	mov	r0, r4
 80047fc:	f7fd f87e 	bl	80018fc <IOE_Write>
  IOE_Delay(2); 
 8004800:	2002      	movs	r0, #2
 8004802:	f7fd f8c3 	bl	800198c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004806:	4620      	mov	r0, r4
 8004808:	2201      	movs	r2, #1
 800480a:	2121      	movs	r1, #33	@ 0x21
 800480c:	f7fd f876 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004810:	4620      	mov	r0, r4
 8004812:	229a      	movs	r2, #154	@ 0x9a
 8004814:	2141      	movs	r1, #65	@ 0x41
 8004816:	f7fd f871 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800481a:	4620      	mov	r0, r4
 800481c:	2201      	movs	r2, #1
 800481e:	214a      	movs	r1, #74	@ 0x4a
 8004820:	f7fd f86c 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004824:	4620      	mov	r0, r4
 8004826:	2201      	movs	r2, #1
 8004828:	214b      	movs	r1, #75	@ 0x4b
 800482a:	f7fd f867 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800482e:	4620      	mov	r0, r4
 8004830:	2200      	movs	r2, #0
 8004832:	214b      	movs	r1, #75	@ 0x4b
 8004834:	f7fd f862 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004838:	4620      	mov	r0, r4
 800483a:	2201      	movs	r2, #1
 800483c:	2156      	movs	r1, #86	@ 0x56
 800483e:	f7fd f85d 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004842:	4620      	mov	r0, r4
 8004844:	2201      	movs	r2, #1
 8004846:	2158      	movs	r1, #88	@ 0x58
 8004848:	f7fd f858 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800484c:	4620      	mov	r0, r4
 800484e:	2201      	movs	r2, #1
 8004850:	2140      	movs	r1, #64	@ 0x40
 8004852:	f7fd f853 	bl	80018fc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004856:	4620      	mov	r0, r4
 8004858:	22ff      	movs	r2, #255	@ 0xff
 800485a:	210b      	movs	r1, #11
 800485c:	f7fd f84e 	bl	80018fc <IOE_Write>
}
 8004860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004864:	2002      	movs	r0, #2
 8004866:	f7fd b891 	b.w	800198c <IOE_Delay>
	...

0800486c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800486c:	4b05      	ldr	r3, [pc, #20]	@ (8004884 <SystemInit+0x18>)
 800486e:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8004872:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004876:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800487a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800487e:	609a      	str	r2, [r3, #8]
#endif
}
 8004880:	4770      	bx	lr
 8004882:	bf00      	nop
 8004884:	e000ed00 	.word	0xe000ed00

08004888 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004888:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800488a:	4b0b      	ldr	r3, [pc, #44]	@ (80048b8 <HAL_Init+0x30>)
 800488c:	681a      	ldr	r2, [r3, #0]
 800488e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004892:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004894:	681a      	ldr	r2, [r3, #0]
 8004896:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800489a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800489c:	681a      	ldr	r2, [r3, #0]
 800489e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80048a2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80048a4:	2003      	movs	r0, #3
 80048a6:	f000 fa63 	bl	8004d70 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80048aa:	2000      	movs	r0, #0
 80048ac:	f7fd fb7c 	bl	8001fa8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80048b0:	f7fd f946 	bl	8001b40 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80048b4:	2000      	movs	r0, #0
 80048b6:	bd08      	pop	{r3, pc}
 80048b8:	40023c00 	.word	0x40023c00

080048bc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80048bc:	4a03      	ldr	r2, [pc, #12]	@ (80048cc <HAL_IncTick+0x10>)
 80048be:	4b04      	ldr	r3, [pc, #16]	@ (80048d0 <HAL_IncTick+0x14>)
 80048c0:	6811      	ldr	r1, [r2, #0]
 80048c2:	781b      	ldrb	r3, [r3, #0]
 80048c4:	440b      	add	r3, r1
 80048c6:	6013      	str	r3, [r2, #0]
}
 80048c8:	4770      	bx	lr
 80048ca:	bf00      	nop
 80048cc:	20002524 	.word	0x20002524
 80048d0:	20000080 	.word	0x20000080

080048d4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80048d4:	4b01      	ldr	r3, [pc, #4]	@ (80048dc <HAL_GetTick+0x8>)
 80048d6:	6818      	ldr	r0, [r3, #0]
}
 80048d8:	4770      	bx	lr
 80048da:	bf00      	nop
 80048dc:	20002524 	.word	0x20002524

080048e0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80048e0:	b538      	push	{r3, r4, r5, lr}
 80048e2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80048e4:	f7ff fff6 	bl	80048d4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80048e8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80048ea:	bf1c      	itt	ne
 80048ec:	4b05      	ldrne	r3, [pc, #20]	@ (8004904 <HAL_Delay+0x24>)
 80048ee:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80048f0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80048f2:	bf18      	it	ne
 80048f4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80048f6:	f7ff ffed 	bl	80048d4 <HAL_GetTick>
 80048fa:	1b43      	subs	r3, r0, r5
 80048fc:	42a3      	cmp	r3, r4
 80048fe:	d3fa      	bcc.n	80048f6 <HAL_Delay+0x16>
  {
  }
}
 8004900:	bd38      	pop	{r3, r4, r5, pc}
 8004902:	bf00      	nop
 8004904:	20000080 	.word	0x20000080

08004908 <HAL_ADC_MspInit>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_MspInit could be implemented in the user file
   */
}
 8004908:	4770      	bx	lr
	...

0800490c <HAL_ADC_Init>:
{
 800490c:	b538      	push	{r3, r4, r5, lr}
  if (hadc == NULL)
 800490e:	4604      	mov	r4, r0
 8004910:	2800      	cmp	r0, #0
 8004912:	f000 809b 	beq.w	8004a4c <HAL_ADC_Init+0x140>
  if (hadc->State == HAL_ADC_STATE_RESET)
 8004916:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8004918:	b925      	cbnz	r5, 8004924 <HAL_ADC_Init+0x18>
    HAL_ADC_MspInit(hadc);
 800491a:	f7ff fff5 	bl	8004908 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 800491e:	6465      	str	r5, [r4, #68]	@ 0x44
    hadc->Lock = HAL_UNLOCKED;
 8004920:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8004924:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004926:	06db      	lsls	r3, r3, #27
 8004928:	f100 808e 	bmi.w	8004a48 <HAL_ADC_Init+0x13c>
    ADC_STATE_CLR_SET(hadc->State,
 800492c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800492e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8004932:	f023 0302 	bic.w	r3, r3, #2
 8004936:	f043 0302 	orr.w	r3, r3, #2
 800493a:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800493c:	4b44      	ldr	r3, [pc, #272]	@ (8004a50 <HAL_ADC_Init+0x144>)
 800493e:	685a      	ldr	r2, [r3, #4]
 8004940:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8004944:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8004946:	685a      	ldr	r2, [r3, #4]
 8004948:	6861      	ldr	r1, [r4, #4]
 800494a:	430a      	orrs	r2, r1
 800494c:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800494e:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8004950:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8004952:	685a      	ldr	r2, [r3, #4]
 8004954:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004958:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800495a:	685a      	ldr	r2, [r3, #4]
 800495c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004960:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8004962:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8004964:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8004966:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800496a:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800496c:	685a      	ldr	r2, [r3, #4]
 800496e:	430a      	orrs	r2, r1
 8004970:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8004972:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8004974:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8004976:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800497a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800497c:	689a      	ldr	r2, [r3, #8]
 800497e:	430a      	orrs	r2, r1
 8004980:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8004982:	4934      	ldr	r1, [pc, #208]	@ (8004a54 <HAL_ADC_Init+0x148>)
 8004984:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8004986:	428a      	cmp	r2, r1
 8004988:	d052      	beq.n	8004a30 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800498a:	6899      	ldr	r1, [r3, #8]
 800498c:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 8004990:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8004992:	6899      	ldr	r1, [r3, #8]
 8004994:	430a      	orrs	r2, r1
 8004996:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004998:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800499a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800499c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80049a0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80049a2:	689a      	ldr	r2, [r3, #8]
 80049a4:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80049a6:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80049a8:	689a      	ldr	r2, [r3, #8]
 80049aa:	f022 0202 	bic.w	r2, r2, #2
 80049ae:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80049b0:	689a      	ldr	r2, [r3, #8]
 80049b2:	7e21      	ldrb	r1, [r4, #24]
 80049b4:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80049b8:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 80049ba:	f894 2020 	ldrb.w	r2, [r4, #32]
 80049be:	2a00      	cmp	r2, #0
 80049c0:	d03e      	beq.n	8004a40 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80049c2:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80049c4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80049c6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80049ca:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80049cc:	685a      	ldr	r2, [r3, #4]
 80049ce:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80049d2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80049d4:	685a      	ldr	r2, [r3, #4]
 80049d6:	3901      	subs	r1, #1
 80049d8:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80049dc:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80049de:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80049e0:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80049e2:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80049e6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80049e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80049ea:	3901      	subs	r1, #1
 80049ec:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 80049f0:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80049f2:	689a      	ldr	r2, [r3, #8]
 80049f4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80049f8:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80049fa:	689a      	ldr	r2, [r3, #8]
 80049fc:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 8004a00:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8004a04:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8004a06:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004a08:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8004a0a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004a0e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004a10:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8004a12:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004a14:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8004a18:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8004a1a:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8004a1c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004a1e:	f023 0303 	bic.w	r3, r3, #3
 8004a22:	f043 0301 	orr.w	r3, r3, #1
 8004a26:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8004a28:	2300      	movs	r3, #0
 8004a2a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8004a2e:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004a30:	689a      	ldr	r2, [r3, #8]
 8004a32:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004a36:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004a38:	689a      	ldr	r2, [r3, #8]
 8004a3a:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8004a3e:	e7b2      	b.n	80049a6 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004a40:	685a      	ldr	r2, [r3, #4]
 8004a42:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004a46:	e7c9      	b.n	80049dc <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8004a48:	2001      	movs	r0, #1
 8004a4a:	e7ed      	b.n	8004a28 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8004a4c:	2001      	movs	r0, #1
 8004a4e:	e7ee      	b.n	8004a2e <HAL_ADC_Init+0x122>
 8004a50:	40012300 	.word	0x40012300
 8004a54:	0f000001 	.word	0x0f000001

08004a58 <HAL_ADC_Start>:
{
 8004a58:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8004a5a:	2300      	movs	r3, #0
 8004a5c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004a5e:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8004a62:	2b01      	cmp	r3, #1
 8004a64:	d069      	beq.n	8004b3a <HAL_ADC_Start+0xe2>
 8004a66:	2301      	movs	r3, #1
 8004a68:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	689a      	ldr	r2, [r3, #8]
 8004a70:	07d2      	lsls	r2, r2, #31
 8004a72:	d50b      	bpl.n	8004a8c <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8004a74:	689a      	ldr	r2, [r3, #8]
 8004a76:	07d1      	lsls	r1, r2, #31
 8004a78:	d41a      	bmi.n	8004ab0 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004a7a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8004a7c:	f043 0310 	orr.w	r3, r3, #16
 8004a80:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8004a82:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8004a84:	f043 0301 	orr.w	r3, r3, #1
 8004a88:	6443      	str	r3, [r0, #68]	@ 0x44
 8004a8a:	e04c      	b.n	8004b26 <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 8004a8c:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8004a8e:	492c      	ldr	r1, [pc, #176]	@ (8004b40 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 8004a90:	f042 0201 	orr.w	r2, r2, #1
 8004a94:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8004a96:	4a2b      	ldr	r2, [pc, #172]	@ (8004b44 <HAL_ADC_Start+0xec>)
 8004a98:	6812      	ldr	r2, [r2, #0]
 8004a9a:	fbb2 f2f1 	udiv	r2, r2, r1
 8004a9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8004aa2:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 8004aa4:	9a01      	ldr	r2, [sp, #4]
 8004aa6:	2a00      	cmp	r2, #0
 8004aa8:	d0e4      	beq.n	8004a74 <HAL_ADC_Start+0x1c>
      counter--;
 8004aaa:	9a01      	ldr	r2, [sp, #4]
 8004aac:	3a01      	subs	r2, #1
 8004aae:	e7f8      	b.n	8004aa2 <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 8004ab0:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8004ab2:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8004ab6:	f022 0201 	bic.w	r2, r2, #1
 8004aba:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004abe:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8004ac0:	685a      	ldr	r2, [r3, #4]
 8004ac2:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8004ac4:	bf41      	itttt	mi
 8004ac6:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 8004ac8:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 8004acc:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 8004ad0:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8004ad2:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8004ad4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8004ad8:	bf1c      	itt	ne
 8004ada:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 8004adc:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8004ae0:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 8004ae2:	2200      	movs	r2, #0
 8004ae4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8004ae8:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8004aec:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8004aee:	4a16      	ldr	r2, [pc, #88]	@ (8004b48 <HAL_ADC_Start+0xf0>)
 8004af0:	6851      	ldr	r1, [r2, #4]
 8004af2:	f011 0f1f 	tst.w	r1, #31
 8004af6:	4915      	ldr	r1, [pc, #84]	@ (8004b4c <HAL_ADC_Start+0xf4>)
 8004af8:	d11c      	bne.n	8004b34 <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8004afa:	428b      	cmp	r3, r1
 8004afc:	d007      	beq.n	8004b0e <HAL_ADC_Start+0xb6>
 8004afe:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 8004b02:	428b      	cmp	r3, r1
 8004b04:	d10c      	bne.n	8004b20 <HAL_ADC_Start+0xc8>
 8004b06:	6852      	ldr	r2, [r2, #4]
 8004b08:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004b0c:	d10b      	bne.n	8004b26 <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004b0e:	689a      	ldr	r2, [r3, #8]
 8004b10:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8004b14:	d107      	bne.n	8004b26 <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8004b16:	689a      	ldr	r2, [r3, #8]
 8004b18:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8004b1c:	609a      	str	r2, [r3, #8]
 8004b1e:	e002      	b.n	8004b26 <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004b20:	490b      	ldr	r1, [pc, #44]	@ (8004b50 <HAL_ADC_Start+0xf8>)
 8004b22:	428b      	cmp	r3, r1
 8004b24:	d002      	beq.n	8004b2c <HAL_ADC_Start+0xd4>
  return HAL_OK;
 8004b26:	2000      	movs	r0, #0
}
 8004b28:	b002      	add	sp, #8
 8004b2a:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004b2c:	6852      	ldr	r2, [r2, #4]
 8004b2e:	f012 0f10 	tst.w	r2, #16
 8004b32:	e7eb      	b.n	8004b0c <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004b34:	428b      	cmp	r3, r1
 8004b36:	d1f6      	bne.n	8004b26 <HAL_ADC_Start+0xce>
 8004b38:	e7e9      	b.n	8004b0e <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 8004b3a:	2002      	movs	r0, #2
 8004b3c:	e7f4      	b.n	8004b28 <HAL_ADC_Start+0xd0>
 8004b3e:	bf00      	nop
 8004b40:	000f4240 	.word	0x000f4240
 8004b44:	2000007c 	.word	0x2000007c
 8004b48:	40012300 	.word	0x40012300
 8004b4c:	40012000 	.word	0x40012000
 8004b50:	40012200 	.word	0x40012200

08004b54 <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
 8004b54:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8004b58:	2b01      	cmp	r3, #1
 8004b5a:	d014      	beq.n	8004b86 <HAL_ADC_Stop+0x32>
  __HAL_ADC_DISABLE(hadc);
 8004b5c:	6803      	ldr	r3, [r0, #0]
 8004b5e:	689a      	ldr	r2, [r3, #8]
 8004b60:	f022 0201 	bic.w	r2, r2, #1
 8004b64:	609a      	str	r2, [r3, #8]
  if (HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 8004b66:	689b      	ldr	r3, [r3, #8]
 8004b68:	07db      	lsls	r3, r3, #31
 8004b6a:	d407      	bmi.n	8004b7c <HAL_ADC_Stop+0x28>
    ADC_STATE_CLR_SET(hadc->State,
 8004b6c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8004b6e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8004b72:	f023 0301 	bic.w	r3, r3, #1
 8004b76:	f043 0301 	orr.w	r3, r3, #1
 8004b7a:	6403      	str	r3, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8004b7c:	2300      	movs	r3, #0
 8004b7e:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  return HAL_OK;
 8004b82:	4618      	mov	r0, r3
 8004b84:	4770      	bx	lr
  __HAL_LOCK(hadc);
 8004b86:	2002      	movs	r0, #2
}
 8004b88:	4770      	bx	lr

08004b8a <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004b8a:	6803      	ldr	r3, [r0, #0]
 8004b8c:	689a      	ldr	r2, [r3, #8]
 8004b8e:	0552      	lsls	r2, r2, #21
{
 8004b90:	b570      	push	{r4, r5, r6, lr}
 8004b92:	4604      	mov	r4, r0
 8004b94:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004b96:	d50b      	bpl.n	8004bb0 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8004b98:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004b9a:	05de      	lsls	r6, r3, #23
 8004b9c:	d508      	bpl.n	8004bb0 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8004b9e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8004ba0:	f043 0320 	orr.w	r3, r3, #32
 8004ba4:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 8004ba6:	2300      	movs	r3, #0
 8004ba8:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 8004bac:	2001      	movs	r0, #1
}
 8004bae:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8004bb0:	f7ff fe90 	bl	80048d4 <HAL_GetTick>
 8004bb4:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004bb6:	6823      	ldr	r3, [r4, #0]
 8004bb8:	681a      	ldr	r2, [r3, #0]
 8004bba:	0791      	lsls	r1, r2, #30
 8004bbc:	d50c      	bpl.n	8004bd8 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8004bbe:	f06f 0212 	mvn.w	r2, #18
 8004bc2:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8004bc4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8004bc6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004bca:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004bcc:	689a      	ldr	r2, [r3, #8]
 8004bce:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8004bd2:	d017      	beq.n	8004c04 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 8004bd4:	2000      	movs	r0, #0
 8004bd6:	e7ea      	b.n	8004bae <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 8004bd8:	1c68      	adds	r0, r5, #1
 8004bda:	d0ed      	beq.n	8004bb8 <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004bdc:	b965      	cbnz	r5, 8004bf8 <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004bde:	6823      	ldr	r3, [r4, #0]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	f013 0302 	ands.w	r3, r3, #2
 8004be6:	d1e6      	bne.n	8004bb6 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004be8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 8004bea:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004bee:	f042 0204 	orr.w	r2, r2, #4
 8004bf2:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 8004bf4:	2003      	movs	r0, #3
 8004bf6:	e7da      	b.n	8004bae <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004bf8:	f7ff fe6c 	bl	80048d4 <HAL_GetTick>
 8004bfc:	1b80      	subs	r0, r0, r6
 8004bfe:	42a8      	cmp	r0, r5
 8004c00:	d8ed      	bhi.n	8004bde <HAL_ADC_PollForConversion+0x54>
 8004c02:	e7d8      	b.n	8004bb6 <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004c04:	7e22      	ldrb	r2, [r4, #24]
 8004c06:	2a00      	cmp	r2, #0
 8004c08:	d1e4      	bne.n	8004bd4 <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004c0a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8004c0c:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 8004c10:	d002      	beq.n	8004c18 <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8004c12:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004c14:	055a      	lsls	r2, r3, #21
 8004c16:	d4dd      	bmi.n	8004bd4 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8004c18:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004c1a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004c1e:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8004c20:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004c22:	04db      	lsls	r3, r3, #19
 8004c24:	d4d6      	bmi.n	8004bd4 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8004c26:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004c28:	f043 0301 	orr.w	r3, r3, #1
 8004c2c:	6423      	str	r3, [r4, #64]	@ 0x40
 8004c2e:	e7d1      	b.n	8004bd4 <HAL_ADC_PollForConversion+0x4a>

08004c30 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8004c30:	6803      	ldr	r3, [r0, #0]
 8004c32:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 8004c34:	4770      	bx	lr
	...

08004c38 <HAL_ADC_ConfigChannel>:
{
 8004c38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8004c3a:	2300      	movs	r3, #0
 8004c3c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004c3e:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8004c42:	2b01      	cmp	r3, #1
{
 8004c44:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 8004c46:	f000 8086 	beq.w	8004d56 <HAL_ADC_ConfigChannel+0x11e>
 8004c4a:	2301      	movs	r3, #1
 8004c4c:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004c50:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004c52:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004c54:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004c56:	2809      	cmp	r0, #9
 8004c58:	b284      	uxth	r4, r0
 8004c5a:	d933      	bls.n	8004cc4 <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004c5c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8004c60:	68df      	ldr	r7, [r3, #12]
 8004c62:	3a1e      	subs	r2, #30
 8004c64:	f04f 0c07 	mov.w	ip, #7
 8004c68:	fa0c fc02 	lsl.w	ip, ip, r2
 8004c6c:	ea27 070c 	bic.w	r7, r7, ip
 8004c70:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004c72:	68df      	ldr	r7, [r3, #12]
 8004c74:	fa06 f202 	lsl.w	r2, r6, r2
 8004c78:	433a      	orrs	r2, r7
 8004c7a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8004c7c:	6849      	ldr	r1, [r1, #4]
 8004c7e:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004c80:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8004c84:	d82d      	bhi.n	8004ce2 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004c86:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004c88:	3a05      	subs	r2, #5
 8004c8a:	261f      	movs	r6, #31
 8004c8c:	4096      	lsls	r6, r2
 8004c8e:	ea21 0106 	bic.w	r1, r1, r6
 8004c92:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8004c94:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004c96:	fa04 f202 	lsl.w	r2, r4, r2
 8004c9a:	430a      	orrs	r2, r1
 8004c9c:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8004c9e:	4a2f      	ldr	r2, [pc, #188]	@ (8004d5c <HAL_ADC_ConfigChannel+0x124>)
 8004ca0:	4293      	cmp	r3, r2
 8004ca2:	d10a      	bne.n	8004cba <HAL_ADC_ConfigChannel+0x82>
 8004ca4:	2812      	cmp	r0, #18
 8004ca6:	d137      	bne.n	8004d18 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8004ca8:	4b2d      	ldr	r3, [pc, #180]	@ (8004d60 <HAL_ADC_ConfigChannel+0x128>)
 8004caa:	685a      	ldr	r2, [r3, #4]
 8004cac:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8004cb0:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8004cb2:	685a      	ldr	r2, [r3, #4]
 8004cb4:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8004cb8:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8004cba:	2000      	movs	r0, #0
 8004cbc:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 8004cc0:	b003      	add	sp, #12
 8004cc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8004cc4:	691a      	ldr	r2, [r3, #16]
 8004cc6:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 8004cca:	2707      	movs	r7, #7
 8004ccc:	fa07 f70c 	lsl.w	r7, r7, ip
 8004cd0:	ea22 0207 	bic.w	r2, r2, r7
 8004cd4:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8004cd6:	691a      	ldr	r2, [r3, #16]
 8004cd8:	fa06 f60c 	lsl.w	r6, r6, ip
 8004cdc:	4316      	orrs	r6, r2
 8004cde:	611e      	str	r6, [r3, #16]
 8004ce0:	e7cc      	b.n	8004c7c <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 8004ce2:	290c      	cmp	r1, #12
 8004ce4:	f04f 011f 	mov.w	r1, #31
 8004ce8:	d80b      	bhi.n	8004d02 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8004cea:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8004cec:	3a23      	subs	r2, #35	@ 0x23
 8004cee:	4091      	lsls	r1, r2
 8004cf0:	ea26 0101 	bic.w	r1, r6, r1
 8004cf4:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8004cf6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8004cf8:	fa04 f202 	lsl.w	r2, r4, r2
 8004cfc:	430a      	orrs	r2, r1
 8004cfe:	631a      	str	r2, [r3, #48]	@ 0x30
 8004d00:	e7cd      	b.n	8004c9e <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8004d02:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8004d04:	3a41      	subs	r2, #65	@ 0x41
 8004d06:	4091      	lsls	r1, r2
 8004d08:	ea26 0101 	bic.w	r1, r6, r1
 8004d0c:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8004d0e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8004d10:	4094      	lsls	r4, r2
 8004d12:	430c      	orrs	r4, r1
 8004d14:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8004d16:	e7c2      	b.n	8004c9e <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8004d18:	4b12      	ldr	r3, [pc, #72]	@ (8004d64 <HAL_ADC_ConfigChannel+0x12c>)
 8004d1a:	4298      	cmp	r0, r3
 8004d1c:	d001      	beq.n	8004d22 <HAL_ADC_ConfigChannel+0xea>
 8004d1e:	2811      	cmp	r0, #17
 8004d20:	d1cb      	bne.n	8004cba <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8004d22:	4b0f      	ldr	r3, [pc, #60]	@ (8004d60 <HAL_ADC_ConfigChannel+0x128>)
 8004d24:	685a      	ldr	r2, [r3, #4]
 8004d26:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 8004d2a:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8004d2c:	685a      	ldr	r2, [r3, #4]
 8004d2e:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8004d32:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8004d34:	4b0b      	ldr	r3, [pc, #44]	@ (8004d64 <HAL_ADC_ConfigChannel+0x12c>)
 8004d36:	4298      	cmp	r0, r3
 8004d38:	d1bf      	bne.n	8004cba <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8004d3a:	4b0b      	ldr	r3, [pc, #44]	@ (8004d68 <HAL_ADC_ConfigChannel+0x130>)
 8004d3c:	4a0b      	ldr	r2, [pc, #44]	@ (8004d6c <HAL_ADC_ConfigChannel+0x134>)
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	fbb3 f3f2 	udiv	r3, r3, r2
 8004d44:	220a      	movs	r2, #10
 8004d46:	4353      	muls	r3, r2
        counter--;
 8004d48:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 8004d4a:	9b01      	ldr	r3, [sp, #4]
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d0b4      	beq.n	8004cba <HAL_ADC_ConfigChannel+0x82>
        counter--;
 8004d50:	9b01      	ldr	r3, [sp, #4]
 8004d52:	3b01      	subs	r3, #1
 8004d54:	e7f8      	b.n	8004d48 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 8004d56:	2002      	movs	r0, #2
 8004d58:	e7b2      	b.n	8004cc0 <HAL_ADC_ConfigChannel+0x88>
 8004d5a:	bf00      	nop
 8004d5c:	40012000 	.word	0x40012000
 8004d60:	40012300 	.word	0x40012300
 8004d64:	10000012 	.word	0x10000012
 8004d68:	2000007c 	.word	0x2000007c
 8004d6c:	000f4240 	.word	0x000f4240

08004d70 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004d70:	4907      	ldr	r1, [pc, #28]	@ (8004d90 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004d72:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004d74:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004d78:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004d7a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004d7c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004d80:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004d82:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004d84:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004d88:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004d8c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004d8e:	4770      	bx	lr
 8004d90:	e000ed00 	.word	0xe000ed00

08004d94 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004d94:	4b16      	ldr	r3, [pc, #88]	@ (8004df0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004d96:	b530      	push	{r4, r5, lr}
 8004d98:	68dc      	ldr	r4, [r3, #12]
 8004d9a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004d9e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004da2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004da4:	2b04      	cmp	r3, #4
 8004da6:	bf28      	it	cs
 8004da8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004daa:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004dac:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004db0:	bf8c      	ite	hi
 8004db2:	3c03      	subhi	r4, #3
 8004db4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004db6:	fa05 f303 	lsl.w	r3, r5, r3
 8004dba:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004dbe:	40a5      	lsls	r5, r4
 8004dc0:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004dc4:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8004dc6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004dc8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dcc:	bfac      	ite	ge
 8004dce:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dd2:	4a08      	ldrlt	r2, [pc, #32]	@ (8004df4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dd4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dd8:	bfb8      	it	lt
 8004dda:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004dde:	b2db      	uxtb	r3, r3
 8004de0:	bfaa      	itet	ge
 8004de2:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004de6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004de8:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004dec:	bd30      	pop	{r4, r5, pc}
 8004dee:	bf00      	nop
 8004df0:	e000ed00 	.word	0xe000ed00
 8004df4:	e000ed14 	.word	0xe000ed14

08004df8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004df8:	2800      	cmp	r0, #0
 8004dfa:	db07      	blt.n	8004e0c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004dfc:	0941      	lsrs	r1, r0, #5
 8004dfe:	4a04      	ldr	r2, [pc, #16]	@ (8004e10 <HAL_NVIC_EnableIRQ+0x18>)
 8004e00:	f000 001f 	and.w	r0, r0, #31
 8004e04:	2301      	movs	r3, #1
 8004e06:	4083      	lsls	r3, r0
 8004e08:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004e0c:	4770      	bx	lr
 8004e0e:	bf00      	nop
 8004e10:	e000e100 	.word	0xe000e100

08004e14 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004e14:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004e16:	4604      	mov	r4, r0
 8004e18:	b150      	cbz	r0, 8004e30 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004e1a:	7943      	ldrb	r3, [r0, #5]
 8004e1c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004e20:	b913      	cbnz	r3, 8004e28 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004e22:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004e24:	f7fc feac 	bl	8001b80 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004e28:	2301      	movs	r3, #1
 8004e2a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004e2c:	2000      	movs	r0, #0
}
 8004e2e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e30:	2001      	movs	r0, #1
 8004e32:	e7fc      	b.n	8004e2e <HAL_CRC_Init+0x1a>

08004e34 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004e34:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004e36:	4604      	mov	r4, r0
 8004e38:	b320      	cbz	r0, 8004e84 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004e3a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004e3e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004e42:	b91b      	cbnz	r3, 8004e4c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004e44:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004e48:	f7fc feb2 	bl	8001bb0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e4c:	2302      	movs	r3, #2
 8004e4e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004e52:	6823      	ldr	r3, [r4, #0]
 8004e54:	6861      	ldr	r1, [r4, #4]
 8004e56:	681a      	ldr	r2, [r3, #0]
 8004e58:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8004e5c:	430a      	orrs	r2, r1
 8004e5e:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004e60:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e62:	68a1      	ldr	r1, [r4, #8]
 8004e64:	f022 0207 	bic.w	r2, r2, #7
 8004e68:	430a      	orrs	r2, r1
 8004e6a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004e6c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004e6e:	68e1      	ldr	r1, [r4, #12]
 8004e70:	f36f 020d 	bfc	r2, #0, #14
 8004e74:	430a      	orrs	r2, r1
 8004e76:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004e78:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004e7a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004e7c:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004e7e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004e82:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e84:	2001      	movs	r0, #1
 8004e86:	e7fc      	b.n	8004e82 <HAL_DMA2D_Init+0x4e>

08004e88 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004e88:	4770      	bx	lr

08004e8a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004e8a:	4770      	bx	lr

08004e8c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004e8c:	6803      	ldr	r3, [r0, #0]
{
 8004e8e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004e90:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004e92:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004e94:	07f2      	lsls	r2, r6, #31
{
 8004e96:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004e98:	d514      	bpl.n	8004ec4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004e9a:	05e9      	lsls	r1, r5, #23
 8004e9c:	d512      	bpl.n	8004ec4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004e9e:	681a      	ldr	r2, [r3, #0]
 8004ea0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004ea4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004ea6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004ea8:	f042 0201 	orr.w	r2, r2, #1
 8004eac:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004eae:	2201      	movs	r2, #1
 8004eb0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004eb2:	2304      	movs	r3, #4
 8004eb4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004eb8:	2300      	movs	r3, #0
 8004eba:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004ebe:	6943      	ldr	r3, [r0, #20]
 8004ec0:	b103      	cbz	r3, 8004ec4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004ec2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004ec4:	06b2      	lsls	r2, r6, #26
 8004ec6:	d516      	bpl.n	8004ef6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004ec8:	04ab      	lsls	r3, r5, #18
 8004eca:	d514      	bpl.n	8004ef6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004ecc:	6823      	ldr	r3, [r4, #0]
 8004ece:	681a      	ldr	r2, [r3, #0]
 8004ed0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004ed4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004ed6:	2220      	movs	r2, #32
 8004ed8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004eda:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004edc:	f043 0302 	orr.w	r3, r3, #2
 8004ee0:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004ee2:	2304      	movs	r3, #4
 8004ee4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004ee8:	2300      	movs	r3, #0
 8004eea:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004eee:	6963      	ldr	r3, [r4, #20]
 8004ef0:	b10b      	cbz	r3, 8004ef6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004ef2:	4620      	mov	r0, r4
 8004ef4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004ef6:	0730      	lsls	r0, r6, #28
 8004ef8:	d516      	bpl.n	8004f28 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004efa:	0529      	lsls	r1, r5, #20
 8004efc:	d514      	bpl.n	8004f28 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004efe:	6823      	ldr	r3, [r4, #0]
 8004f00:	681a      	ldr	r2, [r3, #0]
 8004f02:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004f06:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004f08:	2208      	movs	r2, #8
 8004f0a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004f0c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004f0e:	f043 0304 	orr.w	r3, r3, #4
 8004f12:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004f14:	2304      	movs	r3, #4
 8004f16:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004f1a:	2300      	movs	r3, #0
 8004f1c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004f20:	6963      	ldr	r3, [r4, #20]
 8004f22:	b10b      	cbz	r3, 8004f28 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004f24:	4620      	mov	r0, r4
 8004f26:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004f28:	0772      	lsls	r2, r6, #29
 8004f2a:	d50b      	bpl.n	8004f44 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004f2c:	056b      	lsls	r3, r5, #21
 8004f2e:	d509      	bpl.n	8004f44 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004f30:	6823      	ldr	r3, [r4, #0]
 8004f32:	681a      	ldr	r2, [r3, #0]
 8004f34:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004f38:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004f3a:	2204      	movs	r2, #4
 8004f3c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004f3e:	4620      	mov	r0, r4
 8004f40:	f7ff ffa2 	bl	8004e88 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004f44:	07b0      	lsls	r0, r6, #30
 8004f46:	d514      	bpl.n	8004f72 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004f48:	05a9      	lsls	r1, r5, #22
 8004f4a:	d512      	bpl.n	8004f72 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004f4c:	6823      	ldr	r3, [r4, #0]
 8004f4e:	681a      	ldr	r2, [r3, #0]
 8004f50:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004f54:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004f56:	2202      	movs	r2, #2
 8004f58:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004f5a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004f5c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004f5e:	2301      	movs	r3, #1
 8004f60:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004f64:	2300      	movs	r3, #0
 8004f66:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004f6a:	6923      	ldr	r3, [r4, #16]
 8004f6c:	b10b      	cbz	r3, 8004f72 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004f6e:	4620      	mov	r0, r4
 8004f70:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004f72:	06f2      	lsls	r2, r6, #27
 8004f74:	d513      	bpl.n	8004f9e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004f76:	04eb      	lsls	r3, r5, #19
 8004f78:	d511      	bpl.n	8004f9e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004f7a:	6823      	ldr	r3, [r4, #0]
 8004f7c:	681a      	ldr	r2, [r3, #0]
 8004f7e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004f82:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004f84:	2210      	movs	r2, #16
 8004f86:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004f88:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004f8a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004f8c:	2301      	movs	r3, #1
 8004f8e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004f92:	2300      	movs	r3, #0
 8004f94:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004f98:	4620      	mov	r0, r4
 8004f9a:	f7ff ff76 	bl	8004e8a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004f9e:	bd70      	pop	{r4, r5, r6, pc}

08004fa0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004fa2:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004fa6:	2a01      	cmp	r2, #1
{
 8004fa8:	4603      	mov	r3, r0
 8004faa:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8004fae:	d02b      	beq.n	8005008 <HAL_DMA2D_ConfigLayer+0x68>
 8004fb0:	2201      	movs	r2, #1
 8004fb2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004fb6:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004fba:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004fbe:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8004fc2:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004fc4:	4f17      	ldr	r7, [pc, #92]	@ (8005024 <HAL_DMA2D_ConfigLayer+0x84>)
 8004fc6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004fca:	3c09      	subs	r4, #9
 8004fcc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004fce:	bf9c      	itt	ls
 8004fd0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8004fd4:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004fd6:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004fda:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004fdc:	bf88      	it	hi
 8004fde:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004fe2:	b991      	cbnz	r1, 800500a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004fe4:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8004fe6:	4039      	ands	r1, r7
 8004fe8:	4301      	orrs	r1, r0
 8004fea:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004fec:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004fee:	6999      	ldr	r1, [r3, #24]
 8004ff0:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ff2:	d803      	bhi.n	8004ffc <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004ff4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004ff6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004ffa:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004ffc:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004ffe:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005000:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8005004:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8005008:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800500a:	69d1      	ldr	r1, [r2, #28]
 800500c:	4039      	ands	r1, r7
 800500e:	4301      	orrs	r1, r0
 8005010:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005012:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005014:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005016:	6989      	ldr	r1, [r1, #24]
 8005018:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800501a:	bf9c      	itt	ls
 800501c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8005020:	6215      	strls	r5, [r2, #32]
 8005022:	e7eb      	b.n	8004ffc <HAL_DMA2D_ConfigLayer+0x5c>
 8005024:	00fcfff0 	.word	0x00fcfff0

08005028 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005028:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800502c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 80051ec <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005030:	4a6c      	ldr	r2, [pc, #432]	@ (80051e4 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005032:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005034:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005036:	2401      	movs	r4, #1
 8005038:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800503a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800503e:	43ac      	bics	r4, r5
 8005040:	f040 80b7 	bne.w	80051b2 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005044:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005046:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005048:	f005 0403 	and.w	r4, r5, #3
 800504c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005050:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005054:	1e67      	subs	r7, r4, #1
 8005056:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005058:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800505c:	d834      	bhi.n	80050c8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800505e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005060:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005064:	68cf      	ldr	r7, [r1, #12]
 8005066:	fa07 f708 	lsl.w	r7, r7, r8
 800506a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800506e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005070:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005072:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005076:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800507a:	409f      	lsls	r7, r3
 800507c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005080:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005082:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005084:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005088:	688f      	ldr	r7, [r1, #8]
 800508a:	fa07 f708 	lsl.w	r7, r7, r8
 800508e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005092:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8005094:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005096:	d119      	bne.n	80050cc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005098:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800509c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80050a0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80050a4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80050a8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80050ac:	f04f 0e0f 	mov.w	lr, #15
 80050b0:	fa0e fe0b 	lsl.w	lr, lr, fp
 80050b4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80050b8:	690f      	ldr	r7, [r1, #16]
 80050ba:	fa07 f70b 	lsl.w	r7, r7, fp
 80050be:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80050c2:	f8ca 7020 	str.w	r7, [sl, #32]
 80050c6:	e001      	b.n	80050cc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80050c8:	2c03      	cmp	r4, #3
 80050ca:	d1da      	bne.n	8005082 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80050cc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80050ce:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80050d2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80050d6:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80050d8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 80050dc:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80050de:	d068      	beq.n	80051b2 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80050e0:	2400      	movs	r4, #0
 80050e2:	9401      	str	r4, [sp, #4]
 80050e4:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80050e8:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 80050ec:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 80050f0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 80050f4:	f023 0703 	bic.w	r7, r3, #3
 80050f8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80050fc:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8005100:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8005104:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005106:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800510a:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800510c:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005110:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005114:	240f      	movs	r4, #15
 8005116:	fa04 f40c 	lsl.w	r4, r4, ip
 800511a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800511e:	4c32      	ldr	r4, [pc, #200]	@ (80051e8 <HAL_GPIO_Init+0x1c0>)
 8005120:	42a0      	cmp	r0, r4
 8005122:	d04d      	beq.n	80051c0 <HAL_GPIO_Init+0x198>
 8005124:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005128:	42a0      	cmp	r0, r4
 800512a:	d04b      	beq.n	80051c4 <HAL_GPIO_Init+0x19c>
 800512c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005130:	42a0      	cmp	r0, r4
 8005132:	d049      	beq.n	80051c8 <HAL_GPIO_Init+0x1a0>
 8005134:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005138:	42a0      	cmp	r0, r4
 800513a:	d047      	beq.n	80051cc <HAL_GPIO_Init+0x1a4>
 800513c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005140:	42a0      	cmp	r0, r4
 8005142:	d045      	beq.n	80051d0 <HAL_GPIO_Init+0x1a8>
 8005144:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005148:	42a0      	cmp	r0, r4
 800514a:	d043      	beq.n	80051d4 <HAL_GPIO_Init+0x1ac>
 800514c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005150:	42a0      	cmp	r0, r4
 8005152:	d041      	beq.n	80051d8 <HAL_GPIO_Init+0x1b0>
 8005154:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005158:	42a0      	cmp	r0, r4
 800515a:	d03f      	beq.n	80051dc <HAL_GPIO_Init+0x1b4>
 800515c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005160:	42a0      	cmp	r0, r4
 8005162:	d03d      	beq.n	80051e0 <HAL_GPIO_Init+0x1b8>
 8005164:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005168:	42a0      	cmp	r0, r4
 800516a:	bf14      	ite	ne
 800516c:	240a      	movne	r4, #10
 800516e:	2409      	moveq	r4, #9
 8005170:	fa04 f40c 	lsl.w	r4, r4, ip
 8005174:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005178:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800517a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800517c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800517e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005182:	bf0c      	ite	eq
 8005184:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005186:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8005188:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800518a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800518c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8005190:	bf0c      	ite	eq
 8005192:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005194:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8005196:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8005198:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800519a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800519e:	bf0c      	ite	eq
 80051a0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80051a2:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 80051a4:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80051a6:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80051a8:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80051aa:	bf54      	ite	pl
 80051ac:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80051ae:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80051b0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80051b2:	3301      	adds	r3, #1
 80051b4:	2b10      	cmp	r3, #16
 80051b6:	f47f af3d 	bne.w	8005034 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80051ba:	b003      	add	sp, #12
 80051bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80051c0:	2400      	movs	r4, #0
 80051c2:	e7d5      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051c4:	2401      	movs	r4, #1
 80051c6:	e7d3      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051c8:	2402      	movs	r4, #2
 80051ca:	e7d1      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051cc:	2403      	movs	r4, #3
 80051ce:	e7cf      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051d0:	2404      	movs	r4, #4
 80051d2:	e7cd      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051d4:	2405      	movs	r4, #5
 80051d6:	e7cb      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051d8:	2406      	movs	r4, #6
 80051da:	e7c9      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051dc:	2407      	movs	r4, #7
 80051de:	e7c7      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051e0:	2408      	movs	r4, #8
 80051e2:	e7c5      	b.n	8005170 <HAL_GPIO_Init+0x148>
 80051e4:	40013c00 	.word	0x40013c00
 80051e8:	40020000 	.word	0x40020000
 80051ec:	40023800 	.word	0x40023800

080051f0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80051f0:	6903      	ldr	r3, [r0, #16]
 80051f2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80051f4:	bf14      	ite	ne
 80051f6:	2001      	movne	r0, #1
 80051f8:	2000      	moveq	r0, #0
 80051fa:	4770      	bx	lr

080051fc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80051fc:	b10a      	cbz	r2, 8005202 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80051fe:	6181      	str	r1, [r0, #24]
  }
}
 8005200:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005202:	0409      	lsls	r1, r1, #16
 8005204:	e7fb      	b.n	80051fe <HAL_GPIO_WritePin+0x2>

08005206 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8005206:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005208:	ea01 0203 	and.w	r2, r1, r3
 800520c:	ea21 0103 	bic.w	r1, r1, r3
 8005210:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005214:	6181      	str	r1, [r0, #24]
}
 8005216:	4770      	bx	lr

08005218 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005218:	6801      	ldr	r1, [r0, #0]
 800521a:	694b      	ldr	r3, [r1, #20]
 800521c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8005220:	f04f 0200 	mov.w	r2, #0
 8005224:	d010      	beq.n	8005248 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005226:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800522a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800522c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800522e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005230:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005234:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005238:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800523a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800523e:	f043 0304 	orr.w	r3, r3, #4
 8005242:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8005244:	2001      	movs	r0, #1
 8005246:	4770      	bx	lr
  }
  return HAL_OK;
 8005248:	4618      	mov	r0, r3
}
 800524a:	4770      	bx	lr

0800524c <I2C_WaitOnFlagUntilTimeout>:
{
 800524c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005250:	4606      	mov	r6, r0
 8005252:	460f      	mov	r7, r1
 8005254:	4691      	mov	r9, r2
 8005256:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005258:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800525c:	6833      	ldr	r3, [r6, #0]
 800525e:	f1ba 0f01 	cmp.w	sl, #1
 8005262:	bf0c      	ite	eq
 8005264:	695c      	ldreq	r4, [r3, #20]
 8005266:	699c      	ldrne	r4, [r3, #24]
 8005268:	ea27 0404 	bic.w	r4, r7, r4
 800526c:	b2a4      	uxth	r4, r4
 800526e:	fab4 f484 	clz	r4, r4
 8005272:	0964      	lsrs	r4, r4, #5
 8005274:	45a1      	cmp	r9, r4
 8005276:	d001      	beq.n	800527c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005278:	2000      	movs	r0, #0
 800527a:	e017      	b.n	80052ac <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800527c:	1c6a      	adds	r2, r5, #1
 800527e:	d0ee      	beq.n	800525e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005280:	f7ff fb28 	bl	80048d4 <HAL_GetTick>
 8005284:	9b08      	ldr	r3, [sp, #32]
 8005286:	1ac0      	subs	r0, r0, r3
 8005288:	42a8      	cmp	r0, r5
 800528a:	d801      	bhi.n	8005290 <I2C_WaitOnFlagUntilTimeout+0x44>
 800528c:	2d00      	cmp	r5, #0
 800528e:	d1e5      	bne.n	800525c <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005290:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005292:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005294:	6333      	str	r3, [r6, #48]	@ 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005296:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800529a:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800529e:	6c32      	ldr	r2, [r6, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80052a0:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80052a4:	f042 0220 	orr.w	r2, r2, #32
 80052a8:	6432      	str	r2, [r6, #64]	@ 0x40
        return HAL_ERROR;
 80052aa:	2001      	movs	r0, #1
}
 80052ac:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080052b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80052b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80052b4:	4604      	mov	r4, r0
 80052b6:	460f      	mov	r7, r1
 80052b8:	4616      	mov	r6, r2
 80052ba:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80052bc:	6825      	ldr	r5, [r4, #0]
 80052be:	6968      	ldr	r0, [r5, #20]
 80052c0:	ea27 0000 	bic.w	r0, r7, r0
 80052c4:	b280      	uxth	r0, r0
 80052c6:	b1c0      	cbz	r0, 80052fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80052c8:	696b      	ldr	r3, [r5, #20]
 80052ca:	055a      	lsls	r2, r3, #21
 80052cc:	d517      	bpl.n	80052fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80052ce:	682b      	ldr	r3, [r5, #0]
 80052d0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80052d4:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80052d6:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80052da:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80052dc:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80052de:	2300      	movs	r3, #0
 80052e0:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80052e2:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80052e6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80052ea:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80052ec:	f043 0304 	orr.w	r3, r3, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052f0:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80052f2:	2300      	movs	r3, #0
 80052f4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80052f8:	2001      	movs	r0, #1
}
 80052fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80052fe:	1c73      	adds	r3, r6, #1
 8005300:	d0dd      	beq.n	80052be <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005302:	f7ff fae7 	bl	80048d4 <HAL_GetTick>
 8005306:	eba0 0008 	sub.w	r0, r0, r8
 800530a:	42b0      	cmp	r0, r6
 800530c:	d909      	bls.n	8005322 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x72>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800530e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005310:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005312:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005314:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005318:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800531c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800531e:	4313      	orrs	r3, r2
 8005320:	e7e6      	b.n	80052f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005322:	2e00      	cmp	r6, #0
 8005324:	d1ca      	bne.n	80052bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
 8005326:	e7f2      	b.n	800530e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>

08005328 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005328:	b570      	push	{r4, r5, r6, lr}
 800532a:	4604      	mov	r4, r0
 800532c:	460d      	mov	r5, r1
 800532e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005330:	6823      	ldr	r3, [r4, #0]
 8005332:	695b      	ldr	r3, [r3, #20]
 8005334:	061b      	lsls	r3, r3, #24
 8005336:	d501      	bpl.n	800533c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005338:	2000      	movs	r0, #0
 800533a:	e018      	b.n	800536e <I2C_WaitOnTXEFlagUntilTimeout+0x46>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800533c:	4620      	mov	r0, r4
 800533e:	f7ff ff6b 	bl	8005218 <I2C_IsAcknowledgeFailed>
 8005342:	b998      	cbnz	r0, 800536c <I2C_WaitOnTXEFlagUntilTimeout+0x44>
    if (Timeout != HAL_MAX_DELAY)
 8005344:	1c6a      	adds	r2, r5, #1
 8005346:	d0f3      	beq.n	8005330 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005348:	f7ff fac4 	bl	80048d4 <HAL_GetTick>
 800534c:	1b80      	subs	r0, r0, r6
 800534e:	42a8      	cmp	r0, r5
 8005350:	d90e      	bls.n	8005370 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005352:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005354:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005356:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005358:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800535c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005360:	6c22      	ldr	r2, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8005362:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005366:	f042 0220 	orr.w	r2, r2, #32
 800536a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800536c:	2001      	movs	r0, #1
}
 800536e:	bd70      	pop	{r4, r5, r6, pc}
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005370:	2d00      	cmp	r5, #0
 8005372:	d1dd      	bne.n	8005330 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
 8005374:	e7ed      	b.n	8005352 <I2C_WaitOnTXEFlagUntilTimeout+0x2a>
	...

08005378 <I2C_RequestMemoryWrite>:
{
 8005378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800537c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800537e:	6802      	ldr	r2, [r0, #0]
{
 8005380:	b085      	sub	sp, #20
 8005382:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8005386:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005388:	6813      	ldr	r3, [r2, #0]
 800538a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800538e:	6013      	str	r3, [r2, #0]
{
 8005390:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005392:	463b      	mov	r3, r7
 8005394:	f8cd 8000 	str.w	r8, [sp]
 8005398:	2200      	movs	r2, #0
 800539a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800539e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80053a0:	f7ff ff54 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 80053a4:	6823      	ldr	r3, [r4, #0]
 80053a6:	b138      	cbz	r0, 80053b8 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	05db      	lsls	r3, r3, #23
 80053ac:	d502      	bpl.n	80053b4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80053ae:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80053b2:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80053b4:	2603      	movs	r6, #3
 80053b6:	e020      	b.n	80053fa <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80053b8:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80053bc:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80053be:	491a      	ldr	r1, [pc, #104]	@ (8005428 <I2C_RequestMemoryWrite+0xb0>)
 80053c0:	4643      	mov	r3, r8
 80053c2:	463a      	mov	r2, r7
 80053c4:	4620      	mov	r0, r4
 80053c6:	f7ff ff73 	bl	80052b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80053ca:	b9a8      	cbnz	r0, 80053f8 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053cc:	6823      	ldr	r3, [r4, #0]
 80053ce:	9003      	str	r0, [sp, #12]
 80053d0:	695a      	ldr	r2, [r3, #20]
 80053d2:	9203      	str	r2, [sp, #12]
 80053d4:	699b      	ldr	r3, [r3, #24]
 80053d6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053d8:	4642      	mov	r2, r8
 80053da:	4639      	mov	r1, r7
 80053dc:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053de:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053e0:	f7ff ffa2 	bl	8005328 <I2C_WaitOnTXEFlagUntilTimeout>
 80053e4:	4606      	mov	r6, r0
 80053e6:	b160      	cbz	r0, 8005402 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80053e8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80053ea:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053ec:	bf01      	itttt	eq
 80053ee:	6822      	ldreq	r2, [r4, #0]
 80053f0:	6813      	ldreq	r3, [r2, #0]
 80053f2:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80053f6:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80053f8:	2601      	movs	r6, #1
}
 80053fa:	4630      	mov	r0, r6
 80053fc:	b005      	add	sp, #20
 80053fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005402:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005406:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005408:	d102      	bne.n	8005410 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800540a:	b2ed      	uxtb	r5, r5
 800540c:	611d      	str	r5, [r3, #16]
 800540e:	e7f4      	b.n	80053fa <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005410:	0a2a      	lsrs	r2, r5, #8
 8005412:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005414:	4639      	mov	r1, r7
 8005416:	4642      	mov	r2, r8
 8005418:	4620      	mov	r0, r4
 800541a:	f7ff ff85 	bl	8005328 <I2C_WaitOnTXEFlagUntilTimeout>
 800541e:	2800      	cmp	r0, #0
 8005420:	d1e2      	bne.n	80053e8 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005422:	6823      	ldr	r3, [r4, #0]
 8005424:	e7f1      	b.n	800540a <I2C_RequestMemoryWrite+0x92>
 8005426:	bf00      	nop
 8005428:	00010002 	.word	0x00010002

0800542c <I2C_RequestMemoryRead>:
{
 800542c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005430:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005432:	6803      	ldr	r3, [r0, #0]
{
 8005434:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005436:	681a      	ldr	r2, [r3, #0]
 8005438:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800543c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800543e:	681a      	ldr	r2, [r3, #0]
{
 8005440:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005444:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005448:	601a      	str	r2, [r3, #0]
{
 800544a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800544c:	463b      	mov	r3, r7
 800544e:	f8cd 8000 	str.w	r8, [sp]
 8005452:	2200      	movs	r2, #0
 8005454:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8005458:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800545a:	f7ff fef7 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 800545e:	6823      	ldr	r3, [r4, #0]
 8005460:	b138      	cbz	r0, 8005472 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005462:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005464:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005466:	bf44      	itt	mi
 8005468:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 800546c:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800546e:	2003      	movs	r0, #3
 8005470:	e021      	b.n	80054b6 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005472:	fa5f f986 	uxtb.w	r9, r6
 8005476:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800547a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800547c:	492b      	ldr	r1, [pc, #172]	@ (800552c <I2C_RequestMemoryRead+0x100>)
 800547e:	4643      	mov	r3, r8
 8005480:	463a      	mov	r2, r7
 8005482:	4620      	mov	r0, r4
 8005484:	f7ff ff14 	bl	80052b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005488:	b9a0      	cbnz	r0, 80054b4 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800548a:	6823      	ldr	r3, [r4, #0]
 800548c:	9003      	str	r0, [sp, #12]
 800548e:	695a      	ldr	r2, [r3, #20]
 8005490:	9203      	str	r2, [sp, #12]
 8005492:	699b      	ldr	r3, [r3, #24]
 8005494:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005496:	4642      	mov	r2, r8
 8005498:	4639      	mov	r1, r7
 800549a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800549c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800549e:	f7ff ff43 	bl	8005328 <I2C_WaitOnTXEFlagUntilTimeout>
 80054a2:	b158      	cbz	r0, 80054bc <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80054a4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80054a6:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054a8:	bf01      	itttt	eq
 80054aa:	6822      	ldreq	r2, [r4, #0]
 80054ac:	6813      	ldreq	r3, [r2, #0]
 80054ae:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80054b2:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80054b4:	2001      	movs	r0, #1
}
 80054b6:	b004      	add	sp, #16
 80054b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80054bc:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054c0:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80054c2:	d11a      	bne.n	80054fa <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80054c4:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80054c6:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80054c8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80054ca:	4639      	mov	r1, r7
 80054cc:	4620      	mov	r0, r4
 80054ce:	f7ff ff2b 	bl	8005328 <I2C_WaitOnTXEFlagUntilTimeout>
 80054d2:	4602      	mov	r2, r0
 80054d4:	2800      	cmp	r0, #0
 80054d6:	d1e5      	bne.n	80054a4 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80054d8:	6821      	ldr	r1, [r4, #0]
 80054da:	680b      	ldr	r3, [r1, #0]
 80054dc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80054e0:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80054e2:	4620      	mov	r0, r4
 80054e4:	f8cd 8000 	str.w	r8, [sp]
 80054e8:	463b      	mov	r3, r7
 80054ea:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80054ee:	f7ff fead 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 80054f2:	6822      	ldr	r2, [r4, #0]
 80054f4:	b160      	cbz	r0, 8005510 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80054f6:	6813      	ldr	r3, [r2, #0]
 80054f8:	e7b4      	b.n	8005464 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80054fa:	0a2a      	lsrs	r2, r5, #8
 80054fc:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80054fe:	4639      	mov	r1, r7
 8005500:	4642      	mov	r2, r8
 8005502:	4620      	mov	r0, r4
 8005504:	f7ff ff10 	bl	8005328 <I2C_WaitOnTXEFlagUntilTimeout>
 8005508:	2800      	cmp	r0, #0
 800550a:	d1cb      	bne.n	80054a4 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800550c:	6823      	ldr	r3, [r4, #0]
 800550e:	e7d9      	b.n	80054c4 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005510:	f049 0301 	orr.w	r3, r9, #1
 8005514:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005516:	4905      	ldr	r1, [pc, #20]	@ (800552c <I2C_RequestMemoryRead+0x100>)
 8005518:	4643      	mov	r3, r8
 800551a:	463a      	mov	r2, r7
 800551c:	4620      	mov	r0, r4
 800551e:	f7ff fec7 	bl	80052b0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005522:	3800      	subs	r0, #0
 8005524:	bf18      	it	ne
 8005526:	2001      	movne	r0, #1
 8005528:	e7c5      	b.n	80054b6 <I2C_RequestMemoryRead+0x8a>
 800552a:	bf00      	nop
 800552c:	00010002 	.word	0x00010002

08005530 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005530:	b570      	push	{r4, r5, r6, lr}
 8005532:	4604      	mov	r4, r0
 8005534:	460d      	mov	r5, r1
 8005536:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005538:	6823      	ldr	r3, [r4, #0]
 800553a:	695b      	ldr	r3, [r3, #20]
 800553c:	075b      	lsls	r3, r3, #29
 800553e:	d501      	bpl.n	8005544 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005540:	2000      	movs	r0, #0
 8005542:	e018      	b.n	8005576 <I2C_WaitOnBTFFlagUntilTimeout+0x46>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005544:	4620      	mov	r0, r4
 8005546:	f7ff fe67 	bl	8005218 <I2C_IsAcknowledgeFailed>
 800554a:	b998      	cbnz	r0, 8005574 <I2C_WaitOnBTFFlagUntilTimeout+0x44>
    if (Timeout != HAL_MAX_DELAY)
 800554c:	1c6a      	adds	r2, r5, #1
 800554e:	d0f3      	beq.n	8005538 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005550:	f7ff f9c0 	bl	80048d4 <HAL_GetTick>
 8005554:	1b80      	subs	r0, r0, r6
 8005556:	42a8      	cmp	r0, r5
 8005558:	d90e      	bls.n	8005578 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800555a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800555c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800555e:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005560:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005564:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005568:	6c22      	ldr	r2, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800556a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800556e:	f042 0220 	orr.w	r2, r2, #32
 8005572:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005574:	2001      	movs	r0, #1
}
 8005576:	bd70      	pop	{r4, r5, r6, pc}
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005578:	2d00      	cmp	r5, #0
 800557a:	d1dd      	bne.n	8005538 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
 800557c:	e7ed      	b.n	800555a <I2C_WaitOnBTFFlagUntilTimeout+0x2a>

0800557e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800557e:	b570      	push	{r4, r5, r6, lr}
 8005580:	4604      	mov	r4, r0
 8005582:	460d      	mov	r5, r1
 8005584:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005586:	6821      	ldr	r1, [r4, #0]
 8005588:	694b      	ldr	r3, [r1, #20]
 800558a:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800558e:	d001      	beq.n	8005594 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005590:	2000      	movs	r0, #0
 8005592:	e011      	b.n	80055b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005594:	694a      	ldr	r2, [r1, #20]
 8005596:	06d2      	lsls	r2, r2, #27
 8005598:	d50f      	bpl.n	80055ba <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800559a:	f06f 0210 	mvn.w	r2, #16
 800559e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80055a0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80055a2:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80055a4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80055a8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80055ac:	6c23      	ldr	r3, [r4, #64]	@ 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80055ae:	6423      	str	r3, [r4, #64]	@ 0x40
      __HAL_UNLOCK(hi2c);
 80055b0:	2300      	movs	r3, #0
 80055b2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80055b6:	2001      	movs	r0, #1
}
 80055b8:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80055ba:	f7ff f98b 	bl	80048d4 <HAL_GetTick>
 80055be:	1b80      	subs	r0, r0, r6
 80055c0:	42a8      	cmp	r0, r5
 80055c2:	d909      	bls.n	80055d8 <I2C_WaitOnRXNEFlagUntilTimeout+0x5a>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80055c4:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80055c6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80055c8:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80055ca:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80055ce:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80055d2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80055d4:	4313      	orrs	r3, r2
 80055d6:	e7ea      	b.n	80055ae <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80055d8:	2d00      	cmp	r5, #0
 80055da:	d1d4      	bne.n	8005586 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
 80055dc:	e7f2      	b.n	80055c4 <I2C_WaitOnRXNEFlagUntilTimeout+0x46>
	...

080055e0 <HAL_I2C_Init>:
{
 80055e0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80055e2:	4604      	mov	r4, r0
 80055e4:	b908      	cbnz	r0, 80055ea <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80055e6:	2001      	movs	r0, #1
}
 80055e8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80055ea:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80055ee:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80055f2:	b91b      	cbnz	r3, 80055fc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80055f4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80055f8:	f7fc fafc 	bl	8001bf4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80055fc:	2324      	movs	r3, #36	@ 0x24
 80055fe:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005602:	6823      	ldr	r3, [r4, #0]
 8005604:	681a      	ldr	r2, [r3, #0]
 8005606:	f022 0201 	bic.w	r2, r2, #1
 800560a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800560c:	681a      	ldr	r2, [r3, #0]
 800560e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005612:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005614:	681a      	ldr	r2, [r3, #0]
 8005616:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800561a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800561c:	f000 fe66 	bl	80062ec <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005620:	4b3f      	ldr	r3, [pc, #252]	@ (8005720 <HAL_I2C_Init+0x140>)
 8005622:	6865      	ldr	r5, [r4, #4]
 8005624:	429d      	cmp	r5, r3
 8005626:	bf94      	ite	ls
 8005628:	4b3e      	ldrls	r3, [pc, #248]	@ (8005724 <HAL_I2C_Init+0x144>)
 800562a:	4b3f      	ldrhi	r3, [pc, #252]	@ (8005728 <HAL_I2C_Init+0x148>)
 800562c:	4298      	cmp	r0, r3
 800562e:	bf8c      	ite	hi
 8005630:	2300      	movhi	r3, #0
 8005632:	2301      	movls	r3, #1
 8005634:	2b00      	cmp	r3, #0
 8005636:	d1d6      	bne.n	80055e6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005638:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800563a:	4e39      	ldr	r6, [pc, #228]	@ (8005720 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800563c:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800563e:	4b3b      	ldr	r3, [pc, #236]	@ (800572c <HAL_I2C_Init+0x14c>)
 8005640:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005644:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005648:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800564a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800564c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800564e:	bf88      	it	hi
 8005650:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8005654:	6a11      	ldr	r1, [r2, #32]
 8005656:	bf88      	it	hi
 8005658:	4373      	mulhi	r3, r6
 800565a:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800565e:	bf84      	itt	hi
 8005660:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8005664:	fbb3 f3f6 	udivhi	r3, r3, r6
 8005668:	3301      	adds	r3, #1
 800566a:	430b      	orrs	r3, r1
 800566c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800566e:	69d1      	ldr	r1, [r2, #28]
 8005670:	1e43      	subs	r3, r0, #1
 8005672:	482b      	ldr	r0, [pc, #172]	@ (8005720 <HAL_I2C_Init+0x140>)
 8005674:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8005678:	4285      	cmp	r5, r0
 800567a:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800567e:	d832      	bhi.n	80056e6 <HAL_I2C_Init+0x106>
 8005680:	006d      	lsls	r5, r5, #1
 8005682:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8005686:	fbb3 f3f5 	udiv	r3, r3, r5
 800568a:	3301      	adds	r3, #1
 800568c:	4203      	tst	r3, r0
 800568e:	d042      	beq.n	8005716 <HAL_I2C_Init+0x136>
 8005690:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005694:	4319      	orrs	r1, r3
 8005696:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005698:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800569c:	6811      	ldr	r1, [r2, #0]
 800569e:	4303      	orrs	r3, r0
 80056a0:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80056a4:	430b      	orrs	r3, r1
 80056a6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80056a8:	6891      	ldr	r1, [r2, #8]
 80056aa:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80056ae:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80056b2:	4303      	orrs	r3, r0
 80056b4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80056b8:	430b      	orrs	r3, r1
 80056ba:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80056bc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80056c0:	68d1      	ldr	r1, [r2, #12]
 80056c2:	4303      	orrs	r3, r0
 80056c4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80056c8:	430b      	orrs	r3, r1
 80056ca:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80056cc:	6813      	ldr	r3, [r2, #0]
 80056ce:	f043 0301 	orr.w	r3, r3, #1
 80056d2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80056d4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80056d6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80056d8:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80056da:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80056de:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80056e0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 80056e4:	e780      	b.n	80055e8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80056e6:	68a0      	ldr	r0, [r4, #8]
 80056e8:	b950      	cbnz	r0, 8005700 <HAL_I2C_Init+0x120>
 80056ea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80056ee:	fbb3 f3f5 	udiv	r3, r3, r5
 80056f2:	3301      	adds	r3, #1
 80056f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80056f8:	b17b      	cbz	r3, 800571a <HAL_I2C_Init+0x13a>
 80056fa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80056fe:	e7c9      	b.n	8005694 <HAL_I2C_Init+0xb4>
 8005700:	2019      	movs	r0, #25
 8005702:	4368      	muls	r0, r5
 8005704:	fbb3 f3f0 	udiv	r3, r3, r0
 8005708:	3301      	adds	r3, #1
 800570a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800570e:	b123      	cbz	r3, 800571a <HAL_I2C_Init+0x13a>
 8005710:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8005714:	e7be      	b.n	8005694 <HAL_I2C_Init+0xb4>
 8005716:	2304      	movs	r3, #4
 8005718:	e7bc      	b.n	8005694 <HAL_I2C_Init+0xb4>
 800571a:	2301      	movs	r3, #1
 800571c:	e7ba      	b.n	8005694 <HAL_I2C_Init+0xb4>
 800571e:	bf00      	nop
 8005720:	000186a0 	.word	0x000186a0
 8005724:	001e847f 	.word	0x001e847f
 8005728:	003d08ff 	.word	0x003d08ff
 800572c:	000f4240 	.word	0x000f4240

08005730 <HAL_I2C_Mem_Write>:
{
 8005730:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005734:	4604      	mov	r4, r0
 8005736:	4699      	mov	r9, r3
 8005738:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800573a:	460f      	mov	r7, r1
 800573c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800573e:	f7ff f8c9 	bl	80048d4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005742:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8005746:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005748:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800574a:	d003      	beq.n	8005754 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 800574c:	2002      	movs	r0, #2
}
 800574e:	b003      	add	sp, #12
 8005750:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005754:	9000      	str	r0, [sp, #0]
 8005756:	493c      	ldr	r1, [pc, #240]	@ (8005848 <HAL_I2C_Mem_Write+0x118>)
 8005758:	2319      	movs	r3, #25
 800575a:	2201      	movs	r2, #1
 800575c:	4620      	mov	r0, r4
 800575e:	f7ff fd75 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 8005762:	2800      	cmp	r0, #0
 8005764:	d1f2      	bne.n	800574c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005766:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800576a:	2b01      	cmp	r3, #1
 800576c:	d0ee      	beq.n	800574c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800576e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005770:	2301      	movs	r3, #1
 8005772:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005776:	6803      	ldr	r3, [r0, #0]
 8005778:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800577a:	bf5e      	ittt	pl
 800577c:	6803      	ldrpl	r3, [r0, #0]
 800577e:	f043 0301 	orrpl.w	r3, r3, #1
 8005782:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005784:	6803      	ldr	r3, [r0, #0]
 8005786:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800578a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800578c:	2321      	movs	r3, #33	@ 0x21
 800578e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005792:	2340      	movs	r3, #64	@ 0x40
 8005794:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005798:	2300      	movs	r3, #0
 800579a:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800579c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800579e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80057a0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80057a4:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80057a6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80057a8:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80057aa:	4b28      	ldr	r3, [pc, #160]	@ (800584c <HAL_I2C_Mem_Write+0x11c>)
 80057ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80057ae:	4642      	mov	r2, r8
 80057b0:	e9cd 6500 	strd	r6, r5, [sp]
 80057b4:	464b      	mov	r3, r9
 80057b6:	4639      	mov	r1, r7
 80057b8:	4620      	mov	r0, r4
 80057ba:	f7ff fddd 	bl	8005378 <I2C_RequestMemoryWrite>
 80057be:	2800      	cmp	r0, #0
 80057c0:	d02a      	beq.n	8005818 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80057c2:	2001      	movs	r0, #1
 80057c4:	e7c3      	b.n	800574e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80057c6:	f7ff fdaf 	bl	8005328 <I2C_WaitOnTXEFlagUntilTimeout>
 80057ca:	b140      	cbz	r0, 80057de <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80057cc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80057ce:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80057d0:	bf01      	itttt	eq
 80057d2:	6822      	ldreq	r2, [r4, #0]
 80057d4:	6813      	ldreq	r3, [r2, #0]
 80057d6:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80057da:	6013      	streq	r3, [r2, #0]
 80057dc:	e7f1      	b.n	80057c2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80057de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80057e0:	6827      	ldr	r7, [r4, #0]
 80057e2:	461a      	mov	r2, r3
 80057e4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80057e8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80057ea:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80057ec:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80057ee:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80057f0:	3a01      	subs	r2, #1
 80057f2:	b292      	uxth	r2, r2
 80057f4:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80057f6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80057f8:	1e48      	subs	r0, r1, #1
 80057fa:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80057fc:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80057fe:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005800:	d50a      	bpl.n	8005818 <HAL_I2C_Mem_Write+0xe8>
 8005802:	b148      	cbz	r0, 8005818 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005804:	785a      	ldrb	r2, [r3, #1]
 8005806:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005808:	3302      	adds	r3, #2
 800580a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800580c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800580e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005810:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005812:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005814:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8005816:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8005818:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800581a:	462a      	mov	r2, r5
 800581c:	4631      	mov	r1, r6
 800581e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005820:	2b00      	cmp	r3, #0
 8005822:	d1d0      	bne.n	80057c6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005824:	f7ff fe84 	bl	8005530 <I2C_WaitOnBTFFlagUntilTimeout>
 8005828:	2800      	cmp	r0, #0
 800582a:	d1cf      	bne.n	80057cc <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800582c:	6822      	ldr	r2, [r4, #0]
 800582e:	6813      	ldr	r3, [r2, #0]
 8005830:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005834:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005836:	2320      	movs	r3, #32
 8005838:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800583c:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005840:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005844:	e783      	b.n	800574e <HAL_I2C_Mem_Write+0x1e>
 8005846:	bf00      	nop
 8005848:	00100002 	.word	0x00100002
 800584c:	ffff0000 	.word	0xffff0000

08005850 <HAL_I2C_Mem_Read>:
{
 8005850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005854:	4604      	mov	r4, r0
 8005856:	b087      	sub	sp, #28
 8005858:	4699      	mov	r9, r3
 800585a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800585c:	460d      	mov	r5, r1
 800585e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005860:	f7ff f838 	bl	80048d4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005864:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8005868:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800586a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800586c:	d004      	beq.n	8005878 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800586e:	2502      	movs	r5, #2
}
 8005870:	4628      	mov	r0, r5
 8005872:	b007      	add	sp, #28
 8005874:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005878:	9000      	str	r0, [sp, #0]
 800587a:	4976      	ldr	r1, [pc, #472]	@ (8005a54 <HAL_I2C_Mem_Read+0x204>)
 800587c:	2319      	movs	r3, #25
 800587e:	2201      	movs	r2, #1
 8005880:	4620      	mov	r0, r4
 8005882:	f7ff fce3 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 8005886:	2800      	cmp	r0, #0
 8005888:	d1f1      	bne.n	800586e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800588a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800588e:	2b01      	cmp	r3, #1
 8005890:	d0ed      	beq.n	800586e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005892:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005894:	2301      	movs	r3, #1
 8005896:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800589a:	6803      	ldr	r3, [r0, #0]
 800589c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800589e:	bf5e      	ittt	pl
 80058a0:	6803      	ldrpl	r3, [r0, #0]
 80058a2:	f043 0301 	orrpl.w	r3, r3, #1
 80058a6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80058a8:	6803      	ldr	r3, [r0, #0]
 80058aa:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80058ae:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80058b0:	2322      	movs	r3, #34	@ 0x22
 80058b2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80058b6:	2340      	movs	r3, #64	@ 0x40
 80058b8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058bc:	2300      	movs	r3, #0
 80058be:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80058c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058c2:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80058c4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80058c8:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80058ca:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80058cc:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80058ce:	4b62      	ldr	r3, [pc, #392]	@ (8005a58 <HAL_I2C_Mem_Read+0x208>)
 80058d0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80058d2:	4629      	mov	r1, r5
 80058d4:	e9cd 7600 	strd	r7, r6, [sp]
 80058d8:	464b      	mov	r3, r9
 80058da:	4642      	mov	r2, r8
 80058dc:	4620      	mov	r0, r4
 80058de:	f7ff fda5 	bl	800542c <I2C_RequestMemoryRead>
 80058e2:	4605      	mov	r5, r0
 80058e4:	b108      	cbz	r0, 80058ea <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80058e6:	2501      	movs	r5, #1
 80058e8:	e7c2      	b.n	8005870 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80058ea:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80058ec:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80058ee:	b9b2      	cbnz	r2, 800591e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80058f0:	9002      	str	r0, [sp, #8]
 80058f2:	695a      	ldr	r2, [r3, #20]
 80058f4:	9202      	str	r2, [sp, #8]
 80058f6:	699a      	ldr	r2, [r3, #24]
 80058f8:	9202      	str	r2, [sp, #8]
 80058fa:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058fc:	681a      	ldr	r2, [r3, #0]
 80058fe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005902:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005904:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 8005a5c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005908:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800590a:	2b00      	cmp	r3, #0
 800590c:	d12c      	bne.n	8005968 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800590e:	2220      	movs	r2, #32
 8005910:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005914:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005918:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800591c:	e7a8      	b.n	8005870 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800591e:	2a01      	cmp	r2, #1
 8005920:	d10a      	bne.n	8005938 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005922:	681a      	ldr	r2, [r3, #0]
 8005924:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005928:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800592a:	9003      	str	r0, [sp, #12]
 800592c:	695a      	ldr	r2, [r3, #20]
 800592e:	9203      	str	r2, [sp, #12]
 8005930:	699a      	ldr	r2, [r3, #24]
 8005932:	9203      	str	r2, [sp, #12]
 8005934:	9a03      	ldr	r2, [sp, #12]
 8005936:	e7e1      	b.n	80058fc <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005938:	2a02      	cmp	r2, #2
 800593a:	d10e      	bne.n	800595a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800593c:	681a      	ldr	r2, [r3, #0]
 800593e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005942:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005944:	681a      	ldr	r2, [r3, #0]
 8005946:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800594a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800594c:	9004      	str	r0, [sp, #16]
 800594e:	695a      	ldr	r2, [r3, #20]
 8005950:	9204      	str	r2, [sp, #16]
 8005952:	699b      	ldr	r3, [r3, #24]
 8005954:	9304      	str	r3, [sp, #16]
 8005956:	9b04      	ldr	r3, [sp, #16]
 8005958:	e7d4      	b.n	8005904 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800595a:	9005      	str	r0, [sp, #20]
 800595c:	695a      	ldr	r2, [r3, #20]
 800595e:	9205      	str	r2, [sp, #20]
 8005960:	699b      	ldr	r3, [r3, #24]
 8005962:	9305      	str	r3, [sp, #20]
 8005964:	9b05      	ldr	r3, [sp, #20]
 8005966:	e7cd      	b.n	8005904 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005968:	2b03      	cmp	r3, #3
 800596a:	d856      	bhi.n	8005a1a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800596c:	2b01      	cmp	r3, #1
 800596e:	d115      	bne.n	800599c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005970:	4632      	mov	r2, r6
 8005972:	4639      	mov	r1, r7
 8005974:	4620      	mov	r0, r4
 8005976:	f7ff fe02 	bl	800557e <I2C_WaitOnRXNEFlagUntilTimeout>
 800597a:	2800      	cmp	r0, #0
 800597c:	d1b3      	bne.n	80058e6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800597e:	6823      	ldr	r3, [r4, #0]
 8005980:	691a      	ldr	r2, [r3, #16]
 8005982:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005984:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005986:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005988:	3301      	adds	r3, #1
 800598a:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800598c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800598e:	3b01      	subs	r3, #1
 8005990:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005992:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005994:	3b01      	subs	r3, #1
 8005996:	b29b      	uxth	r3, r3
 8005998:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800599a:	e7b5      	b.n	8005908 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800599c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800599e:	9600      	str	r6, [sp, #0]
 80059a0:	463b      	mov	r3, r7
 80059a2:	f04f 0200 	mov.w	r2, #0
 80059a6:	4641      	mov	r1, r8
 80059a8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80059aa:	d119      	bne.n	80059e0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80059ac:	f7ff fc4e 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 80059b0:	2800      	cmp	r0, #0
 80059b2:	d198      	bne.n	80058e6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059b4:	6823      	ldr	r3, [r4, #0]
 80059b6:	681a      	ldr	r2, [r3, #0]
 80059b8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80059bc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80059be:	691a      	ldr	r2, [r3, #16]
 80059c0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80059c2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80059c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80059c6:	1c53      	adds	r3, r2, #1
 80059c8:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80059ca:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80059cc:	3b01      	subs	r3, #1
 80059ce:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80059d0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80059d2:	3b01      	subs	r3, #1
 80059d4:	b29b      	uxth	r3, r3
 80059d6:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80059d8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80059da:	691b      	ldr	r3, [r3, #16]
 80059dc:	7053      	strb	r3, [r2, #1]
 80059de:	e7d2      	b.n	8005986 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80059e0:	f7ff fc34 	bl	800524c <I2C_WaitOnFlagUntilTimeout>
 80059e4:	4602      	mov	r2, r0
 80059e6:	2800      	cmp	r0, #0
 80059e8:	f47f af7d 	bne.w	80058e6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80059ec:	6823      	ldr	r3, [r4, #0]
 80059ee:	6819      	ldr	r1, [r3, #0]
 80059f0:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 80059f4:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80059f6:	6919      	ldr	r1, [r3, #16]
 80059f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80059fa:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 80059fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80059fe:	3301      	adds	r3, #1
 8005a00:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8005a02:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005a04:	3b01      	subs	r3, #1
 8005a06:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005a08:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a0a:	3b01      	subs	r3, #1
 8005a0c:	b29b      	uxth	r3, r3
 8005a0e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005a10:	4641      	mov	r1, r8
 8005a12:	9600      	str	r6, [sp, #0]
 8005a14:	463b      	mov	r3, r7
 8005a16:	4620      	mov	r0, r4
 8005a18:	e7c8      	b.n	80059ac <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a1a:	4632      	mov	r2, r6
 8005a1c:	4639      	mov	r1, r7
 8005a1e:	4620      	mov	r0, r4
 8005a20:	f7ff fdad 	bl	800557e <I2C_WaitOnRXNEFlagUntilTimeout>
 8005a24:	2800      	cmp	r0, #0
 8005a26:	f47f af5e 	bne.w	80058e6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005a2a:	6823      	ldr	r3, [r4, #0]
 8005a2c:	691a      	ldr	r2, [r3, #16]
 8005a2e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005a30:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005a32:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005a34:	1c53      	adds	r3, r2, #1
 8005a36:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8005a38:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005a3a:	3b01      	subs	r3, #1
 8005a3c:	8523      	strh	r3, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8005a3e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005a40:	3b01      	subs	r3, #1
 8005a42:	b29b      	uxth	r3, r3
 8005a44:	8563      	strh	r3, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005a46:	6823      	ldr	r3, [r4, #0]
 8005a48:	6959      	ldr	r1, [r3, #20]
 8005a4a:	0749      	lsls	r1, r1, #29
 8005a4c:	f57f af5c 	bpl.w	8005908 <HAL_I2C_Mem_Read+0xb8>
 8005a50:	e7c3      	b.n	80059da <HAL_I2C_Mem_Read+0x18a>
 8005a52:	bf00      	nop
 8005a54:	00100002 	.word	0x00100002
 8005a58:	ffff0000 	.word	0xffff0000
 8005a5c:	00010004 	.word	0x00010004

08005a60 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005a60:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a62:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005a66:	2b20      	cmp	r3, #32
 8005a68:	b2dc      	uxtb	r4, r3
 8005a6a:	d116      	bne.n	8005a9a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005a6c:	2324      	movs	r3, #36	@ 0x24
 8005a6e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005a72:	6803      	ldr	r3, [r0, #0]
 8005a74:	681a      	ldr	r2, [r3, #0]
 8005a76:	f022 0201 	bic.w	r2, r2, #1
 8005a7a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005a7c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005a7e:	f022 0210 	bic.w	r2, r2, #16
 8005a82:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005a84:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005a86:	4311      	orrs	r1, r2
 8005a88:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005a8a:	681a      	ldr	r2, [r3, #0]
 8005a8c:	f042 0201 	orr.w	r2, r2, #1
 8005a90:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005a92:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8005a96:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005a98:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005a9a:	2002      	movs	r0, #2
 8005a9c:	e7fc      	b.n	8005a98 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08005a9e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005a9e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005aa0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005aa4:	2b20      	cmp	r3, #32
 8005aa6:	b2dc      	uxtb	r4, r3
 8005aa8:	d116      	bne.n	8005ad8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005aaa:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005aac:	2324      	movs	r3, #36	@ 0x24
 8005aae:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005ab2:	6813      	ldr	r3, [r2, #0]
 8005ab4:	f023 0301 	bic.w	r3, r3, #1
 8005ab8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8005aba:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005abc:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8005ac0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005ac2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005ac4:	b29b      	uxth	r3, r3
 8005ac6:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005ac8:	6813      	ldr	r3, [r2, #0]
 8005aca:	f043 0301 	orr.w	r3, r3, #1
 8005ace:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005ad0:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8005ad4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005ad6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005ad8:	2002      	movs	r0, #2
 8005ada:	e7fc      	b.n	8005ad6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005adc <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005adc:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005ade:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005ae2:	01d2      	lsls	r2, r2, #7
 8005ae4:	3284      	adds	r2, #132	@ 0x84
 8005ae6:	1883      	adds	r3, r0, r2
{
 8005ae8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005aec:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005aee:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005af0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005af2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005af6:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005afa:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005afc:	68c5      	ldr	r5, [r0, #12]
 8005afe:	f10c 0701 	add.w	r7, ip, #1
 8005b02:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005b06:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8005b0a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005b0c:	443d      	add	r5, r7
 8005b0e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005b12:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005b14:	68c6      	ldr	r6, [r0, #12]
 8005b16:	68cd      	ldr	r5, [r1, #12]
 8005b18:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005b1c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005b1e:	689d      	ldr	r5, [r3, #8]
 8005b20:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005b24:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005b26:	68c7      	ldr	r7, [r0, #12]
 8005b28:	688d      	ldr	r5, [r1, #8]
 8005b2a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005b2e:	3501      	adds	r5, #1
 8005b30:	443d      	add	r5, r7
 8005b32:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005b36:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005b38:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005b3a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005b3c:	f025 0507 	bic.w	r5, r5, #7
 8005b40:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005b42:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005b46:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005b48:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005b4c:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005b4e:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005b52:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005b56:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005b5a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005b5e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005b62:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005b66:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005b68:	695d      	ldr	r5, [r3, #20]
 8005b6a:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005b6e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005b70:	694d      	ldr	r5, [r1, #20]
 8005b72:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005b74:	69dd      	ldr	r5, [r3, #28]
 8005b76:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005b7a:	f025 0507 	bic.w	r5, r5, #7
 8005b7e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005b80:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005b84:	433d      	orrs	r5, r7
 8005b86:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005b88:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005b8a:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005b8c:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005b90:	2e07      	cmp	r6, #7
 8005b92:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005b94:	bf9c      	itt	ls
 8005b96:	4d0e      	ldrls	r5, [pc, #56]	@ (8005bd0 <LTDC_SetConfig+0xf4>)
 8005b98:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005b9a:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005b9c:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8005ba0:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005ba2:	bf88      	it	hi
 8005ba4:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005ba6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005ba8:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005baa:	eba4 040c 	sub.w	r4, r4, ip
 8005bae:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005bb0:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005bb2:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005bb4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8005bb8:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005bba:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005bbc:	f36f 040a 	bfc	r4, #0, #11
 8005bc0:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005bc2:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005bc4:	5883      	ldr	r3, [r0, r2]
 8005bc6:	f043 0301 	orr.w	r3, r3, #1
 8005bca:	5083      	str	r3, [r0, r2]
}
 8005bcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005bd0:	080202a4 	.word	0x080202a4

08005bd4 <HAL_LTDC_Init>:
{
 8005bd4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005bd6:	4604      	mov	r4, r0
 8005bd8:	2800      	cmp	r0, #0
 8005bda:	d063      	beq.n	8005ca4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005bdc:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005be0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005be4:	b91b      	cbnz	r3, 8005bee <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005be6:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005bea:	f7fc f85f 	bl	8001cac <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005bee:	2302      	movs	r3, #2
 8005bf0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005bf4:	6823      	ldr	r3, [r4, #0]
 8005bf6:	699a      	ldr	r2, [r3, #24]
 8005bf8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005bfc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005bfe:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005c02:	4302      	orrs	r2, r0
 8005c04:	68e0      	ldr	r0, [r4, #12]
 8005c06:	6999      	ldr	r1, [r3, #24]
 8005c08:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005c0a:	6920      	ldr	r0, [r4, #16]
 8005c0c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005c0e:	430a      	orrs	r2, r1
 8005c10:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005c12:	689a      	ldr	r2, [r3, #8]
 8005c14:	4924      	ldr	r1, [pc, #144]	@ (8005ca8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005c16:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005c18:	400a      	ands	r2, r1
 8005c1a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005c1c:	689a      	ldr	r2, [r3, #8]
 8005c1e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005c22:	69a0      	ldr	r0, [r4, #24]
 8005c24:	4302      	orrs	r2, r0
 8005c26:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005c28:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005c2a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005c2c:	400a      	ands	r2, r1
 8005c2e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005c30:	68da      	ldr	r2, [r3, #12]
 8005c32:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005c36:	6a20      	ldr	r0, [r4, #32]
 8005c38:	4302      	orrs	r2, r0
 8005c3a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005c3c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005c3e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005c40:	400a      	ands	r2, r1
 8005c42:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005c44:	691a      	ldr	r2, [r3, #16]
 8005c46:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005c4a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005c4c:	4302      	orrs	r2, r0
 8005c4e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005c50:	695a      	ldr	r2, [r3, #20]
 8005c52:	400a      	ands	r2, r1
 8005c54:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005c56:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005c58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005c5a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005c5e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005c60:	430a      	orrs	r2, r1
 8005c62:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005c64:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005c66:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005c6a:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005c6e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8005c72:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005c74:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005c76:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005c7a:	432a      	orrs	r2, r5
 8005c7c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005c80:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005c84:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005c86:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c88:	f042 0206 	orr.w	r2, r2, #6
 8005c8c:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005c8e:	699a      	ldr	r2, [r3, #24]
 8005c90:	f042 0201 	orr.w	r2, r2, #1
 8005c94:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005c96:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c98:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005c9a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c9e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005ca2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005ca4:	2001      	movs	r0, #1
 8005ca6:	e7fc      	b.n	8005ca2 <HAL_LTDC_Init+0xce>
 8005ca8:	f000f800 	.word	0xf000f800

08005cac <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005cac:	4770      	bx	lr

08005cae <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005cae:	4770      	bx	lr

08005cb0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005cb0:	6803      	ldr	r3, [r0, #0]
{
 8005cb2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005cb4:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005cb6:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005cb8:	0772      	lsls	r2, r6, #29
{
 8005cba:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005cbc:	d514      	bpl.n	8005ce8 <HAL_LTDC_IRQHandler+0x38>
 8005cbe:	0769      	lsls	r1, r5, #29
 8005cc0:	d512      	bpl.n	8005ce8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005cc2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005cc4:	f022 0204 	bic.w	r2, r2, #4
 8005cc8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005cca:	2204      	movs	r2, #4
 8005ccc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005cce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005cd2:	f043 0301 	orr.w	r3, r3, #1
 8005cd6:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005cda:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005cdc:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005ce0:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005ce4:	f7ff ffe2 	bl	8005cac <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005ce8:	07b2      	lsls	r2, r6, #30
 8005cea:	d516      	bpl.n	8005d1a <HAL_LTDC_IRQHandler+0x6a>
 8005cec:	07ab      	lsls	r3, r5, #30
 8005cee:	d514      	bpl.n	8005d1a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005cf0:	6823      	ldr	r3, [r4, #0]
 8005cf2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005cf4:	f022 0202 	bic.w	r2, r2, #2
 8005cf8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005cfa:	2202      	movs	r2, #2
 8005cfc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005cfe:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005d02:	4313      	orrs	r3, r2
 8005d04:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005d08:	2304      	movs	r3, #4
 8005d0a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005d0e:	2300      	movs	r3, #0
 8005d10:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005d14:	4620      	mov	r0, r4
 8005d16:	f7ff ffc9 	bl	8005cac <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005d1a:	07f0      	lsls	r0, r6, #31
 8005d1c:	d510      	bpl.n	8005d40 <HAL_LTDC_IRQHandler+0x90>
 8005d1e:	07e9      	lsls	r1, r5, #31
 8005d20:	d50e      	bpl.n	8005d40 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005d22:	6823      	ldr	r3, [r4, #0]
 8005d24:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005d26:	f022 0201 	bic.w	r2, r2, #1
 8005d2a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005d2c:	2201      	movs	r2, #1
 8005d2e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005d30:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005d32:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005d36:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005d3a:	4620      	mov	r0, r4
 8005d3c:	f7fb fa7c 	bl	8001238 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005d40:	0732      	lsls	r2, r6, #28
 8005d42:	d511      	bpl.n	8005d68 <HAL_LTDC_IRQHandler+0xb8>
 8005d44:	072b      	lsls	r3, r5, #28
 8005d46:	d50f      	bpl.n	8005d68 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005d48:	6823      	ldr	r3, [r4, #0]
 8005d4a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005d4c:	f022 0208 	bic.w	r2, r2, #8
 8005d50:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005d52:	2208      	movs	r2, #8
 8005d54:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005d56:	2301      	movs	r3, #1
 8005d58:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005d5c:	2300      	movs	r3, #0
 8005d5e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005d62:	4620      	mov	r0, r4
 8005d64:	f7ff ffa3 	bl	8005cae <HAL_LTDC_ReloadEventCallback>
}
 8005d68:	bd70      	pop	{r4, r5, r6, pc}

08005d6a <HAL_LTDC_ConfigLayer>:
{
 8005d6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005d6e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8005d72:	2b01      	cmp	r3, #1
{
 8005d74:	4606      	mov	r6, r0
 8005d76:	460f      	mov	r7, r1
 8005d78:	4694      	mov	ip, r2
 8005d7a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005d7e:	d01f      	beq.n	8005dc0 <HAL_LTDC_ConfigLayer+0x56>
 8005d80:	f04f 0801 	mov.w	r8, #1
 8005d84:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005d88:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005d8c:	2434      	movs	r4, #52	@ 0x34
 8005d8e:	460d      	mov	r5, r1
 8005d90:	fb04 6402 	mla	r4, r4, r2, r6
 8005d94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005d96:	3438      	adds	r4, #56	@ 0x38
 8005d98:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005d9a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005d9c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005d9e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005da0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005da2:	682b      	ldr	r3, [r5, #0]
 8005da4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005da6:	4630      	mov	r0, r6
 8005da8:	4662      	mov	r2, ip
 8005daa:	4639      	mov	r1, r7
 8005dac:	f7ff fe96 	bl	8005adc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005db0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005db2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005db4:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005db8:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005dbc:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005dc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005dc4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005dc4:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8005dc8:	2a01      	cmp	r2, #1
{
 8005dca:	4603      	mov	r3, r0
 8005dcc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005dd0:	d012      	beq.n	8005df8 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005dd2:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005dd4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005dd8:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005dda:	f020 0001 	bic.w	r0, r0, #1
 8005dde:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005de0:	4806      	ldr	r0, [pc, #24]	@ (8005dfc <HAL_LTDC_ProgramLineEvent+0x38>)
 8005de2:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005de4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005de6:	f041 0101 	orr.w	r1, r1, #1
 8005dea:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005dec:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005dee:	2201      	movs	r2, #1
 8005df0:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005df4:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8005df8:	4770      	bx	lr
 8005dfa:	bf00      	nop
 8005dfc:	40016800 	.word	0x40016800

08005e00 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005e00:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005e04:	4604      	mov	r4, r0
 8005e06:	b340      	cbz	r0, 8005e5a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005e08:	6803      	ldr	r3, [r0, #0]
 8005e0a:	07de      	lsls	r6, r3, #31
 8005e0c:	d410      	bmi.n	8005e30 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005e0e:	6823      	ldr	r3, [r4, #0]
 8005e10:	079d      	lsls	r5, r3, #30
 8005e12:	d45b      	bmi.n	8005ecc <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005e14:	6823      	ldr	r3, [r4, #0]
 8005e16:	0719      	lsls	r1, r3, #28
 8005e18:	f100 809d 	bmi.w	8005f56 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005e1c:	6823      	ldr	r3, [r4, #0]
 8005e1e:	075a      	lsls	r2, r3, #29
 8005e20:	f100 80bd 	bmi.w	8005f9e <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005e24:	69a3      	ldr	r3, [r4, #24]
 8005e26:	2b00      	cmp	r3, #0
 8005e28:	f040 8124 	bne.w	8006074 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005e2c:	2000      	movs	r0, #0
 8005e2e:	e02c      	b.n	8005e8a <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005e30:	4b8d      	ldr	r3, [pc, #564]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005e32:	689a      	ldr	r2, [r3, #8]
 8005e34:	f002 020c 	and.w	r2, r2, #12
 8005e38:	2a04      	cmp	r2, #4
 8005e3a:	d007      	beq.n	8005e4c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005e3c:	689a      	ldr	r2, [r3, #8]
 8005e3e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005e42:	2a08      	cmp	r2, #8
 8005e44:	d10b      	bne.n	8005e5e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005e46:	685b      	ldr	r3, [r3, #4]
 8005e48:	0259      	lsls	r1, r3, #9
 8005e4a:	d508      	bpl.n	8005e5e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005e4c:	4b86      	ldr	r3, [pc, #536]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	039a      	lsls	r2, r3, #14
 8005e52:	d5dc      	bpl.n	8005e0e <HAL_RCC_OscConfig+0xe>
 8005e54:	6863      	ldr	r3, [r4, #4]
 8005e56:	2b00      	cmp	r3, #0
 8005e58:	d1d9      	bne.n	8005e0e <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8005e5a:	2001      	movs	r0, #1
 8005e5c:	e015      	b.n	8005e8a <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005e5e:	6863      	ldr	r3, [r4, #4]
 8005e60:	4d81      	ldr	r5, [pc, #516]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005e62:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005e66:	d113      	bne.n	8005e90 <HAL_RCC_OscConfig+0x90>
 8005e68:	682b      	ldr	r3, [r5, #0]
 8005e6a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005e6e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005e70:	f7fe fd30 	bl	80048d4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005e74:	4e7c      	ldr	r6, [pc, #496]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005e76:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005e78:	6833      	ldr	r3, [r6, #0]
 8005e7a:	039b      	lsls	r3, r3, #14
 8005e7c:	d4c7      	bmi.n	8005e0e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005e7e:	f7fe fd29 	bl	80048d4 <HAL_GetTick>
 8005e82:	1b40      	subs	r0, r0, r5
 8005e84:	2864      	cmp	r0, #100	@ 0x64
 8005e86:	d9f7      	bls.n	8005e78 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005e88:	2003      	movs	r0, #3
}
 8005e8a:	b002      	add	sp, #8
 8005e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005e90:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005e94:	d104      	bne.n	8005ea0 <HAL_RCC_OscConfig+0xa0>
 8005e96:	682b      	ldr	r3, [r5, #0]
 8005e98:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005e9c:	602b      	str	r3, [r5, #0]
 8005e9e:	e7e3      	b.n	8005e68 <HAL_RCC_OscConfig+0x68>
 8005ea0:	682a      	ldr	r2, [r5, #0]
 8005ea2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005ea6:	602a      	str	r2, [r5, #0]
 8005ea8:	682a      	ldr	r2, [r5, #0]
 8005eaa:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8005eae:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d1dd      	bne.n	8005e70 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005eb4:	f7fe fd0e 	bl	80048d4 <HAL_GetTick>
 8005eb8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005eba:	682b      	ldr	r3, [r5, #0]
 8005ebc:	039f      	lsls	r7, r3, #14
 8005ebe:	d5a6      	bpl.n	8005e0e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005ec0:	f7fe fd08 	bl	80048d4 <HAL_GetTick>
 8005ec4:	1b80      	subs	r0, r0, r6
 8005ec6:	2864      	cmp	r0, #100	@ 0x64
 8005ec8:	d9f7      	bls.n	8005eba <HAL_RCC_OscConfig+0xba>
 8005eca:	e7dd      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005ecc:	4b66      	ldr	r3, [pc, #408]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005ece:	689a      	ldr	r2, [r3, #8]
 8005ed0:	f012 0f0c 	tst.w	r2, #12
 8005ed4:	d007      	beq.n	8005ee6 <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005ed6:	689a      	ldr	r2, [r3, #8]
 8005ed8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005edc:	2a08      	cmp	r2, #8
 8005ede:	d111      	bne.n	8005f04 <HAL_RCC_OscConfig+0x104>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005ee0:	685b      	ldr	r3, [r3, #4]
 8005ee2:	025d      	lsls	r5, r3, #9
 8005ee4:	d40e      	bmi.n	8005f04 <HAL_RCC_OscConfig+0x104>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005ee6:	4a60      	ldr	r2, [pc, #384]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005ee8:	6813      	ldr	r3, [r2, #0]
 8005eea:	0799      	lsls	r1, r3, #30
 8005eec:	d502      	bpl.n	8005ef4 <HAL_RCC_OscConfig+0xf4>
 8005eee:	68e3      	ldr	r3, [r4, #12]
 8005ef0:	2b01      	cmp	r3, #1
 8005ef2:	d1b2      	bne.n	8005e5a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005ef4:	6813      	ldr	r3, [r2, #0]
 8005ef6:	6921      	ldr	r1, [r4, #16]
 8005ef8:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005efc:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005f00:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005f02:	e787      	b.n	8005e14 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005f04:	68e2      	ldr	r2, [r4, #12]
 8005f06:	4b59      	ldr	r3, [pc, #356]	@ (800606c <HAL_RCC_OscConfig+0x26c>)
 8005f08:	b1b2      	cbz	r2, 8005f38 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8005f0a:	2201      	movs	r2, #1
 8005f0c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005f0e:	f7fe fce1 	bl	80048d4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005f12:	4d55      	ldr	r5, [pc, #340]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005f14:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005f16:	682b      	ldr	r3, [r5, #0]
 8005f18:	079b      	lsls	r3, r3, #30
 8005f1a:	d507      	bpl.n	8005f2c <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005f1c:	682b      	ldr	r3, [r5, #0]
 8005f1e:	6922      	ldr	r2, [r4, #16]
 8005f20:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005f24:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005f28:	602b      	str	r3, [r5, #0]
 8005f2a:	e773      	b.n	8005e14 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005f2c:	f7fe fcd2 	bl	80048d4 <HAL_GetTick>
 8005f30:	1b80      	subs	r0, r0, r6
 8005f32:	2802      	cmp	r0, #2
 8005f34:	d9ef      	bls.n	8005f16 <HAL_RCC_OscConfig+0x116>
 8005f36:	e7a7      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005f38:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005f3a:	f7fe fccb 	bl	80048d4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005f3e:	4e4a      	ldr	r6, [pc, #296]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005f40:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005f42:	6833      	ldr	r3, [r6, #0]
 8005f44:	079f      	lsls	r7, r3, #30
 8005f46:	f57f af65 	bpl.w	8005e14 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005f4a:	f7fe fcc3 	bl	80048d4 <HAL_GetTick>
 8005f4e:	1b40      	subs	r0, r0, r5
 8005f50:	2802      	cmp	r0, #2
 8005f52:	d9f6      	bls.n	8005f42 <HAL_RCC_OscConfig+0x142>
 8005f54:	e798      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005f56:	6962      	ldr	r2, [r4, #20]
 8005f58:	4b44      	ldr	r3, [pc, #272]	@ (800606c <HAL_RCC_OscConfig+0x26c>)
 8005f5a:	b182      	cbz	r2, 8005f7e <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005f5c:	2201      	movs	r2, #1
 8005f5e:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005f62:	f7fe fcb7 	bl	80048d4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005f66:	4e40      	ldr	r6, [pc, #256]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005f68:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005f6a:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005f6c:	079b      	lsls	r3, r3, #30
 8005f6e:	f53f af55 	bmi.w	8005e1c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005f72:	f7fe fcaf 	bl	80048d4 <HAL_GetTick>
 8005f76:	1b40      	subs	r0, r0, r5
 8005f78:	2802      	cmp	r0, #2
 8005f7a:	d9f6      	bls.n	8005f6a <HAL_RCC_OscConfig+0x16a>
 8005f7c:	e784      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005f7e:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005f82:	f7fe fca7 	bl	80048d4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005f86:	4e38      	ldr	r6, [pc, #224]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005f88:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005f8a:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005f8c:	079f      	lsls	r7, r3, #30
 8005f8e:	f57f af45 	bpl.w	8005e1c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005f92:	f7fe fc9f 	bl	80048d4 <HAL_GetTick>
 8005f96:	1b40      	subs	r0, r0, r5
 8005f98:	2802      	cmp	r0, #2
 8005f9a:	d9f6      	bls.n	8005f8a <HAL_RCC_OscConfig+0x18a>
 8005f9c:	e774      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005f9e:	4b32      	ldr	r3, [pc, #200]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005fa0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005fa2:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8005fa6:	d128      	bne.n	8005ffa <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005fa8:	9201      	str	r2, [sp, #4]
 8005faa:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005fac:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005fb0:	641a      	str	r2, [r3, #64]	@ 0x40
 8005fb2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005fb4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005fb8:	9301      	str	r3, [sp, #4]
 8005fba:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005fbc:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005fbe:	4d2c      	ldr	r5, [pc, #176]	@ (8006070 <HAL_RCC_OscConfig+0x270>)
 8005fc0:	682b      	ldr	r3, [r5, #0]
 8005fc2:	05d8      	lsls	r0, r3, #23
 8005fc4:	d51b      	bpl.n	8005ffe <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005fc6:	68a3      	ldr	r3, [r4, #8]
 8005fc8:	4d27      	ldr	r5, [pc, #156]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005fca:	2b01      	cmp	r3, #1
 8005fcc:	d127      	bne.n	800601e <HAL_RCC_OscConfig+0x21e>
 8005fce:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005fd0:	f043 0301 	orr.w	r3, r3, #1
 8005fd4:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005fd6:	f7fe fc7d 	bl	80048d4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005fda:	4e23      	ldr	r6, [pc, #140]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005fdc:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fde:	f241 3888 	movw	r8, #5000	@ 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005fe2:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005fe4:	079a      	lsls	r2, r3, #30
 8005fe6:	d539      	bpl.n	800605c <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8005fe8:	2f00      	cmp	r7, #0
 8005fea:	f43f af1b 	beq.w	8005e24 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005fee:	4a1e      	ldr	r2, [pc, #120]	@ (8006068 <HAL_RCC_OscConfig+0x268>)
 8005ff0:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005ff2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005ff6:	6413      	str	r3, [r2, #64]	@ 0x40
 8005ff8:	e714      	b.n	8005e24 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005ffa:	2700      	movs	r7, #0
 8005ffc:	e7df      	b.n	8005fbe <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005ffe:	682b      	ldr	r3, [r5, #0]
 8006000:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006004:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006006:	f7fe fc65 	bl	80048d4 <HAL_GetTick>
 800600a:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800600c:	682b      	ldr	r3, [r5, #0]
 800600e:	05d9      	lsls	r1, r3, #23
 8006010:	d4d9      	bmi.n	8005fc6 <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006012:	f7fe fc5f 	bl	80048d4 <HAL_GetTick>
 8006016:	1b80      	subs	r0, r0, r6
 8006018:	2802      	cmp	r0, #2
 800601a:	d9f7      	bls.n	800600c <HAL_RCC_OscConfig+0x20c>
 800601c:	e734      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800601e:	2b05      	cmp	r3, #5
 8006020:	d104      	bne.n	800602c <HAL_RCC_OscConfig+0x22c>
 8006022:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006024:	f043 0304 	orr.w	r3, r3, #4
 8006028:	672b      	str	r3, [r5, #112]	@ 0x70
 800602a:	e7d0      	b.n	8005fce <HAL_RCC_OscConfig+0x1ce>
 800602c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800602e:	f022 0201 	bic.w	r2, r2, #1
 8006032:	672a      	str	r2, [r5, #112]	@ 0x70
 8006034:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8006036:	f022 0204 	bic.w	r2, r2, #4
 800603a:	672a      	str	r2, [r5, #112]	@ 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800603c:	2b00      	cmp	r3, #0
 800603e:	d1ca      	bne.n	8005fd6 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8006040:	f7fe fc48 	bl	80048d4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006044:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8006048:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800604a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800604c:	079b      	lsls	r3, r3, #30
 800604e:	d5cb      	bpl.n	8005fe8 <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006050:	f7fe fc40 	bl	80048d4 <HAL_GetTick>
 8006054:	1b80      	subs	r0, r0, r6
 8006056:	4540      	cmp	r0, r8
 8006058:	d9f7      	bls.n	800604a <HAL_RCC_OscConfig+0x24a>
 800605a:	e715      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800605c:	f7fe fc3a 	bl	80048d4 <HAL_GetTick>
 8006060:	1b40      	subs	r0, r0, r5
 8006062:	4540      	cmp	r0, r8
 8006064:	d9bd      	bls.n	8005fe2 <HAL_RCC_OscConfig+0x1e2>
 8006066:	e70f      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
 8006068:	40023800 	.word	0x40023800
 800606c:	42470000 	.word	0x42470000
 8006070:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006074:	4d37      	ldr	r5, [pc, #220]	@ (8006154 <HAL_RCC_OscConfig+0x354>)
 8006076:	68aa      	ldr	r2, [r5, #8]
 8006078:	f002 020c 	and.w	r2, r2, #12
 800607c:	2a08      	cmp	r2, #8
 800607e:	d03e      	beq.n	80060fe <HAL_RCC_OscConfig+0x2fe>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006080:	2b02      	cmp	r3, #2
 8006082:	4b35      	ldr	r3, [pc, #212]	@ (8006158 <HAL_RCC_OscConfig+0x358>)
 8006084:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8006088:	661a      	str	r2, [r3, #96]	@ 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800608a:	d12b      	bne.n	80060e4 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800608c:	f7fe fc22 	bl	80048d4 <HAL_GetTick>
 8006090:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006092:	682b      	ldr	r3, [r5, #0]
 8006094:	0199      	lsls	r1, r3, #6
 8006096:	d41f      	bmi.n	80060d8 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006098:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800609c:	4313      	orrs	r3, r2
 800609e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80060a0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80060a4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80060a6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80060aa:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80060ac:	0852      	lsrs	r2, r2, #1
 80060ae:	3a01      	subs	r2, #1
 80060b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80060b4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80060b6:	4b28      	ldr	r3, [pc, #160]	@ (8006158 <HAL_RCC_OscConfig+0x358>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80060b8:	4d26      	ldr	r5, [pc, #152]	@ (8006154 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 80060ba:	2201      	movs	r2, #1
 80060bc:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 80060be:	f7fe fc09 	bl	80048d4 <HAL_GetTick>
 80060c2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80060c4:	682b      	ldr	r3, [r5, #0]
 80060c6:	019a      	lsls	r2, r3, #6
 80060c8:	f53f aeb0 	bmi.w	8005e2c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80060cc:	f7fe fc02 	bl	80048d4 <HAL_GetTick>
 80060d0:	1b00      	subs	r0, r0, r4
 80060d2:	2802      	cmp	r0, #2
 80060d4:	d9f6      	bls.n	80060c4 <HAL_RCC_OscConfig+0x2c4>
 80060d6:	e6d7      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80060d8:	f7fe fbfc 	bl	80048d4 <HAL_GetTick>
 80060dc:	1b80      	subs	r0, r0, r6
 80060de:	2802      	cmp	r0, #2
 80060e0:	d9d7      	bls.n	8006092 <HAL_RCC_OscConfig+0x292>
 80060e2:	e6d1      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 80060e4:	f7fe fbf6 	bl	80048d4 <HAL_GetTick>
 80060e8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80060ea:	682b      	ldr	r3, [r5, #0]
 80060ec:	019b      	lsls	r3, r3, #6
 80060ee:	f57f ae9d 	bpl.w	8005e2c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80060f2:	f7fe fbef 	bl	80048d4 <HAL_GetTick>
 80060f6:	1b00      	subs	r0, r0, r4
 80060f8:	2802      	cmp	r0, #2
 80060fa:	d9f6      	bls.n	80060ea <HAL_RCC_OscConfig+0x2ea>
 80060fc:	e6c4      	b.n	8005e88 <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80060fe:	2b01      	cmp	r3, #1
 8006100:	f43f aeab 	beq.w	8005e5a <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8006104:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006106:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006108:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800610c:	4291      	cmp	r1, r2
 800610e:	f47f aea4 	bne.w	8005e5a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006112:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006114:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006118:	428a      	cmp	r2, r1
 800611a:	f47f ae9e 	bne.w	8005e5a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800611e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006120:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8006124:	401a      	ands	r2, r3
 8006126:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800612a:	f47f ae96 	bne.w	8005e5a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800612e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006130:	0852      	lsrs	r2, r2, #1
 8006132:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8006136:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006138:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800613c:	f47f ae8d 	bne.w	8005e5a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006140:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006142:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006146:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800614a:	bf14      	ite	ne
 800614c:	2001      	movne	r0, #1
 800614e:	2000      	moveq	r0, #0
 8006150:	e69b      	b.n	8005e8a <HAL_RCC_OscConfig+0x8a>
 8006152:	bf00      	nop
 8006154:	40023800 	.word	0x40023800
 8006158:	42470000 	.word	0x42470000

0800615c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800615c:	4913      	ldr	r1, [pc, #76]	@ (80061ac <HAL_RCC_GetSysClockFreq+0x50>)
{
 800615e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006160:	688b      	ldr	r3, [r1, #8]
 8006162:	f003 030c 	and.w	r3, r3, #12
 8006166:	2b04      	cmp	r3, #4
 8006168:	d01c      	beq.n	80061a4 <HAL_RCC_GetSysClockFreq+0x48>
 800616a:	2b08      	cmp	r3, #8
 800616c:	d11c      	bne.n	80061a8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800616e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006170:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006172:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006174:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006178:	bf14      	ite	ne
 800617a:	480d      	ldrne	r0, [pc, #52]	@ (80061b0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800617c:	480d      	ldreq	r0, [pc, #52]	@ (80061b4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800617e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006182:	bf18      	it	ne
 8006184:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006186:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800618a:	fba1 0100 	umull	r0, r1, r1, r0
 800618e:	f7fa f87f 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006192:	4b06      	ldr	r3, [pc, #24]	@ (80061ac <HAL_RCC_GetSysClockFreq+0x50>)
 8006194:	685b      	ldr	r3, [r3, #4]
 8006196:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800619a:	3301      	adds	r3, #1
 800619c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800619e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80061a2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80061a4:	4802      	ldr	r0, [pc, #8]	@ (80061b0 <HAL_RCC_GetSysClockFreq+0x54>)
 80061a6:	e7fc      	b.n	80061a2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80061a8:	4802      	ldr	r0, [pc, #8]	@ (80061b4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80061aa:	e7fa      	b.n	80061a2 <HAL_RCC_GetSysClockFreq+0x46>
 80061ac:	40023800 	.word	0x40023800
 80061b0:	007a1200 	.word	0x007a1200
 80061b4:	00f42400 	.word	0x00f42400

080061b8 <HAL_RCC_ClockConfig>:
{
 80061b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80061bc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80061be:	4604      	mov	r4, r0
 80061c0:	b910      	cbnz	r0, 80061c8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80061c2:	2001      	movs	r0, #1
}
 80061c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80061c8:	4b43      	ldr	r3, [pc, #268]	@ (80062d8 <HAL_RCC_ClockConfig+0x120>)
 80061ca:	681a      	ldr	r2, [r3, #0]
 80061cc:	f002 020f 	and.w	r2, r2, #15
 80061d0:	428a      	cmp	r2, r1
 80061d2:	d328      	bcc.n	8006226 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80061d4:	6821      	ldr	r1, [r4, #0]
 80061d6:	078f      	lsls	r7, r1, #30
 80061d8:	d42d      	bmi.n	8006236 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80061da:	07c8      	lsls	r0, r1, #31
 80061dc:	d440      	bmi.n	8006260 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80061de:	4b3e      	ldr	r3, [pc, #248]	@ (80062d8 <HAL_RCC_ClockConfig+0x120>)
 80061e0:	681a      	ldr	r2, [r3, #0]
 80061e2:	f002 020f 	and.w	r2, r2, #15
 80061e6:	42aa      	cmp	r2, r5
 80061e8:	d865      	bhi.n	80062b6 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80061ea:	6822      	ldr	r2, [r4, #0]
 80061ec:	0751      	lsls	r1, r2, #29
 80061ee:	d46b      	bmi.n	80062c8 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80061f0:	0713      	lsls	r3, r2, #28
 80061f2:	d507      	bpl.n	8006204 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80061f4:	4a39      	ldr	r2, [pc, #228]	@ (80062dc <HAL_RCC_ClockConfig+0x124>)
 80061f6:	6921      	ldr	r1, [r4, #16]
 80061f8:	6893      	ldr	r3, [r2, #8]
 80061fa:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80061fe:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006202:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006204:	f7ff ffaa 	bl	800615c <HAL_RCC_GetSysClockFreq>
 8006208:	4b34      	ldr	r3, [pc, #208]	@ (80062dc <HAL_RCC_ClockConfig+0x124>)
 800620a:	4a35      	ldr	r2, [pc, #212]	@ (80062e0 <HAL_RCC_ClockConfig+0x128>)
 800620c:	689b      	ldr	r3, [r3, #8]
 800620e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006212:	5cd3      	ldrb	r3, [r2, r3]
 8006214:	40d8      	lsrs	r0, r3
 8006216:	4b33      	ldr	r3, [pc, #204]	@ (80062e4 <HAL_RCC_ClockConfig+0x12c>)
 8006218:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800621a:	4b33      	ldr	r3, [pc, #204]	@ (80062e8 <HAL_RCC_ClockConfig+0x130>)
 800621c:	6818      	ldr	r0, [r3, #0]
 800621e:	f7fb fec3 	bl	8001fa8 <HAL_InitTick>
  return HAL_OK;
 8006222:	2000      	movs	r0, #0
 8006224:	e7ce      	b.n	80061c4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006226:	b2ca      	uxtb	r2, r1
 8006228:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	f003 030f 	and.w	r3, r3, #15
 8006230:	428b      	cmp	r3, r1
 8006232:	d1c6      	bne.n	80061c2 <HAL_RCC_ClockConfig+0xa>
 8006234:	e7ce      	b.n	80061d4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006236:	4b29      	ldr	r3, [pc, #164]	@ (80062dc <HAL_RCC_ClockConfig+0x124>)
 8006238:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800623c:	bf1e      	ittt	ne
 800623e:	689a      	ldrne	r2, [r3, #8]
 8006240:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8006244:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006246:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006248:	bf42      	ittt	mi
 800624a:	689a      	ldrmi	r2, [r3, #8]
 800624c:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8006250:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006252:	689a      	ldr	r2, [r3, #8]
 8006254:	68a0      	ldr	r0, [r4, #8]
 8006256:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800625a:	4302      	orrs	r2, r0
 800625c:	609a      	str	r2, [r3, #8]
 800625e:	e7bc      	b.n	80061da <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006260:	6862      	ldr	r2, [r4, #4]
 8006262:	4b1e      	ldr	r3, [pc, #120]	@ (80062dc <HAL_RCC_ClockConfig+0x124>)
 8006264:	2a01      	cmp	r2, #1
 8006266:	d11c      	bne.n	80062a2 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006268:	681b      	ldr	r3, [r3, #0]
 800626a:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800626e:	d0a8      	beq.n	80061c2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006270:	4e1a      	ldr	r6, [pc, #104]	@ (80062dc <HAL_RCC_ClockConfig+0x124>)
 8006272:	68b3      	ldr	r3, [r6, #8]
 8006274:	f023 0303 	bic.w	r3, r3, #3
 8006278:	4313      	orrs	r3, r2
 800627a:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800627c:	f7fe fb2a 	bl	80048d4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006280:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8006284:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006286:	68b3      	ldr	r3, [r6, #8]
 8006288:	6862      	ldr	r2, [r4, #4]
 800628a:	f003 030c 	and.w	r3, r3, #12
 800628e:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006292:	d0a4      	beq.n	80061de <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006294:	f7fe fb1e 	bl	80048d4 <HAL_GetTick>
 8006298:	1bc0      	subs	r0, r0, r7
 800629a:	4540      	cmp	r0, r8
 800629c:	d9f3      	bls.n	8006286 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800629e:	2003      	movs	r0, #3
 80062a0:	e790      	b.n	80061c4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80062a2:	1e91      	subs	r1, r2, #2
 80062a4:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80062a6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80062a8:	d802      	bhi.n	80062b0 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80062aa:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 80062ae:	e7de      	b.n	800626e <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80062b0:	f013 0f02 	tst.w	r3, #2
 80062b4:	e7db      	b.n	800626e <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80062b6:	b2ea      	uxtb	r2, r5
 80062b8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	f003 030f 	and.w	r3, r3, #15
 80062c0:	42ab      	cmp	r3, r5
 80062c2:	f47f af7e 	bne.w	80061c2 <HAL_RCC_ClockConfig+0xa>
 80062c6:	e790      	b.n	80061ea <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80062c8:	4904      	ldr	r1, [pc, #16]	@ (80062dc <HAL_RCC_ClockConfig+0x124>)
 80062ca:	68e0      	ldr	r0, [r4, #12]
 80062cc:	688b      	ldr	r3, [r1, #8]
 80062ce:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 80062d2:	4303      	orrs	r3, r0
 80062d4:	608b      	str	r3, [r1, #8]
 80062d6:	e78b      	b.n	80061f0 <HAL_RCC_ClockConfig+0x38>
 80062d8:	40023c00 	.word	0x40023c00
 80062dc:	40023800 	.word	0x40023800
 80062e0:	08020294 	.word	0x08020294
 80062e4:	2000007c 	.word	0x2000007c
 80062e8:	20000084 	.word	0x20000084

080062ec <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80062ec:	4b04      	ldr	r3, [pc, #16]	@ (8006300 <HAL_RCC_GetPCLK1Freq+0x14>)
 80062ee:	4a05      	ldr	r2, [pc, #20]	@ (8006304 <HAL_RCC_GetPCLK1Freq+0x18>)
 80062f0:	689b      	ldr	r3, [r3, #8]
 80062f2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80062f6:	5cd3      	ldrb	r3, [r2, r3]
 80062f8:	4a03      	ldr	r2, [pc, #12]	@ (8006308 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80062fa:	6810      	ldr	r0, [r2, #0]
}
 80062fc:	40d8      	lsrs	r0, r3
 80062fe:	4770      	bx	lr
 8006300:	40023800 	.word	0x40023800
 8006304:	0802028c 	.word	0x0802028c
 8006308:	2000007c 	.word	0x2000007c

0800630c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800630c:	230f      	movs	r3, #15
 800630e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006310:	4b0b      	ldr	r3, [pc, #44]	@ (8006340 <HAL_RCC_GetClockConfig+0x34>)
 8006312:	689a      	ldr	r2, [r3, #8]
 8006314:	f002 0203 	and.w	r2, r2, #3
 8006318:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800631a:	689a      	ldr	r2, [r3, #8]
 800631c:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006320:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006322:	689a      	ldr	r2, [r3, #8]
 8006324:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006328:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800632a:	689b      	ldr	r3, [r3, #8]
 800632c:	08db      	lsrs	r3, r3, #3
 800632e:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8006332:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006334:	4b03      	ldr	r3, [pc, #12]	@ (8006344 <HAL_RCC_GetClockConfig+0x38>)
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	f003 030f 	and.w	r3, r3, #15
 800633c:	600b      	str	r3, [r1, #0]
}
 800633e:	4770      	bx	lr
 8006340:	40023800 	.word	0x40023800
 8006344:	40023c00 	.word	0x40023c00

08006348 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006348:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800634a:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800634e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006350:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006352:	f040 8088 	bne.w	8006466 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006356:	6823      	ldr	r3, [r4, #0]
 8006358:	f013 0f0c 	tst.w	r3, #12
 800635c:	d045      	beq.n	80063ea <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800635e:	4b8c      	ldr	r3, [pc, #560]	@ (8006590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006360:	4d8c      	ldr	r5, [pc, #560]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006362:	2200      	movs	r2, #0
 8006364:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8006366:	f7fe fab5 	bl	80048d4 <HAL_GetTick>
 800636a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800636c:	682b      	ldr	r3, [r5, #0]
 800636e:	0099      	lsls	r1, r3, #2
 8006370:	f100 80cb 	bmi.w	800650a <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006374:	6821      	ldr	r1, [r4, #0]
 8006376:	074a      	lsls	r2, r1, #29
 8006378:	d515      	bpl.n	80063a6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800637a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800637e:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006382:	061b      	lsls	r3, r3, #24
 8006384:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8006388:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800638c:	4313      	orrs	r3, r2
 800638e:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006392:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8006396:	6a22      	ldr	r2, [r4, #32]
 8006398:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800639c:	3a01      	subs	r2, #1
 800639e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80063a2:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80063a6:	070b      	lsls	r3, r1, #28
 80063a8:	d514      	bpl.n	80063d4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80063aa:	4a7a      	ldr	r2, [pc, #488]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80063ac:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80063ae:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80063b2:	6920      	ldr	r0, [r4, #16]
 80063b4:	071b      	lsls	r3, r3, #28
 80063b6:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 80063ba:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80063be:	430b      	orrs	r3, r1
 80063c0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80063c4:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 80063c8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80063ca:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80063ce:	430b      	orrs	r3, r1
 80063d0:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80063d4:	4b6e      	ldr	r3, [pc, #440]	@ (8006590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80063d6:	4e6f      	ldr	r6, [pc, #444]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 80063d8:	2201      	movs	r2, #1
 80063da:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80063dc:	f7fe fa7a 	bl	80048d4 <HAL_GetTick>
 80063e0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80063e2:	6833      	ldr	r3, [r6, #0]
 80063e4:	009f      	lsls	r7, r3, #2
 80063e6:	f140 8097 	bpl.w	8006518 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80063ea:	6823      	ldr	r3, [r4, #0]
 80063ec:	0698      	lsls	r0, r3, #26
 80063ee:	d534      	bpl.n	800645a <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80063f0:	2300      	movs	r3, #0
 80063f2:	9301      	str	r3, [sp, #4]
 80063f4:	4b67      	ldr	r3, [pc, #412]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80063f6:	4d68      	ldr	r5, [pc, #416]	@ (8006598 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80063f8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80063fa:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80063fe:	641a      	str	r2, [r3, #64]	@ 0x40
 8006400:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006402:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006406:	9301      	str	r3, [sp, #4]
 8006408:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800640a:	682b      	ldr	r3, [r5, #0]
 800640c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006410:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006412:	f7fe fa5f 	bl	80048d4 <HAL_GetTick>
 8006416:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006418:	682b      	ldr	r3, [r5, #0]
 800641a:	05d8      	lsls	r0, r3, #23
 800641c:	f140 8083 	bpl.w	8006526 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006420:	4d5c      	ldr	r5, [pc, #368]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006422:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006424:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006426:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800642a:	f040 8083 	bne.w	8006534 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800642e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8006430:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8006434:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006438:	4a56      	ldr	r2, [pc, #344]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800643a:	f040 809e 	bne.w	800657a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800643e:	6891      	ldr	r1, [r2, #8]
 8006440:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8006444:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006448:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800644c:	4301      	orrs	r1, r0
 800644e:	6091      	str	r1, [r2, #8]
 8006450:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8006452:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006456:	430b      	orrs	r3, r1
 8006458:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800645a:	6823      	ldr	r3, [r4, #0]
 800645c:	06db      	lsls	r3, r3, #27
 800645e:	f100 8090 	bmi.w	8006582 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8006462:	2000      	movs	r0, #0
 8006464:	e04f      	b.n	8006506 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8006466:	4b4a      	ldr	r3, [pc, #296]	@ (8006590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006468:	4e4a      	ldr	r6, [pc, #296]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800646a:	2200      	movs	r2, #0
 800646c:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800646e:	f7fe fa31 	bl	80048d4 <HAL_GetTick>
 8006472:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006474:	6833      	ldr	r3, [r6, #0]
 8006476:	011f      	lsls	r7, r3, #4
 8006478:	d43f      	bmi.n	80064fa <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800647a:	6821      	ldr	r1, [r4, #0]
 800647c:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800647e:	bf41      	itttt	mi
 8006480:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006484:	071b      	lslmi	r3, r3, #28
 8006486:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800648a:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800648e:	078a      	lsls	r2, r1, #30
 8006490:	d515      	bpl.n	80064be <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006492:	4a40      	ldr	r2, [pc, #256]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006494:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006496:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800649a:	6865      	ldr	r5, [r4, #4]
 800649c:	061b      	lsls	r3, r3, #24
 800649e:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 80064a2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80064a6:	4303      	orrs	r3, r0
 80064a8:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80064ac:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 80064b0:	69e3      	ldr	r3, [r4, #28]
 80064b2:	f020 001f 	bic.w	r0, r0, #31
 80064b6:	3b01      	subs	r3, #1
 80064b8:	4303      	orrs	r3, r0
 80064ba:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80064be:	064b      	lsls	r3, r1, #25
 80064c0:	d50a      	bpl.n	80064d8 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80064c2:	68e3      	ldr	r3, [r4, #12]
 80064c4:	6862      	ldr	r2, [r4, #4]
 80064c6:	061b      	lsls	r3, r3, #24
 80064c8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80064cc:	68a2      	ldr	r2, [r4, #8]
 80064ce:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80064d2:	4a30      	ldr	r2, [pc, #192]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80064d4:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80064d8:	4b2d      	ldr	r3, [pc, #180]	@ (8006590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064da:	4e2e      	ldr	r6, [pc, #184]	@ (8006594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 80064dc:	2201      	movs	r2, #1
 80064de:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80064e0:	f7fe f9f8 	bl	80048d4 <HAL_GetTick>
 80064e4:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80064e6:	6833      	ldr	r3, [r6, #0]
 80064e8:	011f      	lsls	r7, r3, #4
 80064ea:	f53f af34 	bmi.w	8006356 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80064ee:	f7fe f9f1 	bl	80048d4 <HAL_GetTick>
 80064f2:	1b40      	subs	r0, r0, r5
 80064f4:	2802      	cmp	r0, #2
 80064f6:	d9f6      	bls.n	80064e6 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80064f8:	e004      	b.n	8006504 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80064fa:	f7fe f9eb 	bl	80048d4 <HAL_GetTick>
 80064fe:	1b40      	subs	r0, r0, r5
 8006500:	2802      	cmp	r0, #2
 8006502:	d9b7      	bls.n	8006474 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8006504:	2003      	movs	r0, #3
}
 8006506:	b003      	add	sp, #12
 8006508:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800650a:	f7fe f9e3 	bl	80048d4 <HAL_GetTick>
 800650e:	1b80      	subs	r0, r0, r6
 8006510:	2802      	cmp	r0, #2
 8006512:	f67f af2b 	bls.w	800636c <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006516:	e7f5      	b.n	8006504 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006518:	f7fe f9dc 	bl	80048d4 <HAL_GetTick>
 800651c:	1b40      	subs	r0, r0, r5
 800651e:	2802      	cmp	r0, #2
 8006520:	f67f af5f 	bls.w	80063e2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8006524:	e7ee      	b.n	8006504 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006526:	f7fe f9d5 	bl	80048d4 <HAL_GetTick>
 800652a:	1b80      	subs	r0, r0, r6
 800652c:	2802      	cmp	r0, #2
 800652e:	f67f af73 	bls.w	8006418 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8006532:	e7e7      	b.n	8006504 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006534:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006538:	4293      	cmp	r3, r2
 800653a:	f43f af78 	beq.w	800642e <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800653e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006540:	4a13      	ldr	r2, [pc, #76]	@ (8006590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006542:	2101      	movs	r1, #1
 8006544:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006548:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800654c:	2100      	movs	r1, #0
 800654e:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8006552:	672b      	str	r3, [r5, #112]	@ 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006554:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006556:	07d9      	lsls	r1, r3, #31
 8006558:	f57f af69 	bpl.w	800642e <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800655c:	f7fe f9ba 	bl	80048d4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006560:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8006564:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006566:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006568:	079a      	lsls	r2, r3, #30
 800656a:	f53f af60 	bmi.w	800642e <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800656e:	f7fe f9b1 	bl	80048d4 <HAL_GetTick>
 8006572:	1b80      	subs	r0, r0, r6
 8006574:	42b8      	cmp	r0, r7
 8006576:	d9f6      	bls.n	8006566 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8006578:	e7c4      	b.n	8006504 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800657a:	6891      	ldr	r1, [r2, #8]
 800657c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006580:	e765      	b.n	800644e <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006582:	4b06      	ldr	r3, [pc, #24]	@ (800659c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8006584:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8006588:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800658c:	e769      	b.n	8006462 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800658e:	bf00      	nop
 8006590:	42470000 	.word	0x42470000
 8006594:	40023800 	.word	0x40023800
 8006598:	40007000 	.word	0x40007000
 800659c:	42471000 	.word	0x42471000

080065a0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80065a0:	b538      	push	{r3, r4, r5, lr}
 80065a2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80065a4:	4604      	mov	r4, r0
 80065a6:	b1c8      	cbz	r0, 80065dc <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80065a8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80065ac:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80065b0:	b91b      	cbnz	r3, 80065ba <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80065b2:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80065b6:	f7fb fc8b 	bl	8001ed0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80065ba:	2302      	movs	r3, #2
 80065bc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80065c0:	1d21      	adds	r1, r4, #4
 80065c2:	6820      	ldr	r0, [r4, #0]
 80065c4:	f000 fce6 	bl	8006f94 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80065c8:	6862      	ldr	r2, [r4, #4]
 80065ca:	6820      	ldr	r0, [r4, #0]
 80065cc:	4629      	mov	r1, r5
 80065ce:	f000 fd17 	bl	8007000 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80065d2:	2301      	movs	r3, #1
 80065d4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 80065d8:	2000      	movs	r0, #0
}
 80065da:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80065dc:	2001      	movs	r0, #1
 80065de:	e7fc      	b.n	80065da <HAL_SDRAM_Init+0x3a>

080065e0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80065e0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80065e2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80065e6:	2b02      	cmp	r3, #2
{
 80065e8:	4605      	mov	r5, r0
 80065ea:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80065ec:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80065ee:	d012      	beq.n	8006616 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80065f0:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80065f4:	2c01      	cmp	r4, #1
 80065f6:	d10f      	bne.n	8006618 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80065f8:	2302      	movs	r3, #2
 80065fa:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80065fe:	6828      	ldr	r0, [r5, #0]
 8006600:	f000 fd34 	bl	800706c <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006604:	6833      	ldr	r3, [r6, #0]
 8006606:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006608:	bf06      	itte	eq
 800660a:	2305      	moveq	r3, #5
 800660c:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006610:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006614:	2000      	movs	r0, #0
}
 8006616:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006618:	2001      	movs	r0, #1
 800661a:	e7fc      	b.n	8006616 <HAL_SDRAM_SendCommand+0x36>

0800661c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800661c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800661e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006622:	2b02      	cmp	r3, #2
{
 8006624:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006626:	b2d8      	uxtb	r0, r3
 8006628:	d00d      	beq.n	8006646 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800662a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800662e:	2b01      	cmp	r3, #1
 8006630:	b2dd      	uxtb	r5, r3
 8006632:	d109      	bne.n	8006648 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006634:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006636:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006638:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800663c:	f000 fd3a 	bl	80070b4 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006640:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006644:	2000      	movs	r0, #0
}
 8006646:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006648:	2001      	movs	r0, #1
 800664a:	e7fc      	b.n	8006646 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800664c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800664c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006650:	461c      	mov	r4, r3
 8006652:	4616      	mov	r6, r2
 8006654:	460f      	mov	r7, r1
 8006656:	4605      	mov	r5, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006658:	f7fe f93c 	bl	80048d4 <HAL_GetTick>
 800665c:	4434      	add	r4, r6
 800665e:	1a24      	subs	r4, r4, r0
  tmp_tickstart = HAL_GetTick();
 8006660:	f7fe f938 	bl	80048d4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006664:	4b24      	ldr	r3, [pc, #144]	@ (80066f8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xac>)
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800666c:	4363      	muls	r3, r4
  tmp_tickstart = HAL_GetTick();
 800666e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006670:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006672:	682a      	ldr	r2, [r5, #0]
 8006674:	6893      	ldr	r3, [r2, #8]
 8006676:	ea37 0303 	bics.w	r3, r7, r3
 800667a:	d001      	beq.n	8006680 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
      }
      count--;
    }
  }

  return HAL_OK;
 800667c:	2000      	movs	r0, #0
 800667e:	e02e      	b.n	80066de <SPI_WaitFlagStateUntilTimeout.constprop.0+0x92>
    if (Timeout != HAL_MAX_DELAY)
 8006680:	1c73      	adds	r3, r6, #1
 8006682:	d0f7      	beq.n	8006674 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006684:	f7fe f926 	bl	80048d4 <HAL_GetTick>
 8006688:	eba0 0008 	sub.w	r0, r0, r8
 800668c:	42a0      	cmp	r0, r4
 800668e:	d329      	bcc.n	80066e4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006690:	682b      	ldr	r3, [r5, #0]
 8006692:	685a      	ldr	r2, [r3, #4]
 8006694:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006698:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800669a:	686a      	ldr	r2, [r5, #4]
 800669c:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80066a0:	d10a      	bne.n	80066b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
 80066a2:	68aa      	ldr	r2, [r5, #8]
 80066a4:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 80066a8:	d002      	beq.n	80066b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80066aa:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80066ae:	d103      	bne.n	80066b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
          __HAL_SPI_DISABLE(hspi);
 80066b0:	681a      	ldr	r2, [r3, #0]
 80066b2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80066b6:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80066b8:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
 80066ba:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 80066be:	d107      	bne.n	80066d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x84>
          SPI_RESET_CRC(hspi);
 80066c0:	681a      	ldr	r2, [r3, #0]
 80066c2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80066c6:	601a      	str	r2, [r3, #0]
 80066c8:	681a      	ldr	r2, [r3, #0]
 80066ca:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80066ce:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80066d0:	2301      	movs	r3, #1
 80066d2:	f885 3051 	strb.w	r3, [r5, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80066d6:	2300      	movs	r3, #0
 80066d8:	f885 3050 	strb.w	r3, [r5, #80]	@ 0x50
        return HAL_TIMEOUT;
 80066dc:	2003      	movs	r0, #3
}
 80066de:	b002      	add	sp, #8
 80066e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 80066e4:	9a01      	ldr	r2, [sp, #4]
      count--;
 80066e6:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 80066e8:	2a00      	cmp	r2, #0
      count--;
 80066ea:	f103 33ff 	add.w	r3, r3, #4294967295
 80066ee:	9301      	str	r3, [sp, #4]
 80066f0:	bf08      	it	eq
 80066f2:	4614      	moveq	r4, r2
 80066f4:	e7bd      	b.n	8006672 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 80066f6:	bf00      	nop
 80066f8:	2000007c 	.word	0x2000007c

080066fc <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80066fc:	b538      	push	{r3, r4, r5, lr}
 80066fe:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006700:	6842      	ldr	r2, [r0, #4]
 8006702:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
{
 8006706:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006708:	d006      	beq.n	8006718 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800670a:	460a      	mov	r2, r1
 800670c:	2101      	movs	r1, #1
 800670e:	f7ff ff9d 	bl	800664c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006712:	b9b8      	cbnz	r0, 8006744 <SPI_EndRxTransaction+0x48>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8006714:	2000      	movs	r0, #0
}
 8006716:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006718:	6882      	ldr	r2, [r0, #8]
 800671a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800671e:	d002      	beq.n	8006726 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006720:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8006724:	d107      	bne.n	8006736 <SPI_EndRxTransaction+0x3a>
    __HAL_SPI_DISABLE(hspi);
 8006726:	6825      	ldr	r5, [r4, #0]
 8006728:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800672a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800672e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8006732:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006734:	d003      	beq.n	800673e <SPI_EndRxTransaction+0x42>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006736:	460a      	mov	r2, r1
 8006738:	2180      	movs	r1, #128	@ 0x80
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800673a:	4620      	mov	r0, r4
 800673c:	e7e7      	b.n	800670e <SPI_EndRxTransaction+0x12>
 800673e:	460a      	mov	r2, r1
 8006740:	2101      	movs	r1, #1
 8006742:	e7fa      	b.n	800673a <SPI_EndRxTransaction+0x3e>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006744:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006746:	f043 0320 	orr.w	r3, r3, #32
 800674a:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800674c:	2003      	movs	r0, #3
 800674e:	e7e2      	b.n	8006716 <SPI_EndRxTransaction+0x1a>

08006750 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006750:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006752:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006754:	4a12      	ldr	r2, [pc, #72]	@ (80067a0 <SPI_EndRxTxTransaction+0x50>)
 8006756:	6815      	ldr	r5, [r2, #0]
 8006758:	4a12      	ldr	r2, [pc, #72]	@ (80067a4 <SPI_EndRxTxTransaction+0x54>)
 800675a:	fbb5 f5f2 	udiv	r5, r5, r2
 800675e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006762:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006764:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006766:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006768:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
{
 800676c:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800676e:	d10b      	bne.n	8006788 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006770:	460a      	mov	r2, r1
 8006772:	2180      	movs	r1, #128	@ 0x80
 8006774:	f7ff ff6a 	bl	800664c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006778:	b178      	cbz	r0, 800679a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800677a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800677c:	f043 0320 	orr.w	r3, r3, #32
 8006780:	6563      	str	r3, [r4, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006782:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006784:	b003      	add	sp, #12
 8006786:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8006788:	9b01      	ldr	r3, [sp, #4]
 800678a:	b133      	cbz	r3, 800679a <SPI_EndRxTxTransaction+0x4a>
      count--;
 800678c:	9b01      	ldr	r3, [sp, #4]
 800678e:	3b01      	subs	r3, #1
 8006790:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006792:	6823      	ldr	r3, [r4, #0]
 8006794:	689b      	ldr	r3, [r3, #8]
 8006796:	061b      	lsls	r3, r3, #24
 8006798:	d4f6      	bmi.n	8006788 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800679a:	2000      	movs	r0, #0
 800679c:	e7f2      	b.n	8006784 <SPI_EndRxTxTransaction+0x34>
 800679e:	bf00      	nop
 80067a0:	2000007c 	.word	0x2000007c
 80067a4:	016e3600 	.word	0x016e3600

080067a8 <HAL_SPI_Init>:
{
 80067a8:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80067aa:	4604      	mov	r4, r0
 80067ac:	2800      	cmp	r0, #0
 80067ae:	d055      	beq.n	800685c <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80067b0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d14e      	bne.n	8006854 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80067b6:	6842      	ldr	r2, [r0, #4]
 80067b8:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80067bc:	d000      	beq.n	80067c0 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80067be:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80067c0:	2300      	movs	r3, #0
 80067c2:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80067c4:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80067c8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80067cc:	b923      	cbnz	r3, 80067d8 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80067ce:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 80067d2:	4620      	mov	r0, r4
 80067d4:	f7fb fb46 	bl	8001e64 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80067d8:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80067da:	68a0      	ldr	r0, [r4, #8]
 80067dc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80067de:	2302      	movs	r3, #2
 80067e0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 80067e4:	680b      	ldr	r3, [r1, #0]
 80067e6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80067ea:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80067ec:	6863      	ldr	r3, [r4, #4]
 80067ee:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 80067f2:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 80067f6:	4303      	orrs	r3, r0
 80067f8:	68e0      	ldr	r0, [r4, #12]
 80067fa:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 80067fe:	4303      	orrs	r3, r0
 8006800:	6920      	ldr	r0, [r4, #16]
 8006802:	f000 0002 	and.w	r0, r0, #2
 8006806:	4303      	orrs	r3, r0
 8006808:	6960      	ldr	r0, [r4, #20]
 800680a:	f000 0001 	and.w	r0, r0, #1
 800680e:	4303      	orrs	r3, r0
 8006810:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8006814:	4303      	orrs	r3, r0
 8006816:	69e0      	ldr	r0, [r4, #28]
 8006818:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800681c:	4303      	orrs	r3, r0
 800681e:	6a20      	ldr	r0, [r4, #32]
 8006820:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8006824:	4303      	orrs	r3, r0
 8006826:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006828:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800682c:	4303      	orrs	r3, r0
 800682e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006830:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006832:	0c12      	lsrs	r2, r2, #16
 8006834:	f003 0310 	and.w	r3, r3, #16
 8006838:	f002 0204 	and.w	r2, r2, #4
 800683c:	431a      	orrs	r2, r3
 800683e:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006840:	69cb      	ldr	r3, [r1, #28]
 8006842:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006846:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006848:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800684a:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800684c:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800684e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8006852:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006854:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006856:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800685a:	e7b1      	b.n	80067c0 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800685c:	2001      	movs	r0, #1
 800685e:	e7f8      	b.n	8006852 <HAL_SPI_Init+0xaa>

08006860 <HAL_SPI_Transmit>:
{
 8006860:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006864:	461f      	mov	r7, r3
  __HAL_LOCK(hspi);
 8006866:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
 800686a:	2b01      	cmp	r3, #1
{
 800686c:	4604      	mov	r4, r0
 800686e:	460d      	mov	r5, r1
 8006870:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8006872:	f000 80a0 	beq.w	80069b6 <HAL_SPI_Transmit+0x156>
 8006876:	2301      	movs	r3, #1
 8006878:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 800687c:	f7fe f82a 	bl	80048d4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006880:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006884:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006886:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006888:	b2d8      	uxtb	r0, r3
 800688a:	f040 8092 	bne.w	80069b2 <HAL_SPI_Transmit+0x152>
  if ((pData == NULL) || (Size == 0U))
 800688e:	2d00      	cmp	r5, #0
 8006890:	d061      	beq.n	8006956 <HAL_SPI_Transmit+0xf6>
 8006892:	f1b8 0f00 	cmp.w	r8, #0
 8006896:	d05e      	beq.n	8006956 <HAL_SPI_Transmit+0xf6>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006898:	2303      	movs	r3, #3
 800689a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800689e:	2300      	movs	r3, #0
 80068a0:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80068a2:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80068a6:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80068aa:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80068ac:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80068ae:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80068b0:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80068b2:	6826      	ldr	r6, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80068b4:	6325      	str	r5, [r4, #48]	@ 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80068b6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->TxXferSize  = Size;
 80068ba:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80068be:	d107      	bne.n	80068d0 <HAL_SPI_Transmit+0x70>
    __HAL_SPI_DISABLE(hspi);
 80068c0:	6833      	ldr	r3, [r6, #0]
 80068c2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80068c6:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80068c8:	6833      	ldr	r3, [r6, #0]
 80068ca:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80068ce:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80068d0:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80068d2:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80068d4:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 80068d6:	bf5e      	ittt	pl
 80068d8:	6833      	ldrpl	r3, [r6, #0]
 80068da:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 80068de:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80068e0:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80068e4:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80068e6:	d13f      	bne.n	8006968 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80068e8:	b113      	cbz	r3, 80068f0 <HAL_SPI_Transmit+0x90>
 80068ea:	f1b8 0f01 	cmp.w	r8, #1
 80068ee:	d107      	bne.n	8006900 <HAL_SPI_Transmit+0xa0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80068f0:	f835 3b02 	ldrh.w	r3, [r5], #2
 80068f4:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80068f6:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80068f8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068fa:	3b01      	subs	r3, #1
 80068fc:	b29b      	uxth	r3, r3
 80068fe:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006900:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006902:	b29b      	uxth	r3, r3
 8006904:	b9a3      	cbnz	r3, 8006930 <HAL_SPI_Transmit+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006906:	464a      	mov	r2, r9
 8006908:	4639      	mov	r1, r7
 800690a:	4620      	mov	r0, r4
 800690c:	f7ff ff20 	bl	8006750 <SPI_EndRxTxTransaction>
 8006910:	2800      	cmp	r0, #0
 8006912:	d14b      	bne.n	80069ac <HAL_SPI_Transmit+0x14c>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006914:	68a3      	ldr	r3, [r4, #8]
 8006916:	b933      	cbnz	r3, 8006926 <HAL_SPI_Transmit+0xc6>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006918:	9301      	str	r3, [sp, #4]
 800691a:	6823      	ldr	r3, [r4, #0]
 800691c:	68da      	ldr	r2, [r3, #12]
 800691e:	9201      	str	r2, [sp, #4]
 8006920:	689b      	ldr	r3, [r3, #8]
 8006922:	9301      	str	r3, [sp, #4]
 8006924:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006926:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006928:	3800      	subs	r0, #0
 800692a:	bf18      	it	ne
 800692c:	2001      	movne	r0, #1
error:
 800692e:	e012      	b.n	8006956 <HAL_SPI_Transmit+0xf6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006930:	6822      	ldr	r2, [r4, #0]
 8006932:	6893      	ldr	r3, [r2, #8]
 8006934:	0798      	lsls	r0, r3, #30
 8006936:	d505      	bpl.n	8006944 <HAL_SPI_Transmit+0xe4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006938:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800693a:	f833 1b02 	ldrh.w	r1, [r3], #2
 800693e:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006940:	6323      	str	r3, [r4, #48]	@ 0x30
 8006942:	e7d9      	b.n	80068f8 <HAL_SPI_Transmit+0x98>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006944:	f7fd ffc6 	bl	80048d4 <HAL_GetTick>
 8006948:	eba0 0009 	sub.w	r0, r0, r9
 800694c:	42b8      	cmp	r0, r7
 800694e:	d3d7      	bcc.n	8006900 <HAL_SPI_Transmit+0xa0>
 8006950:	1c79      	adds	r1, r7, #1
 8006952:	d0d5      	beq.n	8006900 <HAL_SPI_Transmit+0xa0>
          errorcode = HAL_TIMEOUT;
 8006954:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006956:	2301      	movs	r3, #1
 8006958:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_UNLOCK(hspi);
 800695c:	2300      	movs	r3, #0
 800695e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006962:	b003      	add	sp, #12
 8006964:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006968:	b113      	cbz	r3, 8006970 <HAL_SPI_Transmit+0x110>
 800696a:	f1b8 0f01 	cmp.w	r8, #1
 800696e:	d108      	bne.n	8006982 <HAL_SPI_Transmit+0x122>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006970:	782b      	ldrb	r3, [r5, #0]
 8006972:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006974:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006976:	3301      	adds	r3, #1
 8006978:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800697a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800697c:	3b01      	subs	r3, #1
 800697e:	b29b      	uxth	r3, r3
 8006980:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006982:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006984:	b29b      	uxth	r3, r3
 8006986:	2b00      	cmp	r3, #0
 8006988:	d0bd      	beq.n	8006906 <HAL_SPI_Transmit+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800698a:	6823      	ldr	r3, [r4, #0]
 800698c:	689a      	ldr	r2, [r3, #8]
 800698e:	0792      	lsls	r2, r2, #30
 8006990:	d503      	bpl.n	800699a <HAL_SPI_Transmit+0x13a>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006992:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8006994:	7812      	ldrb	r2, [r2, #0]
 8006996:	731a      	strb	r2, [r3, #12]
 8006998:	e7ec      	b.n	8006974 <HAL_SPI_Transmit+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800699a:	f7fd ff9b 	bl	80048d4 <HAL_GetTick>
 800699e:	eba0 0009 	sub.w	r0, r0, r9
 80069a2:	42b8      	cmp	r0, r7
 80069a4:	d3ed      	bcc.n	8006982 <HAL_SPI_Transmit+0x122>
 80069a6:	1c7b      	adds	r3, r7, #1
 80069a8:	d0eb      	beq.n	8006982 <HAL_SPI_Transmit+0x122>
 80069aa:	e7d3      	b.n	8006954 <HAL_SPI_Transmit+0xf4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80069ac:	2320      	movs	r3, #32
 80069ae:	6563      	str	r3, [r4, #84]	@ 0x54
 80069b0:	e7b0      	b.n	8006914 <HAL_SPI_Transmit+0xb4>
    errorcode = HAL_BUSY;
 80069b2:	2002      	movs	r0, #2
 80069b4:	e7cf      	b.n	8006956 <HAL_SPI_Transmit+0xf6>
  __HAL_LOCK(hspi);
 80069b6:	2002      	movs	r0, #2
 80069b8:	e7d3      	b.n	8006962 <HAL_SPI_Transmit+0x102>

080069ba <HAL_SPI_TransmitReceive>:
{
 80069ba:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80069be:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80069c0:	f890 3050 	ldrb.w	r3, [r0, #80]	@ 0x50
{
 80069c4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  __HAL_LOCK(hspi);
 80069c8:	2b01      	cmp	r3, #1
{
 80069ca:	4604      	mov	r4, r0
 80069cc:	460d      	mov	r5, r1
 80069ce:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 80069d0:	f000 80e1 	beq.w	8006b96 <HAL_SPI_TransmitReceive+0x1dc>
 80069d4:	2301      	movs	r3, #1
 80069d6:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
  tickstart = HAL_GetTick();
 80069da:	f7fd ff7b 	bl	80048d4 <HAL_GetTick>
  tmp_state           = hspi->State;
 80069de:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 80069e2:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80069e4:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80069e6:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 80069e8:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80069ea:	d00a      	beq.n	8006a02 <HAL_SPI_TransmitReceive+0x48>
 80069ec:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80069f0:	f040 80cf 	bne.w	8006b92 <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80069f4:	68a3      	ldr	r3, [r4, #8]
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	f040 80cb 	bne.w	8006b92 <HAL_SPI_TransmitReceive+0x1d8>
 80069fc:	2904      	cmp	r1, #4
 80069fe:	f040 80c8 	bne.w	8006b92 <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006a02:	b115      	cbz	r5, 8006a0a <HAL_SPI_TransmitReceive+0x50>
 8006a04:	f1b9 0f00 	cmp.w	r9, #0
 8006a08:	d109      	bne.n	8006a1e <HAL_SPI_TransmitReceive+0x64>
    errorcode = HAL_ERROR;
 8006a0a:	2001      	movs	r0, #1
  hspi->State = HAL_SPI_STATE_READY;
 8006a0c:	2301      	movs	r3, #1
 8006a0e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_UNLOCK(hspi);
 8006a12:	2300      	movs	r3, #0
 8006a14:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
}
 8006a18:	b003      	add	sp, #12
 8006a1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006a1e:	2e00      	cmp	r6, #0
 8006a20:	d0f3      	beq.n	8006a0a <HAL_SPI_TransmitReceive+0x50>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006a22:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006a26:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006a2a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006a2c:	bf1c      	itt	ne
 8006a2e:	2305      	movne	r3, #5
 8006a30:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a34:	2300      	movs	r3, #0
 8006a36:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006a38:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a3c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006a3e:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006a40:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a42:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006a44:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a46:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006a48:	bf58      	it	pl
 8006a4a:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006a4c:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8006a4e:	bf58      	it	pl
 8006a50:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006a54:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006a56:	bf58      	it	pl
 8006a58:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006a5a:	68e1      	ldr	r1, [r4, #12]
 8006a5c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006a60:	d148      	bne.n	8006af4 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006a62:	b10a      	cbz	r2, 8006a68 <HAL_SPI_TransmitReceive+0xae>
 8006a64:	2e01      	cmp	r6, #1
 8006a66:	d107      	bne.n	8006a78 <HAL_SPI_TransmitReceive+0xbe>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006a68:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006a6c:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006a6e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006a70:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006a72:	3b01      	subs	r3, #1
 8006a74:	b29b      	uxth	r3, r3
 8006a76:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006a78:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006a7a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006a7c:	b29b      	uxth	r3, r3
 8006a7e:	b963      	cbnz	r3, 8006a9a <HAL_SPI_TransmitReceive+0xe0>
 8006a80:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006a82:	b29b      	uxth	r3, r3
 8006a84:	b94b      	cbnz	r3, 8006a9a <HAL_SPI_TransmitReceive+0xe0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006a86:	463a      	mov	r2, r7
 8006a88:	4641      	mov	r1, r8
 8006a8a:	4620      	mov	r0, r4
 8006a8c:	f7ff fe60 	bl	8006750 <SPI_EndRxTxTransaction>
 8006a90:	2800      	cmp	r0, #0
 8006a92:	d072      	beq.n	8006b7a <HAL_SPI_TransmitReceive+0x1c0>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006a94:	2320      	movs	r3, #32
 8006a96:	6563      	str	r3, [r4, #84]	@ 0x54
    goto error;
 8006a98:	e7b7      	b.n	8006a0a <HAL_SPI_TransmitReceive+0x50>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006a9a:	6821      	ldr	r1, [r4, #0]
 8006a9c:	688b      	ldr	r3, [r1, #8]
 8006a9e:	079a      	lsls	r2, r3, #30
 8006aa0:	d50d      	bpl.n	8006abe <HAL_SPI_TransmitReceive+0x104>
 8006aa2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006aa4:	b29b      	uxth	r3, r3
 8006aa6:	b153      	cbz	r3, 8006abe <HAL_SPI_TransmitReceive+0x104>
 8006aa8:	b145      	cbz	r5, 8006abc <HAL_SPI_TransmitReceive+0x102>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006aaa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006aac:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006ab0:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006ab2:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006ab4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006ab6:	3b01      	subs	r3, #1
 8006ab8:	b29b      	uxth	r3, r3
 8006aba:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 8006abc:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006abe:	688a      	ldr	r2, [r1, #8]
 8006ac0:	f012 0201 	ands.w	r2, r2, #1
 8006ac4:	d00c      	beq.n	8006ae0 <HAL_SPI_TransmitReceive+0x126>
 8006ac6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ac8:	b29b      	uxth	r3, r3
 8006aca:	b14b      	cbz	r3, 8006ae0 <HAL_SPI_TransmitReceive+0x126>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006acc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ace:	68c9      	ldr	r1, [r1, #12]
 8006ad0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006ad4:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006ad6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ad8:	3b01      	subs	r3, #1
 8006ada:	b29b      	uxth	r3, r3
 8006adc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006ade:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006ae0:	f7fd fef8 	bl	80048d4 <HAL_GetTick>
 8006ae4:	1bc0      	subs	r0, r0, r7
 8006ae6:	4540      	cmp	r0, r8
 8006ae8:	d3c7      	bcc.n	8006a7a <HAL_SPI_TransmitReceive+0xc0>
 8006aea:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006aee:	d0c4      	beq.n	8006a7a <HAL_SPI_TransmitReceive+0xc0>
        errorcode = HAL_TIMEOUT;
 8006af0:	2003      	movs	r0, #3
 8006af2:	e78b      	b.n	8006a0c <HAL_SPI_TransmitReceive+0x52>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006af4:	b10a      	cbz	r2, 8006afa <HAL_SPI_TransmitReceive+0x140>
 8006af6:	2e01      	cmp	r6, #1
 8006af8:	d108      	bne.n	8006b0c <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006afa:	782a      	ldrb	r2, [r5, #0]
 8006afc:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006afe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006b00:	3301      	adds	r3, #1
 8006b02:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006b04:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006b06:	3b01      	subs	r3, #1
 8006b08:	b29b      	uxth	r3, r3
 8006b0a:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006b0c:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006b0e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006b10:	b29b      	uxth	r3, r3
 8006b12:	b91b      	cbnz	r3, 8006b1c <HAL_SPI_TransmitReceive+0x162>
 8006b14:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006b16:	b29b      	uxth	r3, r3
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d0b4      	beq.n	8006a86 <HAL_SPI_TransmitReceive+0xcc>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006b1c:	6822      	ldr	r2, [r4, #0]
 8006b1e:	6893      	ldr	r3, [r2, #8]
 8006b20:	079b      	lsls	r3, r3, #30
 8006b22:	d50e      	bpl.n	8006b42 <HAL_SPI_TransmitReceive+0x188>
 8006b24:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006b26:	b29b      	uxth	r3, r3
 8006b28:	b15b      	cbz	r3, 8006b42 <HAL_SPI_TransmitReceive+0x188>
 8006b2a:	b14d      	cbz	r5, 8006b40 <HAL_SPI_TransmitReceive+0x186>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006b2c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006b2e:	781b      	ldrb	r3, [r3, #0]
 8006b30:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006b32:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006b34:	3301      	adds	r3, #1
 8006b36:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006b38:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006b3a:	3b01      	subs	r3, #1
 8006b3c:	b29b      	uxth	r3, r3
 8006b3e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006b40:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006b42:	6822      	ldr	r2, [r4, #0]
 8006b44:	6891      	ldr	r1, [r2, #8]
 8006b46:	f011 0101 	ands.w	r1, r1, #1
 8006b4a:	d00d      	beq.n	8006b68 <HAL_SPI_TransmitReceive+0x1ae>
 8006b4c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006b4e:	b29b      	uxth	r3, r3
 8006b50:	b153      	cbz	r3, 8006b68 <HAL_SPI_TransmitReceive+0x1ae>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006b52:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006b54:	68d2      	ldr	r2, [r2, #12]
 8006b56:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006b58:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006b5a:	3301      	adds	r3, #1
 8006b5c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006b5e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006b60:	3b01      	subs	r3, #1
 8006b62:	b29b      	uxth	r3, r3
 8006b64:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006b66:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006b68:	f7fd feb4 	bl	80048d4 <HAL_GetTick>
 8006b6c:	1bc0      	subs	r0, r0, r7
 8006b6e:	4540      	cmp	r0, r8
 8006b70:	d3cd      	bcc.n	8006b0e <HAL_SPI_TransmitReceive+0x154>
 8006b72:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006b76:	d0ca      	beq.n	8006b0e <HAL_SPI_TransmitReceive+0x154>
 8006b78:	e7ba      	b.n	8006af0 <HAL_SPI_TransmitReceive+0x136>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006b7a:	68a3      	ldr	r3, [r4, #8]
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	f47f af45 	bne.w	8006a0c <HAL_SPI_TransmitReceive+0x52>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006b82:	6823      	ldr	r3, [r4, #0]
 8006b84:	9001      	str	r0, [sp, #4]
 8006b86:	68da      	ldr	r2, [r3, #12]
 8006b88:	9201      	str	r2, [sp, #4]
 8006b8a:	689b      	ldr	r3, [r3, #8]
 8006b8c:	9301      	str	r3, [sp, #4]
 8006b8e:	9b01      	ldr	r3, [sp, #4]
 8006b90:	e73c      	b.n	8006a0c <HAL_SPI_TransmitReceive+0x52>
    errorcode = HAL_BUSY;
 8006b92:	2002      	movs	r0, #2
 8006b94:	e73a      	b.n	8006a0c <HAL_SPI_TransmitReceive+0x52>
  __HAL_LOCK(hspi);
 8006b96:	2002      	movs	r0, #2
 8006b98:	e73e      	b.n	8006a18 <HAL_SPI_TransmitReceive+0x5e>

08006b9a <HAL_SPI_Receive>:
{
 8006b9a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b9e:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006ba0:	6843      	ldr	r3, [r0, #4]
 8006ba2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
{
 8006ba6:	4604      	mov	r4, r0
 8006ba8:	4689      	mov	r9, r1
 8006baa:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006bac:	d10c      	bne.n	8006bc8 <HAL_SPI_Receive+0x2e>
 8006bae:	6883      	ldr	r3, [r0, #8]
 8006bb0:	b953      	cbnz	r3, 8006bc8 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006bb2:	2304      	movs	r3, #4
 8006bb4:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006bb8:	4613      	mov	r3, r2
 8006bba:	9500      	str	r5, [sp, #0]
 8006bbc:	460a      	mov	r2, r1
 8006bbe:	f7ff fefc 	bl	80069ba <HAL_SPI_TransmitReceive>
}
 8006bc2:	b003      	add	sp, #12
 8006bc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8006bc8:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006bcc:	2b01      	cmp	r3, #1
 8006bce:	d07f      	beq.n	8006cd0 <HAL_SPI_Receive+0x136>
 8006bd0:	2301      	movs	r3, #1
 8006bd2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  tickstart = HAL_GetTick();
 8006bd6:	f7fd fe7d 	bl	80048d4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006bda:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006bde:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006be0:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006be2:	b2d8      	uxtb	r0, r3
 8006be4:	d172      	bne.n	8006ccc <HAL_SPI_Receive+0x132>
  if ((pData == NULL) || (Size == 0U))
 8006be6:	f1b9 0f00 	cmp.w	r9, #0
 8006bea:	d05c      	beq.n	8006ca6 <HAL_SPI_Receive+0x10c>
 8006bec:	2f00      	cmp	r7, #0
 8006bee:	d05a      	beq.n	8006ca6 <HAL_SPI_Receive+0x10c>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006bf0:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006bf2:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006bf6:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006bf8:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006bfa:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006bfe:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006c02:	e9c4 6610 	strd	r6, r6, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006c06:	6566      	str	r6, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8006c08:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006c0a:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006c0c:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006c0e:	6326      	str	r6, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006c10:	86a6      	strh	r6, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006c12:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c14:	d107      	bne.n	8006c26 <HAL_SPI_Receive+0x8c>
    __HAL_SPI_DISABLE(hspi);
 8006c16:	681a      	ldr	r2, [r3, #0]
 8006c18:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006c1c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006c1e:	681a      	ldr	r2, [r3, #0]
 8006c20:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006c24:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006c26:	681a      	ldr	r2, [r3, #0]
 8006c28:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006c2a:	bf5e      	ittt	pl
 8006c2c:	681a      	ldrpl	r2, [r3, #0]
 8006c2e:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006c32:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006c34:	68e3      	ldr	r3, [r4, #12]
 8006c36:	b1f3      	cbz	r3, 8006c76 <HAL_SPI_Receive+0xdc>
    while (hspi->RxXferCount > 0U)
 8006c38:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006c3a:	b29b      	uxth	r3, r3
 8006c3c:	b1fb      	cbz	r3, 8006c7e <HAL_SPI_Receive+0xe4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006c3e:	6823      	ldr	r3, [r4, #0]
 8006c40:	689a      	ldr	r2, [r3, #8]
 8006c42:	07d2      	lsls	r2, r2, #31
 8006c44:	d536      	bpl.n	8006cb4 <HAL_SPI_Receive+0x11a>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006c46:	68da      	ldr	r2, [r3, #12]
 8006c48:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c4a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006c4e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006c50:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006c52:	3b01      	subs	r3, #1
 8006c54:	b29b      	uxth	r3, r3
 8006c56:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8006c58:	e7ee      	b.n	8006c38 <HAL_SPI_Receive+0x9e>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006c5a:	6823      	ldr	r3, [r4, #0]
 8006c5c:	689a      	ldr	r2, [r3, #8]
 8006c5e:	07d0      	lsls	r0, r2, #31
 8006c60:	d518      	bpl.n	8006c94 <HAL_SPI_Receive+0xfa>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006c62:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006c64:	7b1b      	ldrb	r3, [r3, #12]
 8006c66:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006c68:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c6a:	3301      	adds	r3, #1
 8006c6c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006c6e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006c70:	3b01      	subs	r3, #1
 8006c72:	b29b      	uxth	r3, r3
 8006c74:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006c76:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006c78:	b29b      	uxth	r3, r3
 8006c7a:	2b00      	cmp	r3, #0
 8006c7c:	d1ed      	bne.n	8006c5a <HAL_SPI_Receive+0xc0>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006c7e:	4642      	mov	r2, r8
 8006c80:	4629      	mov	r1, r5
 8006c82:	4620      	mov	r0, r4
 8006c84:	f7ff fd3a 	bl	80066fc <SPI_EndRxTransaction>
 8006c88:	b9e8      	cbnz	r0, 8006cc6 <HAL_SPI_Receive+0x12c>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006c8a:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8006c8c:	3800      	subs	r0, #0
 8006c8e:	bf18      	it	ne
 8006c90:	2001      	movne	r0, #1
error :
 8006c92:	e008      	b.n	8006ca6 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006c94:	f7fd fe1e 	bl	80048d4 <HAL_GetTick>
 8006c98:	eba0 0008 	sub.w	r0, r0, r8
 8006c9c:	42a8      	cmp	r0, r5
 8006c9e:	d3ea      	bcc.n	8006c76 <HAL_SPI_Receive+0xdc>
 8006ca0:	1c69      	adds	r1, r5, #1
 8006ca2:	d0e8      	beq.n	8006c76 <HAL_SPI_Receive+0xdc>
          errorcode = HAL_TIMEOUT;
 8006ca4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006ca6:	2301      	movs	r3, #1
 8006ca8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_UNLOCK(hspi);
 8006cac:	2300      	movs	r3, #0
 8006cae:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  return errorcode;
 8006cb2:	e786      	b.n	8006bc2 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006cb4:	f7fd fe0e 	bl	80048d4 <HAL_GetTick>
 8006cb8:	eba0 0008 	sub.w	r0, r0, r8
 8006cbc:	42a8      	cmp	r0, r5
 8006cbe:	d3bb      	bcc.n	8006c38 <HAL_SPI_Receive+0x9e>
 8006cc0:	1c6b      	adds	r3, r5, #1
 8006cc2:	d0b9      	beq.n	8006c38 <HAL_SPI_Receive+0x9e>
 8006cc4:	e7ee      	b.n	8006ca4 <HAL_SPI_Receive+0x10a>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006cc6:	2320      	movs	r3, #32
 8006cc8:	6563      	str	r3, [r4, #84]	@ 0x54
 8006cca:	e7de      	b.n	8006c8a <HAL_SPI_Receive+0xf0>
    errorcode = HAL_BUSY;
 8006ccc:	2002      	movs	r0, #2
 8006cce:	e7ea      	b.n	8006ca6 <HAL_SPI_Receive+0x10c>
  __HAL_LOCK(hspi);
 8006cd0:	2002      	movs	r0, #2
 8006cd2:	e776      	b.n	8006bc2 <HAL_SPI_Receive+0x28>

08006cd4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006cd4:	4770      	bx	lr
	...

08006cd8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006cd8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006cdc:	2b01      	cmp	r3, #1
 8006cde:	d130      	bne.n	8006d42 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ce0:	2302      	movs	r3, #2
 8006ce2:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006ce6:	6803      	ldr	r3, [r0, #0]
 8006ce8:	68da      	ldr	r2, [r3, #12]
 8006cea:	f042 0201 	orr.w	r2, r2, #1
 8006cee:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006cf0:	4a15      	ldr	r2, [pc, #84]	@ (8006d48 <HAL_TIM_Base_Start_IT+0x70>)
 8006cf2:	4293      	cmp	r3, r2
 8006cf4:	d01a      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006cf6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006cfa:	d017      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006cfc:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006d00:	4293      	cmp	r3, r2
 8006d02:	d013      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006d04:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d08:	4293      	cmp	r3, r2
 8006d0a:	d00f      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006d0c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d10:	4293      	cmp	r3, r2
 8006d12:	d00b      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006d14:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006d18:	4293      	cmp	r3, r2
 8006d1a:	d007      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006d1c:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006d20:	4293      	cmp	r3, r2
 8006d22:	d003      	beq.n	8006d2c <HAL_TIM_Base_Start_IT+0x54>
 8006d24:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006d28:	4293      	cmp	r3, r2
 8006d2a:	d104      	bne.n	8006d36 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006d2c:	689a      	ldr	r2, [r3, #8]
 8006d2e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006d32:	2a06      	cmp	r2, #6
 8006d34:	d003      	beq.n	8006d3e <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8006d36:	681a      	ldr	r2, [r3, #0]
 8006d38:	f042 0201 	orr.w	r2, r2, #1
 8006d3c:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006d3e:	2000      	movs	r0, #0
 8006d40:	4770      	bx	lr
    return HAL_ERROR;
 8006d42:	2001      	movs	r0, #1
}
 8006d44:	4770      	bx	lr
 8006d46:	bf00      	nop
 8006d48:	40010000 	.word	0x40010000

08006d4c <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006d4c:	4770      	bx	lr

08006d4e <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006d4e:	4770      	bx	lr

08006d50 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006d50:	4770      	bx	lr

08006d52 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006d52:	4770      	bx	lr

08006d54 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006d54:	6803      	ldr	r3, [r0, #0]
 8006d56:	691a      	ldr	r2, [r3, #16]
 8006d58:	0791      	lsls	r1, r2, #30
{
 8006d5a:	b510      	push	{r4, lr}
 8006d5c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006d5e:	d50e      	bpl.n	8006d7e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006d60:	68da      	ldr	r2, [r3, #12]
 8006d62:	0792      	lsls	r2, r2, #30
 8006d64:	d50b      	bpl.n	8006d7e <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006d66:	f06f 0202 	mvn.w	r2, #2
 8006d6a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006d6c:	2201      	movs	r2, #1
 8006d6e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006d70:	699b      	ldr	r3, [r3, #24]
 8006d72:	079b      	lsls	r3, r3, #30
 8006d74:	d077      	beq.n	8006e66 <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 8006d76:	f7ff ffea 	bl	8006d4e <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d7a:	2300      	movs	r3, #0
 8006d7c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006d7e:	6823      	ldr	r3, [r4, #0]
 8006d80:	691a      	ldr	r2, [r3, #16]
 8006d82:	0750      	lsls	r0, r2, #29
 8006d84:	d510      	bpl.n	8006da8 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006d86:	68da      	ldr	r2, [r3, #12]
 8006d88:	0751      	lsls	r1, r2, #29
 8006d8a:	d50d      	bpl.n	8006da8 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006d8c:	f06f 0204 	mvn.w	r2, #4
 8006d90:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006d92:	2202      	movs	r2, #2
 8006d94:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006d96:	699b      	ldr	r3, [r3, #24]
 8006d98:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006d9c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006d9e:	d068      	beq.n	8006e72 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006da0:	f7ff ffd5 	bl	8006d4e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006da4:	2300      	movs	r3, #0
 8006da6:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006da8:	6823      	ldr	r3, [r4, #0]
 8006daa:	691a      	ldr	r2, [r3, #16]
 8006dac:	0712      	lsls	r2, r2, #28
 8006dae:	d50f      	bpl.n	8006dd0 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006db0:	68da      	ldr	r2, [r3, #12]
 8006db2:	0710      	lsls	r0, r2, #28
 8006db4:	d50c      	bpl.n	8006dd0 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006db6:	f06f 0208 	mvn.w	r2, #8
 8006dba:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006dbc:	2204      	movs	r2, #4
 8006dbe:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006dc0:	69db      	ldr	r3, [r3, #28]
 8006dc2:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006dc4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006dc6:	d05a      	beq.n	8006e7e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006dc8:	f7ff ffc1 	bl	8006d4e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006dcc:	2300      	movs	r3, #0
 8006dce:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006dd0:	6823      	ldr	r3, [r4, #0]
 8006dd2:	691a      	ldr	r2, [r3, #16]
 8006dd4:	06d2      	lsls	r2, r2, #27
 8006dd6:	d510      	bpl.n	8006dfa <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006dd8:	68da      	ldr	r2, [r3, #12]
 8006dda:	06d0      	lsls	r0, r2, #27
 8006ddc:	d50d      	bpl.n	8006dfa <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006dde:	f06f 0210 	mvn.w	r2, #16
 8006de2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006de4:	2208      	movs	r2, #8
 8006de6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006de8:	69db      	ldr	r3, [r3, #28]
 8006dea:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006dee:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006df0:	d04b      	beq.n	8006e8a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006df2:	f7ff ffac 	bl	8006d4e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006df6:	2300      	movs	r3, #0
 8006df8:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006dfa:	6823      	ldr	r3, [r4, #0]
 8006dfc:	691a      	ldr	r2, [r3, #16]
 8006dfe:	07d1      	lsls	r1, r2, #31
 8006e00:	d508      	bpl.n	8006e14 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006e02:	68da      	ldr	r2, [r3, #12]
 8006e04:	07d2      	lsls	r2, r2, #31
 8006e06:	d505      	bpl.n	8006e14 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006e08:	f06f 0201 	mvn.w	r2, #1
 8006e0c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006e0e:	4620      	mov	r0, r4
 8006e10:	f7fa fe3a 	bl	8001a88 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006e14:	6823      	ldr	r3, [r4, #0]
 8006e16:	691a      	ldr	r2, [r3, #16]
 8006e18:	0610      	lsls	r0, r2, #24
 8006e1a:	d508      	bpl.n	8006e2e <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006e1c:	68da      	ldr	r2, [r3, #12]
 8006e1e:	0611      	lsls	r1, r2, #24
 8006e20:	d505      	bpl.n	8006e2e <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006e22:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8006e26:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006e28:	4620      	mov	r0, r4
 8006e2a:	f000 f8b2 	bl	8006f92 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006e2e:	6823      	ldr	r3, [r4, #0]
 8006e30:	691a      	ldr	r2, [r3, #16]
 8006e32:	0652      	lsls	r2, r2, #25
 8006e34:	d508      	bpl.n	8006e48 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006e36:	68da      	ldr	r2, [r3, #12]
 8006e38:	0650      	lsls	r0, r2, #25
 8006e3a:	d505      	bpl.n	8006e48 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006e3c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006e40:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006e42:	4620      	mov	r0, r4
 8006e44:	f7ff ff85 	bl	8006d52 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006e48:	6823      	ldr	r3, [r4, #0]
 8006e4a:	691a      	ldr	r2, [r3, #16]
 8006e4c:	0691      	lsls	r1, r2, #26
 8006e4e:	d522      	bpl.n	8006e96 <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006e50:	68da      	ldr	r2, [r3, #12]
 8006e52:	0692      	lsls	r2, r2, #26
 8006e54:	d51f      	bpl.n	8006e96 <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006e56:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006e5a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006e5c:	611a      	str	r2, [r3, #16]
}
 8006e5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006e62:	f000 b895 	b.w	8006f90 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e66:	f7ff ff71 	bl	8006d4c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e6a:	4620      	mov	r0, r4
 8006e6c:	f7ff ff70 	bl	8006d50 <HAL_TIM_PWM_PulseFinishedCallback>
 8006e70:	e783      	b.n	8006d7a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e72:	f7ff ff6b 	bl	8006d4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e76:	4620      	mov	r0, r4
 8006e78:	f7ff ff6a 	bl	8006d50 <HAL_TIM_PWM_PulseFinishedCallback>
 8006e7c:	e792      	b.n	8006da4 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e7e:	f7ff ff65 	bl	8006d4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e82:	4620      	mov	r0, r4
 8006e84:	f7ff ff64 	bl	8006d50 <HAL_TIM_PWM_PulseFinishedCallback>
 8006e88:	e7a0      	b.n	8006dcc <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e8a:	f7ff ff5f 	bl	8006d4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e8e:	4620      	mov	r0, r4
 8006e90:	f7ff ff5e 	bl	8006d50 <HAL_TIM_PWM_PulseFinishedCallback>
 8006e94:	e7af      	b.n	8006df6 <HAL_TIM_IRQHandler+0xa2>
}
 8006e96:	bd10      	pop	{r4, pc}

08006e98 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006e98:	4a25      	ldr	r2, [pc, #148]	@ (8006f30 <TIM_Base_SetConfig+0x98>)
  tmpcr1 = TIMx->CR1;
 8006e9a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006e9c:	4290      	cmp	r0, r2
 8006e9e:	d012      	beq.n	8006ec6 <TIM_Base_SetConfig+0x2e>
 8006ea0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006ea4:	d00f      	beq.n	8006ec6 <TIM_Base_SetConfig+0x2e>
 8006ea6:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006eaa:	4290      	cmp	r0, r2
 8006eac:	d00b      	beq.n	8006ec6 <TIM_Base_SetConfig+0x2e>
 8006eae:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006eb2:	4290      	cmp	r0, r2
 8006eb4:	d007      	beq.n	8006ec6 <TIM_Base_SetConfig+0x2e>
 8006eb6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006eba:	4290      	cmp	r0, r2
 8006ebc:	d003      	beq.n	8006ec6 <TIM_Base_SetConfig+0x2e>
 8006ebe:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006ec2:	4290      	cmp	r0, r2
 8006ec4:	d108      	bne.n	8006ed8 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006ec6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006ec8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006ecc:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006ece:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006ed0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006ed4:	4313      	orrs	r3, r2
 8006ed6:	e016      	b.n	8006f06 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006ed8:	4a16      	ldr	r2, [pc, #88]	@ (8006f34 <TIM_Base_SetConfig+0x9c>)
 8006eda:	4290      	cmp	r0, r2
 8006edc:	d0f7      	beq.n	8006ece <TIM_Base_SetConfig+0x36>
 8006ede:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006ee2:	4290      	cmp	r0, r2
 8006ee4:	d0f3      	beq.n	8006ece <TIM_Base_SetConfig+0x36>
 8006ee6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006eea:	4290      	cmp	r0, r2
 8006eec:	d0ef      	beq.n	8006ece <TIM_Base_SetConfig+0x36>
 8006eee:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006ef2:	4290      	cmp	r0, r2
 8006ef4:	d0eb      	beq.n	8006ece <TIM_Base_SetConfig+0x36>
 8006ef6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006efa:	4290      	cmp	r0, r2
 8006efc:	d0e7      	beq.n	8006ece <TIM_Base_SetConfig+0x36>
 8006efe:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006f02:	4290      	cmp	r0, r2
 8006f04:	d0e3      	beq.n	8006ece <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006f06:	694a      	ldr	r2, [r1, #20]
 8006f08:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006f0c:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006f0e:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006f10:	688b      	ldr	r3, [r1, #8]
 8006f12:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006f14:	680b      	ldr	r3, [r1, #0]
 8006f16:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006f18:	4b05      	ldr	r3, [pc, #20]	@ (8006f30 <TIM_Base_SetConfig+0x98>)
 8006f1a:	4298      	cmp	r0, r3
 8006f1c:	d003      	beq.n	8006f26 <TIM_Base_SetConfig+0x8e>
 8006f1e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006f22:	4298      	cmp	r0, r3
 8006f24:	d101      	bne.n	8006f2a <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006f26:	690b      	ldr	r3, [r1, #16]
 8006f28:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006f2a:	2301      	movs	r3, #1
 8006f2c:	6143      	str	r3, [r0, #20]
}
 8006f2e:	4770      	bx	lr
 8006f30:	40010000 	.word	0x40010000
 8006f34:	40014000 	.word	0x40014000

08006f38 <HAL_TIM_Base_Init>:
{
 8006f38:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006f3a:	4604      	mov	r4, r0
 8006f3c:	b330      	cbz	r0, 8006f8c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006f3e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006f42:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006f46:	b91b      	cbnz	r3, 8006f50 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006f48:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006f4c:	f7ff fec2 	bl	8006cd4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006f50:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006f52:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006f54:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006f58:	1d21      	adds	r1, r4, #4
 8006f5a:	f7ff ff9d 	bl	8006e98 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006f5e:	2301      	movs	r3, #1
 8006f60:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006f64:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006f66:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8006f6a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8006f6e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006f72:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006f76:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006f7a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006f7e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006f82:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006f86:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8006f8a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006f8c:	2001      	movs	r0, #1
 8006f8e:	e7fc      	b.n	8006f8a <HAL_TIM_Base_Init+0x52>

08006f90 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006f90:	4770      	bx	lr

08006f92 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006f92:	4770      	bx	lr

08006f94 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006f94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006f98:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8006f9c:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8006fa0:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8006fa4:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8006fa8:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006fac:	6809      	ldr	r1, [r1, #0]
 8006fae:	ea43 0308 	orr.w	r3, r3, r8
 8006fb2:	b981      	cbnz	r1, 8006fd6 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006fb4:	ea43 030e 	orr.w	r3, r3, lr
 8006fb8:	4313      	orrs	r3, r2
 8006fba:	ea43 030c 	orr.w	r3, r3, ip
 8006fbe:	433b      	orrs	r3, r7
 8006fc0:	6801      	ldr	r1, [r0, #0]
 8006fc2:	4333      	orrs	r3, r6
 8006fc4:	432b      	orrs	r3, r5
 8006fc6:	4323      	orrs	r3, r4
 8006fc8:	f36f 010e 	bfc	r1, #0, #15
 8006fcc:	430b      	orrs	r3, r1
 8006fce:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006fd0:	2000      	movs	r0, #0
 8006fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006fd6:	6801      	ldr	r1, [r0, #0]
 8006fd8:	ea43 030e 	orr.w	r3, r3, lr
 8006fdc:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006fe0:	430b      	orrs	r3, r1
 8006fe2:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006fe4:	ea42 030c 	orr.w	r3, r2, ip
 8006fe8:	6841      	ldr	r1, [r0, #4]
 8006fea:	433b      	orrs	r3, r7
 8006fec:	4333      	orrs	r3, r6
 8006fee:	432b      	orrs	r3, r5
 8006ff0:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006ff4:	4323      	orrs	r3, r4
 8006ff6:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006ffa:	4313      	orrs	r3, r2
 8006ffc:	6043      	str	r3, [r0, #4]
 8006ffe:	e7e7      	b.n	8006fd0 <FMC_SDRAM_Init+0x3c>

08007000 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007000:	68cb      	ldr	r3, [r1, #12]
 8007002:	f103 3cff 	add.w	ip, r3, #4294967295
 8007006:	694b      	ldr	r3, [r1, #20]
{
 8007008:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800700a:	684c      	ldr	r4, [r1, #4]
 800700c:	688f      	ldr	r7, [r1, #8]
 800700e:	690e      	ldr	r6, [r1, #16]
 8007010:	698d      	ldr	r5, [r1, #24]
 8007012:	6809      	ldr	r1, [r1, #0]
 8007014:	3b01      	subs	r3, #1
 8007016:	051b      	lsls	r3, r3, #20
 8007018:	3c01      	subs	r4, #1
 800701a:	3f01      	subs	r7, #1
 800701c:	3e01      	subs	r6, #1
 800701e:	3d01      	subs	r5, #1
 8007020:	0124      	lsls	r4, r4, #4
 8007022:	023f      	lsls	r7, r7, #8
 8007024:	0436      	lsls	r6, r6, #16
 8007026:	062d      	lsls	r5, r5, #24
 8007028:	3901      	subs	r1, #1
 800702a:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800702e:	b95a      	cbnz	r2, 8007048 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007030:	430b      	orrs	r3, r1
 8007032:	4323      	orrs	r3, r4
 8007034:	6882      	ldr	r2, [r0, #8]
 8007036:	433b      	orrs	r3, r7
 8007038:	4333      	orrs	r3, r6
 800703a:	432b      	orrs	r3, r5
 800703c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007040:	4313      	orrs	r3, r2
 8007042:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007044:	2000      	movs	r0, #0
 8007046:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007048:	6882      	ldr	r2, [r0, #8]
 800704a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800704e:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007052:	4313      	orrs	r3, r2
 8007054:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007056:	ea44 0307 	orr.w	r3, r4, r7
 800705a:	68c2      	ldr	r2, [r0, #12]
 800705c:	430b      	orrs	r3, r1
 800705e:	4333      	orrs	r3, r6
 8007060:	432b      	orrs	r3, r5
 8007062:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007066:	4313      	orrs	r3, r2
 8007068:	60c3      	str	r3, [r0, #12]
 800706a:	e7eb      	b.n	8007044 <FMC_SDRAM_Timing_Init+0x44>

0800706c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800706c:	b570      	push	{r4, r5, r6, lr}
 800706e:	4604      	mov	r4, r0
 8007070:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007072:	6902      	ldr	r2, [r0, #16]
 8007074:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007078:	4303      	orrs	r3, r0
 800707a:	68c8      	ldr	r0, [r1, #12]
 800707c:	f36f 0215 	bfc	r2, #0, #22
 8007080:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007084:	4313      	orrs	r3, r2
 8007086:	688a      	ldr	r2, [r1, #8]
 8007088:	3a01      	subs	r2, #1
 800708a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800708e:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007090:	f7fd fc20 	bl	80048d4 <HAL_GetTick>
 8007094:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007096:	69a0      	ldr	r0, [r4, #24]
 8007098:	f010 0020 	ands.w	r0, r0, #32
 800709c:	d003      	beq.n	80070a6 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800709e:	1c6b      	adds	r3, r5, #1
 80070a0:	d0f9      	beq.n	8007096 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80070a2:	b90d      	cbnz	r5, 80070a8 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 80070a4:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 80070a6:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80070a8:	f7fd fc14 	bl	80048d4 <HAL_GetTick>
 80070ac:	1b80      	subs	r0, r0, r6
 80070ae:	42a8      	cmp	r0, r5
 80070b0:	d9f1      	bls.n	8007096 <FMC_SDRAM_SendCommand+0x2a>
 80070b2:	e7f7      	b.n	80070a4 <FMC_SDRAM_SendCommand+0x38>

080070b4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80070b4:	6943      	ldr	r3, [r0, #20]
 80070b6:	f36f 034d 	bfc	r3, #1, #13
 80070ba:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80070be:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80070c0:	2000      	movs	r0, #0
 80070c2:	4770      	bx	lr

080070c4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80070c4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80070c6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80070ca:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80070cc:	f001 fee0 	bl	8008e90 <xTaskGetSchedulerState>
 80070d0:	2801      	cmp	r0, #1
 80070d2:	d003      	beq.n	80070dc <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80070d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80070d8:	f000 bc14 	b.w	8007904 <xPortSysTickHandler>
}
 80070dc:	bd08      	pop	{r3, pc}
	...

080070e0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80070e0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80070e4:	b92b      	cbnz	r3, 80070f2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80070e6:	4b06      	ldr	r3, [pc, #24]	@ (8007100 <osKernelInitialize+0x20>)
 80070e8:	6818      	ldr	r0, [r3, #0]
 80070ea:	b928      	cbnz	r0, 80070f8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80070ec:	2201      	movs	r2, #1
 80070ee:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80070f0:	4770      	bx	lr
    stat = osErrorISR;
 80070f2:	f06f 0005 	mvn.w	r0, #5
 80070f6:	4770      	bx	lr
    } else {
      stat = osError;
 80070f8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80070fc:	4770      	bx	lr
 80070fe:	bf00      	nop
 8007100:	20002be8 	.word	0x20002be8

08007104 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007104:	b510      	push	{r4, lr}
 8007106:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800710a:	b95c      	cbnz	r4, 8007124 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800710c:	4b08      	ldr	r3, [pc, #32]	@ (8007130 <osKernelStart+0x2c>)
 800710e:	681a      	ldr	r2, [r3, #0]
 8007110:	2a01      	cmp	r2, #1
 8007112:	d10a      	bne.n	800712a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007114:	4a07      	ldr	r2, [pc, #28]	@ (8007134 <osKernelStart+0x30>)
 8007116:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007118:	2202      	movs	r2, #2
 800711a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800711c:	f001 fc36 	bl	800898c <vTaskStartScheduler>
      stat = osOK;
 8007120:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007122:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007124:	f06f 0005 	mvn.w	r0, #5
 8007128:	e7fb      	b.n	8007122 <osKernelStart+0x1e>
      stat = osError;
 800712a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800712e:	e7f8      	b.n	8007122 <osKernelStart+0x1e>
 8007130:	20002be8 	.word	0x20002be8
 8007134:	e000ed00 	.word	0xe000ed00

08007138 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007138:	b5f0      	push	{r4, r5, r6, r7, lr}
 800713a:	b087      	sub	sp, #28
 800713c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800713e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007140:	460b      	mov	r3, r1
  hTask = NULL;
 8007142:	9205      	str	r2, [sp, #20]
 8007144:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007148:	b9fa      	cbnz	r2, 800718a <osThreadNew+0x52>
 800714a:	b1f0      	cbz	r0, 800718a <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800714c:	b354      	cbz	r4, 80071a4 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800714e:	69a5      	ldr	r5, [r4, #24]
 8007150:	b125      	cbz	r5, 800715c <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007152:	1e69      	subs	r1, r5, #1
 8007154:	2937      	cmp	r1, #55	@ 0x37
 8007156:	d902      	bls.n	800715e <osThreadNew+0x26>
        return (NULL);
 8007158:	2000      	movs	r0, #0
 800715a:	e017      	b.n	800718c <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800715c:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800715e:	6862      	ldr	r2, [r4, #4]
 8007160:	07d2      	lsls	r2, r2, #31
 8007162:	d4f9      	bmi.n	8007158 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8007164:	6966      	ldr	r6, [r4, #20]
 8007166:	b19e      	cbz	r6, 8007190 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007168:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800716a:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800716e:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007170:	b187      	cbz	r7, 8007194 <osThreadNew+0x5c>
 8007172:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 8007176:	d908      	bls.n	800718a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007178:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800717a:	b134      	cbz	r4, 800718a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800717c:	b12e      	cbz	r6, 800718a <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800717e:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007182:	9500      	str	r5, [sp, #0]
 8007184:	f001 fb01 	bl	800878a <xTaskCreateStatic>
 8007188:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800718a:	9805      	ldr	r0, [sp, #20]
}
 800718c:	b007      	add	sp, #28
 800718e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007190:	2280      	movs	r2, #128	@ 0x80
 8007192:	e7ea      	b.n	800716a <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007194:	f1bc 0f00 	cmp.w	ip, #0
 8007198:	d1f7      	bne.n	800718a <osThreadNew+0x52>
 800719a:	6924      	ldr	r4, [r4, #16]
 800719c:	2c00      	cmp	r4, #0
 800719e:	d1f4      	bne.n	800718a <osThreadNew+0x52>
 80071a0:	460c      	mov	r4, r1
 80071a2:	e001      	b.n	80071a8 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 80071a4:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 80071a6:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80071a8:	a905      	add	r1, sp, #20
 80071aa:	e9cd 5100 	strd	r5, r1, [sp]
 80071ae:	b292      	uxth	r2, r2
 80071b0:	4621      	mov	r1, r4
 80071b2:	f001 fb22 	bl	80087fa <xTaskCreate>
 80071b6:	2801      	cmp	r0, #1
            hTask = NULL;
 80071b8:	bf1c      	itt	ne
 80071ba:	2300      	movne	r3, #0
 80071bc:	9305      	strne	r3, [sp, #20]
 80071be:	e7e4      	b.n	800718a <osThreadNew+0x52>

080071c0 <osThreadTerminate>:
  vTaskDelete (NULL);
#endif
  for (;;);
}

osStatus_t osThreadTerminate (osThreadId_t thread_id) {
 80071c0:	b538      	push	{r3, r4, r5, lr}
 80071c2:	4605      	mov	r5, r0
 80071c4:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;
#ifndef USE_FreeRTOS_HEAP_1
  eTaskState tstate;

  if (IS_IRQ()) {
 80071c8:	b94c      	cbnz	r4, 80071de <osThreadTerminate+0x1e>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 80071ca:	b158      	cbz	r0, 80071e4 <osThreadTerminate+0x24>
    stat = osErrorParameter;
  }
  else {
    tstate = eTaskGetState (hTask);
 80071cc:	f001 fb9c 	bl	8008908 <eTaskGetState>

    if (tstate != eDeleted) {
 80071d0:	2804      	cmp	r0, #4
 80071d2:	d00a      	beq.n	80071ea <osThreadTerminate+0x2a>
      stat = osOK;
      vTaskDelete (hTask);
 80071d4:	4628      	mov	r0, r5
 80071d6:	f001 fb3f 	bl	8008858 <vTaskDelete>
      stat = osOK;
 80071da:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 80071dc:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 80071de:	f06f 0005 	mvn.w	r0, #5
 80071e2:	e7fb      	b.n	80071dc <osThreadTerminate+0x1c>
    stat = osErrorParameter;
 80071e4:	f06f 0003 	mvn.w	r0, #3
 80071e8:	e7f8      	b.n	80071dc <osThreadTerminate+0x1c>
      stat = osErrorResource;
 80071ea:	f06f 0002 	mvn.w	r0, #2
  return (stat);
 80071ee:	e7f5      	b.n	80071dc <osThreadTerminate+0x1c>

080071f0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80071f0:	b508      	push	{r3, lr}
 80071f2:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80071f6:	b922      	cbnz	r2, 8007202 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80071f8:	b108      	cbz	r0, 80071fe <osDelay+0xe>
      vTaskDelay(ticks);
 80071fa:	f001 fd25 	bl	8008c48 <vTaskDelay>
    stat = osOK;
 80071fe:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007200:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007202:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007206:	e7fb      	b.n	8007200 <osDelay+0x10>

08007208 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800720a:	4604      	mov	r4, r0
 800720c:	460e      	mov	r6, r1
 800720e:	4615      	mov	r5, r2
 8007210:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007214:	b942      	cbnz	r2, 8007228 <osSemaphoreNew+0x20>
 8007216:	b138      	cbz	r0, 8007228 <osSemaphoreNew+0x20>
 8007218:	4288      	cmp	r0, r1
 800721a:	d305      	bcc.n	8007228 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800721c:	b155      	cbz	r5, 8007234 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800721e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007222:	b12b      	cbz	r3, 8007230 <osSemaphoreNew+0x28>
 8007224:	2f4f      	cmp	r7, #79	@ 0x4f
 8007226:	d822      	bhi.n	800726e <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007228:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800722a:	4620      	mov	r0, r4
 800722c:	b003      	add	sp, #12
 800722e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007230:	2f00      	cmp	r7, #0
 8007232:	d1f9      	bne.n	8007228 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8007234:	2c01      	cmp	r4, #1
 8007236:	d00c      	beq.n	8007252 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007238:	4620      	mov	r0, r4
 800723a:	4631      	mov	r1, r6
 800723c:	f000 fd9a 	bl	8007d74 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007240:	4604      	mov	r4, r0
 8007242:	2800      	cmp	r0, #0
 8007244:	d0f0      	beq.n	8007228 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8007246:	b985      	cbnz	r5, 800726a <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8007248:	4629      	mov	r1, r5
 800724a:	4620      	mov	r0, r4
 800724c:	f001 f8d8 	bl	8008400 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007250:	e7eb      	b.n	800722a <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8007252:	2203      	movs	r2, #3
 8007254:	2100      	movs	r1, #0
 8007256:	2001      	movs	r0, #1
 8007258:	f000 fd43 	bl	8007ce2 <xQueueGenericCreate>
 800725c:	e00e      	b.n	800727c <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800725e:	461a      	mov	r2, r3
 8007260:	f000 fd66 	bl	8007d30 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007264:	4604      	mov	r4, r0
 8007266:	2800      	cmp	r0, #0
 8007268:	d0de      	beq.n	8007228 <osSemaphoreNew+0x20>
          name = attr->name;
 800726a:	682d      	ldr	r5, [r5, #0]
 800726c:	e7ec      	b.n	8007248 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800726e:	2801      	cmp	r0, #1
 8007270:	d1f5      	bne.n	800725e <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007272:	2103      	movs	r1, #3
 8007274:	9100      	str	r1, [sp, #0]
 8007276:	4611      	mov	r1, r2
 8007278:	f000 fce5 	bl	8007c46 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800727c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800727e:	2800      	cmp	r0, #0
 8007280:	d0d2      	beq.n	8007228 <osSemaphoreNew+0x20>
 8007282:	2e00      	cmp	r6, #0
 8007284:	d0df      	beq.n	8007246 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007286:	2300      	movs	r3, #0
 8007288:	461a      	mov	r2, r3
 800728a:	4619      	mov	r1, r3
 800728c:	f000 fd90 	bl	8007db0 <xQueueGenericSend>
 8007290:	2801      	cmp	r0, #1
 8007292:	d0d8      	beq.n	8007246 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8007294:	4620      	mov	r0, r4
 8007296:	f001 f8dd 	bl	8008454 <vQueueDelete>
      if (hSemaphore != NULL) {
 800729a:	e7c5      	b.n	8007228 <osSemaphoreNew+0x20>

0800729c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800729c:	b513      	push	{r0, r1, r4, lr}
 800729e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80072a0:	b328      	cbz	r0, 80072ee <osSemaphoreAcquire+0x52>
 80072a2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80072a6:	b1cb      	cbz	r3, 80072dc <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 80072a8:	bb09      	cbnz	r1, 80072ee <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80072aa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80072ac:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80072ae:	f001 f83a 	bl	8008326 <xQueueReceiveFromISR>
 80072b2:	2801      	cmp	r0, #1
 80072b4:	d003      	beq.n	80072be <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 80072b6:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80072ba:	b002      	add	sp, #8
 80072bc:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80072be:	9b01      	ldr	r3, [sp, #4]
 80072c0:	b90b      	cbnz	r3, 80072c6 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 80072c2:	2000      	movs	r0, #0
 80072c4:	e7f9      	b.n	80072ba <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 80072c6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80072ca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80072ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80072d2:	f3bf 8f4f 	dsb	sy
 80072d6:	f3bf 8f6f 	isb	sy
 80072da:	e7f2      	b.n	80072c2 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80072dc:	f000 ff66 	bl	80081ac <xQueueSemaphoreTake>
 80072e0:	2801      	cmp	r0, #1
 80072e2:	d0ee      	beq.n	80072c2 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 80072e4:	2c00      	cmp	r4, #0
 80072e6:	d0e6      	beq.n	80072b6 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 80072e8:	f06f 0001 	mvn.w	r0, #1
 80072ec:	e7e5      	b.n	80072ba <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 80072ee:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80072f2:	e7e2      	b.n	80072ba <osSemaphoreAcquire+0x1e>

080072f4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80072f4:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80072f6:	b318      	cbz	r0, 8007340 <osSemaphoreRelease+0x4c>
 80072f8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80072fc:	b1cb      	cbz	r3, 8007332 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 80072fe:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007300:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007302:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007304:	f000 fe63 	bl	8007fce <xQueueGiveFromISR>
 8007308:	2801      	cmp	r0, #1
 800730a:	d004      	beq.n	8007316 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800730c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007310:	b003      	add	sp, #12
 8007312:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007316:	9b01      	ldr	r3, [sp, #4]
 8007318:	b14b      	cbz	r3, 800732e <osSemaphoreRelease+0x3a>
 800731a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800731e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007322:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007326:	f3bf 8f4f 	dsb	sy
 800732a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800732e:	2000      	movs	r0, #0
 8007330:	e7ee      	b.n	8007310 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007332:	461a      	mov	r2, r3
 8007334:	4619      	mov	r1, r3
 8007336:	f000 fd3b 	bl	8007db0 <xQueueGenericSend>
 800733a:	2801      	cmp	r0, #1
 800733c:	d0f7      	beq.n	800732e <osSemaphoreRelease+0x3a>
 800733e:	e7e5      	b.n	800730c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8007340:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007344:	e7e4      	b.n	8007310 <osSemaphoreRelease+0x1c>

08007346 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8007346:	b130      	cbz	r0, 8007356 <osSemaphoreGetCount+0x10>
 8007348:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 800734c:	b10b      	cbz	r3, 8007352 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 800734e:	f001 b84a 	b.w	80083e6 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 8007352:	f001 b835 	b.w	80083c0 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8007356:	4770      	bx	lr

08007358 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007358:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800735a:	4605      	mov	r5, r0
 800735c:	460e      	mov	r6, r1
 800735e:	4614      	mov	r4, r2
 8007360:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007364:	b11f      	cbz	r7, 800736e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007366:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007368:	4628      	mov	r0, r5
 800736a:	b003      	add	sp, #12
 800736c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800736e:	2800      	cmp	r0, #0
 8007370:	d0f9      	beq.n	8007366 <osMessageQueueNew+0xe>
 8007372:	2900      	cmp	r1, #0
 8007374:	d0f7      	beq.n	8007366 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007376:	b1da      	cbz	r2, 80073b0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007378:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800737c:	b183      	cbz	r3, 80073a0 <osMessageQueueNew+0x48>
 800737e:	2a4f      	cmp	r2, #79	@ 0x4f
 8007380:	d9f1      	bls.n	8007366 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007382:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007384:	2a00      	cmp	r2, #0
 8007386:	d0ee      	beq.n	8007366 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007388:	6966      	ldr	r6, [r4, #20]
 800738a:	434d      	muls	r5, r1
 800738c:	42ae      	cmp	r6, r5
 800738e:	d3ea      	bcc.n	8007366 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007390:	9700      	str	r7, [sp, #0]
 8007392:	f000 fc58 	bl	8007c46 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007396:	4605      	mov	r5, r0
 8007398:	2800      	cmp	r0, #0
 800739a:	d0e4      	beq.n	8007366 <osMessageQueueNew+0xe>
        name = attr->name;
 800739c:	6824      	ldr	r4, [r4, #0]
 800739e:	e011      	b.n	80073c4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80073a0:	2a00      	cmp	r2, #0
 80073a2:	d1e0      	bne.n	8007366 <osMessageQueueNew+0xe>
 80073a4:	6923      	ldr	r3, [r4, #16]
 80073a6:	2b00      	cmp	r3, #0
 80073a8:	d1dd      	bne.n	8007366 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80073aa:	6963      	ldr	r3, [r4, #20]
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	d1da      	bne.n	8007366 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80073b0:	4628      	mov	r0, r5
 80073b2:	2200      	movs	r2, #0
 80073b4:	4631      	mov	r1, r6
 80073b6:	f000 fc94 	bl	8007ce2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80073ba:	4605      	mov	r5, r0
 80073bc:	2800      	cmp	r0, #0
 80073be:	d0d2      	beq.n	8007366 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80073c0:	2c00      	cmp	r4, #0
 80073c2:	d1eb      	bne.n	800739c <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80073c4:	4621      	mov	r1, r4
 80073c6:	4628      	mov	r0, r5
 80073c8:	f001 f81a 	bl	8008400 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80073cc:	e7cc      	b.n	8007368 <osMessageQueueNew+0x10>

080073ce <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80073ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80073d0:	461c      	mov	r4, r3
 80073d2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80073d6:	b1de      	cbz	r6, 8007410 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80073d8:	b338      	cbz	r0, 800742a <osMessageQueuePut+0x5c>
 80073da:	b331      	cbz	r1, 800742a <osMessageQueuePut+0x5c>
 80073dc:	bb2b      	cbnz	r3, 800742a <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80073de:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80073e0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80073e2:	f000 fd97 	bl	8007f14 <xQueueGenericSendFromISR>
 80073e6:	2801      	cmp	r0, #1
 80073e8:	d003      	beq.n	80073f2 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 80073ea:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80073ee:	b002      	add	sp, #8
 80073f0:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80073f2:	9b01      	ldr	r3, [sp, #4]
 80073f4:	b90b      	cbnz	r3, 80073fa <osMessageQueuePut+0x2c>
  stat = osOK;
 80073f6:	2000      	movs	r0, #0
 80073f8:	e7f9      	b.n	80073ee <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 80073fa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80073fe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007402:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007406:	f3bf 8f4f 	dsb	sy
 800740a:	f3bf 8f6f 	isb	sy
 800740e:	e7f2      	b.n	80073f6 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007410:	b158      	cbz	r0, 800742a <osMessageQueuePut+0x5c>
 8007412:	b151      	cbz	r1, 800742a <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007414:	4633      	mov	r3, r6
 8007416:	4622      	mov	r2, r4
 8007418:	f000 fcca 	bl	8007db0 <xQueueGenericSend>
 800741c:	2801      	cmp	r0, #1
 800741e:	d0ea      	beq.n	80073f6 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8007420:	2c00      	cmp	r4, #0
 8007422:	d0e2      	beq.n	80073ea <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007424:	f06f 0001 	mvn.w	r0, #1
 8007428:	e7e1      	b.n	80073ee <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800742a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800742e:	e7de      	b.n	80073ee <osMessageQueuePut+0x20>

08007430 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007430:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007432:	461c      	mov	r4, r3
 8007434:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007438:	b1db      	cbz	r3, 8007472 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800743a:	b330      	cbz	r0, 800748a <osMessageQueueGet+0x5a>
 800743c:	b329      	cbz	r1, 800748a <osMessageQueueGet+0x5a>
 800743e:	bb24      	cbnz	r4, 800748a <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007440:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007442:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007444:	f000 ff6f 	bl	8008326 <xQueueReceiveFromISR>
 8007448:	2801      	cmp	r0, #1
 800744a:	d003      	beq.n	8007454 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800744c:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007450:	b003      	add	sp, #12
 8007452:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007454:	9b01      	ldr	r3, [sp, #4]
 8007456:	b90b      	cbnz	r3, 800745c <osMessageQueueGet+0x2c>
  stat = osOK;
 8007458:	2000      	movs	r0, #0
 800745a:	e7f9      	b.n	8007450 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800745c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007460:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007464:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007468:	f3bf 8f4f 	dsb	sy
 800746c:	f3bf 8f6f 	isb	sy
 8007470:	e7f2      	b.n	8007458 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007472:	b150      	cbz	r0, 800748a <osMessageQueueGet+0x5a>
 8007474:	b149      	cbz	r1, 800748a <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007476:	4622      	mov	r2, r4
 8007478:	f000 fdfa 	bl	8008070 <xQueueReceive>
 800747c:	2801      	cmp	r0, #1
 800747e:	d0eb      	beq.n	8007458 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8007480:	2c00      	cmp	r4, #0
 8007482:	d0e3      	beq.n	800744c <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8007484:	f06f 0001 	mvn.w	r0, #1
 8007488:	e7e2      	b.n	8007450 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800748a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800748e:	e7df      	b.n	8007450 <osMessageQueueGet+0x20>

08007490 <osMessageQueueGetCount>:
  }

  return (size);
}

uint32_t osMessageQueueGetCount (osMessageQueueId_t mq_id) {
 8007490:	f7ff bf59 	b.w	8007346 <osSemaphoreGetCount>

08007494 <osMessageQueueReset>:
  }

  return (space);
}

osStatus_t osMessageQueueReset (osMessageQueueId_t mq_id) {
 8007494:	b510      	push	{r4, lr}
 8007496:	f3ef 8405 	mrs	r4, IPSR
  QueueHandle_t hQueue = (QueueHandle_t)mq_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800749a:	b92c      	cbnz	r4, 80074a8 <osMessageQueueReset+0x14>
    stat = osErrorISR;
  }
  else if (hQueue == NULL) {
 800749c:	b138      	cbz	r0, 80074ae <osMessageQueueReset+0x1a>
    stat = osErrorParameter;
  }
  else {
    stat = osOK;
    (void)xQueueReset (hQueue);
 800749e:	4621      	mov	r1, r4
 80074a0:	f000 fb92 	bl	8007bc8 <xQueueGenericReset>
    stat = osOK;
 80074a4:	4620      	mov	r0, r4
  }

  return (stat);
}
 80074a6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80074a8:	f06f 0005 	mvn.w	r0, #5
 80074ac:	e7fb      	b.n	80074a6 <osMessageQueueReset+0x12>
    stat = osErrorParameter;
 80074ae:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80074b2:	e7f8      	b.n	80074a6 <osMessageQueueReset+0x12>

080074b4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80074b4:	4b03      	ldr	r3, [pc, #12]	@ (80074c4 <vApplicationGetIdleTaskMemory+0x10>)
 80074b6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80074b8:	4b03      	ldr	r3, [pc, #12]	@ (80074c8 <vApplicationGetIdleTaskMemory+0x14>)
 80074ba:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80074bc:	2380      	movs	r3, #128	@ 0x80
 80074be:	6013      	str	r3, [r2, #0]
}
 80074c0:	4770      	bx	lr
 80074c2:	bf00      	nop
 80074c4:	20002b88 	.word	0x20002b88
 80074c8:	20002988 	.word	0x20002988

080074cc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80074cc:	4b03      	ldr	r3, [pc, #12]	@ (80074dc <vApplicationGetTimerTaskMemory+0x10>)
 80074ce:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80074d0:	4b03      	ldr	r3, [pc, #12]	@ (80074e0 <vApplicationGetTimerTaskMemory+0x14>)
 80074d2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80074d4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80074d8:	6013      	str	r3, [r2, #0]
}
 80074da:	4770      	bx	lr
 80074dc:	20002928 	.word	0x20002928
 80074e0:	20002528 	.word	0x20002528

080074e4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80074e4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80074e6:	4b10      	ldr	r3, [pc, #64]	@ (8007528 <prvInsertBlockIntoFreeList+0x44>)
 80074e8:	461a      	mov	r2, r3
 80074ea:	681b      	ldr	r3, [r3, #0]
 80074ec:	4283      	cmp	r3, r0
 80074ee:	d3fb      	bcc.n	80074e8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80074f0:	6854      	ldr	r4, [r2, #4]
 80074f2:	1911      	adds	r1, r2, r4
 80074f4:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80074f6:	bf01      	itttt	eq
 80074f8:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 80074fa:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80074fc:	1909      	addeq	r1, r1, r4
 80074fe:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007500:	6844      	ldr	r4, [r0, #4]
 8007502:	1901      	adds	r1, r0, r4
 8007504:	428b      	cmp	r3, r1
 8007506:	d10c      	bne.n	8007522 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007508:	4908      	ldr	r1, [pc, #32]	@ (800752c <prvInsertBlockIntoFreeList+0x48>)
 800750a:	6809      	ldr	r1, [r1, #0]
 800750c:	428b      	cmp	r3, r1
 800750e:	d003      	beq.n	8007518 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007510:	6859      	ldr	r1, [r3, #4]
 8007512:	4421      	add	r1, r4
 8007514:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007516:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007518:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800751a:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800751c:	bf18      	it	ne
 800751e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007520:	bd10      	pop	{r4, pc}
 8007522:	4619      	mov	r1, r3
 8007524:	e7f8      	b.n	8007518 <prvInsertBlockIntoFreeList+0x34>
 8007526:	bf00      	nop
 8007528:	20002c04 	.word	0x20002c04
 800752c:	20002c00 	.word	0x20002c00

08007530 <pvPortMalloc>:
{
 8007530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007534:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007536:	f001 fa6f 	bl	8008a18 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800753a:	4942      	ldr	r1, [pc, #264]	@ (8007644 <pvPortMalloc+0x114>)
 800753c:	4d42      	ldr	r5, [pc, #264]	@ (8007648 <pvPortMalloc+0x118>)
 800753e:	680b      	ldr	r3, [r1, #0]
 8007540:	bb0b      	cbnz	r3, 8007586 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8007542:	4a42      	ldr	r2, [pc, #264]	@ (800764c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007544:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007546:	bf1f      	itttt	ne
 8007548:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800754a:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800754e:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8007552:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007554:	bf0c      	ite	eq
 8007556:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800755a:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800755c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800755e:	4e3c      	ldr	r6, [pc, #240]	@ (8007650 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8007560:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007562:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007566:	2000      	movs	r0, #0
 8007568:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800756a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800756c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007570:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007572:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8007576:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007578:	4b36      	ldr	r3, [pc, #216]	@ (8007654 <pvPortMalloc+0x124>)
 800757a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800757c:	4b36      	ldr	r3, [pc, #216]	@ (8007658 <pvPortMalloc+0x128>)
 800757e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007580:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007584:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007586:	682e      	ldr	r6, [r5, #0]
 8007588:	4226      	tst	r6, r4
 800758a:	d155      	bne.n	8007638 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800758c:	2c00      	cmp	r4, #0
 800758e:	d046      	beq.n	800761e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007590:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007594:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007596:	bf1c      	itt	ne
 8007598:	f023 0307 	bicne.w	r3, r3, #7
 800759c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800759e:	2b00      	cmp	r3, #0
 80075a0:	d04a      	beq.n	8007638 <pvPortMalloc+0x108>
 80075a2:	4f2d      	ldr	r7, [pc, #180]	@ (8007658 <pvPortMalloc+0x128>)
 80075a4:	683c      	ldr	r4, [r7, #0]
 80075a6:	429c      	cmp	r4, r3
 80075a8:	d346      	bcc.n	8007638 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80075aa:	4a29      	ldr	r2, [pc, #164]	@ (8007650 <pvPortMalloc+0x120>)
 80075ac:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80075ae:	6868      	ldr	r0, [r5, #4]
 80075b0:	4298      	cmp	r0, r3
 80075b2:	d204      	bcs.n	80075be <pvPortMalloc+0x8e>
 80075b4:	f8d5 c000 	ldr.w	ip, [r5]
 80075b8:	f1bc 0f00 	cmp.w	ip, #0
 80075bc:	d115      	bne.n	80075ea <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80075be:	6809      	ldr	r1, [r1, #0]
 80075c0:	42a9      	cmp	r1, r5
 80075c2:	d039      	beq.n	8007638 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80075c4:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80075c6:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80075ca:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80075cc:	1ac2      	subs	r2, r0, r3
 80075ce:	2a10      	cmp	r2, #16
 80075d0:	d912      	bls.n	80075f8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80075d2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80075d4:	0741      	lsls	r1, r0, #29
 80075d6:	d00b      	beq.n	80075f0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80075d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075dc:	f383 8811 	msr	BASEPRI, r3
 80075e0:	f3bf 8f6f 	isb	sy
 80075e4:	f3bf 8f4f 	dsb	sy
 80075e8:	e7fe      	b.n	80075e8 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 80075ea:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 80075ec:	4665      	mov	r5, ip
 80075ee:	e7de      	b.n	80075ae <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80075f0:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80075f2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80075f4:	f7ff ff76 	bl	80074e4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80075f8:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80075fa:	4916      	ldr	r1, [pc, #88]	@ (8007654 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80075fc:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80075fe:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8007600:	4a16      	ldr	r2, [pc, #88]	@ (800765c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007602:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007604:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8007606:	2300      	movs	r3, #0
 8007608:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800760a:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800760c:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800760e:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8007610:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007614:	bf38      	it	cc
 8007616:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007618:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800761a:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800761e:	f001 fa9f 	bl	8008b60 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007622:	0763      	lsls	r3, r4, #29
 8007624:	d00a      	beq.n	800763c <pvPortMalloc+0x10c>
 8007626:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800762a:	f383 8811 	msr	BASEPRI, r3
 800762e:	f3bf 8f6f 	isb	sy
 8007632:	f3bf 8f4f 	dsb	sy
 8007636:	e7fe      	b.n	8007636 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007638:	2400      	movs	r4, #0
 800763a:	e7f0      	b.n	800761e <pvPortMalloc+0xee>
}
 800763c:	4620      	mov	r0, r4
 800763e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007642:	bf00      	nop
 8007644:	20002c00 	.word	0x20002c00
 8007648:	20002bec 	.word	0x20002bec
 800764c:	20002c0c 	.word	0x20002c0c
 8007650:	20002c04 	.word	0x20002c04
 8007654:	20002bf8 	.word	0x20002bf8
 8007658:	20002bfc 	.word	0x20002bfc
 800765c:	20002bf4 	.word	0x20002bf4

08007660 <vPortFree>:
{
 8007660:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007662:	4604      	mov	r4, r0
 8007664:	b390      	cbz	r0, 80076cc <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007666:	4a1a      	ldr	r2, [pc, #104]	@ (80076d0 <vPortFree+0x70>)
 8007668:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800766c:	6812      	ldr	r2, [r2, #0]
 800766e:	4213      	tst	r3, r2
 8007670:	d108      	bne.n	8007684 <vPortFree+0x24>
 8007672:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007676:	f383 8811 	msr	BASEPRI, r3
 800767a:	f3bf 8f6f 	isb	sy
 800767e:	f3bf 8f4f 	dsb	sy
 8007682:	e7fe      	b.n	8007682 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007684:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007688:	b141      	cbz	r1, 800769c <vPortFree+0x3c>
 800768a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800768e:	f383 8811 	msr	BASEPRI, r3
 8007692:	f3bf 8f6f 	isb	sy
 8007696:	f3bf 8f4f 	dsb	sy
 800769a:	e7fe      	b.n	800769a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800769c:	ea23 0302 	bic.w	r3, r3, r2
 80076a0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80076a4:	f001 f9b8 	bl	8008a18 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80076a8:	4a0a      	ldr	r2, [pc, #40]	@ (80076d4 <vPortFree+0x74>)
 80076aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80076ae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80076b0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80076b4:	440b      	add	r3, r1
 80076b6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80076b8:	f7ff ff14 	bl	80074e4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80076bc:	4a06      	ldr	r2, [pc, #24]	@ (80076d8 <vPortFree+0x78>)
 80076be:	6813      	ldr	r3, [r2, #0]
}
 80076c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80076c4:	3301      	adds	r3, #1
 80076c6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80076c8:	f001 ba4a 	b.w	8008b60 <xTaskResumeAll>
}
 80076cc:	bd10      	pop	{r4, pc}
 80076ce:	bf00      	nop
 80076d0:	20002bec 	.word	0x20002bec
 80076d4:	20002bfc 	.word	0x20002bfc
 80076d8:	20002bf0 	.word	0x20002bf0

080076dc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076dc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80076e0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076e4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076e8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076ea:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80076ec:	2300      	movs	r3, #0
 80076ee:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80076f0:	4770      	bx	lr

080076f2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80076f2:	2300      	movs	r3, #0
 80076f4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80076f6:	4770      	bx	lr

080076f8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80076f8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80076fa:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80076fc:	689a      	ldr	r2, [r3, #8]
 80076fe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007700:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007702:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007704:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007706:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007708:	3301      	adds	r3, #1
 800770a:	6003      	str	r3, [r0, #0]
}
 800770c:	4770      	bx	lr

0800770e <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800770e:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007710:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007712:	1c63      	adds	r3, r4, #1
 8007714:	d10a      	bne.n	800772c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007716:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007718:	685a      	ldr	r2, [r3, #4]
 800771a:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800771c:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800771e:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007720:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007722:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007724:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007726:	3301      	adds	r3, #1
 8007728:	6003      	str	r3, [r0, #0]
}
 800772a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800772c:	f100 0208 	add.w	r2, r0, #8
 8007730:	4613      	mov	r3, r2
 8007732:	6852      	ldr	r2, [r2, #4]
 8007734:	6815      	ldr	r5, [r2, #0]
 8007736:	42a5      	cmp	r5, r4
 8007738:	d9fa      	bls.n	8007730 <vListInsert+0x22>
 800773a:	e7ed      	b.n	8007718 <vListInsert+0xa>

0800773c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800773c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007740:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007742:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007744:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007746:	6859      	ldr	r1, [r3, #4]
 8007748:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800774a:	bf08      	it	eq
 800774c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800774e:	2200      	movs	r2, #0
 8007750:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007752:	681a      	ldr	r2, [r3, #0]
 8007754:	3a01      	subs	r2, #1
 8007756:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007758:	6818      	ldr	r0, [r3, #0]
}
 800775a:	4770      	bx	lr

0800775c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800775c:	4808      	ldr	r0, [pc, #32]	@ (8007780 <prvPortStartFirstTask+0x24>)
 800775e:	6800      	ldr	r0, [r0, #0]
 8007760:	6800      	ldr	r0, [r0, #0]
 8007762:	f380 8808 	msr	MSP, r0
 8007766:	f04f 0000 	mov.w	r0, #0
 800776a:	f380 8814 	msr	CONTROL, r0
 800776e:	b662      	cpsie	i
 8007770:	b661      	cpsie	f
 8007772:	f3bf 8f4f 	dsb	sy
 8007776:	f3bf 8f6f 	isb	sy
 800777a:	df00      	svc	0
 800777c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800777e:	0000      	.short	0x0000
 8007780:	e000ed08 	.word	0xe000ed08

08007784 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007784:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8007794 <vPortEnableVFP+0x10>
 8007788:	6801      	ldr	r1, [r0, #0]
 800778a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800778e:	6001      	str	r1, [r0, #0]
 8007790:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007792:	0000      	.short	0x0000
 8007794:	e000ed88 	.word	0xe000ed88

08007798 <prvTaskExitError>:
{
 8007798:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800779a:	2300      	movs	r3, #0
 800779c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800779e:	4b0d      	ldr	r3, [pc, #52]	@ (80077d4 <prvTaskExitError+0x3c>)
 80077a0:	681b      	ldr	r3, [r3, #0]
 80077a2:	3301      	adds	r3, #1
 80077a4:	d008      	beq.n	80077b8 <prvTaskExitError+0x20>
 80077a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077aa:	f383 8811 	msr	BASEPRI, r3
 80077ae:	f3bf 8f6f 	isb	sy
 80077b2:	f3bf 8f4f 	dsb	sy
 80077b6:	e7fe      	b.n	80077b6 <prvTaskExitError+0x1e>
 80077b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077bc:	f383 8811 	msr	BASEPRI, r3
 80077c0:	f3bf 8f6f 	isb	sy
 80077c4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80077c8:	9b01      	ldr	r3, [sp, #4]
 80077ca:	2b00      	cmp	r3, #0
 80077cc:	d0fc      	beq.n	80077c8 <prvTaskExitError+0x30>
}
 80077ce:	b002      	add	sp, #8
 80077d0:	4770      	bx	lr
 80077d2:	bf00      	nop
 80077d4:	20000088 	.word	0x20000088

080077d8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80077d8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80077dc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80077e0:	4b07      	ldr	r3, [pc, #28]	@ (8007800 <pxPortInitialiseStack+0x28>)
 80077e2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80077e6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80077ea:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80077ee:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80077f2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80077f6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80077fa:	3844      	subs	r0, #68	@ 0x44
 80077fc:	4770      	bx	lr
 80077fe:	bf00      	nop
 8007800:	08007799 	.word	0x08007799
	...

08007810 <SVC_Handler>:
	__asm volatile (
 8007810:	4b07      	ldr	r3, [pc, #28]	@ (8007830 <pxCurrentTCBConst2>)
 8007812:	6819      	ldr	r1, [r3, #0]
 8007814:	6808      	ldr	r0, [r1, #0]
 8007816:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800781a:	f380 8809 	msr	PSP, r0
 800781e:	f3bf 8f6f 	isb	sy
 8007822:	f04f 0000 	mov.w	r0, #0
 8007826:	f380 8811 	msr	BASEPRI, r0
 800782a:	4770      	bx	lr
 800782c:	f3af 8000 	nop.w

08007830 <pxCurrentTCBConst2>:
 8007830:	2001314c 	.word	0x2001314c

08007834 <vPortEnterCritical>:
 8007834:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007838:	f383 8811 	msr	BASEPRI, r3
 800783c:	f3bf 8f6f 	isb	sy
 8007840:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007844:	4a0a      	ldr	r2, [pc, #40]	@ (8007870 <vPortEnterCritical+0x3c>)
 8007846:	6813      	ldr	r3, [r2, #0]
 8007848:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800784a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800784c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800784e:	d10e      	bne.n	800786e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007850:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007854:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007858:	b2db      	uxtb	r3, r3
 800785a:	b143      	cbz	r3, 800786e <vPortEnterCritical+0x3a>
 800785c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007860:	f383 8811 	msr	BASEPRI, r3
 8007864:	f3bf 8f6f 	isb	sy
 8007868:	f3bf 8f4f 	dsb	sy
 800786c:	e7fe      	b.n	800786c <vPortEnterCritical+0x38>
}
 800786e:	4770      	bx	lr
 8007870:	20000088 	.word	0x20000088

08007874 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007874:	4a08      	ldr	r2, [pc, #32]	@ (8007898 <vPortExitCritical+0x24>)
 8007876:	6813      	ldr	r3, [r2, #0]
 8007878:	b943      	cbnz	r3, 800788c <vPortExitCritical+0x18>
 800787a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800787e:	f383 8811 	msr	BASEPRI, r3
 8007882:	f3bf 8f6f 	isb	sy
 8007886:	f3bf 8f4f 	dsb	sy
 800788a:	e7fe      	b.n	800788a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800788c:	3b01      	subs	r3, #1
 800788e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007890:	b90b      	cbnz	r3, 8007896 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007892:	f383 8811 	msr	BASEPRI, r3
}
 8007896:	4770      	bx	lr
 8007898:	20000088 	.word	0x20000088
 800789c:	00000000 	.word	0x00000000

080078a0 <PendSV_Handler>:
	__asm volatile
 80078a0:	f3ef 8009 	mrs	r0, PSP
 80078a4:	f3bf 8f6f 	isb	sy
 80078a8:	4b15      	ldr	r3, [pc, #84]	@ (8007900 <pxCurrentTCBConst>)
 80078aa:	681a      	ldr	r2, [r3, #0]
 80078ac:	f01e 0f10 	tst.w	lr, #16
 80078b0:	bf08      	it	eq
 80078b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80078b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078ba:	6010      	str	r0, [r2, #0]
 80078bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80078c0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80078c4:	f380 8811 	msr	BASEPRI, r0
 80078c8:	f3bf 8f4f 	dsb	sy
 80078cc:	f3bf 8f6f 	isb	sy
 80078d0:	f001 f9de 	bl	8008c90 <vTaskSwitchContext>
 80078d4:	f04f 0000 	mov.w	r0, #0
 80078d8:	f380 8811 	msr	BASEPRI, r0
 80078dc:	bc09      	pop	{r0, r3}
 80078de:	6819      	ldr	r1, [r3, #0]
 80078e0:	6808      	ldr	r0, [r1, #0]
 80078e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078e6:	f01e 0f10 	tst.w	lr, #16
 80078ea:	bf08      	it	eq
 80078ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80078f0:	f380 8809 	msr	PSP, r0
 80078f4:	f3bf 8f6f 	isb	sy
 80078f8:	4770      	bx	lr
 80078fa:	bf00      	nop
 80078fc:	f3af 8000 	nop.w

08007900 <pxCurrentTCBConst>:
 8007900:	2001314c 	.word	0x2001314c

08007904 <xPortSysTickHandler>:
{
 8007904:	b508      	push	{r3, lr}
	__asm volatile
 8007906:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800790a:	f383 8811 	msr	BASEPRI, r3
 800790e:	f3bf 8f6f 	isb	sy
 8007912:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007916:	f001 f88d 	bl	8008a34 <xTaskIncrementTick>
 800791a:	b128      	cbz	r0, 8007928 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800791c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007920:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007924:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007928:	2300      	movs	r3, #0
 800792a:	f383 8811 	msr	BASEPRI, r3
}
 800792e:	bd08      	pop	{r3, pc}

08007930 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007930:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007934:	2300      	movs	r3, #0
 8007936:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007938:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800793a:	4b05      	ldr	r3, [pc, #20]	@ (8007950 <vPortSetupTimerInterrupt+0x20>)
 800793c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007940:	681b      	ldr	r3, [r3, #0]
 8007942:	fbb3 f3f1 	udiv	r3, r3, r1
 8007946:	3b01      	subs	r3, #1
 8007948:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800794a:	2307      	movs	r3, #7
 800794c:	6113      	str	r3, [r2, #16]
}
 800794e:	4770      	bx	lr
 8007950:	2000007c 	.word	0x2000007c

08007954 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007954:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007958:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800795a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800795e:	4a38      	ldr	r2, [pc, #224]	@ (8007a40 <xPortStartScheduler+0xec>)
 8007960:	4291      	cmp	r1, r2
 8007962:	d108      	bne.n	8007976 <xPortStartScheduler+0x22>
	__asm volatile
 8007964:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007968:	f383 8811 	msr	BASEPRI, r3
 800796c:	f3bf 8f6f 	isb	sy
 8007970:	f3bf 8f4f 	dsb	sy
 8007974:	e7fe      	b.n	8007974 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007976:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800797a:	4b32      	ldr	r3, [pc, #200]	@ (8007a44 <xPortStartScheduler+0xf0>)
 800797c:	429a      	cmp	r2, r3
 800797e:	d108      	bne.n	8007992 <xPortStartScheduler+0x3e>
 8007980:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007984:	f383 8811 	msr	BASEPRI, r3
 8007988:	f3bf 8f6f 	isb	sy
 800798c:	f3bf 8f4f 	dsb	sy
 8007990:	e7fe      	b.n	8007990 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007992:	4b2d      	ldr	r3, [pc, #180]	@ (8007a48 <xPortStartScheduler+0xf4>)
 8007994:	781a      	ldrb	r2, [r3, #0]
 8007996:	b2d2      	uxtb	r2, r2
 8007998:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800799a:	22ff      	movs	r2, #255	@ 0xff
 800799c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800799e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80079a0:	4a2a      	ldr	r2, [pc, #168]	@ (8007a4c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80079a2:	b2db      	uxtb	r3, r3
 80079a4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80079a8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80079ac:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80079b0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80079b2:	4a27      	ldr	r2, [pc, #156]	@ (8007a50 <xPortStartScheduler+0xfc>)
 80079b4:	2307      	movs	r3, #7
 80079b6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80079b8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 80079bc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80079be:	0609      	lsls	r1, r1, #24
 80079c0:	d40a      	bmi.n	80079d8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80079c2:	2b03      	cmp	r3, #3
 80079c4:	d011      	beq.n	80079ea <xPortStartScheduler+0x96>
 80079c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079ca:	f383 8811 	msr	BASEPRI, r3
 80079ce:	f3bf 8f6f 	isb	sy
 80079d2:	f3bf 8f4f 	dsb	sy
 80079d6:	e7fe      	b.n	80079d6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 80079d8:	3b01      	subs	r3, #1
 80079da:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80079dc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80079e0:	005b      	lsls	r3, r3, #1
 80079e2:	b2db      	uxtb	r3, r3
 80079e4:	f88d 3003 	strb.w	r3, [sp, #3]
 80079e8:	e7e6      	b.n	80079b8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80079ea:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80079ee:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80079f0:	9b01      	ldr	r3, [sp, #4]
 80079f2:	4a15      	ldr	r2, [pc, #84]	@ (8007a48 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80079f4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80079f8:	b2db      	uxtb	r3, r3
 80079fa:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80079fc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007a00:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007a04:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007a08:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007a0c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007a10:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007a14:	f7ff ff8c 	bl	8007930 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007a18:	4b0e      	ldr	r3, [pc, #56]	@ (8007a54 <xPortStartScheduler+0x100>)
 8007a1a:	2500      	movs	r5, #0
 8007a1c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007a1e:	f7ff feb1 	bl	8007784 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007a22:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007a26:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007a2a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007a2e:	f7ff fe95 	bl	800775c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007a32:	f001 f92d 	bl	8008c90 <vTaskSwitchContext>
	prvTaskExitError();
 8007a36:	f7ff feaf 	bl	8007798 <prvTaskExitError>
}
 8007a3a:	4628      	mov	r0, r5
 8007a3c:	b003      	add	sp, #12
 8007a3e:	bd30      	pop	{r4, r5, pc}
 8007a40:	410fc271 	.word	0x410fc271
 8007a44:	410fc270 	.word	0x410fc270
 8007a48:	e000e400 	.word	0xe000e400
 8007a4c:	20012c10 	.word	0x20012c10
 8007a50:	20012c0c 	.word	0x20012c0c
 8007a54:	20000088 	.word	0x20000088

08007a58 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007a58:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007a5c:	2b0f      	cmp	r3, #15
 8007a5e:	d90e      	bls.n	8007a7e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007a60:	4a11      	ldr	r2, [pc, #68]	@ (8007aa8 <vPortValidateInterruptPriority+0x50>)
 8007a62:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007a64:	4a11      	ldr	r2, [pc, #68]	@ (8007aac <vPortValidateInterruptPriority+0x54>)
 8007a66:	7812      	ldrb	r2, [r2, #0]
 8007a68:	429a      	cmp	r2, r3
 8007a6a:	d908      	bls.n	8007a7e <vPortValidateInterruptPriority+0x26>
 8007a6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a70:	f383 8811 	msr	BASEPRI, r3
 8007a74:	f3bf 8f6f 	isb	sy
 8007a78:	f3bf 8f4f 	dsb	sy
 8007a7c:	e7fe      	b.n	8007a7c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007a7e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a82:	4a0b      	ldr	r2, [pc, #44]	@ (8007ab0 <vPortValidateInterruptPriority+0x58>)
 8007a84:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007a88:	6812      	ldr	r2, [r2, #0]
 8007a8a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007a8e:	4293      	cmp	r3, r2
 8007a90:	d908      	bls.n	8007aa4 <vPortValidateInterruptPriority+0x4c>
 8007a92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a96:	f383 8811 	msr	BASEPRI, r3
 8007a9a:	f3bf 8f6f 	isb	sy
 8007a9e:	f3bf 8f4f 	dsb	sy
 8007aa2:	e7fe      	b.n	8007aa2 <vPortValidateInterruptPriority+0x4a>
	}
 8007aa4:	4770      	bx	lr
 8007aa6:	bf00      	nop
 8007aa8:	e000e3f0 	.word	0xe000e3f0
 8007aac:	20012c10 	.word	0x20012c10
 8007ab0:	20012c0c 	.word	0x20012c0c

08007ab4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007ab4:	b510      	push	{r4, lr}
 8007ab6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007ab8:	f7ff febc 	bl	8007834 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007abc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007abe:	f7ff fed9 	bl	8007874 <vPortExitCritical>

	return xReturn;
}
 8007ac2:	fab4 f084 	clz	r0, r4
 8007ac6:	0940      	lsrs	r0, r0, #5
 8007ac8:	bd10      	pop	{r4, pc}

08007aca <prvCopyDataToQueue>:
{
 8007aca:	b570      	push	{r4, r5, r6, lr}
 8007acc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ace:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007ad0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007ad2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ad4:	b942      	cbnz	r2, 8007ae8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007ad6:	6806      	ldr	r6, [r0, #0]
 8007ad8:	b99e      	cbnz	r6, 8007b02 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007ada:	6880      	ldr	r0, [r0, #8]
 8007adc:	f001 fa26 	bl	8008f2c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007ae0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007ae2:	3501      	adds	r5, #1
 8007ae4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007ae6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007ae8:	b96e      	cbnz	r6, 8007b06 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007aea:	6840      	ldr	r0, [r0, #4]
 8007aec:	f016 f8d1 	bl	801dc92 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007af0:	6863      	ldr	r3, [r4, #4]
 8007af2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007af4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007af6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007af8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007afa:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007afc:	bf24      	itt	cs
 8007afe:	6823      	ldrcs	r3, [r4, #0]
 8007b00:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007b02:	2000      	movs	r0, #0
 8007b04:	e7ed      	b.n	8007ae2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007b06:	68c0      	ldr	r0, [r0, #12]
 8007b08:	f016 f8c3 	bl	801dc92 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007b0c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007b0e:	68e3      	ldr	r3, [r4, #12]
 8007b10:	4251      	negs	r1, r2
 8007b12:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007b14:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007b16:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007b18:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007b1a:	bf3e      	ittt	cc
 8007b1c:	68a3      	ldrcc	r3, [r4, #8]
 8007b1e:	185b      	addcc	r3, r3, r1
 8007b20:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007b22:	2e02      	cmp	r6, #2
 8007b24:	d1ed      	bne.n	8007b02 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007b26:	b10d      	cbz	r5, 8007b2c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007b28:	3d01      	subs	r5, #1
 8007b2a:	e7ea      	b.n	8007b02 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007b2c:	4628      	mov	r0, r5
 8007b2e:	e7d8      	b.n	8007ae2 <prvCopyDataToQueue+0x18>

08007b30 <prvCopyDataFromQueue>:
{
 8007b30:	4603      	mov	r3, r0
 8007b32:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007b34:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007b36:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007b38:	b16a      	cbz	r2, 8007b56 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007b3a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007b3c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007b3e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007b40:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007b42:	bf28      	it	cs
 8007b44:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007b46:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007b48:	bf28      	it	cs
 8007b4a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007b4c:	68d9      	ldr	r1, [r3, #12]
}
 8007b4e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007b52:	f016 b89e 	b.w	801dc92 <memcpy>
}
 8007b56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007b5a:	4770      	bx	lr

08007b5c <prvUnlockQueue>:
{
 8007b5c:	b570      	push	{r4, r5, r6, lr}
 8007b5e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007b60:	f7ff fe68 	bl	8007834 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007b64:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b68:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007b6c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007b6e:	2d00      	cmp	r5, #0
 8007b70:	dd01      	ble.n	8007b76 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007b72:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007b74:	b9b3      	cbnz	r3, 8007ba4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8007b76:	23ff      	movs	r3, #255	@ 0xff
 8007b78:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007b7c:	f7ff fe7a 	bl	8007874 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007b80:	f7ff fe58 	bl	8007834 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007b84:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b88:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007b8c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007b8e:	2d00      	cmp	r5, #0
 8007b90:	dd01      	ble.n	8007b96 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007b92:	6923      	ldr	r3, [r4, #16]
 8007b94:	b97b      	cbnz	r3, 8007bb6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8007b96:	23ff      	movs	r3, #255	@ 0xff
 8007b98:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007b9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007ba0:	f7ff be68 	b.w	8007874 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007ba4:	4630      	mov	r0, r6
 8007ba6:	f001 f8e5 	bl	8008d74 <xTaskRemoveFromEventList>
 8007baa:	b108      	cbz	r0, 8007bb0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8007bac:	f001 f96a 	bl	8008e84 <vTaskMissedYield>
			--cTxLock;
 8007bb0:	3d01      	subs	r5, #1
 8007bb2:	b26d      	sxtb	r5, r5
 8007bb4:	e7db      	b.n	8007b6e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007bb6:	4630      	mov	r0, r6
 8007bb8:	f001 f8dc 	bl	8008d74 <xTaskRemoveFromEventList>
 8007bbc:	b108      	cbz	r0, 8007bc2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8007bbe:	f001 f961 	bl	8008e84 <vTaskMissedYield>
				--cRxLock;
 8007bc2:	3d01      	subs	r5, #1
 8007bc4:	b26d      	sxtb	r5, r5
 8007bc6:	e7e2      	b.n	8007b8e <prvUnlockQueue+0x32>

08007bc8 <xQueueGenericReset>:
{
 8007bc8:	b538      	push	{r3, r4, r5, lr}
 8007bca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007bcc:	4604      	mov	r4, r0
 8007bce:	b940      	cbnz	r0, 8007be2 <xQueueGenericReset+0x1a>
 8007bd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bd4:	f383 8811 	msr	BASEPRI, r3
 8007bd8:	f3bf 8f6f 	isb	sy
 8007bdc:	f3bf 8f4f 	dsb	sy
 8007be0:	e7fe      	b.n	8007be0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007be2:	f7ff fe27 	bl	8007834 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007be6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007bea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007bec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bee:	434b      	muls	r3, r1
 8007bf0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bf2:	1a5b      	subs	r3, r3, r1
 8007bf4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bf6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8007bf8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007bfa:	2000      	movs	r0, #0
 8007bfc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bfe:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007c00:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007c04:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8007c08:	b9a5      	cbnz	r5, 8007c34 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007c0a:	6923      	ldr	r3, [r4, #16]
 8007c0c:	b173      	cbz	r3, 8007c2c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c0e:	f104 0010 	add.w	r0, r4, #16
 8007c12:	f001 f8af 	bl	8008d74 <xTaskRemoveFromEventList>
 8007c16:	b148      	cbz	r0, 8007c2c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007c18:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c1c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007c20:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007c24:	f3bf 8f4f 	dsb	sy
 8007c28:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007c2c:	f7ff fe22 	bl	8007874 <vPortExitCritical>
}
 8007c30:	2001      	movs	r0, #1
 8007c32:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007c34:	f104 0010 	add.w	r0, r4, #16
 8007c38:	f7ff fd50 	bl	80076dc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007c3c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007c40:	f7ff fd4c 	bl	80076dc <vListInitialise>
 8007c44:	e7f2      	b.n	8007c2c <xQueueGenericReset+0x64>

08007c46 <xQueueGenericCreateStatic>:
	{
 8007c46:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007c48:	460d      	mov	r5, r1
 8007c4a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007c4c:	b940      	cbnz	r0, 8007c60 <xQueueGenericCreateStatic+0x1a>
 8007c4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c52:	f383 8811 	msr	BASEPRI, r3
 8007c56:	f3bf 8f6f 	isb	sy
 8007c5a:	f3bf 8f4f 	dsb	sy
 8007c5e:	e7fe      	b.n	8007c5e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007c60:	b943      	cbnz	r3, 8007c74 <xQueueGenericCreateStatic+0x2e>
 8007c62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c66:	f383 8811 	msr	BASEPRI, r3
 8007c6a:	f3bf 8f6f 	isb	sy
 8007c6e:	f3bf 8f4f 	dsb	sy
 8007c72:	e7fe      	b.n	8007c72 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007c74:	b14a      	cbz	r2, 8007c8a <xQueueGenericCreateStatic+0x44>
 8007c76:	b991      	cbnz	r1, 8007c9e <xQueueGenericCreateStatic+0x58>
 8007c78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c7c:	f383 8811 	msr	BASEPRI, r3
 8007c80:	f3bf 8f6f 	isb	sy
 8007c84:	f3bf 8f4f 	dsb	sy
 8007c88:	e7fe      	b.n	8007c88 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007c8a:	b141      	cbz	r1, 8007c9e <xQueueGenericCreateStatic+0x58>
 8007c8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c90:	f383 8811 	msr	BASEPRI, r3
 8007c94:	f3bf 8f6f 	isb	sy
 8007c98:	f3bf 8f4f 	dsb	sy
 8007c9c:	e7fe      	b.n	8007c9c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007c9e:	2350      	movs	r3, #80	@ 0x50
 8007ca0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007ca2:	9b01      	ldr	r3, [sp, #4]
 8007ca4:	2b50      	cmp	r3, #80	@ 0x50
 8007ca6:	d008      	beq.n	8007cba <xQueueGenericCreateStatic+0x74>
 8007ca8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cac:	f383 8811 	msr	BASEPRI, r3
 8007cb0:	f3bf 8f6f 	isb	sy
 8007cb4:	f3bf 8f4f 	dsb	sy
 8007cb8:	e7fe      	b.n	8007cb8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007cba:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007cbc:	2d00      	cmp	r5, #0
 8007cbe:	bf08      	it	eq
 8007cc0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8007cc2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007cc6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8007cca:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007ccc:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007cce:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007cd0:	f7ff ff7a 	bl	8007bc8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007cd4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8007cd8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007cdc:	4620      	mov	r0, r4
 8007cde:	b003      	add	sp, #12
 8007ce0:	bd30      	pop	{r4, r5, pc}

08007ce2 <xQueueGenericCreate>:
	{
 8007ce2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ce4:	460d      	mov	r5, r1
 8007ce6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007ce8:	4606      	mov	r6, r0
 8007cea:	b940      	cbnz	r0, 8007cfe <xQueueGenericCreate+0x1c>
 8007cec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cf0:	f383 8811 	msr	BASEPRI, r3
 8007cf4:	f3bf 8f6f 	isb	sy
 8007cf8:	f3bf 8f4f 	dsb	sy
 8007cfc:	e7fe      	b.n	8007cfc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007cfe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007d00:	3050      	adds	r0, #80	@ 0x50
 8007d02:	f7ff fc15 	bl	8007530 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007d06:	4604      	mov	r4, r0
 8007d08:	b170      	cbz	r0, 8007d28 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007d0a:	2300      	movs	r3, #0
 8007d0c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007d10:	b165      	cbz	r5, 8007d2c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d12:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007d16:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8007d1a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007d1c:	2101      	movs	r1, #1
 8007d1e:	4620      	mov	r0, r4
 8007d20:	f7ff ff52 	bl	8007bc8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007d24:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007d28:	4620      	mov	r0, r4
 8007d2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007d2c:	4603      	mov	r3, r0
 8007d2e:	e7f2      	b.n	8007d16 <xQueueGenericCreate+0x34>

08007d30 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007d30:	b513      	push	{r0, r1, r4, lr}
 8007d32:	4613      	mov	r3, r2
 8007d34:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007d36:	b940      	cbnz	r0, 8007d4a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007d38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d3c:	f383 8811 	msr	BASEPRI, r3
 8007d40:	f3bf 8f6f 	isb	sy
 8007d44:	f3bf 8f4f 	dsb	sy
 8007d48:	e7fe      	b.n	8007d48 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007d4a:	4288      	cmp	r0, r1
 8007d4c:	d208      	bcs.n	8007d60 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007d4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d52:	f383 8811 	msr	BASEPRI, r3
 8007d56:	f3bf 8f6f 	isb	sy
 8007d5a:	f3bf 8f4f 	dsb	sy
 8007d5e:	e7fe      	b.n	8007d5e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007d60:	2202      	movs	r2, #2
 8007d62:	9200      	str	r2, [sp, #0]
 8007d64:	2200      	movs	r2, #0
 8007d66:	4611      	mov	r1, r2
 8007d68:	f7ff ff6d 	bl	8007c46 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007d6c:	b100      	cbz	r0, 8007d70 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007d6e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007d70:	b002      	add	sp, #8
 8007d72:	bd10      	pop	{r4, pc}

08007d74 <xQueueCreateCountingSemaphore>:
	{
 8007d74:	b510      	push	{r4, lr}
 8007d76:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007d78:	b940      	cbnz	r0, 8007d8c <xQueueCreateCountingSemaphore+0x18>
 8007d7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d7e:	f383 8811 	msr	BASEPRI, r3
 8007d82:	f3bf 8f6f 	isb	sy
 8007d86:	f3bf 8f4f 	dsb	sy
 8007d8a:	e7fe      	b.n	8007d8a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007d8c:	4288      	cmp	r0, r1
 8007d8e:	d208      	bcs.n	8007da2 <xQueueCreateCountingSemaphore+0x2e>
 8007d90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d94:	f383 8811 	msr	BASEPRI, r3
 8007d98:	f3bf 8f6f 	isb	sy
 8007d9c:	f3bf 8f4f 	dsb	sy
 8007da0:	e7fe      	b.n	8007da0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007da2:	2202      	movs	r2, #2
 8007da4:	2100      	movs	r1, #0
 8007da6:	f7ff ff9c 	bl	8007ce2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007daa:	b100      	cbz	r0, 8007dae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007dac:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007dae:	bd10      	pop	{r4, pc}

08007db0 <xQueueGenericSend>:
{
 8007db0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007db4:	460f      	mov	r7, r1
 8007db6:	9201      	str	r2, [sp, #4]
 8007db8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007dba:	4604      	mov	r4, r0
 8007dbc:	b940      	cbnz	r0, 8007dd0 <xQueueGenericSend+0x20>
 8007dbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dc2:	f383 8811 	msr	BASEPRI, r3
 8007dc6:	f3bf 8f6f 	isb	sy
 8007dca:	f3bf 8f4f 	dsb	sy
 8007dce:	e7fe      	b.n	8007dce <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007dd0:	b951      	cbnz	r1, 8007de8 <xQueueGenericSend+0x38>
 8007dd2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007dd4:	b143      	cbz	r3, 8007de8 <xQueueGenericSend+0x38>
 8007dd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007dda:	f383 8811 	msr	BASEPRI, r3
 8007dde:	f3bf 8f6f 	isb	sy
 8007de2:	f3bf 8f4f 	dsb	sy
 8007de6:	e7fe      	b.n	8007de6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007de8:	2e02      	cmp	r6, #2
 8007dea:	d10b      	bne.n	8007e04 <xQueueGenericSend+0x54>
 8007dec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007dee:	2b01      	cmp	r3, #1
 8007df0:	d008      	beq.n	8007e04 <xQueueGenericSend+0x54>
 8007df2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007df6:	f383 8811 	msr	BASEPRI, r3
 8007dfa:	f3bf 8f6f 	isb	sy
 8007dfe:	f3bf 8f4f 	dsb	sy
 8007e02:	e7fe      	b.n	8007e02 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e04:	f001 f844 	bl	8008e90 <xTaskGetSchedulerState>
 8007e08:	4605      	mov	r5, r0
 8007e0a:	b320      	cbz	r0, 8007e56 <xQueueGenericSend+0xa6>
 8007e0c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007e0e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007e12:	f7ff fd0f 	bl	8007834 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007e16:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007e18:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007e1a:	429a      	cmp	r2, r3
 8007e1c:	d227      	bcs.n	8007e6e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007e1e:	4632      	mov	r2, r6
 8007e20:	4639      	mov	r1, r7
 8007e22:	4620      	mov	r0, r4
 8007e24:	f7ff fe51 	bl	8007aca <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007e28:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007e2a:	b11b      	cbz	r3, 8007e34 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007e2c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007e30:	f000 ffa0 	bl	8008d74 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007e34:	b148      	cbz	r0, 8007e4a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8007e36:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e3a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e3e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e42:	f3bf 8f4f 	dsb	sy
 8007e46:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007e4a:	f7ff fd13 	bl	8007874 <vPortExitCritical>
				return pdPASS;
 8007e4e:	2001      	movs	r0, #1
}
 8007e50:	b004      	add	sp, #16
 8007e52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e56:	9b01      	ldr	r3, [sp, #4]
 8007e58:	2b00      	cmp	r3, #0
 8007e5a:	d0d8      	beq.n	8007e0e <xQueueGenericSend+0x5e>
 8007e5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e60:	f383 8811 	msr	BASEPRI, r3
 8007e64:	f3bf 8f6f 	isb	sy
 8007e68:	f3bf 8f4f 	dsb	sy
 8007e6c:	e7fe      	b.n	8007e6c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007e6e:	2e02      	cmp	r6, #2
 8007e70:	d0d5      	beq.n	8007e1e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e72:	9b01      	ldr	r3, [sp, #4]
 8007e74:	b91b      	cbnz	r3, 8007e7e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8007e76:	f7ff fcfd 	bl	8007874 <vPortExitCritical>
					return errQUEUE_FULL;
 8007e7a:	2000      	movs	r0, #0
 8007e7c:	e7e8      	b.n	8007e50 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 8007e7e:	b915      	cbnz	r5, 8007e86 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e80:	a802      	add	r0, sp, #8
 8007e82:	f000 ffb7 	bl	8008df4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e86:	f7ff fcf5 	bl	8007874 <vPortExitCritical>
		vTaskSuspendAll();
 8007e8a:	f000 fdc5 	bl	8008a18 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e8e:	f7ff fcd1 	bl	8007834 <vPortEnterCritical>
 8007e92:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007e96:	2bff      	cmp	r3, #255	@ 0xff
 8007e98:	bf08      	it	eq
 8007e9a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8007e9e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007ea2:	2bff      	cmp	r3, #255	@ 0xff
 8007ea4:	bf08      	it	eq
 8007ea6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8007eaa:	f7ff fce3 	bl	8007874 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007eae:	a901      	add	r1, sp, #4
 8007eb0:	a802      	add	r0, sp, #8
 8007eb2:	f000 ffab 	bl	8008e0c <xTaskCheckForTimeOut>
 8007eb6:	bb38      	cbnz	r0, 8007f08 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007eb8:	f7ff fcbc 	bl	8007834 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007ebc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007ebe:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007ec0:	429a      	cmp	r2, r3
 8007ec2:	d10e      	bne.n	8007ee2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007ec4:	f7ff fcd6 	bl	8007874 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007ec8:	9901      	ldr	r1, [sp, #4]
 8007eca:	f104 0010 	add.w	r0, r4, #16
 8007ece:	f000 ff19 	bl	8008d04 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007ed2:	4620      	mov	r0, r4
 8007ed4:	f7ff fe42 	bl	8007b5c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ed8:	f000 fe42 	bl	8008b60 <xTaskResumeAll>
 8007edc:	b148      	cbz	r0, 8007ef2 <xQueueGenericSend+0x142>
 8007ede:	2501      	movs	r5, #1
 8007ee0:	e797      	b.n	8007e12 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8007ee2:	f7ff fcc7 	bl	8007874 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007ee6:	4620      	mov	r0, r4
 8007ee8:	f7ff fe38 	bl	8007b5c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007eec:	f000 fe38 	bl	8008b60 <xTaskResumeAll>
 8007ef0:	e7f5      	b.n	8007ede <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8007ef2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007ef6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007efa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007efe:	f3bf 8f4f 	dsb	sy
 8007f02:	f3bf 8f6f 	isb	sy
 8007f06:	e7ea      	b.n	8007ede <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8007f08:	4620      	mov	r0, r4
 8007f0a:	f7ff fe27 	bl	8007b5c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007f0e:	f000 fe27 	bl	8008b60 <xTaskResumeAll>
			return errQUEUE_FULL;
 8007f12:	e7b2      	b.n	8007e7a <xQueueGenericSend+0xca>

08007f14 <xQueueGenericSendFromISR>:
{
 8007f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f18:	4689      	mov	r9, r1
 8007f1a:	4617      	mov	r7, r2
 8007f1c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007f1e:	4604      	mov	r4, r0
 8007f20:	b940      	cbnz	r0, 8007f34 <xQueueGenericSendFromISR+0x20>
 8007f22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f26:	f383 8811 	msr	BASEPRI, r3
 8007f2a:	f3bf 8f6f 	isb	sy
 8007f2e:	f3bf 8f4f 	dsb	sy
 8007f32:	e7fe      	b.n	8007f32 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f34:	b951      	cbnz	r1, 8007f4c <xQueueGenericSendFromISR+0x38>
 8007f36:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007f38:	b143      	cbz	r3, 8007f4c <xQueueGenericSendFromISR+0x38>
 8007f3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f3e:	f383 8811 	msr	BASEPRI, r3
 8007f42:	f3bf 8f6f 	isb	sy
 8007f46:	f3bf 8f4f 	dsb	sy
 8007f4a:	e7fe      	b.n	8007f4a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007f4c:	2e02      	cmp	r6, #2
 8007f4e:	d10b      	bne.n	8007f68 <xQueueGenericSendFromISR+0x54>
 8007f50:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007f52:	2b01      	cmp	r3, #1
 8007f54:	d008      	beq.n	8007f68 <xQueueGenericSendFromISR+0x54>
 8007f56:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f5a:	f383 8811 	msr	BASEPRI, r3
 8007f5e:	f3bf 8f6f 	isb	sy
 8007f62:	f3bf 8f4f 	dsb	sy
 8007f66:	e7fe      	b.n	8007f66 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007f68:	f7ff fd76 	bl	8007a58 <vPortValidateInterruptPriority>
	__asm volatile
 8007f6c:	f3ef 8811 	mrs	r8, BASEPRI
 8007f70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f74:	f383 8811 	msr	BASEPRI, r3
 8007f78:	f3bf 8f6f 	isb	sy
 8007f7c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007f80:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007f82:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007f84:	429a      	cmp	r2, r3
 8007f86:	d301      	bcc.n	8007f8c <xQueueGenericSendFromISR+0x78>
 8007f88:	2e02      	cmp	r6, #2
 8007f8a:	d11e      	bne.n	8007fca <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f8c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007f90:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f92:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007f94:	4632      	mov	r2, r6
 8007f96:	4649      	mov	r1, r9
 8007f98:	4620      	mov	r0, r4
 8007f9a:	f7ff fd96 	bl	8007aca <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007f9e:	1c6b      	adds	r3, r5, #1
 8007fa0:	d10e      	bne.n	8007fc0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007fa2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007fa4:	b13b      	cbz	r3, 8007fb6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007fa6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007faa:	f000 fee3 	bl	8008d74 <xTaskRemoveFromEventList>
 8007fae:	b110      	cbz	r0, 8007fb6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8007fb0:	b10f      	cbz	r7, 8007fb6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007fb2:	2301      	movs	r3, #1
 8007fb4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8007fb6:	2001      	movs	r0, #1
	__asm volatile
 8007fb8:	f388 8811 	msr	BASEPRI, r8
}
 8007fbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007fc0:	3501      	adds	r5, #1
 8007fc2:	b26d      	sxtb	r5, r5
 8007fc4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8007fc8:	e7f5      	b.n	8007fb6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8007fca:	2000      	movs	r0, #0
 8007fcc:	e7f4      	b.n	8007fb8 <xQueueGenericSendFromISR+0xa4>

08007fce <xQueueGiveFromISR>:
{
 8007fce:	b570      	push	{r4, r5, r6, lr}
 8007fd0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007fd2:	4604      	mov	r4, r0
 8007fd4:	b940      	cbnz	r0, 8007fe8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007fd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fda:	f383 8811 	msr	BASEPRI, r3
 8007fde:	f3bf 8f6f 	isb	sy
 8007fe2:	f3bf 8f4f 	dsb	sy
 8007fe6:	e7fe      	b.n	8007fe6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007fe8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007fea:	b143      	cbz	r3, 8007ffe <xQueueGiveFromISR+0x30>
 8007fec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ff0:	f383 8811 	msr	BASEPRI, r3
 8007ff4:	f3bf 8f6f 	isb	sy
 8007ff8:	f3bf 8f4f 	dsb	sy
 8007ffc:	e7fe      	b.n	8007ffc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007ffe:	6803      	ldr	r3, [r0, #0]
 8008000:	b953      	cbnz	r3, 8008018 <xQueueGiveFromISR+0x4a>
 8008002:	6883      	ldr	r3, [r0, #8]
 8008004:	b143      	cbz	r3, 8008018 <xQueueGiveFromISR+0x4a>
 8008006:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800800a:	f383 8811 	msr	BASEPRI, r3
 800800e:	f3bf 8f6f 	isb	sy
 8008012:	f3bf 8f4f 	dsb	sy
 8008016:	e7fe      	b.n	8008016 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008018:	f7ff fd1e 	bl	8007a58 <vPortValidateInterruptPriority>
	__asm volatile
 800801c:	f3ef 8611 	mrs	r6, BASEPRI
 8008020:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008024:	f383 8811 	msr	BASEPRI, r3
 8008028:	f3bf 8f6f 	isb	sy
 800802c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008030:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008032:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008034:	4293      	cmp	r3, r2
 8008036:	d919      	bls.n	800806c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008038:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800803c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800803e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008040:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008042:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008044:	d10d      	bne.n	8008062 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008046:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008048:	b13b      	cbz	r3, 800805a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800804a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800804e:	f000 fe91 	bl	8008d74 <xTaskRemoveFromEventList>
 8008052:	b110      	cbz	r0, 800805a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008054:	b10d      	cbz	r5, 800805a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008056:	2301      	movs	r3, #1
 8008058:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800805a:	2001      	movs	r0, #1
	__asm volatile
 800805c:	f386 8811 	msr	BASEPRI, r6
}
 8008060:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008062:	3301      	adds	r3, #1
 8008064:	b25b      	sxtb	r3, r3
 8008066:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800806a:	e7f6      	b.n	800805a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800806c:	2000      	movs	r0, #0
 800806e:	e7f5      	b.n	800805c <xQueueGiveFromISR+0x8e>

08008070 <xQueueReceive>:
{
 8008070:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008074:	460e      	mov	r6, r1
 8008076:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008078:	4604      	mov	r4, r0
 800807a:	b940      	cbnz	r0, 800808e <xQueueReceive+0x1e>
	__asm volatile
 800807c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008080:	f383 8811 	msr	BASEPRI, r3
 8008084:	f3bf 8f6f 	isb	sy
 8008088:	f3bf 8f4f 	dsb	sy
 800808c:	e7fe      	b.n	800808c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800808e:	b951      	cbnz	r1, 80080a6 <xQueueReceive+0x36>
 8008090:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008092:	b143      	cbz	r3, 80080a6 <xQueueReceive+0x36>
 8008094:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008098:	f383 8811 	msr	BASEPRI, r3
 800809c:	f3bf 8f6f 	isb	sy
 80080a0:	f3bf 8f4f 	dsb	sy
 80080a4:	e7fe      	b.n	80080a4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80080a6:	f000 fef3 	bl	8008e90 <xTaskGetSchedulerState>
 80080aa:	4605      	mov	r5, r0
 80080ac:	b318      	cbz	r0, 80080f6 <xQueueReceive+0x86>
 80080ae:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80080b0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80080b4:	f7ff fbbe 	bl	8007834 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80080b8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80080ba:	b347      	cbz	r7, 800810e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80080bc:	4631      	mov	r1, r6
 80080be:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80080c0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80080c2:	f7ff fd35 	bl	8007b30 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80080c6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80080c8:	6923      	ldr	r3, [r4, #16]
 80080ca:	b173      	cbz	r3, 80080ea <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80080cc:	f104 0010 	add.w	r0, r4, #16
 80080d0:	f000 fe50 	bl	8008d74 <xTaskRemoveFromEventList>
 80080d4:	b148      	cbz	r0, 80080ea <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 80080d6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80080da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80080de:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80080e2:	f3bf 8f4f 	dsb	sy
 80080e6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80080ea:	f7ff fbc3 	bl	8007874 <vPortExitCritical>
				return pdPASS;
 80080ee:	2001      	movs	r0, #1
}
 80080f0:	b004      	add	sp, #16
 80080f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80080f6:	9b01      	ldr	r3, [sp, #4]
 80080f8:	2b00      	cmp	r3, #0
 80080fa:	d0d9      	beq.n	80080b0 <xQueueReceive+0x40>
 80080fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008100:	f383 8811 	msr	BASEPRI, r3
 8008104:	f3bf 8f6f 	isb	sy
 8008108:	f3bf 8f4f 	dsb	sy
 800810c:	e7fe      	b.n	800810c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800810e:	9b01      	ldr	r3, [sp, #4]
 8008110:	b91b      	cbnz	r3, 800811a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008112:	f7ff fbaf 	bl	8007874 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008116:	2000      	movs	r0, #0
 8008118:	e7ea      	b.n	80080f0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800811a:	b915      	cbnz	r5, 8008122 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800811c:	a802      	add	r0, sp, #8
 800811e:	f000 fe69 	bl	8008df4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008122:	f7ff fba7 	bl	8007874 <vPortExitCritical>
		vTaskSuspendAll();
 8008126:	f000 fc77 	bl	8008a18 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800812a:	f7ff fb83 	bl	8007834 <vPortEnterCritical>
 800812e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008132:	2bff      	cmp	r3, #255	@ 0xff
 8008134:	bf08      	it	eq
 8008136:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800813a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800813e:	2bff      	cmp	r3, #255	@ 0xff
 8008140:	bf08      	it	eq
 8008142:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008146:	f7ff fb95 	bl	8007874 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800814a:	a901      	add	r1, sp, #4
 800814c:	a802      	add	r0, sp, #8
 800814e:	f000 fe5d 	bl	8008e0c <xTaskCheckForTimeOut>
 8008152:	bb00      	cbnz	r0, 8008196 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008154:	4620      	mov	r0, r4
 8008156:	f7ff fcad 	bl	8007ab4 <prvIsQueueEmpty>
 800815a:	b1b0      	cbz	r0, 800818a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800815c:	9901      	ldr	r1, [sp, #4]
 800815e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008162:	f000 fdcf 	bl	8008d04 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008166:	4620      	mov	r0, r4
 8008168:	f7ff fcf8 	bl	8007b5c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800816c:	f000 fcf8 	bl	8008b60 <xTaskResumeAll>
 8008170:	b948      	cbnz	r0, 8008186 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008172:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008176:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800817a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800817e:	f3bf 8f4f 	dsb	sy
 8008182:	f3bf 8f6f 	isb	sy
 8008186:	2501      	movs	r5, #1
 8008188:	e794      	b.n	80080b4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800818a:	4620      	mov	r0, r4
 800818c:	f7ff fce6 	bl	8007b5c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008190:	f000 fce6 	bl	8008b60 <xTaskResumeAll>
 8008194:	e7f7      	b.n	8008186 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8008196:	4620      	mov	r0, r4
 8008198:	f7ff fce0 	bl	8007b5c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800819c:	f000 fce0 	bl	8008b60 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80081a0:	4620      	mov	r0, r4
 80081a2:	f7ff fc87 	bl	8007ab4 <prvIsQueueEmpty>
 80081a6:	2800      	cmp	r0, #0
 80081a8:	d0ed      	beq.n	8008186 <xQueueReceive+0x116>
 80081aa:	e7b4      	b.n	8008116 <xQueueReceive+0xa6>

080081ac <xQueueSemaphoreTake>:
{
 80081ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80081ae:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80081b0:	4604      	mov	r4, r0
{
 80081b2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80081b4:	b940      	cbnz	r0, 80081c8 <xQueueSemaphoreTake+0x1c>
 80081b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081ba:	f383 8811 	msr	BASEPRI, r3
 80081be:	f3bf 8f6f 	isb	sy
 80081c2:	f3bf 8f4f 	dsb	sy
 80081c6:	e7fe      	b.n	80081c6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80081c8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80081ca:	b145      	cbz	r5, 80081de <xQueueSemaphoreTake+0x32>
 80081cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081d0:	f383 8811 	msr	BASEPRI, r3
 80081d4:	f3bf 8f6f 	isb	sy
 80081d8:	f3bf 8f4f 	dsb	sy
 80081dc:	e7fe      	b.n	80081dc <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80081de:	f000 fe57 	bl	8008e90 <xTaskGetSchedulerState>
 80081e2:	4606      	mov	r6, r0
 80081e4:	b320      	cbz	r0, 8008230 <xQueueSemaphoreTake+0x84>
 80081e6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80081e8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 80081ea:	f7ff fb23 	bl	8007834 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80081ee:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80081f0:	b353      	cbz	r3, 8008248 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80081f2:	3b01      	subs	r3, #1
 80081f4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80081f6:	6823      	ldr	r3, [r4, #0]
 80081f8:	b913      	cbnz	r3, 8008200 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80081fa:	f000 ff27 	bl	800904c <pvTaskIncrementMutexHeldCount>
 80081fe:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008200:	6923      	ldr	r3, [r4, #16]
 8008202:	b173      	cbz	r3, 8008222 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008204:	f104 0010 	add.w	r0, r4, #16
 8008208:	f000 fdb4 	bl	8008d74 <xTaskRemoveFromEventList>
 800820c:	b148      	cbz	r0, 8008222 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800820e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008212:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008216:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800821a:	f3bf 8f4f 	dsb	sy
 800821e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008222:	f7ff fb27 	bl	8007874 <vPortExitCritical>
				return pdPASS;
 8008226:	2001      	movs	r0, #1
}
 8008228:	b005      	add	sp, #20
 800822a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800822c:	4635      	mov	r5, r6
 800822e:	e7db      	b.n	80081e8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008230:	9b01      	ldr	r3, [sp, #4]
 8008232:	2b00      	cmp	r3, #0
 8008234:	d0fa      	beq.n	800822c <xQueueSemaphoreTake+0x80>
 8008236:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800823a:	f383 8811 	msr	BASEPRI, r3
 800823e:	f3bf 8f6f 	isb	sy
 8008242:	f3bf 8f4f 	dsb	sy
 8008246:	e7fe      	b.n	8008246 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008248:	9b01      	ldr	r3, [sp, #4]
 800824a:	b953      	cbnz	r3, 8008262 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800824c:	2d00      	cmp	r5, #0
 800824e:	d066      	beq.n	800831e <xQueueSemaphoreTake+0x172>
 8008250:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008254:	f383 8811 	msr	BASEPRI, r3
 8008258:	f3bf 8f6f 	isb	sy
 800825c:	f3bf 8f4f 	dsb	sy
 8008260:	e7fe      	b.n	8008260 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008262:	b916      	cbnz	r6, 800826a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008264:	a802      	add	r0, sp, #8
 8008266:	f000 fdc5 	bl	8008df4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800826a:	f7ff fb03 	bl	8007874 <vPortExitCritical>
		vTaskSuspendAll();
 800826e:	f000 fbd3 	bl	8008a18 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008272:	f7ff fadf 	bl	8007834 <vPortEnterCritical>
 8008276:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800827a:	2bff      	cmp	r3, #255	@ 0xff
 800827c:	bf08      	it	eq
 800827e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008282:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008286:	2bff      	cmp	r3, #255	@ 0xff
 8008288:	bf08      	it	eq
 800828a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800828e:	f7ff faf1 	bl	8007874 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008292:	a901      	add	r1, sp, #4
 8008294:	a802      	add	r0, sp, #8
 8008296:	f000 fdb9 	bl	8008e0c <xTaskCheckForTimeOut>
 800829a:	bb50      	cbnz	r0, 80082f2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800829c:	4620      	mov	r0, r4
 800829e:	f7ff fc09 	bl	8007ab4 <prvIsQueueEmpty>
 80082a2:	b300      	cbz	r0, 80082e6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80082a4:	6823      	ldr	r3, [r4, #0]
 80082a6:	b93b      	cbnz	r3, 80082b8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 80082a8:	f7ff fac4 	bl	8007834 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80082ac:	68a0      	ldr	r0, [r4, #8]
 80082ae:	f000 fdff 	bl	8008eb0 <xTaskPriorityInherit>
 80082b2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80082b4:	f7ff fade 	bl	8007874 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80082b8:	9901      	ldr	r1, [sp, #4]
 80082ba:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80082be:	f000 fd21 	bl	8008d04 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80082c2:	4620      	mov	r0, r4
 80082c4:	f7ff fc4a 	bl	8007b5c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80082c8:	f000 fc4a 	bl	8008b60 <xTaskResumeAll>
 80082cc:	b948      	cbnz	r0, 80082e2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 80082ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80082d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80082d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80082da:	f3bf 8f4f 	dsb	sy
 80082de:	f3bf 8f6f 	isb	sy
 80082e2:	2601      	movs	r6, #1
 80082e4:	e781      	b.n	80081ea <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 80082e6:	4620      	mov	r0, r4
 80082e8:	f7ff fc38 	bl	8007b5c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80082ec:	f000 fc38 	bl	8008b60 <xTaskResumeAll>
 80082f0:	e7f7      	b.n	80082e2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 80082f2:	4620      	mov	r0, r4
 80082f4:	f7ff fc32 	bl	8007b5c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80082f8:	f000 fc32 	bl	8008b60 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80082fc:	4620      	mov	r0, r4
 80082fe:	f7ff fbd9 	bl	8007ab4 <prvIsQueueEmpty>
 8008302:	2800      	cmp	r0, #0
 8008304:	d0ed      	beq.n	80082e2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008306:	b165      	cbz	r5, 8008322 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008308:	f7ff fa94 	bl	8007834 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800830c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800830e:	b119      	cbz	r1, 8008318 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008310:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008312:	6819      	ldr	r1, [r3, #0]
 8008314:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008318:	68a0      	ldr	r0, [r4, #8]
 800831a:	f000 fe49 	bl	8008fb0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800831e:	f7ff faa9 	bl	8007874 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008322:	2000      	movs	r0, #0
 8008324:	e780      	b.n	8008228 <xQueueSemaphoreTake+0x7c>

08008326 <xQueueReceiveFromISR>:
{
 8008326:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800832a:	4689      	mov	r9, r1
 800832c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800832e:	4604      	mov	r4, r0
 8008330:	b940      	cbnz	r0, 8008344 <xQueueReceiveFromISR+0x1e>
 8008332:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008336:	f383 8811 	msr	BASEPRI, r3
 800833a:	f3bf 8f6f 	isb	sy
 800833e:	f3bf 8f4f 	dsb	sy
 8008342:	e7fe      	b.n	8008342 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008344:	b951      	cbnz	r1, 800835c <xQueueReceiveFromISR+0x36>
 8008346:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008348:	b143      	cbz	r3, 800835c <xQueueReceiveFromISR+0x36>
 800834a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800834e:	f383 8811 	msr	BASEPRI, r3
 8008352:	f3bf 8f6f 	isb	sy
 8008356:	f3bf 8f4f 	dsb	sy
 800835a:	e7fe      	b.n	800835a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800835c:	f7ff fb7c 	bl	8007a58 <vPortValidateInterruptPriority>
	__asm volatile
 8008360:	f3ef 8711 	mrs	r7, BASEPRI
 8008364:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008368:	f383 8811 	msr	BASEPRI, r3
 800836c:	f3bf 8f6f 	isb	sy
 8008370:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008374:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008376:	b30d      	cbz	r5, 80083bc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008378:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800837c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800837e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008380:	4620      	mov	r0, r4
 8008382:	f7ff fbd5 	bl	8007b30 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008386:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8008388:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800838a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800838c:	d111      	bne.n	80083b2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800838e:	6923      	ldr	r3, [r4, #16]
 8008390:	b153      	cbz	r3, 80083a8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008392:	f104 0010 	add.w	r0, r4, #16
 8008396:	f000 fced 	bl	8008d74 <xTaskRemoveFromEventList>
 800839a:	b128      	cbz	r0, 80083a8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800839c:	f1b8 0f00 	cmp.w	r8, #0
 80083a0:	d002      	beq.n	80083a8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80083a2:	2301      	movs	r3, #1
 80083a4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80083a8:	2001      	movs	r0, #1
	__asm volatile
 80083aa:	f387 8811 	msr	BASEPRI, r7
}
 80083ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80083b2:	3601      	adds	r6, #1
 80083b4:	b276      	sxtb	r6, r6
 80083b6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80083ba:	e7f5      	b.n	80083a8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 80083bc:	4628      	mov	r0, r5
 80083be:	e7f4      	b.n	80083aa <xQueueReceiveFromISR+0x84>

080083c0 <uxQueueMessagesWaiting>:
{
 80083c0:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 80083c2:	4604      	mov	r4, r0
 80083c4:	b940      	cbnz	r0, 80083d8 <uxQueueMessagesWaiting+0x18>
	__asm volatile
 80083c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ca:	f383 8811 	msr	BASEPRI, r3
 80083ce:	f3bf 8f6f 	isb	sy
 80083d2:	f3bf 8f4f 	dsb	sy
 80083d6:	e7fe      	b.n	80083d6 <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 80083d8:	f7ff fa2c 	bl	8007834 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 80083dc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
	taskEXIT_CRITICAL();
 80083de:	f7ff fa49 	bl	8007874 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80083e2:	4620      	mov	r0, r4
 80083e4:	bd10      	pop	{r4, pc}

080083e6 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 80083e6:	b940      	cbnz	r0, 80083fa <uxQueueMessagesWaitingFromISR+0x14>
 80083e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ec:	f383 8811 	msr	BASEPRI, r3
 80083f0:	f3bf 8f6f 	isb	sy
 80083f4:	f3bf 8f4f 	dsb	sy
 80083f8:	e7fe      	b.n	80083f8 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 80083fa:	6b80      	ldr	r0, [r0, #56]	@ 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80083fc:	4770      	bx	lr
	...

08008400 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008400:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008402:	4a07      	ldr	r2, [pc, #28]	@ (8008420 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008404:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008406:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800840a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800840e:	b91d      	cbnz	r5, 8008418 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008410:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008414:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008416:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008418:	3301      	adds	r3, #1
 800841a:	2b08      	cmp	r3, #8
 800841c:	d1f3      	bne.n	8008406 <vQueueAddToRegistry+0x6>
 800841e:	e7fa      	b.n	8008416 <vQueueAddToRegistry+0x16>
 8008420:	20012c14 	.word	0x20012c14

08008424 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008424:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008426:	4a09      	ldr	r2, [pc, #36]	@ (800844c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008428:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800842a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800842e:	4281      	cmp	r1, r0
 8008430:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008434:	d106      	bne.n	8008444 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008436:	4a06      	ldr	r2, [pc, #24]	@ (8008450 <vQueueUnregisterQueue+0x2c>)
 8008438:	2100      	movs	r1, #0
 800843a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800843e:	4422      	add	r2, r4
 8008440:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008442:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008444:	3301      	adds	r3, #1
 8008446:	2b08      	cmp	r3, #8
 8008448:	d1ef      	bne.n	800842a <vQueueUnregisterQueue+0x6>
 800844a:	e7fa      	b.n	8008442 <vQueueUnregisterQueue+0x1e>
 800844c:	20012c18 	.word	0x20012c18
 8008450:	20012c14 	.word	0x20012c14

08008454 <vQueueDelete>:
{
 8008454:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008456:	b940      	cbnz	r0, 800846a <vQueueDelete+0x16>
 8008458:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800845c:	f383 8811 	msr	BASEPRI, r3
 8008460:	f3bf 8f6f 	isb	sy
 8008464:	f3bf 8f4f 	dsb	sy
 8008468:	e7fe      	b.n	8008468 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800846a:	f7ff ffdb 	bl	8008424 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800846e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008472:	b91b      	cbnz	r3, 800847c <vQueueDelete+0x28>
}
 8008474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008478:	f7ff b8f2 	b.w	8007660 <vPortFree>
}
 800847c:	bd10      	pop	{r4, pc}

0800847e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800847e:	b570      	push	{r4, r5, r6, lr}
 8008480:	4604      	mov	r4, r0
 8008482:	460d      	mov	r5, r1
 8008484:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008486:	f7ff f9d5 	bl	8007834 <vPortEnterCritical>
 800848a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800848e:	2bff      	cmp	r3, #255	@ 0xff
 8008490:	bf04      	itt	eq
 8008492:	2300      	moveq	r3, #0
 8008494:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008498:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800849c:	2bff      	cmp	r3, #255	@ 0xff
 800849e:	bf04      	itt	eq
 80084a0:	2300      	moveq	r3, #0
 80084a2:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 80084a6:	f7ff f9e5 	bl	8007874 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80084aa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80084ac:	b92b      	cbnz	r3, 80084ba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80084ae:	4632      	mov	r2, r6
 80084b0:	4629      	mov	r1, r5
 80084b2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80084b6:	f000 fc3f 	bl	8008d38 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80084ba:	4620      	mov	r0, r4
	}
 80084bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80084c0:	f7ff bb4c 	b.w	8007b5c <prvUnlockQueue>

080084c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80084c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80084c8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80084ca:	f7ff f9b3 	bl	8007834 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80084ce:	4b30      	ldr	r3, [pc, #192]	@ (8008590 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80084d0:	4e30      	ldr	r6, [pc, #192]	@ (8008594 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80084d2:	681a      	ldr	r2, [r3, #0]
 80084d4:	4f30      	ldr	r7, [pc, #192]	@ (8008598 <prvAddNewTaskToReadyList+0xd4>)
 80084d6:	3201      	adds	r2, #1
 80084d8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80084da:	6835      	ldr	r5, [r6, #0]
 80084dc:	2d00      	cmp	r5, #0
 80084de:	d14b      	bne.n	8008578 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80084e0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80084e2:	681b      	ldr	r3, [r3, #0]
 80084e4:	2b01      	cmp	r3, #1
 80084e6:	d11f      	bne.n	8008528 <prvAddNewTaskToReadyList+0x64>
 80084e8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80084ea:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80084ec:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80084ee:	f7ff f8f5 	bl	80076dc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80084f2:	2d38      	cmp	r5, #56	@ 0x38
 80084f4:	f108 0814 	add.w	r8, r8, #20
 80084f8:	d1f7      	bne.n	80084ea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80084fa:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 80085c0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80084fe:	4d27      	ldr	r5, [pc, #156]	@ (800859c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008500:	4640      	mov	r0, r8
 8008502:	f7ff f8eb 	bl	80076dc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008506:	4628      	mov	r0, r5
 8008508:	f7ff f8e8 	bl	80076dc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800850c:	4824      	ldr	r0, [pc, #144]	@ (80085a0 <prvAddNewTaskToReadyList+0xdc>)
 800850e:	f7ff f8e5 	bl	80076dc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008512:	4824      	ldr	r0, [pc, #144]	@ (80085a4 <prvAddNewTaskToReadyList+0xe0>)
 8008514:	f7ff f8e2 	bl	80076dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008518:	4823      	ldr	r0, [pc, #140]	@ (80085a8 <prvAddNewTaskToReadyList+0xe4>)
 800851a:	f7ff f8df 	bl	80076dc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800851e:	4b23      	ldr	r3, [pc, #140]	@ (80085ac <prvAddNewTaskToReadyList+0xe8>)
 8008520:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008524:	4b22      	ldr	r3, [pc, #136]	@ (80085b0 <prvAddNewTaskToReadyList+0xec>)
 8008526:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008528:	4a22      	ldr	r2, [pc, #136]	@ (80085b4 <prvAddNewTaskToReadyList+0xf0>)
 800852a:	6813      	ldr	r3, [r2, #0]
 800852c:	3301      	adds	r3, #1
 800852e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008530:	4a21      	ldr	r2, [pc, #132]	@ (80085b8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008532:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008534:	6811      	ldr	r1, [r2, #0]
 8008536:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008538:	2014      	movs	r0, #20
 800853a:	428b      	cmp	r3, r1
 800853c:	fb00 7003 	mla	r0, r0, r3, r7
 8008540:	f104 0104 	add.w	r1, r4, #4
 8008544:	bf88      	it	hi
 8008546:	6013      	strhi	r3, [r2, #0]
 8008548:	f7ff f8d6 	bl	80076f8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800854c:	f7ff f992 	bl	8007874 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008550:	4b1a      	ldr	r3, [pc, #104]	@ (80085bc <prvAddNewTaskToReadyList+0xf8>)
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	b173      	cbz	r3, 8008574 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008556:	6833      	ldr	r3, [r6, #0]
 8008558:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800855a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800855c:	429a      	cmp	r2, r3
 800855e:	d209      	bcs.n	8008574 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008560:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008564:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008568:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800856c:	f3bf 8f4f 	dsb	sy
 8008570:	f3bf 8f6f 	isb	sy
}
 8008574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008578:	4b10      	ldr	r3, [pc, #64]	@ (80085bc <prvAddNewTaskToReadyList+0xf8>)
 800857a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800857c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800857e:	2a00      	cmp	r2, #0
 8008580:	d1d2      	bne.n	8008528 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008582:	6832      	ldr	r2, [r6, #0]
 8008584:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008586:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008588:	bf98      	it	ls
 800858a:	6034      	strls	r4, [r6, #0]
 800858c:	e7cc      	b.n	8008528 <prvAddNewTaskToReadyList+0x64>
 800858e:	bf00      	nop
 8008590:	20012c78 	.word	0x20012c78
 8008594:	2001314c 	.word	0x2001314c
 8008598:	20012cec 	.word	0x20012cec
 800859c:	20012cc4 	.word	0x20012cc4
 80085a0:	20012ca8 	.word	0x20012ca8
 80085a4:	20012c94 	.word	0x20012c94
 80085a8:	20012c7c 	.word	0x20012c7c
 80085ac:	20012cc0 	.word	0x20012cc0
 80085b0:	20012cbc 	.word	0x20012cbc
 80085b4:	20012c5c 	.word	0x20012c5c
 80085b8:	20012c70 	.word	0x20012c70
 80085bc:	20012c6c 	.word	0x20012c6c
 80085c0:	20012cd8 	.word	0x20012cd8

080085c4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80085c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80085c6:	4b15      	ldr	r3, [pc, #84]	@ (800861c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80085c8:	4d15      	ldr	r5, [pc, #84]	@ (8008620 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80085ca:	681c      	ldr	r4, [r3, #0]
{
 80085cc:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80085ce:	6828      	ldr	r0, [r5, #0]
 80085d0:	3004      	adds	r0, #4
{
 80085d2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80085d4:	f7ff f8b2 	bl	800773c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80085d8:	1c73      	adds	r3, r6, #1
 80085da:	d107      	bne.n	80085ec <prvAddCurrentTaskToDelayedList+0x28>
 80085dc:	b137      	cbz	r7, 80085ec <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80085de:	6829      	ldr	r1, [r5, #0]
 80085e0:	4810      	ldr	r0, [pc, #64]	@ (8008624 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80085e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80085e6:	3104      	adds	r1, #4
 80085e8:	f7ff b886 	b.w	80076f8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80085ec:	682b      	ldr	r3, [r5, #0]
 80085ee:	19a4      	adds	r4, r4, r6
 80085f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80085f2:	d307      	bcc.n	8008604 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80085f4:	4b0c      	ldr	r3, [pc, #48]	@ (8008628 <prvAddCurrentTaskToDelayedList+0x64>)
 80085f6:	6818      	ldr	r0, [r3, #0]
 80085f8:	6829      	ldr	r1, [r5, #0]
}
 80085fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80085fe:	3104      	adds	r1, #4
 8008600:	f7ff b885 	b.w	800770e <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008604:	4b09      	ldr	r3, [pc, #36]	@ (800862c <prvAddCurrentTaskToDelayedList+0x68>)
 8008606:	6818      	ldr	r0, [r3, #0]
 8008608:	6829      	ldr	r1, [r5, #0]
 800860a:	3104      	adds	r1, #4
 800860c:	f7ff f87f 	bl	800770e <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008610:	4b07      	ldr	r3, [pc, #28]	@ (8008630 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008612:	681a      	ldr	r2, [r3, #0]
 8008614:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008616:	bf88      	it	hi
 8008618:	601c      	strhi	r4, [r3, #0]
}
 800861a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800861c:	20012c74 	.word	0x20012c74
 8008620:	2001314c 	.word	0x2001314c
 8008624:	20012c7c 	.word	0x20012c7c
 8008628:	20012cbc 	.word	0x20012cbc
 800862c:	20012cc0 	.word	0x20012cc0
 8008630:	20012c58 	.word	0x20012c58

08008634 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008634:	4a06      	ldr	r2, [pc, #24]	@ (8008650 <prvResetNextTaskUnblockTime+0x1c>)
 8008636:	6813      	ldr	r3, [r2, #0]
 8008638:	6819      	ldr	r1, [r3, #0]
 800863a:	4b06      	ldr	r3, [pc, #24]	@ (8008654 <prvResetNextTaskUnblockTime+0x20>)
 800863c:	b919      	cbnz	r1, 8008646 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800863e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008642:	601a      	str	r2, [r3, #0]
}
 8008644:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008646:	6812      	ldr	r2, [r2, #0]
 8008648:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800864a:	68d2      	ldr	r2, [r2, #12]
 800864c:	6852      	ldr	r2, [r2, #4]
 800864e:	e7f8      	b.n	8008642 <prvResetNextTaskUnblockTime+0xe>
 8008650:	20012cc0 	.word	0x20012cc0
 8008654:	20012c58 	.word	0x20012c58

08008658 <prvDeleteTCB>:
	{
 8008658:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800865a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800865e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008660:	b93b      	cbnz	r3, 8008672 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008662:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008664:	f7fe fffc 	bl	8007660 <vPortFree>
				vPortFree( pxTCB );
 8008668:	4620      	mov	r0, r4
	}
 800866a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800866e:	f7fe bff7 	b.w	8007660 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008672:	2b01      	cmp	r3, #1
 8008674:	d0f9      	beq.n	800866a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008676:	2b02      	cmp	r3, #2
 8008678:	d008      	beq.n	800868c <prvDeleteTCB+0x34>
 800867a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800867e:	f383 8811 	msr	BASEPRI, r3
 8008682:	f3bf 8f6f 	isb	sy
 8008686:	f3bf 8f4f 	dsb	sy
 800868a:	e7fe      	b.n	800868a <prvDeleteTCB+0x32>
	}
 800868c:	bd10      	pop	{r4, pc}
	...

08008690 <prvIdleTask>:
{
 8008690:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008692:	4c13      	ldr	r4, [pc, #76]	@ (80086e0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008694:	4f13      	ldr	r7, [pc, #76]	@ (80086e4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008696:	4d14      	ldr	r5, [pc, #80]	@ (80086e8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008698:	6823      	ldr	r3, [r4, #0]
 800869a:	b973      	cbnz	r3, 80086ba <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800869c:	4b13      	ldr	r3, [pc, #76]	@ (80086ec <prvIdleTask+0x5c>)
 800869e:	681b      	ldr	r3, [r3, #0]
 80086a0:	2b01      	cmp	r3, #1
 80086a2:	d9f8      	bls.n	8008696 <prvIdleTask+0x6>
				taskYIELD();
 80086a4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80086a8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80086ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80086b0:	f3bf 8f4f 	dsb	sy
 80086b4:	f3bf 8f6f 	isb	sy
 80086b8:	e7ed      	b.n	8008696 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80086ba:	f7ff f8bb 	bl	8007834 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086be:	68fb      	ldr	r3, [r7, #12]
 80086c0:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80086c2:	1d30      	adds	r0, r6, #4
 80086c4:	f7ff f83a 	bl	800773c <uxListRemove>
				--uxCurrentNumberOfTasks;
 80086c8:	682b      	ldr	r3, [r5, #0]
 80086ca:	3b01      	subs	r3, #1
 80086cc:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80086ce:	6823      	ldr	r3, [r4, #0]
 80086d0:	3b01      	subs	r3, #1
 80086d2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80086d4:	f7ff f8ce 	bl	8007874 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80086d8:	4630      	mov	r0, r6
 80086da:	f7ff ffbd 	bl	8008658 <prvDeleteTCB>
 80086de:	e7db      	b.n	8008698 <prvIdleTask+0x8>
 80086e0:	20012c90 	.word	0x20012c90
 80086e4:	20012c94 	.word	0x20012c94
 80086e8:	20012c78 	.word	0x20012c78
 80086ec:	20012cec 	.word	0x20012cec

080086f0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80086f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086f4:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80086f8:	0096      	lsls	r6, r2, #2
 80086fa:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80086fc:	4607      	mov	r7, r0
 80086fe:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008700:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8008702:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008704:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008706:	f015 f9f4 	bl	801daf2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800870a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800870c:	3e04      	subs	r6, #4
 800870e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008710:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8008714:	b3b5      	cbz	r5, 8008784 <prvInitialiseNewTask.constprop.0+0x94>
 8008716:	1e6b      	subs	r3, r5, #1
 8008718:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800871c:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800871e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008722:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8008726:	b109      	cbz	r1, 800872c <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008728:	42ab      	cmp	r3, r5
 800872a:	d1f8      	bne.n	800871e <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800872c:	2300      	movs	r3, #0
 800872e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008732:	9d08      	ldr	r5, [sp, #32]
 8008734:	2d37      	cmp	r5, #55	@ 0x37
 8008736:	bf28      	it	cs
 8008738:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800873a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800873e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008740:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008742:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008744:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008748:	f7fe ffd3 	bl	80076f2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800874c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008750:	f104 0018 	add.w	r0, r4, #24
 8008754:	f7fe ffcd 	bl	80076f2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008758:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800875c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800875e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008760:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008762:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008766:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800876a:	4642      	mov	r2, r8
 800876c:	4639      	mov	r1, r7
 800876e:	4630      	mov	r0, r6
 8008770:	f7ff f832 	bl	80077d8 <pxPortInitialiseStack>
 8008774:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008776:	f1b9 0f00 	cmp.w	r9, #0
 800877a:	d001      	beq.n	8008780 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800877c:	f8c9 4000 	str.w	r4, [r9]
}
 8008780:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008784:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008788:	e7d3      	b.n	8008732 <prvInitialiseNewTask.constprop.0+0x42>

0800878a <xTaskCreateStatic>:
	{
 800878a:	b570      	push	{r4, r5, r6, lr}
 800878c:	b086      	sub	sp, #24
 800878e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008792:	b945      	cbnz	r5, 80087a6 <xTaskCreateStatic+0x1c>
 8008794:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008798:	f383 8811 	msr	BASEPRI, r3
 800879c:	f3bf 8f6f 	isb	sy
 80087a0:	f3bf 8f4f 	dsb	sy
 80087a4:	e7fe      	b.n	80087a4 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80087a6:	b944      	cbnz	r4, 80087ba <xTaskCreateStatic+0x30>
 80087a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087ac:	f383 8811 	msr	BASEPRI, r3
 80087b0:	f3bf 8f6f 	isb	sy
 80087b4:	f3bf 8f4f 	dsb	sy
 80087b8:	e7fe      	b.n	80087b8 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80087ba:	2660      	movs	r6, #96	@ 0x60
 80087bc:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80087be:	9e05      	ldr	r6, [sp, #20]
 80087c0:	2e60      	cmp	r6, #96	@ 0x60
 80087c2:	d008      	beq.n	80087d6 <xTaskCreateStatic+0x4c>
 80087c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087c8:	f383 8811 	msr	BASEPRI, r3
 80087cc:	f3bf 8f6f 	isb	sy
 80087d0:	f3bf 8f4f 	dsb	sy
 80087d4:	e7fe      	b.n	80087d4 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80087d6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80087d8:	2502      	movs	r5, #2
 80087da:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80087de:	ad04      	add	r5, sp, #16
 80087e0:	9501      	str	r5, [sp, #4]
 80087e2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80087e4:	9402      	str	r4, [sp, #8]
 80087e6:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80087e8:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80087ea:	f7ff ff81 	bl	80086f0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80087ee:	4620      	mov	r0, r4
 80087f0:	f7ff fe68 	bl	80084c4 <prvAddNewTaskToReadyList>
	}
 80087f4:	9804      	ldr	r0, [sp, #16]
 80087f6:	b006      	add	sp, #24
 80087f8:	bd70      	pop	{r4, r5, r6, pc}

080087fa <xTaskCreate>:
	{
 80087fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80087fe:	4607      	mov	r7, r0
 8008800:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008802:	0090      	lsls	r0, r2, #2
	{
 8008804:	4688      	mov	r8, r1
 8008806:	4616      	mov	r6, r2
 8008808:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800880a:	f7fe fe91 	bl	8007530 <pvPortMalloc>
			if( pxStack != NULL )
 800880e:	4605      	mov	r5, r0
 8008810:	b920      	cbnz	r0, 800881c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008812:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008816:	b005      	add	sp, #20
 8008818:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800881c:	2060      	movs	r0, #96	@ 0x60
 800881e:	f7fe fe87 	bl	8007530 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008822:	4604      	mov	r4, r0
 8008824:	b198      	cbz	r0, 800884e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008826:	2300      	movs	r3, #0
 8008828:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800882c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800882e:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008830:	9301      	str	r3, [sp, #4]
 8008832:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008834:	9002      	str	r0, [sp, #8]
 8008836:	9300      	str	r3, [sp, #0]
 8008838:	4632      	mov	r2, r6
 800883a:	464b      	mov	r3, r9
 800883c:	4641      	mov	r1, r8
 800883e:	4638      	mov	r0, r7
 8008840:	f7ff ff56 	bl	80086f0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008844:	4620      	mov	r0, r4
 8008846:	f7ff fe3d 	bl	80084c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800884a:	2001      	movs	r0, #1
 800884c:	e7e3      	b.n	8008816 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800884e:	4628      	mov	r0, r5
 8008850:	f7fe ff06 	bl	8007660 <vPortFree>
		if( pxNewTCB != NULL )
 8008854:	e7dd      	b.n	8008812 <xTaskCreate+0x18>
	...

08008858 <vTaskDelete>:
	{
 8008858:	b570      	push	{r4, r5, r6, lr}
 800885a:	4604      	mov	r4, r0
 800885c:	4d23      	ldr	r5, [pc, #140]	@ (80088ec <vTaskDelete+0x94>)
		taskENTER_CRITICAL();
 800885e:	f7fe ffe9 	bl	8007834 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 8008862:	b904      	cbnz	r4, 8008866 <vTaskDelete+0xe>
 8008864:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008866:	1d26      	adds	r6, r4, #4
 8008868:	4630      	mov	r0, r6
 800886a:	f7fe ff67 	bl	800773c <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800886e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008870:	b11b      	cbz	r3, 800887a <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008872:	f104 0018 	add.w	r0, r4, #24
 8008876:	f7fe ff61 	bl	800773c <uxListRemove>
			uxTaskNumber++;
 800887a:	4a1d      	ldr	r2, [pc, #116]	@ (80088f0 <vTaskDelete+0x98>)
 800887c:	6813      	ldr	r3, [r2, #0]
 800887e:	3301      	adds	r3, #1
 8008880:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
 8008882:	682b      	ldr	r3, [r5, #0]
 8008884:	42a3      	cmp	r3, r4
 8008886:	d11b      	bne.n	80088c0 <vTaskDelete+0x68>
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 8008888:	481a      	ldr	r0, [pc, #104]	@ (80088f4 <vTaskDelete+0x9c>)
 800888a:	4631      	mov	r1, r6
 800888c:	f7fe ff34 	bl	80076f8 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
 8008890:	4a19      	ldr	r2, [pc, #100]	@ (80088f8 <vTaskDelete+0xa0>)
 8008892:	6813      	ldr	r3, [r2, #0]
 8008894:	3301      	adds	r3, #1
 8008896:	6013      	str	r3, [r2, #0]
		taskEXIT_CRITICAL();
 8008898:	f7fe ffec 	bl	8007874 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 800889c:	4b17      	ldr	r3, [pc, #92]	@ (80088fc <vTaskDelete+0xa4>)
 800889e:	681b      	ldr	r3, [r3, #0]
 80088a0:	b313      	cbz	r3, 80088e8 <vTaskDelete+0x90>
			if( pxTCB == pxCurrentTCB )
 80088a2:	682b      	ldr	r3, [r5, #0]
 80088a4:	42a3      	cmp	r3, r4
 80088a6:	d11f      	bne.n	80088e8 <vTaskDelete+0x90>
				configASSERT( uxSchedulerSuspended == 0 );
 80088a8:	4b15      	ldr	r3, [pc, #84]	@ (8008900 <vTaskDelete+0xa8>)
 80088aa:	681b      	ldr	r3, [r3, #0]
 80088ac:	b193      	cbz	r3, 80088d4 <vTaskDelete+0x7c>
 80088ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088b2:	f383 8811 	msr	BASEPRI, r3
 80088b6:	f3bf 8f6f 	isb	sy
 80088ba:	f3bf 8f4f 	dsb	sy
 80088be:	e7fe      	b.n	80088be <vTaskDelete+0x66>
				--uxCurrentNumberOfTasks;
 80088c0:	4a10      	ldr	r2, [pc, #64]	@ (8008904 <vTaskDelete+0xac>)
 80088c2:	6813      	ldr	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 80088c4:	4620      	mov	r0, r4
				--uxCurrentNumberOfTasks;
 80088c6:	3b01      	subs	r3, #1
 80088c8:	6013      	str	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 80088ca:	f7ff fec5 	bl	8008658 <prvDeleteTCB>
				prvResetNextTaskUnblockTime();
 80088ce:	f7ff feb1 	bl	8008634 <prvResetNextTaskUnblockTime>
 80088d2:	e7e1      	b.n	8008898 <vTaskDelete+0x40>
				portYIELD_WITHIN_API();
 80088d4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80088d8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80088dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80088e0:	f3bf 8f4f 	dsb	sy
 80088e4:	f3bf 8f6f 	isb	sy
	}
 80088e8:	bd70      	pop	{r4, r5, r6, pc}
 80088ea:	bf00      	nop
 80088ec:	2001314c 	.word	0x2001314c
 80088f0:	20012c5c 	.word	0x20012c5c
 80088f4:	20012c94 	.word	0x20012c94
 80088f8:	20012c90 	.word	0x20012c90
 80088fc:	20012c6c 	.word	0x20012c6c
 8008900:	20012c54 	.word	0x20012c54
 8008904:	20012c78 	.word	0x20012c78

08008908 <eTaskGetState>:
	{
 8008908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
 800890a:	4604      	mov	r4, r0
 800890c:	b940      	cbnz	r0, 8008920 <eTaskGetState+0x18>
 800890e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008912:	f383 8811 	msr	BASEPRI, r3
 8008916:	f3bf 8f6f 	isb	sy
 800891a:	f3bf 8f4f 	dsb	sy
 800891e:	e7fe      	b.n	800891e <eTaskGetState+0x16>
		if( pxTCB == pxCurrentTCB )
 8008920:	4b15      	ldr	r3, [pc, #84]	@ (8008978 <eTaskGetState+0x70>)
 8008922:	681b      	ldr	r3, [r3, #0]
 8008924:	4283      	cmp	r3, r0
 8008926:	d020      	beq.n	800896a <eTaskGetState+0x62>
			taskENTER_CRITICAL();
 8008928:	f7fe ff84 	bl	8007834 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
 800892c:	4b13      	ldr	r3, [pc, #76]	@ (800897c <eTaskGetState+0x74>)
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 800892e:	6965      	ldr	r5, [r4, #20]
				pxDelayedList = pxDelayedTaskList;
 8008930:	681f      	ldr	r7, [r3, #0]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 8008932:	4b13      	ldr	r3, [pc, #76]	@ (8008980 <eTaskGetState+0x78>)
 8008934:	681e      	ldr	r6, [r3, #0]
			taskEXIT_CRITICAL();
 8008936:	f7fe ff9d 	bl	8007874 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 800893a:	42bd      	cmp	r5, r7
 800893c:	d017      	beq.n	800896e <eTaskGetState+0x66>
 800893e:	42b5      	cmp	r5, r6
 8008940:	d015      	beq.n	800896e <eTaskGetState+0x66>
				else if( pxStateList == &xSuspendedTaskList )
 8008942:	4b10      	ldr	r3, [pc, #64]	@ (8008984 <eTaskGetState+0x7c>)
 8008944:	429d      	cmp	r5, r3
 8008946:	d108      	bne.n	800895a <eTaskGetState+0x52>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 8008948:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800894a:	b983      	cbnz	r3, 800896e <eTaskGetState+0x66>
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 800894c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
								eReturn = eSuspended;
 8008950:	2b01      	cmp	r3, #1
 8008952:	bf0c      	ite	eq
 8008954:	2002      	moveq	r0, #2
 8008956:	2003      	movne	r0, #3
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8008958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 800895a:	4b0b      	ldr	r3, [pc, #44]	@ (8008988 <eTaskGetState+0x80>)
 800895c:	429d      	cmp	r5, r3
 800895e:	d008      	beq.n	8008972 <eTaskGetState+0x6a>
				eReturn = eReady;
 8008960:	2d00      	cmp	r5, #0
 8008962:	bf0c      	ite	eq
 8008964:	2004      	moveq	r0, #4
 8008966:	2001      	movne	r0, #1
 8008968:	e7f6      	b.n	8008958 <eTaskGetState+0x50>
			eReturn = eRunning;
 800896a:	2000      	movs	r0, #0
 800896c:	e7f4      	b.n	8008958 <eTaskGetState+0x50>
				eReturn = eBlocked;
 800896e:	2002      	movs	r0, #2
 8008970:	e7f2      	b.n	8008958 <eTaskGetState+0x50>
					eReturn = eDeleted;
 8008972:	2004      	movs	r0, #4
 8008974:	e7f0      	b.n	8008958 <eTaskGetState+0x50>
 8008976:	bf00      	nop
 8008978:	2001314c 	.word	0x2001314c
 800897c:	20012cc0 	.word	0x20012cc0
 8008980:	20012cbc 	.word	0x20012cbc
 8008984:	20012c7c 	.word	0x20012c7c
 8008988:	20012c94 	.word	0x20012c94

0800898c <vTaskStartScheduler>:
{
 800898c:	b510      	push	{r4, lr}
 800898e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008990:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008992:	aa07      	add	r2, sp, #28
 8008994:	a906      	add	r1, sp, #24
 8008996:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008998:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800899c:	f7fe fd8a 	bl	80074b4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80089a0:	9b05      	ldr	r3, [sp, #20]
 80089a2:	9302      	str	r3, [sp, #8]
 80089a4:	9b06      	ldr	r3, [sp, #24]
 80089a6:	9a07      	ldr	r2, [sp, #28]
 80089a8:	4916      	ldr	r1, [pc, #88]	@ (8008a04 <vTaskStartScheduler+0x78>)
 80089aa:	4817      	ldr	r0, [pc, #92]	@ (8008a08 <vTaskStartScheduler+0x7c>)
 80089ac:	e9cd 4300 	strd	r4, r3, [sp]
 80089b0:	4623      	mov	r3, r4
 80089b2:	f7ff feea 	bl	800878a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80089b6:	b318      	cbz	r0, 8008a00 <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 80089b8:	f000 fba6 	bl	8009108 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80089bc:	2801      	cmp	r0, #1
 80089be:	d114      	bne.n	80089ea <vTaskStartScheduler+0x5e>
 80089c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089c4:	f383 8811 	msr	BASEPRI, r3
 80089c8:	f3bf 8f6f 	isb	sy
 80089cc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 80089d0:	4b0e      	ldr	r3, [pc, #56]	@ (8008a0c <vTaskStartScheduler+0x80>)
 80089d2:	f04f 32ff 	mov.w	r2, #4294967295
 80089d6:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80089d8:	4b0d      	ldr	r3, [pc, #52]	@ (8008a10 <vTaskStartScheduler+0x84>)
 80089da:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80089dc:	4b0d      	ldr	r3, [pc, #52]	@ (8008a14 <vTaskStartScheduler+0x88>)
 80089de:	601c      	str	r4, [r3, #0]
}
 80089e0:	b008      	add	sp, #32
 80089e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80089e6:	f7fe bfb5 	b.w	8007954 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80089ea:	3001      	adds	r0, #1
 80089ec:	d108      	bne.n	8008a00 <vTaskStartScheduler+0x74>
 80089ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089f2:	f383 8811 	msr	BASEPRI, r3
 80089f6:	f3bf 8f6f 	isb	sy
 80089fa:	f3bf 8f4f 	dsb	sy
 80089fe:	e7fe      	b.n	80089fe <vTaskStartScheduler+0x72>
}
 8008a00:	b008      	add	sp, #32
 8008a02:	bd10      	pop	{r4, pc}
 8008a04:	0801f38b 	.word	0x0801f38b
 8008a08:	08008691 	.word	0x08008691
 8008a0c:	20012c58 	.word	0x20012c58
 8008a10:	20012c6c 	.word	0x20012c6c
 8008a14:	20012c74 	.word	0x20012c74

08008a18 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008a18:	4a02      	ldr	r2, [pc, #8]	@ (8008a24 <vTaskSuspendAll+0xc>)
 8008a1a:	6813      	ldr	r3, [r2, #0]
 8008a1c:	3301      	adds	r3, #1
 8008a1e:	6013      	str	r3, [r2, #0]
}
 8008a20:	4770      	bx	lr
 8008a22:	bf00      	nop
 8008a24:	20012c54 	.word	0x20012c54

08008a28 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008a28:	4b01      	ldr	r3, [pc, #4]	@ (8008a30 <xTaskGetTickCount+0x8>)
 8008a2a:	6818      	ldr	r0, [r3, #0]
}
 8008a2c:	4770      	bx	lr
 8008a2e:	bf00      	nop
 8008a30:	20012c74 	.word	0x20012c74

08008a34 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a34:	4b3f      	ldr	r3, [pc, #252]	@ (8008b34 <xTaskIncrementTick+0x100>)
 8008a36:	681b      	ldr	r3, [r3, #0]
{
 8008a38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a3c:	2b00      	cmp	r3, #0
 8008a3e:	d172      	bne.n	8008b26 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008a40:	4b3d      	ldr	r3, [pc, #244]	@ (8008b38 <xTaskIncrementTick+0x104>)
 8008a42:	681c      	ldr	r4, [r3, #0]
 8008a44:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008a46:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008a48:	b9bc      	cbnz	r4, 8008a7a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008a4a:	4b3c      	ldr	r3, [pc, #240]	@ (8008b3c <xTaskIncrementTick+0x108>)
 8008a4c:	681a      	ldr	r2, [r3, #0]
 8008a4e:	6812      	ldr	r2, [r2, #0]
 8008a50:	b142      	cbz	r2, 8008a64 <xTaskIncrementTick+0x30>
 8008a52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a56:	f383 8811 	msr	BASEPRI, r3
 8008a5a:	f3bf 8f6f 	isb	sy
 8008a5e:	f3bf 8f4f 	dsb	sy
 8008a62:	e7fe      	b.n	8008a62 <xTaskIncrementTick+0x2e>
 8008a64:	4a36      	ldr	r2, [pc, #216]	@ (8008b40 <xTaskIncrementTick+0x10c>)
 8008a66:	6819      	ldr	r1, [r3, #0]
 8008a68:	6810      	ldr	r0, [r2, #0]
 8008a6a:	6018      	str	r0, [r3, #0]
 8008a6c:	6011      	str	r1, [r2, #0]
 8008a6e:	4a35      	ldr	r2, [pc, #212]	@ (8008b44 <xTaskIncrementTick+0x110>)
 8008a70:	6813      	ldr	r3, [r2, #0]
 8008a72:	3301      	adds	r3, #1
 8008a74:	6013      	str	r3, [r2, #0]
 8008a76:	f7ff fddd 	bl	8008634 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a7a:	4d33      	ldr	r5, [pc, #204]	@ (8008b48 <xTaskIncrementTick+0x114>)
 8008a7c:	4e33      	ldr	r6, [pc, #204]	@ (8008b4c <xTaskIncrementTick+0x118>)
 8008a7e:	682b      	ldr	r3, [r5, #0]
 8008a80:	4f33      	ldr	r7, [pc, #204]	@ (8008b50 <xTaskIncrementTick+0x11c>)
 8008a82:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008a84:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a88:	d212      	bcs.n	8008ab0 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008a8a:	683a      	ldr	r2, [r7, #0]
 8008a8c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008a8e:	2114      	movs	r1, #20
 8008a90:	434a      	muls	r2, r1
 8008a92:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008a94:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008a96:	4a2f      	ldr	r2, [pc, #188]	@ (8008b54 <xTaskIncrementTick+0x120>)
 8008a98:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008a9a:	bf28      	it	cs
 8008a9c:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008aa0:	2a00      	cmp	r2, #0
 8008aa2:	bf18      	it	ne
 8008aa4:	f04f 0b01 	movne.w	fp, #1
}
 8008aa8:	4658      	mov	r0, fp
 8008aaa:	b003      	add	sp, #12
 8008aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008ab0:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008b3c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008ab4:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008b5c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008ab8:	f8d9 2000 	ldr.w	r2, [r9]
 8008abc:	6812      	ldr	r2, [r2, #0]
 8008abe:	b91a      	cbnz	r2, 8008ac8 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008ac0:	f04f 32ff 	mov.w	r2, #4294967295
 8008ac4:	602a      	str	r2, [r5, #0]
					break;
 8008ac6:	e7e0      	b.n	8008a8a <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ac8:	f8d9 2000 	ldr.w	r2, [r9]
 8008acc:	68d2      	ldr	r2, [r2, #12]
 8008ace:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008ad2:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008ad6:	428c      	cmp	r4, r1
 8008ad8:	d201      	bcs.n	8008ade <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008ada:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008adc:	e7d5      	b.n	8008a8a <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008ade:	f108 0304 	add.w	r3, r8, #4
 8008ae2:	4618      	mov	r0, r3
 8008ae4:	9301      	str	r3, [sp, #4]
 8008ae6:	f7fe fe29 	bl	800773c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008aea:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008aee:	b119      	cbz	r1, 8008af8 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008af0:	f108 0018 	add.w	r0, r8, #24
 8008af4:	f7fe fe22 	bl	800773c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008af8:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008afc:	f8da 1000 	ldr.w	r1, [sl]
 8008b00:	2314      	movs	r3, #20
 8008b02:	4288      	cmp	r0, r1
 8008b04:	bf88      	it	hi
 8008b06:	f8ca 0000 	strhi.w	r0, [sl]
 8008b0a:	9901      	ldr	r1, [sp, #4]
 8008b0c:	fb03 6000 	mla	r0, r3, r0, r6
 8008b10:	f7fe fdf2 	bl	80076f8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008b14:	6838      	ldr	r0, [r7, #0]
 8008b16:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008b1a:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008b1c:	4291      	cmp	r1, r2
 8008b1e:	bf28      	it	cs
 8008b20:	f04f 0b01 	movcs.w	fp, #1
 8008b24:	e7c8      	b.n	8008ab8 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008b26:	4a0c      	ldr	r2, [pc, #48]	@ (8008b58 <xTaskIncrementTick+0x124>)
 8008b28:	6813      	ldr	r3, [r2, #0]
 8008b2a:	3301      	adds	r3, #1
 8008b2c:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008b2e:	f04f 0b00 	mov.w	fp, #0
 8008b32:	e7b9      	b.n	8008aa8 <xTaskIncrementTick+0x74>
 8008b34:	20012c54 	.word	0x20012c54
 8008b38:	20012c74 	.word	0x20012c74
 8008b3c:	20012cc0 	.word	0x20012cc0
 8008b40:	20012cbc 	.word	0x20012cbc
 8008b44:	20012c60 	.word	0x20012c60
 8008b48:	20012c58 	.word	0x20012c58
 8008b4c:	20012cec 	.word	0x20012cec
 8008b50:	2001314c 	.word	0x2001314c
 8008b54:	20012c64 	.word	0x20012c64
 8008b58:	20012c68 	.word	0x20012c68
 8008b5c:	20012c70 	.word	0x20012c70

08008b60 <xTaskResumeAll>:
{
 8008b60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008b64:	4c30      	ldr	r4, [pc, #192]	@ (8008c28 <xTaskResumeAll+0xc8>)
 8008b66:	6823      	ldr	r3, [r4, #0]
 8008b68:	b943      	cbnz	r3, 8008b7c <xTaskResumeAll+0x1c>
 8008b6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b6e:	f383 8811 	msr	BASEPRI, r3
 8008b72:	f3bf 8f6f 	isb	sy
 8008b76:	f3bf 8f4f 	dsb	sy
 8008b7a:	e7fe      	b.n	8008b7a <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008b7c:	f7fe fe5a 	bl	8007834 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008b80:	6823      	ldr	r3, [r4, #0]
 8008b82:	3b01      	subs	r3, #1
 8008b84:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b86:	6824      	ldr	r4, [r4, #0]
 8008b88:	b12c      	cbz	r4, 8008b96 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008b8a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008b8c:	f7fe fe72 	bl	8007874 <vPortExitCritical>
}
 8008b90:	4620      	mov	r0, r4
 8008b92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008b96:	4b25      	ldr	r3, [pc, #148]	@ (8008c2c <xTaskResumeAll+0xcc>)
 8008b98:	681b      	ldr	r3, [r3, #0]
 8008b9a:	2b00      	cmp	r3, #0
 8008b9c:	d0f5      	beq.n	8008b8a <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008b9e:	4d24      	ldr	r5, [pc, #144]	@ (8008c30 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008ba0:	4e24      	ldr	r6, [pc, #144]	@ (8008c34 <xTaskResumeAll+0xd4>)
 8008ba2:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008c44 <xTaskResumeAll+0xe4>
 8008ba6:	e01d      	b.n	8008be4 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ba8:	68eb      	ldr	r3, [r5, #12]
 8008baa:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008bac:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008bae:	f104 0018 	add.w	r0, r4, #24
 8008bb2:	f7fe fdc3 	bl	800773c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008bb6:	4638      	mov	r0, r7
 8008bb8:	f7fe fdc0 	bl	800773c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008bbc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008bbe:	6832      	ldr	r2, [r6, #0]
 8008bc0:	2014      	movs	r0, #20
 8008bc2:	4293      	cmp	r3, r2
 8008bc4:	fb00 8003 	mla	r0, r0, r3, r8
 8008bc8:	4639      	mov	r1, r7
 8008bca:	bf88      	it	hi
 8008bcc:	6033      	strhi	r3, [r6, #0]
 8008bce:	f7fe fd93 	bl	80076f8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008bd2:	4b19      	ldr	r3, [pc, #100]	@ (8008c38 <xTaskResumeAll+0xd8>)
 8008bd4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008bda:	429a      	cmp	r2, r3
 8008bdc:	d302      	bcc.n	8008be4 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008bde:	4b17      	ldr	r3, [pc, #92]	@ (8008c3c <xTaskResumeAll+0xdc>)
 8008be0:	2201      	movs	r2, #1
 8008be2:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008be4:	682b      	ldr	r3, [r5, #0]
 8008be6:	2b00      	cmp	r3, #0
 8008be8:	d1de      	bne.n	8008ba8 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008bea:	b10c      	cbz	r4, 8008bf0 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008bec:	f7ff fd22 	bl	8008634 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008bf0:	4d13      	ldr	r5, [pc, #76]	@ (8008c40 <xTaskResumeAll+0xe0>)
 8008bf2:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008bf4:	b144      	cbz	r4, 8008c08 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008bf6:	4e11      	ldr	r6, [pc, #68]	@ (8008c3c <xTaskResumeAll+0xdc>)
 8008bf8:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008bfa:	f7ff ff1b 	bl	8008a34 <xTaskIncrementTick>
 8008bfe:	b100      	cbz	r0, 8008c02 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008c00:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008c02:	3c01      	subs	r4, #1
 8008c04:	d1f9      	bne.n	8008bfa <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008c06:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008c08:	4b0c      	ldr	r3, [pc, #48]	@ (8008c3c <xTaskResumeAll+0xdc>)
 8008c0a:	681b      	ldr	r3, [r3, #0]
 8008c0c:	2b00      	cmp	r3, #0
 8008c0e:	d0bc      	beq.n	8008b8a <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008c10:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c14:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c18:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c1c:	f3bf 8f4f 	dsb	sy
 8008c20:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008c24:	2401      	movs	r4, #1
 8008c26:	e7b1      	b.n	8008b8c <xTaskResumeAll+0x2c>
 8008c28:	20012c54 	.word	0x20012c54
 8008c2c:	20012c78 	.word	0x20012c78
 8008c30:	20012ca8 	.word	0x20012ca8
 8008c34:	20012c70 	.word	0x20012c70
 8008c38:	2001314c 	.word	0x2001314c
 8008c3c:	20012c64 	.word	0x20012c64
 8008c40:	20012c68 	.word	0x20012c68
 8008c44:	20012cec 	.word	0x20012cec

08008c48 <vTaskDelay>:
	{
 8008c48:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008c4a:	b950      	cbnz	r0, 8008c62 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008c4c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c50:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c54:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c58:	f3bf 8f4f 	dsb	sy
 8008c5c:	f3bf 8f6f 	isb	sy
	}
 8008c60:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008c62:	4b0a      	ldr	r3, [pc, #40]	@ (8008c8c <vTaskDelay+0x44>)
 8008c64:	6819      	ldr	r1, [r3, #0]
 8008c66:	b141      	cbz	r1, 8008c7a <vTaskDelay+0x32>
 8008c68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c6c:	f383 8811 	msr	BASEPRI, r3
 8008c70:	f3bf 8f6f 	isb	sy
 8008c74:	f3bf 8f4f 	dsb	sy
 8008c78:	e7fe      	b.n	8008c78 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008c7a:	f7ff fecd 	bl	8008a18 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008c7e:	f7ff fca1 	bl	80085c4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008c82:	f7ff ff6d 	bl	8008b60 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008c86:	2800      	cmp	r0, #0
 8008c88:	d0e0      	beq.n	8008c4c <vTaskDelay+0x4>
 8008c8a:	e7e9      	b.n	8008c60 <vTaskDelay+0x18>
 8008c8c:	20012c54 	.word	0x20012c54

08008c90 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008c90:	4b17      	ldr	r3, [pc, #92]	@ (8008cf0 <vTaskSwitchContext+0x60>)
 8008c92:	681a      	ldr	r2, [r3, #0]
 8008c94:	4b17      	ldr	r3, [pc, #92]	@ (8008cf4 <vTaskSwitchContext+0x64>)
{
 8008c96:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008c98:	b112      	cbz	r2, 8008ca0 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008c9a:	2201      	movs	r2, #1
 8008c9c:	601a      	str	r2, [r3, #0]
}
 8008c9e:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ca0:	4d15      	ldr	r5, [pc, #84]	@ (8008cf8 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8008ca2:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ca4:	682a      	ldr	r2, [r5, #0]
 8008ca6:	4915      	ldr	r1, [pc, #84]	@ (8008cfc <vTaskSwitchContext+0x6c>)
 8008ca8:	2614      	movs	r6, #20
 8008caa:	fb06 f302 	mul.w	r3, r6, r2
 8008cae:	18c8      	adds	r0, r1, r3
 8008cb0:	58cc      	ldr	r4, [r1, r3]
 8008cb2:	b18c      	cbz	r4, 8008cd8 <vTaskSwitchContext+0x48>
 8008cb4:	6844      	ldr	r4, [r0, #4]
 8008cb6:	3308      	adds	r3, #8
 8008cb8:	6864      	ldr	r4, [r4, #4]
 8008cba:	6044      	str	r4, [r0, #4]
 8008cbc:	440b      	add	r3, r1
 8008cbe:	429c      	cmp	r4, r3
 8008cc0:	bf04      	itt	eq
 8008cc2:	6863      	ldreq	r3, [r4, #4]
 8008cc4:	6043      	streq	r3, [r0, #4]
 8008cc6:	2314      	movs	r3, #20
 8008cc8:	fb03 1102 	mla	r1, r3, r2, r1
 8008ccc:	684b      	ldr	r3, [r1, #4]
 8008cce:	68d9      	ldr	r1, [r3, #12]
 8008cd0:	4b0b      	ldr	r3, [pc, #44]	@ (8008d00 <vTaskSwitchContext+0x70>)
 8008cd2:	6019      	str	r1, [r3, #0]
 8008cd4:	602a      	str	r2, [r5, #0]
}
 8008cd6:	e7e2      	b.n	8008c9e <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008cd8:	b942      	cbnz	r2, 8008cec <vTaskSwitchContext+0x5c>
 8008cda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cde:	f383 8811 	msr	BASEPRI, r3
 8008ce2:	f3bf 8f6f 	isb	sy
 8008ce6:	f3bf 8f4f 	dsb	sy
 8008cea:	e7fe      	b.n	8008cea <vTaskSwitchContext+0x5a>
 8008cec:	3a01      	subs	r2, #1
 8008cee:	e7dc      	b.n	8008caa <vTaskSwitchContext+0x1a>
 8008cf0:	20012c54 	.word	0x20012c54
 8008cf4:	20012c64 	.word	0x20012c64
 8008cf8:	20012c70 	.word	0x20012c70
 8008cfc:	20012cec 	.word	0x20012cec
 8008d00:	2001314c 	.word	0x2001314c

08008d04 <vTaskPlaceOnEventList>:
{
 8008d04:	b510      	push	{r4, lr}
 8008d06:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008d08:	b940      	cbnz	r0, 8008d1c <vTaskPlaceOnEventList+0x18>
 8008d0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d0e:	f383 8811 	msr	BASEPRI, r3
 8008d12:	f3bf 8f6f 	isb	sy
 8008d16:	f3bf 8f4f 	dsb	sy
 8008d1a:	e7fe      	b.n	8008d1a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008d1c:	4b05      	ldr	r3, [pc, #20]	@ (8008d34 <vTaskPlaceOnEventList+0x30>)
 8008d1e:	6819      	ldr	r1, [r3, #0]
 8008d20:	3118      	adds	r1, #24
 8008d22:	f7fe fcf4 	bl	800770e <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008d26:	4620      	mov	r0, r4
 8008d28:	2101      	movs	r1, #1
}
 8008d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008d2e:	f7ff bc49 	b.w	80085c4 <prvAddCurrentTaskToDelayedList>
 8008d32:	bf00      	nop
 8008d34:	2001314c 	.word	0x2001314c

08008d38 <vTaskPlaceOnEventListRestricted>:
	{
 8008d38:	b538      	push	{r3, r4, r5, lr}
 8008d3a:	460d      	mov	r5, r1
 8008d3c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008d3e:	b940      	cbnz	r0, 8008d52 <vTaskPlaceOnEventListRestricted+0x1a>
 8008d40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d44:	f383 8811 	msr	BASEPRI, r3
 8008d48:	f3bf 8f6f 	isb	sy
 8008d4c:	f3bf 8f4f 	dsb	sy
 8008d50:	e7fe      	b.n	8008d50 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008d52:	4b07      	ldr	r3, [pc, #28]	@ (8008d70 <vTaskPlaceOnEventListRestricted+0x38>)
 8008d54:	6819      	ldr	r1, [r3, #0]
 8008d56:	3118      	adds	r1, #24
 8008d58:	f7fe fcce 	bl	80076f8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008d5c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008d5e:	4621      	mov	r1, r4
 8008d60:	bf0c      	ite	eq
 8008d62:	4628      	moveq	r0, r5
 8008d64:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008d68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008d6c:	f7ff bc2a 	b.w	80085c4 <prvAddCurrentTaskToDelayedList>
 8008d70:	2001314c 	.word	0x2001314c

08008d74 <xTaskRemoveFromEventList>:
{
 8008d74:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d76:	68c3      	ldr	r3, [r0, #12]
 8008d78:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008d7a:	b944      	cbnz	r4, 8008d8e <xTaskRemoveFromEventList+0x1a>
 8008d7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d80:	f383 8811 	msr	BASEPRI, r3
 8008d84:	f3bf 8f6f 	isb	sy
 8008d88:	f3bf 8f4f 	dsb	sy
 8008d8c:	e7fe      	b.n	8008d8c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008d8e:	f104 0518 	add.w	r5, r4, #24
 8008d92:	4628      	mov	r0, r5
 8008d94:	f7fe fcd2 	bl	800773c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008d98:	4b10      	ldr	r3, [pc, #64]	@ (8008ddc <xTaskRemoveFromEventList+0x68>)
 8008d9a:	681b      	ldr	r3, [r3, #0]
 8008d9c:	b9db      	cbnz	r3, 8008dd6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008d9e:	1d25      	adds	r5, r4, #4
 8008da0:	4628      	mov	r0, r5
 8008da2:	f7fe fccb 	bl	800773c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008da6:	4a0e      	ldr	r2, [pc, #56]	@ (8008de0 <xTaskRemoveFromEventList+0x6c>)
 8008da8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008daa:	6811      	ldr	r1, [r2, #0]
 8008dac:	428b      	cmp	r3, r1
 8008dae:	bf88      	it	hi
 8008db0:	6013      	strhi	r3, [r2, #0]
 8008db2:	4a0c      	ldr	r2, [pc, #48]	@ (8008de4 <xTaskRemoveFromEventList+0x70>)
 8008db4:	2014      	movs	r0, #20
 8008db6:	4629      	mov	r1, r5
 8008db8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008dbc:	f7fe fc9c 	bl	80076f8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008dc0:	4b09      	ldr	r3, [pc, #36]	@ (8008de8 <xTaskRemoveFromEventList+0x74>)
 8008dc2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008dc8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008dca:	bf83      	ittte	hi
 8008dcc:	4b07      	ldrhi	r3, [pc, #28]	@ (8008dec <xTaskRemoveFromEventList+0x78>)
 8008dce:	2001      	movhi	r0, #1
 8008dd0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008dd2:	2000      	movls	r0, #0
}
 8008dd4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008dd6:	4806      	ldr	r0, [pc, #24]	@ (8008df0 <xTaskRemoveFromEventList+0x7c>)
 8008dd8:	4629      	mov	r1, r5
 8008dda:	e7ef      	b.n	8008dbc <xTaskRemoveFromEventList+0x48>
 8008ddc:	20012c54 	.word	0x20012c54
 8008de0:	20012c70 	.word	0x20012c70
 8008de4:	20012cec 	.word	0x20012cec
 8008de8:	2001314c 	.word	0x2001314c
 8008dec:	20012c64 	.word	0x20012c64
 8008df0:	20012ca8 	.word	0x20012ca8

08008df4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008df4:	4b03      	ldr	r3, [pc, #12]	@ (8008e04 <vTaskInternalSetTimeOutState+0x10>)
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008dfa:	4b03      	ldr	r3, [pc, #12]	@ (8008e08 <vTaskInternalSetTimeOutState+0x14>)
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	6043      	str	r3, [r0, #4]
}
 8008e00:	4770      	bx	lr
 8008e02:	bf00      	nop
 8008e04:	20012c60 	.word	0x20012c60
 8008e08:	20012c74 	.word	0x20012c74

08008e0c <xTaskCheckForTimeOut>:
{
 8008e0c:	b570      	push	{r4, r5, r6, lr}
 8008e0e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008e10:	4605      	mov	r5, r0
 8008e12:	b940      	cbnz	r0, 8008e26 <xTaskCheckForTimeOut+0x1a>
 8008e14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e18:	f383 8811 	msr	BASEPRI, r3
 8008e1c:	f3bf 8f6f 	isb	sy
 8008e20:	f3bf 8f4f 	dsb	sy
 8008e24:	e7fe      	b.n	8008e24 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008e26:	b941      	cbnz	r1, 8008e3a <xTaskCheckForTimeOut+0x2e>
 8008e28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e2c:	f383 8811 	msr	BASEPRI, r3
 8008e30:	f3bf 8f6f 	isb	sy
 8008e34:	f3bf 8f4f 	dsb	sy
 8008e38:	e7fe      	b.n	8008e38 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008e3a:	f7fe fcfb 	bl	8007834 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008e3e:	4b0f      	ldr	r3, [pc, #60]	@ (8008e7c <xTaskCheckForTimeOut+0x70>)
 8008e40:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008e42:	6823      	ldr	r3, [r4, #0]
 8008e44:	1c5a      	adds	r2, r3, #1
 8008e46:	d010      	beq.n	8008e6a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008e48:	480d      	ldr	r0, [pc, #52]	@ (8008e80 <xTaskCheckForTimeOut+0x74>)
 8008e4a:	682e      	ldr	r6, [r5, #0]
 8008e4c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008e4e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008e50:	4286      	cmp	r6, r0
 8008e52:	d001      	beq.n	8008e58 <xTaskCheckForTimeOut+0x4c>
 8008e54:	428a      	cmp	r2, r1
 8008e56:	d90f      	bls.n	8008e78 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008e58:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008e5a:	4283      	cmp	r3, r0
 8008e5c:	d90a      	bls.n	8008e74 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008e5e:	1a5b      	subs	r3, r3, r1
 8008e60:	4413      	add	r3, r2
 8008e62:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008e64:	4628      	mov	r0, r5
 8008e66:	f7ff ffc5 	bl	8008df4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008e6a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008e6c:	f7fe fd02 	bl	8007874 <vPortExitCritical>
}
 8008e70:	4620      	mov	r0, r4
 8008e72:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008e74:	2300      	movs	r3, #0
 8008e76:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008e78:	2401      	movs	r4, #1
 8008e7a:	e7f7      	b.n	8008e6c <xTaskCheckForTimeOut+0x60>
 8008e7c:	20012c74 	.word	0x20012c74
 8008e80:	20012c60 	.word	0x20012c60

08008e84 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008e84:	4b01      	ldr	r3, [pc, #4]	@ (8008e8c <vTaskMissedYield+0x8>)
 8008e86:	2201      	movs	r2, #1
 8008e88:	601a      	str	r2, [r3, #0]
}
 8008e8a:	4770      	bx	lr
 8008e8c:	20012c64 	.word	0x20012c64

08008e90 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008e90:	4b05      	ldr	r3, [pc, #20]	@ (8008ea8 <xTaskGetSchedulerState+0x18>)
 8008e92:	681b      	ldr	r3, [r3, #0]
 8008e94:	b133      	cbz	r3, 8008ea4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e96:	4b05      	ldr	r3, [pc, #20]	@ (8008eac <xTaskGetSchedulerState+0x1c>)
 8008e98:	6818      	ldr	r0, [r3, #0]
 8008e9a:	fab0 f080 	clz	r0, r0
 8008e9e:	0940      	lsrs	r0, r0, #5
 8008ea0:	0040      	lsls	r0, r0, #1
 8008ea2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008ea4:	2001      	movs	r0, #1
	}
 8008ea6:	4770      	bx	lr
 8008ea8:	20012c6c 	.word	0x20012c6c
 8008eac:	20012c54 	.word	0x20012c54

08008eb0 <xTaskPriorityInherit>:
	{
 8008eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008eb2:	4604      	mov	r4, r0
 8008eb4:	b338      	cbz	r0, 8008f06 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008eb6:	4d1a      	ldr	r5, [pc, #104]	@ (8008f20 <xTaskPriorityInherit+0x70>)
 8008eb8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008eba:	682a      	ldr	r2, [r5, #0]
 8008ebc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008ebe:	4293      	cmp	r3, r2
 8008ec0:	d226      	bcs.n	8008f10 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008ec2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008ec4:	4e17      	ldr	r6, [pc, #92]	@ (8008f24 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008ec6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008ec8:	bfa1      	itttt	ge
 8008eca:	682a      	ldrge	r2, [r5, #0]
 8008ecc:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8008ece:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8008ed2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008ed4:	2214      	movs	r2, #20
 8008ed6:	fb02 6303 	mla	r3, r2, r3, r6
 8008eda:	6942      	ldr	r2, [r0, #20]
 8008edc:	429a      	cmp	r2, r3
 8008ede:	d113      	bne.n	8008f08 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008ee0:	1d07      	adds	r7, r0, #4
 8008ee2:	4638      	mov	r0, r7
 8008ee4:	f7fe fc2a 	bl	800773c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ee8:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008eea:	4a0f      	ldr	r2, [pc, #60]	@ (8008f28 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008eec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008eee:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ef0:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008ef2:	2014      	movs	r0, #20
 8008ef4:	428b      	cmp	r3, r1
 8008ef6:	fb00 6003 	mla	r0, r0, r3, r6
 8008efa:	4639      	mov	r1, r7
 8008efc:	bf88      	it	hi
 8008efe:	6013      	strhi	r3, [r2, #0]
 8008f00:	f7fe fbfa 	bl	80076f8 <vListInsertEnd>
				xReturn = pdTRUE;
 8008f04:	2001      	movs	r0, #1
	}
 8008f06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008f08:	682b      	ldr	r3, [r5, #0]
 8008f0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008f0c:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8008f0e:	e7f9      	b.n	8008f04 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008f10:	682b      	ldr	r3, [r5, #0]
 8008f12:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008f14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008f16:	4298      	cmp	r0, r3
 8008f18:	bf2c      	ite	cs
 8008f1a:	2000      	movcs	r0, #0
 8008f1c:	2001      	movcc	r0, #1
 8008f1e:	e7f2      	b.n	8008f06 <xTaskPriorityInherit+0x56>
 8008f20:	2001314c 	.word	0x2001314c
 8008f24:	20012cec 	.word	0x20012cec
 8008f28:	20012c70 	.word	0x20012c70

08008f2c <xTaskPriorityDisinherit>:
	{
 8008f2c:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008f2e:	b908      	cbnz	r0, 8008f34 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008f30:	2000      	movs	r0, #0
	}
 8008f32:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008f34:	4b1b      	ldr	r3, [pc, #108]	@ (8008fa4 <xTaskPriorityDisinherit+0x78>)
 8008f36:	681c      	ldr	r4, [r3, #0]
 8008f38:	4284      	cmp	r4, r0
 8008f3a:	d008      	beq.n	8008f4e <xTaskPriorityDisinherit+0x22>
 8008f3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f40:	f383 8811 	msr	BASEPRI, r3
 8008f44:	f3bf 8f6f 	isb	sy
 8008f48:	f3bf 8f4f 	dsb	sy
 8008f4c:	e7fe      	b.n	8008f4c <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8008f4e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8008f50:	b943      	cbnz	r3, 8008f64 <xTaskPriorityDisinherit+0x38>
 8008f52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f56:	f383 8811 	msr	BASEPRI, r3
 8008f5a:	f3bf 8f6f 	isb	sy
 8008f5e:	f3bf 8f4f 	dsb	sy
 8008f62:	e7fe      	b.n	8008f62 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f64:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8008f66:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008f68:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f6a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008f6c:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f6e:	d0df      	beq.n	8008f30 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008f70:	2b00      	cmp	r3, #0
 8008f72:	d1dd      	bne.n	8008f30 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008f74:	1d25      	adds	r5, r4, #4
 8008f76:	4628      	mov	r0, r5
 8008f78:	f7fe fbe0 	bl	800773c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008f7c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8008f7e:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f80:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8008f84:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008f86:	4a08      	ldr	r2, [pc, #32]	@ (8008fa8 <xTaskPriorityDisinherit+0x7c>)
 8008f88:	6811      	ldr	r1, [r2, #0]
 8008f8a:	428b      	cmp	r3, r1
 8008f8c:	bf88      	it	hi
 8008f8e:	6013      	strhi	r3, [r2, #0]
 8008f90:	4a06      	ldr	r2, [pc, #24]	@ (8008fac <xTaskPriorityDisinherit+0x80>)
 8008f92:	2014      	movs	r0, #20
 8008f94:	fb00 2003 	mla	r0, r0, r3, r2
 8008f98:	4629      	mov	r1, r5
 8008f9a:	f7fe fbad 	bl	80076f8 <vListInsertEnd>
					xReturn = pdTRUE;
 8008f9e:	2001      	movs	r0, #1
		return xReturn;
 8008fa0:	e7c7      	b.n	8008f32 <xTaskPriorityDisinherit+0x6>
 8008fa2:	bf00      	nop
 8008fa4:	2001314c 	.word	0x2001314c
 8008fa8:	20012c70 	.word	0x20012c70
 8008fac:	20012cec 	.word	0x20012cec

08008fb0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008fb0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008fb2:	4604      	mov	r4, r0
 8008fb4:	2800      	cmp	r0, #0
 8008fb6:	d041      	beq.n	800903c <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8008fb8:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8008fba:	b942      	cbnz	r2, 8008fce <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008fbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fc0:	f383 8811 	msr	BASEPRI, r3
 8008fc4:	f3bf 8f6f 	isb	sy
 8008fc8:	f3bf 8f4f 	dsb	sy
 8008fcc:	e7fe      	b.n	8008fcc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008fce:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8008fd0:	4299      	cmp	r1, r3
 8008fd2:	bf38      	it	cc
 8008fd4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008fd6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008fd8:	428b      	cmp	r3, r1
 8008fda:	d02f      	beq.n	800903c <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008fdc:	2a01      	cmp	r2, #1
 8008fde:	d12d      	bne.n	800903c <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8008fe0:	4a17      	ldr	r2, [pc, #92]	@ (8009040 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8008fe2:	6812      	ldr	r2, [r2, #0]
 8008fe4:	4282      	cmp	r2, r0
 8008fe6:	d108      	bne.n	8008ffa <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008fe8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fec:	f383 8811 	msr	BASEPRI, r3
 8008ff0:	f3bf 8f6f 	isb	sy
 8008ff4:	f3bf 8f4f 	dsb	sy
 8008ff8:	e7fe      	b.n	8008ff8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008ffa:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008ffc:	4d11      	ldr	r5, [pc, #68]	@ (8009044 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008ffe:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009000:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009002:	f04f 0214 	mov.w	r2, #20
 8009006:	fb02 5303 	mla	r3, r2, r3, r5
 800900a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800900c:	bfa4      	itt	ge
 800900e:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8009012:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009014:	429a      	cmp	r2, r3
 8009016:	d111      	bne.n	800903c <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009018:	1d06      	adds	r6, r0, #4
 800901a:	4630      	mov	r0, r6
 800901c:	f7fe fb8e 	bl	800773c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009020:	4a09      	ldr	r2, [pc, #36]	@ (8009048 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009022:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009024:	6811      	ldr	r1, [r2, #0]
 8009026:	2014      	movs	r0, #20
 8009028:	428b      	cmp	r3, r1
 800902a:	fb00 5003 	mla	r0, r0, r3, r5
 800902e:	4631      	mov	r1, r6
	}
 8009030:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009034:	bf88      	it	hi
 8009036:	6013      	strhi	r3, [r2, #0]
 8009038:	f7fe bb5e 	b.w	80076f8 <vListInsertEnd>
	}
 800903c:	bd70      	pop	{r4, r5, r6, pc}
 800903e:	bf00      	nop
 8009040:	2001314c 	.word	0x2001314c
 8009044:	20012cec 	.word	0x20012cec
 8009048:	20012c70 	.word	0x20012c70

0800904c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800904c:	4b04      	ldr	r3, [pc, #16]	@ (8009060 <pvTaskIncrementMutexHeldCount+0x14>)
 800904e:	681a      	ldr	r2, [r3, #0]
 8009050:	b11a      	cbz	r2, 800905a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009052:	6819      	ldr	r1, [r3, #0]
 8009054:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009056:	3201      	adds	r2, #1
 8009058:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800905a:	6818      	ldr	r0, [r3, #0]
	}
 800905c:	4770      	bx	lr
 800905e:	bf00      	nop
 8009060:	2001314c 	.word	0x2001314c

08009064 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009064:	4291      	cmp	r1, r2
{
 8009066:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009068:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800906a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800906c:	d80a      	bhi.n	8009084 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800906e:	1ad2      	subs	r2, r2, r3
 8009070:	6983      	ldr	r3, [r0, #24]
 8009072:	429a      	cmp	r2, r3
 8009074:	d20d      	bcs.n	8009092 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009076:	4b08      	ldr	r3, [pc, #32]	@ (8009098 <prvInsertTimerInActiveList+0x34>)
 8009078:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800907a:	6818      	ldr	r0, [r3, #0]
 800907c:	f7fe fb47 	bl	800770e <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009080:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009082:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009084:	429a      	cmp	r2, r3
 8009086:	d201      	bcs.n	800908c <prvInsertTimerInActiveList+0x28>
 8009088:	4299      	cmp	r1, r3
 800908a:	d202      	bcs.n	8009092 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800908c:	4b03      	ldr	r3, [pc, #12]	@ (800909c <prvInsertTimerInActiveList+0x38>)
 800908e:	1d01      	adds	r1, r0, #4
 8009090:	e7f3      	b.n	800907a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009092:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009094:	e7f5      	b.n	8009082 <prvInsertTimerInActiveList+0x1e>
 8009096:	bf00      	nop
 8009098:	2001324c 	.word	0x2001324c
 800909c:	20013250 	.word	0x20013250

080090a0 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80090a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80090a2:	4c11      	ldr	r4, [pc, #68]	@ (80090e8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80090a4:	f7fe fbc6 	bl	8007834 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80090a8:	6825      	ldr	r5, [r4, #0]
 80090aa:	b9bd      	cbnz	r5, 80090dc <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80090ac:	4f0f      	ldr	r7, [pc, #60]	@ (80090ec <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80090ae:	4e10      	ldr	r6, [pc, #64]	@ (80090f0 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80090b0:	4638      	mov	r0, r7
 80090b2:	f7fe fb13 	bl	80076dc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80090b6:	4630      	mov	r0, r6
 80090b8:	f7fe fb10 	bl	80076dc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80090bc:	4b0d      	ldr	r3, [pc, #52]	@ (80090f4 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80090be:	4a0e      	ldr	r2, [pc, #56]	@ (80090f8 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80090c0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80090c2:	4b0e      	ldr	r3, [pc, #56]	@ (80090fc <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80090c4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80090c6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80090c8:	200a      	movs	r0, #10
 80090ca:	4b0d      	ldr	r3, [pc, #52]	@ (8009100 <prvCheckForValidListAndQueue+0x60>)
 80090cc:	9500      	str	r5, [sp, #0]
 80090ce:	f7fe fdba 	bl	8007c46 <xQueueGenericCreateStatic>
 80090d2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80090d4:	b110      	cbz	r0, 80090dc <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80090d6:	490b      	ldr	r1, [pc, #44]	@ (8009104 <prvCheckForValidListAndQueue+0x64>)
 80090d8:	f7ff f992 	bl	8008400 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80090dc:	b003      	add	sp, #12
 80090de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80090e2:	f7fe bbc7 	b.w	8007874 <vPortExitCritical>
 80090e6:	bf00      	nop
 80090e8:	20013248 	.word	0x20013248
 80090ec:	20013268 	.word	0x20013268
 80090f0:	20013254 	.word	0x20013254
 80090f4:	20013250 	.word	0x20013250
 80090f8:	200131a0 	.word	0x200131a0
 80090fc:	2001324c 	.word	0x2001324c
 8009100:	20013150 	.word	0x20013150
 8009104:	0801f390 	.word	0x0801f390

08009108 <xTimerCreateTimerTask>:
{
 8009108:	b510      	push	{r4, lr}
 800910a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800910c:	f7ff ffc8 	bl	80090a0 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009110:	4b12      	ldr	r3, [pc, #72]	@ (800915c <xTimerCreateTimerTask+0x54>)
 8009112:	681b      	ldr	r3, [r3, #0]
 8009114:	b1b3      	cbz	r3, 8009144 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009116:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009118:	aa07      	add	r2, sp, #28
 800911a:	a906      	add	r1, sp, #24
 800911c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800911e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009122:	f7fe f9d3 	bl	80074cc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009126:	9b05      	ldr	r3, [sp, #20]
 8009128:	9302      	str	r3, [sp, #8]
 800912a:	9b06      	ldr	r3, [sp, #24]
 800912c:	9301      	str	r3, [sp, #4]
 800912e:	2302      	movs	r3, #2
 8009130:	9300      	str	r3, [sp, #0]
 8009132:	9a07      	ldr	r2, [sp, #28]
 8009134:	490a      	ldr	r1, [pc, #40]	@ (8009160 <xTimerCreateTimerTask+0x58>)
 8009136:	480b      	ldr	r0, [pc, #44]	@ (8009164 <xTimerCreateTimerTask+0x5c>)
 8009138:	4623      	mov	r3, r4
 800913a:	f7ff fb26 	bl	800878a <xTaskCreateStatic>
 800913e:	4b0a      	ldr	r3, [pc, #40]	@ (8009168 <xTimerCreateTimerTask+0x60>)
 8009140:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009142:	b940      	cbnz	r0, 8009156 <xTimerCreateTimerTask+0x4e>
 8009144:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009148:	f383 8811 	msr	BASEPRI, r3
 800914c:	f3bf 8f6f 	isb	sy
 8009150:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009154:	e7fe      	b.n	8009154 <xTimerCreateTimerTask+0x4c>
}
 8009156:	2001      	movs	r0, #1
 8009158:	b008      	add	sp, #32
 800915a:	bd10      	pop	{r4, pc}
 800915c:	20013248 	.word	0x20013248
 8009160:	0801f395 	.word	0x0801f395
 8009164:	08009269 	.word	0x08009269
 8009168:	20013244 	.word	0x20013244

0800916c <xTimerGenericCommand>:
{
 800916c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800916e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009170:	4604      	mov	r4, r0
{
 8009172:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009174:	b940      	cbnz	r0, 8009188 <xTimerGenericCommand+0x1c>
 8009176:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800917a:	f383 8811 	msr	BASEPRI, r3
 800917e:	f3bf 8f6f 	isb	sy
 8009182:	f3bf 8f4f 	dsb	sy
 8009186:	e7fe      	b.n	8009186 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009188:	4d0d      	ldr	r5, [pc, #52]	@ (80091c0 <xTimerGenericCommand+0x54>)
 800918a:	6828      	ldr	r0, [r5, #0]
 800918c:	b180      	cbz	r0, 80091b0 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800918e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009190:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009194:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009196:	dc0d      	bgt.n	80091b4 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009198:	f7ff fe7a 	bl	8008e90 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800919c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800919e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80091a0:	bf08      	it	eq
 80091a2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80091a4:	6828      	ldr	r0, [r5, #0]
 80091a6:	bf18      	it	ne
 80091a8:	461a      	movne	r2, r3
 80091aa:	4669      	mov	r1, sp
 80091ac:	f7fe fe00 	bl	8007db0 <xQueueGenericSend>
}
 80091b0:	b004      	add	sp, #16
 80091b2:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80091b4:	2300      	movs	r3, #0
 80091b6:	4669      	mov	r1, sp
 80091b8:	f7fe feac 	bl	8007f14 <xQueueGenericSendFromISR>
 80091bc:	e7f8      	b.n	80091b0 <xTimerGenericCommand+0x44>
 80091be:	bf00      	nop
 80091c0:	20013248 	.word	0x20013248

080091c4 <prvSampleTimeNow>:
{
 80091c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 80091c8:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009264 <prvSampleTimeNow+0xa0>
{
 80091cc:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 80091ce:	f7ff fc2b 	bl	8008a28 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80091d2:	f8d8 3000 	ldr.w	r3, [r8]
 80091d6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 80091d8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80091da:	d909      	bls.n	80091f0 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80091dc:	4f1f      	ldr	r7, [pc, #124]	@ (800925c <prvSampleTimeNow+0x98>)
 80091de:	683b      	ldr	r3, [r7, #0]
 80091e0:	681a      	ldr	r2, [r3, #0]
 80091e2:	b96a      	cbnz	r2, 8009200 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80091e4:	4a1e      	ldr	r2, [pc, #120]	@ (8009260 <prvSampleTimeNow+0x9c>)
 80091e6:	6811      	ldr	r1, [r2, #0]
 80091e8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80091ea:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80091ec:	2301      	movs	r3, #1
 80091ee:	e000      	b.n	80091f2 <prvSampleTimeNow+0x2e>
 80091f0:	2300      	movs	r3, #0
}
 80091f2:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 80091f4:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80091f6:	f8c8 5000 	str.w	r5, [r8]
}
 80091fa:	b002      	add	sp, #8
 80091fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009200:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009202:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009204:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009208:	f104 0a04 	add.w	sl, r4, #4
 800920c:	4650      	mov	r0, sl
 800920e:	f7fe fa95 	bl	800773c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009212:	6a23      	ldr	r3, [r4, #32]
 8009214:	4620      	mov	r0, r4
 8009216:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009218:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800921c:	075b      	lsls	r3, r3, #29
 800921e:	d5de      	bpl.n	80091de <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009220:	69a3      	ldr	r3, [r4, #24]
 8009222:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009224:	4599      	cmp	r9, r3
 8009226:	d206      	bcs.n	8009236 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009228:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800922a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800922c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800922e:	4651      	mov	r1, sl
 8009230:	f7fe fa6d 	bl	800770e <vListInsert>
 8009234:	e7d3      	b.n	80091de <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009236:	2300      	movs	r3, #0
 8009238:	9300      	str	r3, [sp, #0]
 800923a:	464a      	mov	r2, r9
 800923c:	4619      	mov	r1, r3
 800923e:	4620      	mov	r0, r4
 8009240:	f7ff ff94 	bl	800916c <xTimerGenericCommand>
				configASSERT( xResult );
 8009244:	2800      	cmp	r0, #0
 8009246:	d1ca      	bne.n	80091de <prvSampleTimeNow+0x1a>
 8009248:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800924c:	f383 8811 	msr	BASEPRI, r3
 8009250:	f3bf 8f6f 	isb	sy
 8009254:	f3bf 8f4f 	dsb	sy
 8009258:	e7fe      	b.n	8009258 <prvSampleTimeNow+0x94>
 800925a:	bf00      	nop
 800925c:	20013250 	.word	0x20013250
 8009260:	2001324c 	.word	0x2001324c
 8009264:	20013240 	.word	0x20013240

08009268 <prvTimerTask>:
{
 8009268:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800926c:	4d6e      	ldr	r5, [pc, #440]	@ (8009428 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800926e:	4e6f      	ldr	r6, [pc, #444]	@ (800942c <prvTimerTask+0x1c4>)
{
 8009270:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009272:	682b      	ldr	r3, [r5, #0]
 8009274:	f8d3 8000 	ldr.w	r8, [r3]
 8009278:	f1b8 0f00 	cmp.w	r8, #0
 800927c:	d035      	beq.n	80092ea <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800927e:	68db      	ldr	r3, [r3, #12]
 8009280:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009284:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009286:	f7ff fbc7 	bl	8008a18 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800928a:	a804      	add	r0, sp, #16
 800928c:	f7ff ff9a 	bl	80091c4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009290:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009292:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009294:	2b00      	cmp	r3, #0
 8009296:	d169      	bne.n	800936c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009298:	2c00      	cmp	r4, #0
 800929a:	d14c      	bne.n	8009336 <prvTimerTask+0xce>
 800929c:	4540      	cmp	r0, r8
 800929e:	d350      	bcc.n	8009342 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 80092a0:	f7ff fc5e 	bl	8008b60 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092a4:	682b      	ldr	r3, [r5, #0]
 80092a6:	68db      	ldr	r3, [r3, #12]
 80092a8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80092aa:	1d38      	adds	r0, r7, #4
 80092ac:	f7fe fa46 	bl	800773c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80092b0:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80092b4:	0758      	lsls	r0, r3, #29
 80092b6:	d51a      	bpl.n	80092ee <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80092b8:	69b9      	ldr	r1, [r7, #24]
 80092ba:	4643      	mov	r3, r8
 80092bc:	464a      	mov	r2, r9
 80092be:	4441      	add	r1, r8
 80092c0:	4638      	mov	r0, r7
 80092c2:	f7ff fecf 	bl	8009064 <prvInsertTimerInActiveList>
 80092c6:	b1b0      	cbz	r0, 80092f6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80092c8:	9400      	str	r4, [sp, #0]
 80092ca:	4623      	mov	r3, r4
 80092cc:	4642      	mov	r2, r8
 80092ce:	4621      	mov	r1, r4
 80092d0:	4638      	mov	r0, r7
 80092d2:	f7ff ff4b 	bl	800916c <xTimerGenericCommand>
			configASSERT( xResult );
 80092d6:	b970      	cbnz	r0, 80092f6 <prvTimerTask+0x8e>
 80092d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092dc:	f383 8811 	msr	BASEPRI, r3
 80092e0:	f3bf 8f6f 	isb	sy
 80092e4:	f3bf 8f4f 	dsb	sy
 80092e8:	e7fe      	b.n	80092e8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80092ea:	2401      	movs	r4, #1
 80092ec:	e7cb      	b.n	8009286 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80092ee:	f023 0301 	bic.w	r3, r3, #1
 80092f2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80092f6:	6a3b      	ldr	r3, [r7, #32]
 80092f8:	4638      	mov	r0, r7
 80092fa:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80092fc:	6830      	ldr	r0, [r6, #0]
 80092fe:	2200      	movs	r2, #0
 8009300:	a904      	add	r1, sp, #16
 8009302:	f7fe feb5 	bl	8008070 <xQueueReceive>
 8009306:	2800      	cmp	r0, #0
 8009308:	d0b3      	beq.n	8009272 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800930a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800930c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800930e:	2b00      	cmp	r3, #0
 8009310:	db2f      	blt.n	8009372 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009312:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009314:	6963      	ldr	r3, [r4, #20]
 8009316:	2b00      	cmp	r3, #0
 8009318:	d132      	bne.n	8009380 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800931a:	a803      	add	r0, sp, #12
 800931c:	f7ff ff52 	bl	80091c4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009320:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009322:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009324:	2b09      	cmp	r3, #9
 8009326:	d8e9      	bhi.n	80092fc <prvTimerTask+0x94>
 8009328:	e8df f003 	tbb	[pc, r3]
 800932c:	572e2e2e 	.word	0x572e2e2e
 8009330:	2e2e765e 	.word	0x2e2e765e
 8009334:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009336:	4b3e      	ldr	r3, [pc, #248]	@ (8009430 <prvTimerTask+0x1c8>)
 8009338:	681b      	ldr	r3, [r3, #0]
 800933a:	681c      	ldr	r4, [r3, #0]
 800933c:	fab4 f484 	clz	r4, r4
 8009340:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009342:	6830      	ldr	r0, [r6, #0]
 8009344:	4622      	mov	r2, r4
 8009346:	eba8 0109 	sub.w	r1, r8, r9
 800934a:	f7ff f898 	bl	800847e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800934e:	f7ff fc07 	bl	8008b60 <xTaskResumeAll>
 8009352:	2800      	cmp	r0, #0
 8009354:	d1d2      	bne.n	80092fc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009356:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800935a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800935e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009362:	f3bf 8f4f 	dsb	sy
 8009366:	f3bf 8f6f 	isb	sy
 800936a:	e7c7      	b.n	80092fc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800936c:	f7ff fbf8 	bl	8008b60 <xTaskResumeAll>
}
 8009370:	e7c4      	b.n	80092fc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009372:	9b05      	ldr	r3, [sp, #20]
 8009374:	9907      	ldr	r1, [sp, #28]
 8009376:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009378:	9b04      	ldr	r3, [sp, #16]
 800937a:	2b00      	cmp	r3, #0
 800937c:	dbbe      	blt.n	80092fc <prvTimerTask+0x94>
 800937e:	e7c8      	b.n	8009312 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009380:	1d20      	adds	r0, r4, #4
 8009382:	f7fe f9db 	bl	800773c <uxListRemove>
 8009386:	e7c8      	b.n	800931a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009388:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800938c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800938e:	f043 0301 	orr.w	r3, r3, #1
 8009392:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009396:	9b05      	ldr	r3, [sp, #20]
 8009398:	4620      	mov	r0, r4
 800939a:	4419      	add	r1, r3
 800939c:	f7ff fe62 	bl	8009064 <prvInsertTimerInActiveList>
 80093a0:	2800      	cmp	r0, #0
 80093a2:	d0ab      	beq.n	80092fc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80093a4:	6a23      	ldr	r3, [r4, #32]
 80093a6:	4620      	mov	r0, r4
 80093a8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80093aa:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80093ae:	0759      	lsls	r1, r3, #29
 80093b0:	d5a4      	bpl.n	80092fc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80093b2:	69a2      	ldr	r2, [r4, #24]
 80093b4:	9905      	ldr	r1, [sp, #20]
 80093b6:	2300      	movs	r3, #0
 80093b8:	440a      	add	r2, r1
 80093ba:	9300      	str	r3, [sp, #0]
 80093bc:	4619      	mov	r1, r3
 80093be:	4620      	mov	r0, r4
 80093c0:	f7ff fed4 	bl	800916c <xTimerGenericCommand>
							configASSERT( xResult );
 80093c4:	2800      	cmp	r0, #0
 80093c6:	d199      	bne.n	80092fc <prvTimerTask+0x94>
 80093c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093cc:	f383 8811 	msr	BASEPRI, r3
 80093d0:	f3bf 8f6f 	isb	sy
 80093d4:	f3bf 8f4f 	dsb	sy
 80093d8:	e7fe      	b.n	80093d8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093da:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093de:	f023 0301 	bic.w	r3, r3, #1
 80093e2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 80093e6:	e789      	b.n	80092fc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80093e8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80093ec:	f043 0301 	orr.w	r3, r3, #1
 80093f0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80093f4:	9905      	ldr	r1, [sp, #20]
 80093f6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80093f8:	b941      	cbnz	r1, 800940c <prvTimerTask+0x1a4>
 80093fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093fe:	f383 8811 	msr	BASEPRI, r3
 8009402:	f3bf 8f6f 	isb	sy
 8009406:	f3bf 8f4f 	dsb	sy
 800940a:	e7fe      	b.n	800940a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800940c:	4603      	mov	r3, r0
 800940e:	4401      	add	r1, r0
 8009410:	4620      	mov	r0, r4
 8009412:	f7ff fe27 	bl	8009064 <prvInsertTimerInActiveList>
					break;
 8009416:	e771      	b.n	80092fc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009418:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800941c:	079a      	lsls	r2, r3, #30
 800941e:	d4de      	bmi.n	80093de <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009420:	4620      	mov	r0, r4
 8009422:	f7fe f91d 	bl	8007660 <vPortFree>
 8009426:	e769      	b.n	80092fc <prvTimerTask+0x94>
 8009428:	20013250 	.word	0x20013250
 800942c:	20013248 	.word	0x20013248
 8009430:	2001324c 	.word	0x2001324c

08009434 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009434:	8880      	ldrh	r0, [r0, #4]
 8009436:	4770      	bx	lr

08009438 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009438:	b570      	push	{r4, r5, r6, lr}
 800943a:	6803      	ldr	r3, [r0, #0]
 800943c:	4605      	mov	r5, r0
 800943e:	460c      	mov	r4, r1
 8009440:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009442:	2100      	movs	r1, #0
 8009444:	4798      	blx	r3
 8009446:	682b      	ldr	r3, [r5, #0]
 8009448:	4606      	mov	r6, r0
 800944a:	6a1b      	ldr	r3, [r3, #32]
 800944c:	4628      	mov	r0, r5
 800944e:	4798      	blx	r3
 8009450:	1ba4      	subs	r4, r4, r6
 8009452:	b2a4      	uxth	r4, r4
 8009454:	fbb4 f0f0 	udiv	r0, r4, r0
 8009458:	bd70      	pop	{r4, r5, r6, pc}

0800945a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800945a:	2300      	movs	r3, #0
 800945c:	8083      	strh	r3, [r0, #4]
 800945e:	4770      	bx	lr

08009460 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009460:	b510      	push	{r4, lr}
 8009462:	6803      	ldr	r3, [r0, #0]
 8009464:	8881      	ldrh	r1, [r0, #4]
 8009466:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009468:	4604      	mov	r4, r0
 800946a:	4798      	blx	r3
 800946c:	88a3      	ldrh	r3, [r4, #4]
 800946e:	3301      	adds	r3, #1
 8009470:	80a3      	strh	r3, [r4, #4]
 8009472:	bd10      	pop	{r4, pc}

08009474 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009474:	6803      	ldr	r3, [r0, #0]
 8009476:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009478:	4718      	bx	r3

0800947a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800947a:	4770      	bx	lr

0800947c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800947c:	4a02      	ldr	r2, [pc, #8]	@ (8009488 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800947e:	6002      	str	r2, [r0, #0]
 8009480:	2200      	movs	r2, #0
 8009482:	8082      	strh	r2, [r0, #4]
 8009484:	4770      	bx	lr
 8009486:	bf00      	nop
 8009488:	080202b4 	.word	0x080202b4

0800948c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800948c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800948e:	2000      	movs	r0, #0
 8009490:	b12b      	cbz	r3, 800949e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009492:	b920      	cbnz	r0, 800949e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009494:	1a5a      	subs	r2, r3, r1
 8009496:	4250      	negs	r0, r2
 8009498:	4150      	adcs	r0, r2
 800949a:	699b      	ldr	r3, [r3, #24]
 800949c:	e7f8      	b.n	8009490 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800949e:	4770      	bx	lr

080094a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80094a0:	2300      	movs	r3, #0
 80094a2:	6148      	str	r0, [r1, #20]
 80094a4:	618b      	str	r3, [r1, #24]
 80094a6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80094a8:	b913      	cbnz	r3, 80094b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80094aa:	6281      	str	r1, [r0, #40]	@ 0x28
 80094ac:	4770      	bx	lr
 80094ae:	4613      	mov	r3, r2
 80094b0:	699a      	ldr	r2, [r3, #24]
 80094b2:	2a00      	cmp	r2, #0
 80094b4:	d1fb      	bne.n	80094ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80094b6:	6199      	str	r1, [r3, #24]
 80094b8:	4770      	bx	lr

080094ba <_ZN8touchgfx9Container9removeAllEv>:
 80094ba:	2200      	movs	r2, #0
 80094bc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80094be:	b123      	cbz	r3, 80094ca <_ZN8touchgfx9Container9removeAllEv+0x10>
 80094c0:	6999      	ldr	r1, [r3, #24]
 80094c2:	6281      	str	r1, [r0, #40]	@ 0x28
 80094c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80094c8:	e7f8      	b.n	80094bc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80094ca:	4770      	bx	lr

080094cc <_ZN8touchgfx9Container6unlinkEv>:
 80094cc:	2300      	movs	r3, #0
 80094ce:	6283      	str	r3, [r0, #40]	@ 0x28
 80094d0:	4770      	bx	lr

080094d2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80094d2:	2200      	movs	r2, #0
 80094d4:	8002      	strh	r2, [r0, #0]
 80094d6:	8042      	strh	r2, [r0, #2]
 80094d8:	8082      	strh	r2, [r0, #4]
 80094da:	80c2      	strh	r2, [r0, #6]
 80094dc:	4770      	bx	lr

080094de <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80094de:	b570      	push	{r4, r5, r6, lr}
 80094e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80094e2:	460d      	mov	r5, r1
 80094e4:	4616      	mov	r6, r2
 80094e6:	b13c      	cbz	r4, 80094f8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80094e8:	6823      	ldr	r3, [r4, #0]
 80094ea:	4620      	mov	r0, r4
 80094ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80094ee:	4632      	mov	r2, r6
 80094f0:	4629      	mov	r1, r5
 80094f2:	4798      	blx	r3
 80094f4:	69a4      	ldr	r4, [r4, #24]
 80094f6:	e7f6      	b.n	80094e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80094f8:	bd70      	pop	{r4, r5, r6, pc}

080094fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80094fa:	b538      	push	{r3, r4, r5, lr}
 80094fc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80094fe:	460d      	mov	r5, r1
 8009500:	b134      	cbz	r4, 8009510 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009502:	682b      	ldr	r3, [r5, #0]
 8009504:	4621      	mov	r1, r4
 8009506:	689b      	ldr	r3, [r3, #8]
 8009508:	4628      	mov	r0, r5
 800950a:	4798      	blx	r3
 800950c:	69a4      	ldr	r4, [r4, #24]
 800950e:	e7f7      	b.n	8009500 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009510:	bd38      	pop	{r3, r4, r5, pc}

08009512 <_ZN8touchgfx9ContainerD1Ev>:
 8009512:	4770      	bx	lr

08009514 <_ZN8touchgfx9ContainerD0Ev>:
 8009514:	b510      	push	{r4, lr}
 8009516:	212c      	movs	r1, #44	@ 0x2c
 8009518:	4604      	mov	r4, r0
 800951a:	f014 f8b5 	bl	801d688 <_ZdlPvj>
 800951e:	4620      	mov	r0, r4
 8009520:	bd10      	pop	{r4, pc}

08009522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009522:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009524:	b19b      	cbz	r3, 800954e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009526:	428b      	cmp	r3, r1
 8009528:	d109      	bne.n	800953e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800952a:	699a      	ldr	r2, [r3, #24]
 800952c:	2100      	movs	r1, #0
 800952e:	6159      	str	r1, [r3, #20]
 8009530:	6282      	str	r2, [r0, #40]	@ 0x28
 8009532:	b902      	cbnz	r2, 8009536 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009534:	4770      	bx	lr
 8009536:	6199      	str	r1, [r3, #24]
 8009538:	4770      	bx	lr
 800953a:	4613      	mov	r3, r2
 800953c:	b13a      	cbz	r2, 800954e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800953e:	699a      	ldr	r2, [r3, #24]
 8009540:	428a      	cmp	r2, r1
 8009542:	d1fa      	bne.n	800953a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009544:	698a      	ldr	r2, [r1, #24]
 8009546:	619a      	str	r2, [r3, #24]
 8009548:	2300      	movs	r3, #0
 800954a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800954e:	4770      	bx	lr

08009550 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009550:	b410      	push	{r4}
 8009552:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009554:	4604      	mov	r4, r0
 8009556:	b92b      	cbnz	r3, 8009564 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009558:	6803      	ldr	r3, [r0, #0]
 800955a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800955e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009560:	4611      	mov	r1, r2
 8009562:	4718      	bx	r3
 8009564:	b941      	cbnz	r1, 8009578 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009566:	6193      	str	r3, [r2, #24]
 8009568:	6282      	str	r2, [r0, #40]	@ 0x28
 800956a:	6154      	str	r4, [r2, #20]
 800956c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009570:	4770      	bx	lr
 8009572:	4603      	mov	r3, r0
 8009574:	2800      	cmp	r0, #0
 8009576:	d0f9      	beq.n	800956c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009578:	4299      	cmp	r1, r3
 800957a:	6998      	ldr	r0, [r3, #24]
 800957c:	d1f9      	bne.n	8009572 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800957e:	6190      	str	r0, [r2, #24]
 8009580:	618a      	str	r2, [r1, #24]
 8009582:	e7f2      	b.n	800956a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009588:	461f      	mov	r7, r3
 800958a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800958e:	460d      	mov	r5, r1
 8009590:	4616      	mov	r6, r2
 8009592:	b103      	cbz	r3, 8009596 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009594:	6038      	str	r0, [r7, #0]
 8009596:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009598:	b314      	cbz	r4, 80095e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800959a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800959e:	b1eb      	cbz	r3, 80095dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80095a4:	428d      	cmp	r5, r1
 80095a6:	db19      	blt.n	80095dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095a8:	8923      	ldrh	r3, [r4, #8]
 80095aa:	b289      	uxth	r1, r1
 80095ac:	440b      	add	r3, r1
 80095ae:	b21b      	sxth	r3, r3
 80095b0:	429d      	cmp	r5, r3
 80095b2:	da13      	bge.n	80095dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095b4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80095b8:	4296      	cmp	r6, r2
 80095ba:	db0f      	blt.n	80095dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095bc:	8963      	ldrh	r3, [r4, #10]
 80095be:	b292      	uxth	r2, r2
 80095c0:	4413      	add	r3, r2
 80095c2:	b21b      	sxth	r3, r3
 80095c4:	429e      	cmp	r6, r3
 80095c6:	da09      	bge.n	80095dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095c8:	6823      	ldr	r3, [r4, #0]
 80095ca:	1ab2      	subs	r2, r6, r2
 80095cc:	1a69      	subs	r1, r5, r1
 80095ce:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 80095d2:	b212      	sxth	r2, r2
 80095d4:	463b      	mov	r3, r7
 80095d6:	b209      	sxth	r1, r1
 80095d8:	4620      	mov	r0, r4
 80095da:	47c0      	blx	r8
 80095dc:	69a4      	ldr	r4, [r4, #24]
 80095de:	e7db      	b.n	8009598 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80095e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080095e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80095e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095e8:	4c6e      	ldr	r4, [pc, #440]	@ (80097a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80095ea:	b0a1      	sub	sp, #132	@ 0x84
 80095ec:	6824      	ldr	r4, [r4, #0]
 80095ee:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80095f0:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 80095f4:	9303      	str	r3, [sp, #12]
 80095f6:	2400      	movs	r4, #0
 80095f8:	802c      	strh	r4, [r5, #0]
 80095fa:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 80095fc:	802c      	strh	r4, [r5, #0]
 80095fe:	601c      	str	r4, [r3, #0]
 8009600:	4606      	mov	r6, r0
 8009602:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009606:	f7ff ffbd 	bl	8009584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800960a:	f1b9 0f03 	cmp.w	r9, #3
 800960e:	f340 80c2 	ble.w	8009796 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009612:	4631      	mov	r1, r6
 8009614:	a80c      	add	r0, sp, #48	@ 0x30
 8009616:	f004 fc7b 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800961a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800961e:	9306      	str	r3, [sp, #24]
 8009620:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8009624:	9307      	str	r3, [sp, #28]
 8009626:	9b03      	ldr	r3, [sp, #12]
 8009628:	f8d3 a000 	ldr.w	sl, [r3]
 800962c:	f1ba 0f00 	cmp.w	sl, #0
 8009630:	f000 80b4 	beq.w	800979c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009634:	4651      	mov	r1, sl
 8009636:	a810      	add	r0, sp, #64	@ 0x40
 8009638:	f004 fc6a 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800963c:	9b01      	ldr	r3, [sp, #4]
 800963e:	9a06      	ldr	r2, [sp, #24]
 8009640:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8009644:	189d      	adds	r5, r3, r2
 8009646:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800964a:	9a07      	ldr	r2, [sp, #28]
 800964c:	2002      	movs	r0, #2
 800964e:	fb91 f1f0 	sdiv	r1, r1, r0
 8009652:	4419      	add	r1, r3
 8009654:	1a6d      	subs	r5, r5, r1
 8009656:	9b02      	ldr	r3, [sp, #8]
 8009658:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800965c:	4413      	add	r3, r2
 800965e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8009662:	fb92 f2f0 	sdiv	r2, r2, r0
 8009666:	440a      	add	r2, r1
 8009668:	1a9b      	subs	r3, r3, r2
 800966a:	435b      	muls	r3, r3
 800966c:	fb05 3505 	mla	r5, r5, r5, r3
 8009670:	4f4d      	ldr	r7, [pc, #308]	@ (80097a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009672:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009674:	ac10      	add	r4, sp, #64	@ 0x40
 8009676:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009678:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800967a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800967c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800967e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009680:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009684:	f1b9 0f0c 	cmp.w	r9, #12
 8009688:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800968c:	f04f 0303 	mov.w	r3, #3
 8009690:	bfc8      	it	gt
 8009692:	4698      	movgt	r8, r3
 8009694:	f8cd 9000 	str.w	r9, [sp]
 8009698:	f04f 0400 	mov.w	r4, #0
 800969c:	bfdc      	itt	le
 800969e:	f109 32ff 	addle.w	r2, r9, #4294967295
 80096a2:	fb92 f8f3 	sdivle	r8, r2, r3
 80096a6:	1c63      	adds	r3, r4, #1
 80096a8:	aa10      	add	r2, sp, #64	@ 0x40
 80096aa:	f004 0401 	and.w	r4, r4, #1
 80096ae:	9308      	str	r3, [sp, #32]
 80096b0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80096b4:	9b00      	ldr	r3, [sp, #0]
 80096b6:	fb93 f3f8 	sdiv	r3, r3, r8
 80096ba:	b29b      	uxth	r3, r3
 80096bc:	3404      	adds	r4, #4
 80096be:	f04f 0b00 	mov.w	fp, #0
 80096c2:	9304      	str	r3, [sp, #16]
 80096c4:	9a04      	ldr	r2, [sp, #16]
 80096c6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80096ca:	fb13 f302 	smulbb	r3, r3, r2
 80096ce:	9a01      	ldr	r2, [sp, #4]
 80096d0:	b29b      	uxth	r3, r3
 80096d2:	1899      	adds	r1, r3, r2
 80096d4:	9305      	str	r3, [sp, #20]
 80096d6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80096da:	b209      	sxth	r1, r1
 80096dc:	4299      	cmp	r1, r3
 80096de:	db4d      	blt.n	800977c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096e0:	8932      	ldrh	r2, [r6, #8]
 80096e2:	4413      	add	r3, r2
 80096e4:	b21b      	sxth	r3, r3
 80096e6:	4299      	cmp	r1, r3
 80096e8:	da48      	bge.n	800977c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096ea:	9b04      	ldr	r3, [sp, #16]
 80096ec:	6827      	ldr	r7, [r4, #0]
 80096ee:	fb17 f703 	smulbb	r7, r7, r3
 80096f2:	9b02      	ldr	r3, [sp, #8]
 80096f4:	b2bf      	uxth	r7, r7
 80096f6:	18fa      	adds	r2, r7, r3
 80096f8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80096fc:	b212      	sxth	r2, r2
 80096fe:	429a      	cmp	r2, r3
 8009700:	db3c      	blt.n	800977c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009702:	8970      	ldrh	r0, [r6, #10]
 8009704:	4403      	add	r3, r0
 8009706:	b21b      	sxth	r3, r3
 8009708:	429a      	cmp	r2, r3
 800970a:	da37      	bge.n	800977c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800970c:	2300      	movs	r3, #0
 800970e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009710:	4630      	mov	r0, r6
 8009712:	ab0b      	add	r3, sp, #44	@ 0x2c
 8009714:	f7ff ff36 	bl	8009584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009718:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800971a:	b37a      	cbz	r2, 800977c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800971c:	4552      	cmp	r2, sl
 800971e:	d02d      	beq.n	800977c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009720:	4611      	mov	r1, r2
 8009722:	a80e      	add	r0, sp, #56	@ 0x38
 8009724:	9209      	str	r2, [sp, #36]	@ 0x24
 8009726:	f004 fbf3 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800972a:	9a06      	ldr	r2, [sp, #24]
 800972c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8009730:	9b01      	ldr	r3, [sp, #4]
 8009732:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8009736:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800973a:	4413      	add	r3, r2
 800973c:	f04f 0e02 	mov.w	lr, #2
 8009740:	fb91 f1fe 	sdiv	r1, r1, lr
 8009744:	4401      	add	r1, r0
 8009746:	1a58      	subs	r0, r3, r1
 8009748:	9a07      	ldr	r2, [sp, #28]
 800974a:	9b02      	ldr	r3, [sp, #8]
 800974c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8009750:	fb9c fcfe 	sdiv	ip, ip, lr
 8009754:	4413      	add	r3, r2
 8009756:	448c      	add	ip, r1
 8009758:	eba3 030c 	sub.w	r3, r3, ip
 800975c:	435b      	muls	r3, r3
 800975e:	fb00 3300 	mla	r3, r0, r0, r3
 8009762:	42ab      	cmp	r3, r5
 8009764:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009766:	d208      	bcs.n	800977a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009768:	9803      	ldr	r0, [sp, #12]
 800976a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800976c:	6001      	str	r1, [r0, #0]
 800976e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8009770:	9805      	ldr	r0, [sp, #20]
 8009772:	8008      	strh	r0, [r1, #0]
 8009774:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8009776:	461d      	mov	r5, r3
 8009778:	800f      	strh	r7, [r1, #0]
 800977a:	4692      	mov	sl, r2
 800977c:	f10b 0b01 	add.w	fp, fp, #1
 8009780:	f1bb 0f04 	cmp.w	fp, #4
 8009784:	f104 0408 	add.w	r4, r4, #8
 8009788:	d19c      	bne.n	80096c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800978a:	9b00      	ldr	r3, [sp, #0]
 800978c:	9c08      	ldr	r4, [sp, #32]
 800978e:	444b      	add	r3, r9
 8009790:	4544      	cmp	r4, r8
 8009792:	9300      	str	r3, [sp, #0]
 8009794:	d187      	bne.n	80096a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009796:	b021      	add	sp, #132	@ 0x84
 8009798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800979c:	f04f 35ff 	mov.w	r5, #4294967295
 80097a0:	e766      	b.n	8009670 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80097a2:	bf00      	nop
 80097a4:	20013288 	.word	0x20013288
 80097a8:	0801e738 	.word	0x0801e738

080097ac <_ZN8touchgfx4RectaNERKS0_>:
 80097ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097b0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80097b4:	888c      	ldrh	r4, [r1, #4]
 80097b6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80097ba:	443c      	add	r4, r7
 80097bc:	b2a4      	uxth	r4, r4
 80097be:	fa0f f884 	sxth.w	r8, r4
 80097c2:	45c1      	cmp	r9, r8
 80097c4:	da2f      	bge.n	8009826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097c6:	8882      	ldrh	r2, [r0, #4]
 80097c8:	444a      	add	r2, r9
 80097ca:	b292      	uxth	r2, r2
 80097cc:	fa0f fe82 	sxth.w	lr, r2
 80097d0:	4577      	cmp	r7, lr
 80097d2:	da28      	bge.n	8009826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80097d8:	88cb      	ldrh	r3, [r1, #6]
 80097da:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80097de:	442b      	add	r3, r5
 80097e0:	b21b      	sxth	r3, r3
 80097e2:	429e      	cmp	r6, r3
 80097e4:	da1f      	bge.n	8009826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097e6:	88c3      	ldrh	r3, [r0, #6]
 80097e8:	4433      	add	r3, r6
 80097ea:	b29b      	uxth	r3, r3
 80097ec:	fa0f fc83 	sxth.w	ip, r3
 80097f0:	4565      	cmp	r5, ip
 80097f2:	da18      	bge.n	8009826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097f4:	454f      	cmp	r7, r9
 80097f6:	bfb8      	it	lt
 80097f8:	464f      	movlt	r7, r9
 80097fa:	42b5      	cmp	r5, r6
 80097fc:	bfb8      	it	lt
 80097fe:	4635      	movlt	r5, r6
 8009800:	45f0      	cmp	r8, lr
 8009802:	bfd8      	it	le
 8009804:	4622      	movle	r2, r4
 8009806:	1bd2      	subs	r2, r2, r7
 8009808:	8082      	strh	r2, [r0, #4]
 800980a:	884a      	ldrh	r2, [r1, #2]
 800980c:	88c9      	ldrh	r1, [r1, #6]
 800980e:	8007      	strh	r7, [r0, #0]
 8009810:	440a      	add	r2, r1
 8009812:	b292      	uxth	r2, r2
 8009814:	b211      	sxth	r1, r2
 8009816:	458c      	cmp	ip, r1
 8009818:	bfa8      	it	ge
 800981a:	4613      	movge	r3, r2
 800981c:	1b5b      	subs	r3, r3, r5
 800981e:	80c3      	strh	r3, [r0, #6]
 8009820:	8045      	strh	r5, [r0, #2]
 8009822:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009826:	2300      	movs	r3, #0
 8009828:	8003      	strh	r3, [r0, #0]
 800982a:	8043      	strh	r3, [r0, #2]
 800982c:	8083      	strh	r3, [r0, #4]
 800982e:	80c3      	strh	r3, [r0, #6]
 8009830:	e7f7      	b.n	8009822 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009832 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009832:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009836:	2b00      	cmp	r3, #0
 8009838:	dd06      	ble.n	8009848 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800983a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800983e:	2800      	cmp	r0, #0
 8009840:	bfcc      	ite	gt
 8009842:	2000      	movgt	r0, #0
 8009844:	2001      	movle	r0, #1
 8009846:	4770      	bx	lr
 8009848:	2001      	movs	r0, #1
 800984a:	4770      	bx	lr

0800984c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800984c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009850:	2300      	movs	r3, #0
 8009852:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8009854:	8003      	strh	r3, [r0, #0]
 8009856:	4604      	mov	r4, r0
 8009858:	8043      	strh	r3, [r0, #2]
 800985a:	8083      	strh	r3, [r0, #4]
 800985c:	80c3      	strh	r3, [r0, #6]
 800985e:	2d00      	cmp	r5, #0
 8009860:	d040      	beq.n	80098e4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009862:	1d28      	adds	r0, r5, #4
 8009864:	f7ff ffe5 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009868:	b988      	cbnz	r0, 800988e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800986a:	4620      	mov	r0, r4
 800986c:	f7ff ffe1 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009870:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009874:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009878:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800987c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009880:	b138      	cbz	r0, 8009892 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009882:	8022      	strh	r2, [r4, #0]
 8009884:	8063      	strh	r3, [r4, #2]
 8009886:	f8a4 e004 	strh.w	lr, [r4, #4]
 800988a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800988e:	69ad      	ldr	r5, [r5, #24]
 8009890:	e7e5      	b.n	800985e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009892:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009896:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800989a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800989e:	4290      	cmp	r0, r2
 80098a0:	4607      	mov	r7, r0
 80098a2:	bfa8      	it	ge
 80098a4:	4617      	movge	r7, r2
 80098a6:	4472      	add	r2, lr
 80098a8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80098ac:	8027      	strh	r7, [r4, #0]
 80098ae:	4299      	cmp	r1, r3
 80098b0:	460e      	mov	r6, r1
 80098b2:	4440      	add	r0, r8
 80098b4:	bfa8      	it	ge
 80098b6:	461e      	movge	r6, r3
 80098b8:	4471      	add	r1, lr
 80098ba:	4463      	add	r3, ip
 80098bc:	b200      	sxth	r0, r0
 80098be:	b212      	sxth	r2, r2
 80098c0:	b209      	sxth	r1, r1
 80098c2:	b21b      	sxth	r3, r3
 80098c4:	4290      	cmp	r0, r2
 80098c6:	bfac      	ite	ge
 80098c8:	ebc7 0200 	rsbge	r2, r7, r0
 80098cc:	ebc7 0202 	rsblt	r2, r7, r2
 80098d0:	4299      	cmp	r1, r3
 80098d2:	bfac      	ite	ge
 80098d4:	ebc6 0301 	rsbge	r3, r6, r1
 80098d8:	ebc6 0303 	rsblt	r3, r6, r3
 80098dc:	8066      	strh	r6, [r4, #2]
 80098de:	80a2      	strh	r2, [r4, #4]
 80098e0:	80e3      	strh	r3, [r4, #6]
 80098e2:	e7d4      	b.n	800988e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80098e4:	4620      	mov	r0, r4
 80098e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80098ea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80098ee:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80098f2:	b383      	cbz	r3, 8009956 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80098f4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80098f6:	b374      	cbz	r4, 8009956 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80098f8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80098fc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009900:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009904:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009908:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800990c:	b303      	cbz	r3, 8009950 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800990e:	4668      	mov	r0, sp
 8009910:	1d21      	adds	r1, r4, #4
 8009912:	f8ad 5000 	strh.w	r5, [sp]
 8009916:	f8ad 6002 	strh.w	r6, [sp, #2]
 800991a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800991e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009922:	f7ff ff43 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8009926:	4668      	mov	r0, sp
 8009928:	f7ff ff83 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800992c:	b980      	cbnz	r0, 8009950 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800992e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009932:	88a2      	ldrh	r2, [r4, #4]
 8009934:	1a9b      	subs	r3, r3, r2
 8009936:	f8ad 3000 	strh.w	r3, [sp]
 800993a:	88e2      	ldrh	r2, [r4, #6]
 800993c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009940:	1a9b      	subs	r3, r3, r2
 8009942:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009946:	6823      	ldr	r3, [r4, #0]
 8009948:	4669      	mov	r1, sp
 800994a:	689b      	ldr	r3, [r3, #8]
 800994c:	4620      	mov	r0, r4
 800994e:	4798      	blx	r3
 8009950:	69a4      	ldr	r4, [r4, #24]
 8009952:	2c00      	cmp	r4, #0
 8009954:	d1d8      	bne.n	8009908 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009956:	b002      	add	sp, #8
 8009958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800995c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800995c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800995e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009962:	460d      	mov	r5, r1
 8009964:	4616      	mov	r6, r2
 8009966:	b323      	cbz	r3, 80099b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009968:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800996a:	b314      	cbz	r4, 80099b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800996c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009970:	b1eb      	cbz	r3, 80099ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009972:	6828      	ldr	r0, [r5, #0]
 8009974:	6869      	ldr	r1, [r5, #4]
 8009976:	466b      	mov	r3, sp
 8009978:	c303      	stmia	r3!, {r0, r1}
 800997a:	4668      	mov	r0, sp
 800997c:	1d21      	adds	r1, r4, #4
 800997e:	f7ff ff15 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8009982:	4668      	mov	r0, sp
 8009984:	f7ff ff55 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009988:	b988      	cbnz	r0, 80099ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800998a:	f8bd 3000 	ldrh.w	r3, [sp]
 800998e:	88a2      	ldrh	r2, [r4, #4]
 8009990:	1a9b      	subs	r3, r3, r2
 8009992:	f8ad 3000 	strh.w	r3, [sp]
 8009996:	88e2      	ldrh	r2, [r4, #6]
 8009998:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800999c:	1a9b      	subs	r3, r3, r2
 800999e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80099a2:	6823      	ldr	r3, [r4, #0]
 80099a4:	4632      	mov	r2, r6
 80099a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80099a8:	4669      	mov	r1, sp
 80099aa:	4620      	mov	r0, r4
 80099ac:	4798      	blx	r3
 80099ae:	69a4      	ldr	r4, [r4, #24]
 80099b0:	e7db      	b.n	800996a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80099b2:	b002      	add	sp, #8
 80099b4:	bd70      	pop	{r4, r5, r6, pc}

080099b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80099b6:	b513      	push	{r0, r1, r4, lr}
 80099b8:	6803      	ldr	r3, [r0, #0]
 80099ba:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 80099be:	2300      	movs	r3, #0
 80099c0:	e9cd 3300 	strd	r3, r3, [sp]
 80099c4:	466b      	mov	r3, sp
 80099c6:	47a0      	blx	r4
 80099c8:	b002      	add	sp, #8
 80099ca:	bd10      	pop	{r4, pc}

080099cc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80099cc:	2301      	movs	r3, #1
 80099ce:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 80099d2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 80099d6:	4770      	bx	lr

080099d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80099d8:	2301      	movs	r3, #1
 80099da:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 80099de:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 80099e2:	4770      	bx	lr

080099e4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80099e4:	6843      	ldr	r3, [r0, #4]
 80099e6:	2201      	movs	r2, #1
 80099e8:	725a      	strb	r2, [r3, #9]
 80099ea:	6840      	ldr	r0, [r0, #4]
 80099ec:	6803      	ldr	r3, [r0, #0]
 80099ee:	691b      	ldr	r3, [r3, #16]
 80099f0:	4718      	bx	r3

080099f2 <_ZN8touchgfx3HAL8flushDMAEv>:
 80099f2:	6840      	ldr	r0, [r0, #4]
 80099f4:	6803      	ldr	r3, [r0, #0]
 80099f6:	689b      	ldr	r3, [r3, #8]
 80099f8:	4718      	bx	r3

080099fa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80099fa:	b530      	push	{r4, r5, lr}
 80099fc:	b08b      	sub	sp, #44	@ 0x2c
 80099fe:	6804      	ldr	r4, [r0, #0]
 8009a00:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8009a04:	9509      	str	r5, [sp, #36]	@ 0x24
 8009a06:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8009a0a:	9508      	str	r5, [sp, #32]
 8009a0c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8009a10:	9507      	str	r5, [sp, #28]
 8009a12:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8009a16:	9506      	str	r5, [sp, #24]
 8009a18:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8009a1c:	9505      	str	r5, [sp, #20]
 8009a1e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8009a22:	9504      	str	r5, [sp, #16]
 8009a24:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8009a28:	9503      	str	r5, [sp, #12]
 8009a2a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8009a2e:	9502      	str	r5, [sp, #8]
 8009a30:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8009a34:	e9cd 3500 	strd	r3, r5, [sp]
 8009a38:	4613      	mov	r3, r2
 8009a3a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8009a3c:	2200      	movs	r2, #0
 8009a3e:	47a0      	blx	r4
 8009a40:	b00b      	add	sp, #44	@ 0x2c
 8009a42:	bd30      	pop	{r4, r5, pc}

08009a44 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009a44:	4b04      	ldr	r3, [pc, #16]	@ (8009a58 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009a46:	781b      	ldrb	r3, [r3, #0]
 8009a48:	b123      	cbz	r3, 8009a54 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009a4a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8009a4e:	f080 0001 	eor.w	r0, r0, #1
 8009a52:	4770      	bx	lr
 8009a54:	2001      	movs	r0, #1
 8009a56:	4770      	bx	lr
 8009a58:	20013286 	.word	0x20013286

08009a5c <_ZN8touchgfx3HAL8endFrameEv>:
 8009a5c:	b510      	push	{r4, lr}
 8009a5e:	4604      	mov	r4, r0
 8009a60:	6840      	ldr	r0, [r0, #4]
 8009a62:	6803      	ldr	r3, [r0, #0]
 8009a64:	689b      	ldr	r3, [r3, #8]
 8009a66:	4798      	blx	r3
 8009a68:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8009a6c:	b113      	cbz	r3, 8009a74 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009a6e:	2301      	movs	r3, #1
 8009a70:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8009a74:	bd10      	pop	{r4, pc}

08009a76 <_ZN8touchgfx3HAL10initializeEv>:
 8009a76:	b510      	push	{r4, lr}
 8009a78:	4604      	mov	r4, r0
 8009a7a:	f7f6 fffd 	bl	8000a78 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009a7e:	f7f6 ff05 	bl	800088c <_ZN8touchgfx4GPIO4initEv>
 8009a82:	6860      	ldr	r0, [r4, #4]
 8009a84:	6803      	ldr	r3, [r0, #0]
 8009a86:	68db      	ldr	r3, [r3, #12]
 8009a88:	4798      	blx	r3
 8009a8a:	68e0      	ldr	r0, [r4, #12]
 8009a8c:	6803      	ldr	r3, [r0, #0]
 8009a8e:	689b      	ldr	r3, [r3, #8]
 8009a90:	4798      	blx	r3
 8009a92:	6823      	ldr	r3, [r4, #0]
 8009a94:	4620      	mov	r0, r4
 8009a96:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a9c:	4718      	bx	r3
	...

08009aa0 <_ZN8touchgfx3HAL4tickEv>:
 8009aa0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009aa2:	6803      	ldr	r3, [r0, #0]
 8009aa4:	4d5b      	ldr	r5, [pc, #364]	@ (8009c14 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009aa6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8009aaa:	4604      	mov	r4, r0
 8009aac:	4798      	blx	r3
 8009aae:	2800      	cmp	r0, #0
 8009ab0:	f000 8095 	beq.w	8009bde <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009ab4:	2001      	movs	r0, #1
 8009ab6:	f7f6 fe67 	bl	8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009aba:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8009abe:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009ac2:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8009ac6:	2600      	movs	r6, #0
 8009ac8:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8009acc:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8009ad0:	b133      	cbz	r3, 8009ae0 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009ad2:	6823      	ldr	r3, [r4, #0]
 8009ad4:	4620      	mov	r0, r4
 8009ad6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8009ada:	4798      	blx	r3
 8009adc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8009ae0:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8009ae4:	6862      	ldr	r2, [r4, #4]
 8009ae6:	f083 0301 	eor.w	r3, r3, #1
 8009aea:	7253      	strb	r3, [r2, #9]
 8009aec:	2601      	movs	r6, #1
 8009aee:	702e      	strb	r6, [r5, #0]
 8009af0:	f003 f8b2 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 8009af4:	6803      	ldr	r3, [r0, #0]
 8009af6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009af8:	4798      	blx	r3
 8009afa:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009afe:	b90b      	cbnz	r3, 8009b04 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009b00:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8009b04:	f003 f8a8 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 8009b08:	6803      	ldr	r3, [r0, #0]
 8009b0a:	695b      	ldr	r3, [r3, #20]
 8009b0c:	4798      	blx	r3
 8009b0e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009b10:	6803      	ldr	r3, [r0, #0]
 8009b12:	691b      	ldr	r3, [r3, #16]
 8009b14:	4798      	blx	r3
 8009b16:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009b1a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8009b1e:	3b01      	subs	r3, #1
 8009b20:	b2db      	uxtb	r3, r3
 8009b22:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009b26:	b10a      	cbz	r2, 8009b2c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009b28:	2b00      	cmp	r3, #0
 8009b2a:	d1eb      	bne.n	8009b04 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009b2c:	4a3a      	ldr	r2, [pc, #232]	@ (8009c18 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009b2e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8009b32:	7813      	ldrb	r3, [r2, #0]
 8009b34:	3301      	adds	r3, #1
 8009b36:	b25b      	sxtb	r3, r3
 8009b38:	4299      	cmp	r1, r3
 8009b3a:	7013      	strb	r3, [r2, #0]
 8009b3c:	dc10      	bgt.n	8009b60 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009b3e:	68e0      	ldr	r0, [r4, #12]
 8009b40:	2300      	movs	r3, #0
 8009b42:	7013      	strb	r3, [r2, #0]
 8009b44:	6803      	ldr	r3, [r0, #0]
 8009b46:	aa03      	add	r2, sp, #12
 8009b48:	68db      	ldr	r3, [r3, #12]
 8009b4a:	a902      	add	r1, sp, #8
 8009b4c:	4798      	blx	r3
 8009b4e:	6823      	ldr	r3, [r4, #0]
 8009b50:	2800      	cmp	r0, #0
 8009b52:	d050      	beq.n	8009bf6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8009b54:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8009b58:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009b5c:	4620      	mov	r0, r4
 8009b5e:	4798      	blx	r3
 8009b60:	6960      	ldr	r0, [r4, #20]
 8009b62:	2300      	movs	r3, #0
 8009b64:	f88d 3007 	strb.w	r3, [sp, #7]
 8009b68:	b158      	cbz	r0, 8009b82 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009b6a:	6803      	ldr	r3, [r0, #0]
 8009b6c:	f10d 0107 	add.w	r1, sp, #7
 8009b70:	68db      	ldr	r3, [r3, #12]
 8009b72:	4798      	blx	r3
 8009b74:	b128      	cbz	r0, 8009b82 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009b76:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009b78:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009b7c:	6803      	ldr	r3, [r0, #0]
 8009b7e:	68db      	ldr	r3, [r3, #12]
 8009b80:	4798      	blx	r3
 8009b82:	f104 001c 	add.w	r0, r4, #28
 8009b86:	f013 fcab 	bl	801d4e0 <_ZN8touchgfx8Gestures4tickEv>
 8009b8a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8009b8e:	b30b      	cbz	r3, 8009bd4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009b90:	6920      	ldr	r0, [r4, #16]
 8009b92:	6803      	ldr	r3, [r0, #0]
 8009b94:	691b      	ldr	r3, [r3, #16]
 8009b96:	4798      	blx	r3
 8009b98:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009b9a:	4606      	mov	r6, r0
 8009b9c:	b903      	cbnz	r3, 8009ba0 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009b9e:	6760      	str	r0, [r4, #116]	@ 0x74
 8009ba0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009ba2:	4a1e      	ldr	r2, [pc, #120]	@ (8009c1c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009ba4:	1af3      	subs	r3, r6, r3
 8009ba6:	4293      	cmp	r3, r2
 8009ba8:	d914      	bls.n	8009bd4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009baa:	6920      	ldr	r0, [r4, #16]
 8009bac:	6803      	ldr	r3, [r0, #0]
 8009bae:	699b      	ldr	r3, [r3, #24]
 8009bb0:	4798      	blx	r3
 8009bb2:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8009bb4:	2264      	movs	r2, #100	@ 0x64
 8009bb6:	1af3      	subs	r3, r6, r3
 8009bb8:	fbb3 f3f2 	udiv	r3, r3, r2
 8009bbc:	fbb0 f0f3 	udiv	r0, r0, r3
 8009bc0:	2800      	cmp	r0, #0
 8009bc2:	dc1d      	bgt.n	8009c00 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009bc4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8009bc8:	6920      	ldr	r0, [r4, #16]
 8009bca:	6803      	ldr	r3, [r0, #0]
 8009bcc:	2100      	movs	r1, #0
 8009bce:	69db      	ldr	r3, [r3, #28]
 8009bd0:	4798      	blx	r3
 8009bd2:	6766      	str	r6, [r4, #116]	@ 0x74
 8009bd4:	f003 f840 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 8009bd8:	6803      	ldr	r3, [r0, #0]
 8009bda:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009bdc:	4798      	blx	r3
 8009bde:	6823      	ldr	r3, [r4, #0]
 8009be0:	4620      	mov	r0, r4
 8009be2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8009be6:	4798      	blx	r3
 8009be8:	2001      	movs	r0, #1
 8009bea:	f7f6 fdf7 	bl	80007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009bee:	2300      	movs	r3, #0
 8009bf0:	702b      	strb	r3, [r5, #0]
 8009bf2:	b004      	add	sp, #16
 8009bf4:	bd70      	pop	{r4, r5, r6, pc}
 8009bf6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8009bfa:	4620      	mov	r0, r4
 8009bfc:	4798      	blx	r3
 8009bfe:	e7af      	b.n	8009b60 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009c00:	2863      	cmp	r0, #99	@ 0x63
 8009c02:	bfcb      	itete	gt
 8009c04:	2300      	movgt	r3, #0
 8009c06:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8009c0a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8009c0e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8009c12:	e7d9      	b.n	8009bc8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009c14:	2001328c 	.word	0x2001328c
 8009c18:	2001328d 	.word	0x2001328d
 8009c1c:	05f5e100 	.word	0x05f5e100

08009c20 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009c20:	b510      	push	{r4, lr}
 8009c22:	4604      	mov	r4, r0
 8009c24:	f7f6 ff58 	bl	8000ad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8009c28:	6863      	ldr	r3, [r4, #4]
 8009c2a:	2200      	movs	r2, #0
 8009c2c:	729a      	strb	r2, [r3, #10]
 8009c2e:	bd10      	pop	{r4, pc}

08009c30 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009c30:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8009c32:	301c      	adds	r0, #28
 8009c34:	f013 bc52 	b.w	801d4dc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009c38 <_ZN8touchgfx3HAL5touchEll>:
 8009c38:	b530      	push	{r4, r5, lr}
 8009c3a:	b087      	sub	sp, #28
 8009c3c:	4604      	mov	r4, r0
 8009c3e:	a804      	add	r0, sp, #16
 8009c40:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009c44:	f002 fdf0 	bl	800c828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009c48:	9b04      	ldr	r3, [sp, #16]
 8009c4a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009c4e:	a906      	add	r1, sp, #24
 8009c50:	9b05      	ldr	r3, [sp, #20]
 8009c52:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009c56:	a803      	add	r0, sp, #12
 8009c58:	f002 fe38 	bl	800c8cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009c5c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8009c60:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009c64:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009c68:	f104 001c 	add.w	r0, r4, #28
 8009c6c:	b189      	cbz	r1, 8009c92 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009c6e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8009c72:	9300      	str	r3, [sp, #0]
 8009c74:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8009c78:	4613      	mov	r3, r2
 8009c7a:	462a      	mov	r2, r5
 8009c7c:	f013 fc3e 	bl	801d4fc <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009c80:	b128      	cbz	r0, 8009c8e <_ZN8touchgfx3HAL5touchEll+0x56>
 8009c82:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009c86:	6623      	str	r3, [r4, #96]	@ 0x60
 8009c88:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009c8c:	6663      	str	r3, [r4, #100]	@ 0x64
 8009c8e:	b007      	add	sp, #28
 8009c90:	bd30      	pop	{r4, r5, pc}
 8009c92:	f013 fc73 	bl	801d57c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009c96:	2301      	movs	r3, #1
 8009c98:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8009c9c:	e7f1      	b.n	8009c82 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009c9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009c9e:	b510      	push	{r4, lr}
 8009ca0:	2b00      	cmp	r3, #0
 8009ca2:	d046      	beq.n	8009d32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009ca4:	ea81 0002 	eor.w	r0, r1, r2
 8009ca8:	07c4      	lsls	r4, r0, #31
 8009caa:	d508      	bpl.n	8009cbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009cac:	440b      	add	r3, r1
 8009cae:	3a01      	subs	r2, #1
 8009cb0:	428b      	cmp	r3, r1
 8009cb2:	d93e      	bls.n	8009d32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009cb4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009cb8:	f801 0b01 	strb.w	r0, [r1], #1
 8009cbc:	e7f8      	b.n	8009cb0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009cbe:	07d0      	lsls	r0, r2, #31
 8009cc0:	bf42      	ittt	mi
 8009cc2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009cc6:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009cca:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009cce:	2b01      	cmp	r3, #1
 8009cd0:	d911      	bls.n	8009cf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009cd2:	ea81 0402 	eor.w	r4, r1, r2
 8009cd6:	07a4      	lsls	r4, r4, #30
 8009cd8:	4610      	mov	r0, r2
 8009cda:	d022      	beq.n	8009d22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009cdc:	f023 0401 	bic.w	r4, r3, #1
 8009ce0:	440c      	add	r4, r1
 8009ce2:	428c      	cmp	r4, r1
 8009ce4:	4602      	mov	r2, r0
 8009ce6:	d904      	bls.n	8009cf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009ce8:	8812      	ldrh	r2, [r2, #0]
 8009cea:	f821 2b02 	strh.w	r2, [r1], #2
 8009cee:	3002      	adds	r0, #2
 8009cf0:	e7f7      	b.n	8009ce2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009cf2:	f003 0301 	and.w	r3, r3, #1
 8009cf6:	f023 0003 	bic.w	r0, r3, #3
 8009cfa:	4408      	add	r0, r1
 8009cfc:	4288      	cmp	r0, r1
 8009cfe:	4614      	mov	r4, r2
 8009d00:	d904      	bls.n	8009d0c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009d02:	6824      	ldr	r4, [r4, #0]
 8009d04:	f841 4b04 	str.w	r4, [r1], #4
 8009d08:	3204      	adds	r2, #4
 8009d0a:	e7f7      	b.n	8009cfc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009d0c:	f003 0303 	and.w	r3, r3, #3
 8009d10:	440b      	add	r3, r1
 8009d12:	3a01      	subs	r2, #1
 8009d14:	428b      	cmp	r3, r1
 8009d16:	d90c      	bls.n	8009d32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009d18:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009d1c:	f801 0b01 	strb.w	r0, [r1], #1
 8009d20:	e7f8      	b.n	8009d14 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009d22:	0790      	lsls	r0, r2, #30
 8009d24:	d0e7      	beq.n	8009cf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d26:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009d2a:	f821 0b02 	strh.w	r0, [r1], #2
 8009d2e:	3b02      	subs	r3, #2
 8009d30:	e7e1      	b.n	8009cf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d32:	2001      	movs	r0, #1
 8009d34:	bd10      	pop	{r4, pc}

08009d36 <_ZN8touchgfx3HAL7noTouchEv>:
 8009d36:	b510      	push	{r4, lr}
 8009d38:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8009d3c:	4604      	mov	r4, r0
 8009d3e:	b153      	cbz	r3, 8009d56 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009d40:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8009d44:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8009d48:	2101      	movs	r1, #1
 8009d4a:	301c      	adds	r0, #28
 8009d4c:	f013 fc16 	bl	801d57c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009d50:	2300      	movs	r3, #0
 8009d52:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8009d56:	bd10      	pop	{r4, pc}

08009d58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009d58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d5c:	b085      	sub	sp, #20
 8009d5e:	ad04      	add	r5, sp, #16
 8009d60:	4604      	mov	r4, r0
 8009d62:	2000      	movs	r0, #0
 8009d64:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009d68:	69a0      	ldr	r0, [r4, #24]
 8009d6a:	6806      	ldr	r6, [r0, #0]
 8009d6c:	9501      	str	r5, [sp, #4]
 8009d6e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8009d72:	9500      	str	r5, [sp, #0]
 8009d74:	6835      	ldr	r5, [r6, #0]
 8009d76:	4699      	mov	r9, r3
 8009d78:	460f      	mov	r7, r1
 8009d7a:	4690      	mov	r8, r2
 8009d7c:	47a8      	blx	r5
 8009d7e:	4d10      	ldr	r5, [pc, #64]	@ (8009dc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8009d80:	4606      	mov	r6, r0
 8009d82:	f8a5 9000 	strh.w	r9, [r5]
 8009d86:	f7f8 fba7 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 8009d8a:	6803      	ldr	r3, [r0, #0]
 8009d8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d8e:	4798      	blx	r3
 8009d90:	b128      	cbz	r0, 8009d9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8009d92:	2801      	cmp	r0, #1
 8009d94:	d00b      	beq.n	8009dae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8009d96:	4630      	mov	r0, r6
 8009d98:	b005      	add	sp, #20
 8009d9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009d9e:	882b      	ldrh	r3, [r5, #0]
 8009da0:	fb08 7203 	mla	r2, r8, r3, r7
 8009da4:	9b03      	ldr	r3, [sp, #12]
 8009da6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009daa:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8009dac:	e7f3      	b.n	8009d96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009dae:	882a      	ldrh	r2, [r5, #0]
 8009db0:	9b03      	ldr	r3, [sp, #12]
 8009db2:	fb08 7202 	mla	r2, r8, r2, r7
 8009db6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009dba:	1a9a      	subs	r2, r3, r2
 8009dbc:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8009dbe:	e7ea      	b.n	8009d96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009dc0:	20013282 	.word	0x20013282

08009dc4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009dc6:	b08b      	sub	sp, #44	@ 0x2c
 8009dc8:	4617      	mov	r7, r2
 8009dca:	4604      	mov	r4, r0
 8009dcc:	460e      	mov	r6, r1
 8009dce:	461d      	mov	r5, r3
 8009dd0:	f7f8 fb82 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 8009dd4:	6803      	ldr	r3, [r0, #0]
 8009dd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009dd8:	4798      	blx	r3
 8009dda:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8009dde:	9007      	str	r0, [sp, #28]
 8009de0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009de4:	4b0d      	ldr	r3, [pc, #52]	@ (8009e1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009de6:	6822      	ldr	r2, [r4, #0]
 8009de8:	881b      	ldrh	r3, [r3, #0]
 8009dea:	9306      	str	r3, [sp, #24]
 8009dec:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8009df0:	9305      	str	r3, [sp, #20]
 8009df2:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8009df6:	9304      	str	r3, [sp, #16]
 8009df8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009dfc:	9303      	str	r3, [sp, #12]
 8009dfe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8009e02:	9302      	str	r3, [sp, #8]
 8009e04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8009e08:	e9cd 5300 	strd	r5, r3, [sp]
 8009e0c:	4631      	mov	r1, r6
 8009e0e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8009e10:	463b      	mov	r3, r7
 8009e12:	2200      	movs	r2, #0
 8009e14:	4620      	mov	r0, r4
 8009e16:	47a8      	blx	r5
 8009e18:	b00b      	add	sp, #44	@ 0x2c
 8009e1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e1c:	20013282 	.word	0x20013282

08009e20 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009e20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e24:	4698      	mov	r8, r3
 8009e26:	6803      	ldr	r3, [r0, #0]
 8009e28:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8009e2a:	4b15      	ldr	r3, [pc, #84]	@ (8009e80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009e2c:	b08b      	sub	sp, #44	@ 0x2c
 8009e2e:	4617      	mov	r7, r2
 8009e30:	f8b3 9000 	ldrh.w	r9, [r3]
 8009e34:	460e      	mov	r6, r1
 8009e36:	4604      	mov	r4, r0
 8009e38:	f7f8 fb4e 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 8009e3c:	6803      	ldr	r3, [r0, #0]
 8009e3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009e40:	4798      	blx	r3
 8009e42:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8009e46:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009e4a:	2302      	movs	r3, #2
 8009e4c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009e50:	2301      	movs	r3, #1
 8009e52:	9305      	str	r3, [sp, #20]
 8009e54:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8009e58:	9304      	str	r3, [sp, #16]
 8009e5a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8009e5e:	9303      	str	r3, [sp, #12]
 8009e60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8009e64:	9302      	str	r3, [sp, #8]
 8009e66:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8009e6a:	2200      	movs	r2, #0
 8009e6c:	e9cd 8300 	strd	r8, r3, [sp]
 8009e70:	4631      	mov	r1, r6
 8009e72:	463b      	mov	r3, r7
 8009e74:	4620      	mov	r0, r4
 8009e76:	47a8      	blx	r5
 8009e78:	b00b      	add	sp, #44	@ 0x2c
 8009e7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e7e:	bf00      	nop
 8009e80:	20013282 	.word	0x20013282

08009e84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009e84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e88:	4698      	mov	r8, r3
 8009e8a:	6803      	ldr	r3, [r0, #0]
 8009e8c:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8009e8e:	4b11      	ldr	r3, [pc, #68]	@ (8009ed4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009e90:	b087      	sub	sp, #28
 8009e92:	f8b3 9000 	ldrh.w	r9, [r3]
 8009e96:	460e      	mov	r6, r1
 8009e98:	4617      	mov	r7, r2
 8009e9a:	4604      	mov	r4, r0
 8009e9c:	f7f8 fb1c 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 8009ea0:	6803      	ldr	r3, [r0, #0]
 8009ea2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009ea4:	4798      	blx	r3
 8009ea6:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8009eaa:	f8cd 900c 	str.w	r9, [sp, #12]
 8009eae:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009eb2:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8009eb6:	9302      	str	r3, [sp, #8]
 8009eb8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8009ebc:	9301      	str	r3, [sp, #4]
 8009ebe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8009ec2:	9300      	str	r3, [sp, #0]
 8009ec4:	463a      	mov	r2, r7
 8009ec6:	4643      	mov	r3, r8
 8009ec8:	4631      	mov	r1, r6
 8009eca:	4620      	mov	r0, r4
 8009ecc:	47a8      	blx	r5
 8009ece:	b007      	add	sp, #28
 8009ed0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ed4:	20013282 	.word	0x20013282

08009ed8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009edc:	4604      	mov	r4, r0
 8009ede:	b08f      	sub	sp, #60	@ 0x3c
 8009ee0:	4610      	mov	r0, r2
 8009ee2:	460d      	mov	r5, r1
 8009ee4:	4691      	mov	r9, r2
 8009ee6:	461e      	mov	r6, r3
 8009ee8:	f005 fee2 	bl	800fcb0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009eec:	2800      	cmp	r0, #0
 8009eee:	f000 809d 	beq.w	800a02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8009ef2:	6823      	ldr	r3, [r4, #0]
 8009ef4:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800a090 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009ef8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009efa:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800a094 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8009efe:	4f61      	ldr	r7, [pc, #388]	@ (800a084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009f00:	4620      	mov	r0, r4
 8009f02:	4798      	blx	r3
 8009f04:	6823      	ldr	r3, [r4, #0]
 8009f06:	4620      	mov	r0, r4
 8009f08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009f0a:	4798      	blx	r3
 8009f0c:	f8bb 3000 	ldrh.w	r3, [fp]
 8009f10:	9301      	str	r3, [sp, #4]
 8009f12:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8009f16:	f8ba 3000 	ldrh.w	r3, [sl]
 8009f1a:	9302      	str	r3, [sp, #8]
 8009f1c:	883b      	ldrh	r3, [r7, #0]
 8009f1e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009f22:	9303      	str	r3, [sp, #12]
 8009f24:	4b58      	ldr	r3, [pc, #352]	@ (800a088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009f26:	9305      	str	r3, [sp, #20]
 8009f28:	881a      	ldrh	r2, [r3, #0]
 8009f2a:	9204      	str	r2, [sp, #16]
 8009f2c:	4640      	mov	r0, r8
 8009f2e:	f005 ff53 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009f32:	8038      	strh	r0, [r7, #0]
 8009f34:	4640      	mov	r0, r8
 8009f36:	f005 ff83 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009f3a:	9b05      	ldr	r3, [sp, #20]
 8009f3c:	b280      	uxth	r0, r0
 8009f3e:	8018      	strh	r0, [r3, #0]
 8009f40:	4b52      	ldr	r3, [pc, #328]	@ (800a08c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009f42:	781b      	ldrb	r3, [r3, #0]
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	d174      	bne.n	800a032 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8009f48:	883b      	ldrh	r3, [r7, #0]
 8009f4a:	f8ab 3000 	strh.w	r3, [fp]
 8009f4e:	f8aa 0000 	strh.w	r0, [sl]
 8009f52:	4648      	mov	r0, r9
 8009f54:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8009f58:	f005 feaa 	bl	800fcb0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009f5c:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8009f60:	2200      	movs	r2, #0
 8009f62:	4611      	mov	r1, r2
 8009f64:	4628      	mov	r0, r5
 8009f66:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009f6a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009f6e:	f7f8 fd6c 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 8009f72:	2301      	movs	r3, #1
 8009f74:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8009f78:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8009f7c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009f80:	2b00      	cmp	r3, #0
 8009f82:	dd5c      	ble.n	800a03e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009f84:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009f88:	2b00      	cmp	r3, #0
 8009f8a:	dd58      	ble.n	800a03e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009f8c:	462a      	mov	r2, r5
 8009f8e:	ab0a      	add	r3, sp, #40	@ 0x28
 8009f90:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009f94:	6851      	ldr	r1, [r2, #4]
 8009f96:	c303      	stmia	r3!, {r0, r1}
 8009f98:	4631      	mov	r1, r6
 8009f9a:	a80a      	add	r0, sp, #40	@ 0x28
 8009f9c:	f7ff fc06 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8009fa0:	4b38      	ldr	r3, [pc, #224]	@ (800a084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009fa2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009fa6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8009faa:	2100      	movs	r1, #0
 8009fac:	aa0a      	add	r2, sp, #40	@ 0x28
 8009fae:	4b36      	ldr	r3, [pc, #216]	@ (800a088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009fb0:	910c      	str	r1, [sp, #48]	@ 0x30
 8009fb2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009fb6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009fba:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8009fbe:	ab08      	add	r3, sp, #32
 8009fc0:	e883 0003 	stmia.w	r3, {r0, r1}
 8009fc4:	4618      	mov	r0, r3
 8009fc6:	a90c      	add	r1, sp, #48	@ 0x30
 8009fc8:	f7ff fbf0 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8009fcc:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009fce:	2b00      	cmp	r3, #0
 8009fd0:	d13c      	bne.n	800a04c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8009fd2:	2000      	movs	r0, #0
 8009fd4:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8009fd8:	2600      	movs	r6, #0
 8009fda:	682a      	ldr	r2, [r5, #0]
 8009fdc:	696b      	ldr	r3, [r5, #20]
 8009fde:	616e      	str	r6, [r5, #20]
 8009fe0:	9305      	str	r3, [sp, #20]
 8009fe2:	6892      	ldr	r2, [r2, #8]
 8009fe4:	a908      	add	r1, sp, #32
 8009fe6:	4628      	mov	r0, r5
 8009fe8:	4790      	blx	r2
 8009fea:	9b05      	ldr	r3, [sp, #20]
 8009fec:	616b      	str	r3, [r5, #20]
 8009fee:	4652      	mov	r2, sl
 8009ff0:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8009ff4:	4649      	mov	r1, r9
 8009ff6:	4628      	mov	r0, r5
 8009ff8:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8009ffc:	f7f8 fd25 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 800a000:	4b23      	ldr	r3, [pc, #140]	@ (800a090 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a002:	9a01      	ldr	r2, [sp, #4]
 800a004:	801a      	strh	r2, [r3, #0]
 800a006:	4b23      	ldr	r3, [pc, #140]	@ (800a094 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a008:	9a02      	ldr	r2, [sp, #8]
 800a00a:	801a      	strh	r2, [r3, #0]
 800a00c:	4b1d      	ldr	r3, [pc, #116]	@ (800a084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a00e:	9a03      	ldr	r2, [sp, #12]
 800a010:	801a      	strh	r2, [r3, #0]
 800a012:	4b1d      	ldr	r3, [pc, #116]	@ (800a088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a014:	9a04      	ldr	r2, [sp, #16]
 800a016:	801a      	strh	r2, [r3, #0]
 800a018:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800a01c:	6823      	ldr	r3, [r4, #0]
 800a01e:	4620      	mov	r0, r4
 800a020:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a022:	4798      	blx	r3
 800a024:	6823      	ldr	r3, [r4, #0]
 800a026:	4620      	mov	r0, r4
 800a028:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a02a:	4798      	blx	r3
 800a02c:	b00f      	add	sp, #60	@ 0x3c
 800a02e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a032:	883b      	ldrh	r3, [r7, #0]
 800a034:	f8ab 0000 	strh.w	r0, [fp]
 800a038:	f8aa 3000 	strh.w	r3, [sl]
 800a03c:	e789      	b.n	8009f52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a03e:	462a      	mov	r2, r5
 800a040:	ab0a      	add	r3, sp, #40	@ 0x28
 800a042:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a046:	6851      	ldr	r1, [r2, #4]
 800a048:	c303      	stmia	r3!, {r0, r1}
 800a04a:	e7a9      	b.n	8009fa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a04c:	a807      	add	r0, sp, #28
 800a04e:	f006 f833 	bl	80100b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a052:	4606      	mov	r6, r0
 800a054:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800a056:	6803      	ldr	r3, [r0, #0]
 800a058:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a05a:	4798      	blx	r3
 800a05c:	4286      	cmp	r6, r0
 800a05e:	d1b8      	bne.n	8009fd2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a060:	f7f8 fa3a 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a064:	6803      	ldr	r3, [r0, #0]
 800a066:	4606      	mov	r6, r0
 800a068:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a06a:	9305      	str	r3, [sp, #20]
 800a06c:	a807      	add	r0, sp, #28
 800a06e:	f006 f823 	bl	80100b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a072:	9b05      	ldr	r3, [sp, #20]
 800a074:	4601      	mov	r1, r0
 800a076:	4630      	mov	r0, r6
 800a078:	4798      	blx	r3
 800a07a:	f080 0001 	eor.w	r0, r0, #1
 800a07e:	b2c0      	uxtb	r0, r0
 800a080:	e7a8      	b.n	8009fd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a082:	bf00      	nop
 800a084:	2001327c 	.word	0x2001327c
 800a088:	2001327e 	.word	0x2001327e
 800a08c:	20013280 	.word	0x20013280
 800a090:	20013282 	.word	0x20013282
 800a094:	20013284 	.word	0x20013284

0800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a098:	b510      	push	{r4, lr}
 800a09a:	4b07      	ldr	r3, [pc, #28]	@ (800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a09c:	781b      	ldrb	r3, [r3, #0]
 800a09e:	4604      	mov	r4, r0
 800a0a0:	b13b      	cbz	r3, 800a0b2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a0a2:	6803      	ldr	r3, [r0, #0]
 800a0a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a0a6:	4798      	blx	r3
 800a0a8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a0aa:	4283      	cmp	r3, r0
 800a0ac:	d101      	bne.n	800a0b2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a0ae:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800a0b0:	bd10      	pop	{r4, pc}
 800a0b2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800a0b4:	e7fc      	b.n	800a0b0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a0b6:	bf00      	nop
 800a0b8:	20013286 	.word	0x20013286

0800a0bc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a0bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0c0:	b08a      	sub	sp, #40	@ 0x28
 800a0c2:	461d      	mov	r5, r3
 800a0c4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a0c8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a0cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a0d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a0d4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a0d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a0dc:	2400      	movs	r4, #0
 800a0de:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a0e2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800a0e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a0ea:	4690      	mov	r8, r2
 800a0ec:	4607      	mov	r7, r0
 800a0ee:	9404      	str	r4, [sp, #16]
 800a0f0:	f88d 4020 	strb.w	r4, [sp, #32]
 800a0f4:	f7ff ffd0 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a0f8:	fb06 8505 	mla	r5, r6, r5, r8
 800a0fc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a100:	6878      	ldr	r0, [r7, #4]
 800a102:	9505      	str	r5, [sp, #20]
 800a104:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a108:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a10c:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800a110:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a114:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a118:	6803      	ldr	r3, [r0, #0]
 800a11a:	a901      	add	r1, sp, #4
 800a11c:	685b      	ldr	r3, [r3, #4]
 800a11e:	4798      	blx	r3
 800a120:	b00a      	add	sp, #40	@ 0x28
 800a122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a126 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a126:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a12a:	b08b      	sub	sp, #44	@ 0x2c
 800a12c:	2400      	movs	r4, #0
 800a12e:	461d      	mov	r5, r3
 800a130:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800a134:	4688      	mov	r8, r1
 800a136:	4691      	mov	r9, r2
 800a138:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800a13c:	9404      	str	r4, [sp, #16]
 800a13e:	4607      	mov	r7, r0
 800a140:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a144:	f7ff ffa8 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a148:	fb06 9505 	mla	r5, r6, r5, r9
 800a14c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a150:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a154:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a158:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a15c:	6878      	ldr	r0, [r7, #4]
 800a15e:	9505      	str	r5, [sp, #20]
 800a160:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a164:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a168:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a16c:	f8cd 8010 	str.w	r8, [sp, #16]
 800a170:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a174:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a178:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a17c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a180:	6803      	ldr	r3, [r0, #0]
 800a182:	a901      	add	r1, sp, #4
 800a184:	685b      	ldr	r3, [r3, #4]
 800a186:	4798      	blx	r3
 800a188:	b00b      	add	sp, #44	@ 0x2c
 800a18a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a190 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a194:	b08a      	sub	sp, #40	@ 0x28
 800a196:	4698      	mov	r8, r3
 800a198:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800a19c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800a1a0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800a1a4:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800a1a8:	2300      	movs	r3, #0
 800a1aa:	2d0b      	cmp	r5, #11
 800a1ac:	4606      	mov	r6, r0
 800a1ae:	9304      	str	r3, [sp, #16]
 800a1b0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800a1b4:	d138      	bne.n	800a228 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a1b6:	2380      	movs	r3, #128	@ 0x80
 800a1b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a1bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a1c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a1c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a1c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a1cc:	f88d 0020 	strb.w	r0, [sp, #32]
 800a1d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a1d4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a1d8:	4630      	mov	r0, r6
 800a1da:	9203      	str	r2, [sp, #12]
 800a1dc:	f7ff ff5c 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1e0:	2c0b      	cmp	r4, #11
 800a1e2:	bf98      	it	ls
 800a1e4:	4b1b      	ldrls	r3, [pc, #108]	@ (800a254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a1e6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800a1ea:	bf98      	it	ls
 800a1ec:	5d19      	ldrbls	r1, [r3, r4]
 800a1ee:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a1f2:	bf88      	it	hi
 800a1f4:	2100      	movhi	r1, #0
 800a1f6:	fb02 8307 	mla	r3, r2, r7, r8
 800a1fa:	10c9      	asrs	r1, r1, #3
 800a1fc:	fb01 0003 	mla	r0, r1, r3, r0
 800a200:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800a204:	9005      	str	r0, [sp, #20]
 800a206:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a20a:	6870      	ldr	r0, [r6, #4]
 800a20c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800a210:	2300      	movs	r3, #0
 800a212:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a216:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a21a:	6803      	ldr	r3, [r0, #0]
 800a21c:	a901      	add	r1, sp, #4
 800a21e:	685b      	ldr	r3, [r3, #4]
 800a220:	4798      	blx	r3
 800a222:	b00a      	add	sp, #40	@ 0x28
 800a224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a228:	2d02      	cmp	r5, #2
 800a22a:	d109      	bne.n	800a240 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a22c:	28ff      	cmp	r0, #255	@ 0xff
 800a22e:	d105      	bne.n	800a23c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a230:	f1bc 0f00 	cmp.w	ip, #0
 800a234:	bf14      	ite	ne
 800a236:	2340      	movne	r3, #64	@ 0x40
 800a238:	2320      	moveq	r3, #32
 800a23a:	e7bd      	b.n	800a1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a23c:	2340      	movs	r3, #64	@ 0x40
 800a23e:	e7bb      	b.n	800a1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a240:	28ff      	cmp	r0, #255	@ 0xff
 800a242:	d105      	bne.n	800a250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a244:	f1bc 0f00 	cmp.w	ip, #0
 800a248:	bf14      	ite	ne
 800a24a:	2304      	movne	r3, #4
 800a24c:	2301      	moveq	r3, #1
 800a24e:	e7b3      	b.n	800a1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a250:	2304      	movs	r3, #4
 800a252:	e7b1      	b.n	800a1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a254:	08020370 	.word	0x08020370

0800a258 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a25c:	b08b      	sub	sp, #44	@ 0x2c
 800a25e:	461d      	mov	r5, r3
 800a260:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800a264:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800a268:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800a26c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800a270:	bf14      	ite	ne
 800a272:	2308      	movne	r3, #8
 800a274:	2302      	moveq	r3, #2
 800a276:	2400      	movs	r4, #0
 800a278:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a27c:	4688      	mov	r8, r1
 800a27e:	4693      	mov	fp, r2
 800a280:	9404      	str	r4, [sp, #16]
 800a282:	4607      	mov	r7, r0
 800a284:	f7ff ff08 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a288:	2e0b      	cmp	r6, #11
 800a28a:	bf98      	it	ls
 800a28c:	4b15      	ldrls	r3, [pc, #84]	@ (800a2e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a28e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800a292:	bf98      	it	ls
 800a294:	5d9c      	ldrbls	r4, [r3, r6]
 800a296:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a29a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a29e:	fb05 b50a 	mla	r5, r5, sl, fp
 800a2a2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a2a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a2aa:	10e4      	asrs	r4, r4, #3
 800a2ac:	fb04 0405 	mla	r4, r4, r5, r0
 800a2b0:	2300      	movs	r3, #0
 800a2b2:	6878      	ldr	r0, [r7, #4]
 800a2b4:	9405      	str	r4, [sp, #20]
 800a2b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a2ba:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a2be:	f8cd 8010 	str.w	r8, [sp, #16]
 800a2c2:	f88d 9020 	strb.w	r9, [sp, #32]
 800a2c6:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800a2ca:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a2ce:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800a2d2:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800a2d6:	6803      	ldr	r3, [r0, #0]
 800a2d8:	a901      	add	r1, sp, #4
 800a2da:	685b      	ldr	r3, [r3, #4]
 800a2dc:	4798      	blx	r3
 800a2de:	b00b      	add	sp, #44	@ 0x2c
 800a2e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a2e4:	08020370 	.word	0x08020370

0800a2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a2e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2ec:	461e      	mov	r6, r3
 800a2ee:	4b0a      	ldr	r3, [pc, #40]	@ (800a318 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a2f0:	460f      	mov	r7, r1
 800a2f2:	881d      	ldrh	r5, [r3, #0]
 800a2f4:	4690      	mov	r8, r2
 800a2f6:	f7f8 f8ef 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a2fa:	6803      	ldr	r3, [r0, #0]
 800a2fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2fe:	4798      	blx	r3
 800a300:	280b      	cmp	r0, #11
 800a302:	bf9a      	itte	ls
 800a304:	4b05      	ldrls	r3, [pc, #20]	@ (800a31c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a306:	5c1c      	ldrbls	r4, [r3, r0]
 800a308:	2400      	movhi	r4, #0
 800a30a:	fb08 7005 	mla	r0, r8, r5, r7
 800a30e:	10e4      	asrs	r4, r4, #3
 800a310:	fb04 6000 	mla	r0, r4, r0, r6
 800a314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a318:	20013282 	.word	0x20013282
 800a31c:	08020370 	.word	0x08020370

0800a320 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a320:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a322:	b08b      	sub	sp, #44	@ 0x2c
 800a324:	461f      	mov	r7, r3
 800a326:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a32a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a32e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a332:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a336:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a33a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a33e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a342:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a346:	2500      	movs	r5, #0
 800a348:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a34c:	f88d 3020 	strb.w	r3, [sp, #32]
 800a350:	4604      	mov	r4, r0
 800a352:	4616      	mov	r6, r2
 800a354:	9504      	str	r5, [sp, #16]
 800a356:	f7ff fe9f 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a35a:	463a      	mov	r2, r7
 800a35c:	4631      	mov	r1, r6
 800a35e:	4603      	mov	r3, r0
 800a360:	4620      	mov	r0, r4
 800a362:	f7ff ffc1 	bl	800a2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a366:	4b0e      	ldr	r3, [pc, #56]	@ (800a3a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a368:	9005      	str	r0, [sp, #20]
 800a36a:	881b      	ldrh	r3, [r3, #0]
 800a36c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a370:	f7f8 f8b2 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a374:	6803      	ldr	r3, [r0, #0]
 800a376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a378:	4798      	blx	r3
 800a37a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a37c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800a380:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800a384:	9304      	str	r3, [sp, #16]
 800a386:	6860      	ldr	r0, [r4, #4]
 800a388:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a38c:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a390:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800a394:	6803      	ldr	r3, [r0, #0]
 800a396:	a901      	add	r1, sp, #4
 800a398:	685b      	ldr	r3, [r3, #4]
 800a39a:	4798      	blx	r3
 800a39c:	b00b      	add	sp, #44	@ 0x2c
 800a39e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3a0:	20013282 	.word	0x20013282

0800a3a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a3a6:	b08d      	sub	sp, #52	@ 0x34
 800a3a8:	466b      	mov	r3, sp
 800a3aa:	e883 0006 	stmia.w	r3, {r1, r2}
 800a3ae:	2300      	movs	r3, #0
 800a3b0:	9306      	str	r3, [sp, #24]
 800a3b2:	6803      	ldr	r3, [r0, #0]
 800a3b4:	f8bd 6000 	ldrh.w	r6, [sp]
 800a3b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a3ba:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a3be:	2501      	movs	r5, #1
 800a3c0:	9503      	str	r5, [sp, #12]
 800a3c2:	4604      	mov	r4, r0
 800a3c4:	4798      	blx	r3
 800a3c6:	463a      	mov	r2, r7
 800a3c8:	4631      	mov	r1, r6
 800a3ca:	4603      	mov	r3, r0
 800a3cc:	4620      	mov	r0, r4
 800a3ce:	f7ff ff8b 	bl	800a2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a3d2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800a3d4:	9307      	str	r3, [sp, #28]
 800a3d6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a3da:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a3de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a3e2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a3e6:	4b0f      	ldr	r3, [pc, #60]	@ (800a424 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a3e8:	9004      	str	r0, [sp, #16]
 800a3ea:	881b      	ldrh	r3, [r3, #0]
 800a3ec:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a3f0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a3f4:	f7f8 f870 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a3f8:	6803      	ldr	r3, [r0, #0]
 800a3fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a3fc:	4798      	blx	r3
 800a3fe:	23ff      	movs	r3, #255	@ 0xff
 800a400:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a404:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a408:	6860      	ldr	r0, [r4, #4]
 800a40a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a40e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a412:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a416:	6803      	ldr	r3, [r0, #0]
 800a418:	a903      	add	r1, sp, #12
 800a41a:	685b      	ldr	r3, [r3, #4]
 800a41c:	4798      	blx	r3
 800a41e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800a420:	b00d      	add	sp, #52	@ 0x34
 800a422:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a424:	20013282 	.word	0x20013282

0800a428 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a42c:	b08c      	sub	sp, #48	@ 0x30
 800a42e:	461e      	mov	r6, r3
 800a430:	466d      	mov	r5, sp
 800a432:	2300      	movs	r3, #0
 800a434:	e885 0006 	stmia.w	r5, {r1, r2}
 800a438:	9306      	str	r3, [sp, #24]
 800a43a:	6803      	ldr	r3, [r0, #0]
 800a43c:	f8bd 7000 	ldrh.w	r7, [sp]
 800a440:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a442:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a446:	2501      	movs	r5, #1
 800a448:	9503      	str	r5, [sp, #12]
 800a44a:	4604      	mov	r4, r0
 800a44c:	4798      	blx	r3
 800a44e:	4642      	mov	r2, r8
 800a450:	4639      	mov	r1, r7
 800a452:	4603      	mov	r3, r0
 800a454:	4620      	mov	r0, r4
 800a456:	f7ff ff47 	bl	800a2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a45a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a45e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a462:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a466:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a46a:	4b11      	ldr	r3, [pc, #68]	@ (800a4b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a46c:	9004      	str	r0, [sp, #16]
 800a46e:	881b      	ldrh	r3, [r3, #0]
 800a470:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a474:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a476:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a47a:	9607      	str	r6, [sp, #28]
 800a47c:	f7f8 f82c 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a480:	6803      	ldr	r3, [r0, #0]
 800a482:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a484:	4798      	blx	r3
 800a486:	23ff      	movs	r3, #255	@ 0xff
 800a488:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a48c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a490:	6860      	ldr	r0, [r4, #4]
 800a492:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a496:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a49a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a49e:	6803      	ldr	r3, [r0, #0]
 800a4a0:	a903      	add	r1, sp, #12
 800a4a2:	685b      	ldr	r3, [r3, #4]
 800a4a4:	4798      	blx	r3
 800a4a6:	4630      	mov	r0, r6
 800a4a8:	b00c      	add	sp, #48	@ 0x30
 800a4aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a4ae:	bf00      	nop
 800a4b0:	20013282 	.word	0x20013282

0800a4b4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a4b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a4b6:	b085      	sub	sp, #20
 800a4b8:	ac02      	add	r4, sp, #8
 800a4ba:	e884 0006 	stmia.w	r4, {r1, r2}
 800a4be:	4605      	mov	r5, r0
 800a4c0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a4c4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a4c8:	f7ff fde6 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4cc:	463a      	mov	r2, r7
 800a4ce:	4603      	mov	r3, r0
 800a4d0:	4631      	mov	r1, r6
 800a4d2:	4628      	mov	r0, r5
 800a4d4:	f7ff ff08 	bl	800a2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a4d8:	4a05      	ldr	r2, [pc, #20]	@ (800a4f0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a4da:	682b      	ldr	r3, [r5, #0]
 800a4dc:	8812      	ldrh	r2, [r2, #0]
 800a4de:	9200      	str	r2, [sp, #0]
 800a4e0:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800a4e2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a4e6:	4603      	mov	r3, r0
 800a4e8:	4628      	mov	r0, r5
 800a4ea:	47b0      	blx	r6
 800a4ec:	b005      	add	sp, #20
 800a4ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a4f0:	20013282 	.word	0x20013282

0800a4f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a4f4:	b570      	push	{r4, r5, r6, lr}
 800a4f6:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800a4fa:	4604      	mov	r4, r0
 800a4fc:	b19b      	cbz	r3, 800a526 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a4fe:	2002      	movs	r0, #2
 800a500:	f7f6 f996 	bl	8000830 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a504:	2300      	movs	r3, #0
 800a506:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a50a:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800a50e:	6823      	ldr	r3, [r4, #0]
 800a510:	4620      	mov	r0, r4
 800a512:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800a516:	f7ff fdbf 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a51a:	462b      	mov	r3, r5
 800a51c:	4601      	mov	r1, r0
 800a51e:	4620      	mov	r0, r4
 800a520:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a524:	4718      	bx	r3
 800a526:	bd70      	pop	{r4, r5, r6, pc}

0800a528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a528:	b538      	push	{r3, r4, r5, lr}
 800a52a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800a52e:	428b      	cmp	r3, r1
 800a530:	4604      	mov	r4, r0
 800a532:	460d      	mov	r5, r1
 800a534:	d006      	beq.n	800a544 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a536:	6803      	ldr	r3, [r0, #0]
 800a538:	b929      	cbnz	r1, 800a546 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a53a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800a53e:	4798      	blx	r3
 800a540:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800a544:	bd38      	pop	{r3, r4, r5, pc}
 800a546:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a54a:	e7f8      	b.n	800a53e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a54c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a54c:	b510      	push	{r4, lr}
 800a54e:	4b0d      	ldr	r3, [pc, #52]	@ (800a584 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a550:	781b      	ldrb	r3, [r3, #0]
 800a552:	4604      	mov	r4, r0
 800a554:	b95b      	cbnz	r3, 800a56e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a556:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800a55a:	2b02      	cmp	r3, #2
 800a55c:	d007      	beq.n	800a56e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a55e:	6840      	ldr	r0, [r0, #4]
 800a560:	f000 f912 	bl	800a788 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a564:	b118      	cbz	r0, 800a56e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a566:	6862      	ldr	r2, [r4, #4]
 800a568:	7a53      	ldrb	r3, [r2, #9]
 800a56a:	2b00      	cmp	r3, #0
 800a56c:	d0fc      	beq.n	800a568 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a56e:	f7f6 faab 	bl	8000ac8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a572:	4620      	mov	r0, r4
 800a574:	2100      	movs	r1, #0
 800a576:	f7ff ffd7 	bl	800a528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a57a:	4620      	mov	r0, r4
 800a57c:	f7ff fd8c 	bl	800a098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a580:	bd10      	pop	{r4, pc}
 800a582:	bf00      	nop
 800a584:	20013286 	.word	0x20013286

0800a588 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a588:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a58c:	1a13      	subs	r3, r2, r0
 800a58e:	4258      	negs	r0, r3
 800a590:	4158      	adcs	r0, r3
 800a592:	4770      	bx	lr

0800a594 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a594:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a598:	1a9b      	subs	r3, r3, r2
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	bfdc      	itt	le
 800a59e:	6882      	ldrle	r2, [r0, #8]
 800a5a0:	189b      	addle	r3, r3, r2
 800a5a2:	2b01      	cmp	r3, #1
 800a5a4:	bfcc      	ite	gt
 800a5a6:	2000      	movgt	r0, #0
 800a5a8:	2001      	movle	r0, #1
 800a5aa:	4770      	bx	lr

0800a5ac <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a5ac:	6902      	ldr	r2, [r0, #16]
 800a5ae:	6843      	ldr	r3, [r0, #4]
 800a5b0:	2024      	movs	r0, #36	@ 0x24
 800a5b2:	fb00 3002 	mla	r0, r0, r2, r3
 800a5b6:	4770      	bx	lr

0800a5b8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a5b8:	6803      	ldr	r3, [r0, #0]
 800a5ba:	691b      	ldr	r3, [r3, #16]
 800a5bc:	4718      	bx	r3

0800a5be <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a5be:	b570      	push	{r4, r5, r6, lr}
 800a5c0:	2301      	movs	r3, #1
 800a5c2:	7203      	strb	r3, [r0, #8]
 800a5c4:	4604      	mov	r4, r0
 800a5c6:	6840      	ldr	r0, [r0, #4]
 800a5c8:	6803      	ldr	r3, [r0, #0]
 800a5ca:	699b      	ldr	r3, [r3, #24]
 800a5cc:	4798      	blx	r3
 800a5ce:	6803      	ldr	r3, [r0, #0]
 800a5d0:	2b40      	cmp	r3, #64	@ 0x40
 800a5d2:	4605      	mov	r5, r0
 800a5d4:	d00c      	beq.n	800a5f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a5d6:	d810      	bhi.n	800a5fa <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a5d8:	2b04      	cmp	r3, #4
 800a5da:	d01d      	beq.n	800a618 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a5dc:	d804      	bhi.n	800a5e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a5de:	2b01      	cmp	r3, #1
 800a5e0:	d006      	beq.n	800a5f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a5e2:	2b02      	cmp	r3, #2
 800a5e4:	d02c      	beq.n	800a640 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a5e6:	bd70      	pop	{r4, r5, r6, pc}
 800a5e8:	2b08      	cmp	r3, #8
 800a5ea:	d01d      	beq.n	800a628 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a5ec:	2b20      	cmp	r3, #32
 800a5ee:	d1fa      	bne.n	800a5e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a5f0:	6823      	ldr	r3, [r4, #0]
 800a5f2:	4620      	mov	r0, r4
 800a5f4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a5f6:	4798      	blx	r3
 800a5f8:	e013      	b.n	800a622 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a5fa:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a5fe:	d0f7      	beq.n	800a5f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a600:	d804      	bhi.n	800a60c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a602:	2b80      	cmp	r3, #128	@ 0x80
 800a604:	d0f4      	beq.n	800a5f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a606:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a60a:	e7f0      	b.n	800a5ee <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a60c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a610:	d0ee      	beq.n	800a5f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a612:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a616:	e7e5      	b.n	800a5e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a618:	6823      	ldr	r3, [r4, #0]
 800a61a:	7f01      	ldrb	r1, [r0, #28]
 800a61c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a61e:	4620      	mov	r0, r4
 800a620:	4798      	blx	r3
 800a622:	6823      	ldr	r3, [r4, #0]
 800a624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a626:	e006      	b.n	800a636 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a628:	6823      	ldr	r3, [r4, #0]
 800a62a:	7f01      	ldrb	r1, [r0, #28]
 800a62c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a62e:	4620      	mov	r0, r4
 800a630:	4798      	blx	r3
 800a632:	6823      	ldr	r3, [r4, #0]
 800a634:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a636:	4629      	mov	r1, r5
 800a638:	4620      	mov	r0, r4
 800a63a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a63e:	4718      	bx	r3
 800a640:	6823      	ldr	r3, [r4, #0]
 800a642:	4620      	mov	r0, r4
 800a644:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a646:	4798      	blx	r3
 800a648:	e7f3      	b.n	800a632 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a64a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a64a:	4770      	bx	lr

0800a64c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a64c:	4770      	bx	lr

0800a64e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a64e:	4770      	bx	lr

0800a650 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a650:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a654:	1ad2      	subs	r2, r2, r3
 800a656:	2a00      	cmp	r2, #0
 800a658:	b510      	push	{r4, lr}
 800a65a:	bfdc      	itt	le
 800a65c:	6884      	ldrle	r4, [r0, #8]
 800a65e:	1912      	addle	r2, r2, r4
 800a660:	2a01      	cmp	r2, #1
 800a662:	dd16      	ble.n	800a692 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a664:	6842      	ldr	r2, [r0, #4]
 800a666:	2424      	movs	r4, #36	@ 0x24
 800a668:	fb04 2303 	mla	r3, r4, r3, r2
 800a66c:	f101 0220 	add.w	r2, r1, #32
 800a670:	f851 4b04 	ldr.w	r4, [r1], #4
 800a674:	f843 4b04 	str.w	r4, [r3], #4
 800a678:	4291      	cmp	r1, r2
 800a67a:	d1f9      	bne.n	800a670 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a67c:	780a      	ldrb	r2, [r1, #0]
 800a67e:	701a      	strb	r2, [r3, #0]
 800a680:	68c3      	ldr	r3, [r0, #12]
 800a682:	6882      	ldr	r2, [r0, #8]
 800a684:	f3bf 8f5b 	dmb	ish
 800a688:	3301      	adds	r3, #1
 800a68a:	429a      	cmp	r2, r3
 800a68c:	bfd8      	it	le
 800a68e:	1a9b      	suble	r3, r3, r2
 800a690:	60c3      	str	r3, [r0, #12]
 800a692:	bd10      	pop	{r4, pc}

0800a694 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a694:	6903      	ldr	r3, [r0, #16]
 800a696:	6882      	ldr	r2, [r0, #8]
 800a698:	f3bf 8f5b 	dmb	ish
 800a69c:	3301      	adds	r3, #1
 800a69e:	429a      	cmp	r2, r3
 800a6a0:	bfd8      	it	le
 800a6a2:	1a9b      	suble	r3, r3, r2
 800a6a4:	6103      	str	r3, [r0, #16]
 800a6a6:	4770      	bx	lr

0800a6a8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a6a8:	b570      	push	{r4, r5, r6, lr}
 800a6aa:	4604      	mov	r4, r0
 800a6ac:	460e      	mov	r6, r1
 800a6ae:	6860      	ldr	r0, [r4, #4]
 800a6b0:	6803      	ldr	r3, [r0, #0]
 800a6b2:	685b      	ldr	r3, [r3, #4]
 800a6b4:	4798      	blx	r3
 800a6b6:	2800      	cmp	r0, #0
 800a6b8:	d1f9      	bne.n	800a6ae <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a6ba:	4d0d      	ldr	r5, [pc, #52]	@ (800a6f0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a6bc:	6828      	ldr	r0, [r5, #0]
 800a6be:	6803      	ldr	r3, [r0, #0]
 800a6c0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a6c2:	4798      	blx	r3
 800a6c4:	f7f6 fa0e 	bl	8000ae4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a6c8:	6828      	ldr	r0, [r5, #0]
 800a6ca:	2101      	movs	r1, #1
 800a6cc:	f7ff ff2c 	bl	800a528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a6d0:	6860      	ldr	r0, [r4, #4]
 800a6d2:	6803      	ldr	r3, [r0, #0]
 800a6d4:	4631      	mov	r1, r6
 800a6d6:	689b      	ldr	r3, [r3, #8]
 800a6d8:	4798      	blx	r3
 800a6da:	6823      	ldr	r3, [r4, #0]
 800a6dc:	4620      	mov	r0, r4
 800a6de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6e0:	4798      	blx	r3
 800a6e2:	6828      	ldr	r0, [r5, #0]
 800a6e4:	6803      	ldr	r3, [r0, #0]
 800a6e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6ea:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a6ec:	4718      	bx	r3
 800a6ee:	bf00      	nop
 800a6f0:	20013288 	.word	0x20013288

0800a6f4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a6f4:	b508      	push	{r3, lr}
 800a6f6:	f7f6 f9e7 	bl	8000ac8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a6fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a6fe:	f7f6 b9eb 	b.w	8000ad8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a702 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a702:	b510      	push	{r4, lr}
 800a704:	2114      	movs	r1, #20
 800a706:	4604      	mov	r4, r0
 800a708:	f012 ffbe 	bl	801d688 <_ZdlPvj>
 800a70c:	4620      	mov	r0, r4
 800a70e:	bd10      	pop	{r4, pc}

0800a710 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a710:	b510      	push	{r4, lr}
 800a712:	4604      	mov	r4, r0
 800a714:	6840      	ldr	r0, [r0, #4]
 800a716:	6803      	ldr	r3, [r0, #0]
 800a718:	681b      	ldr	r3, [r3, #0]
 800a71a:	4798      	blx	r3
 800a71c:	b948      	cbnz	r0, 800a732 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a71e:	7a63      	ldrb	r3, [r4, #9]
 800a720:	b13b      	cbz	r3, 800a732 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a722:	7a23      	ldrb	r3, [r4, #8]
 800a724:	b92b      	cbnz	r3, 800a732 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a726:	6823      	ldr	r3, [r4, #0]
 800a728:	4620      	mov	r0, r4
 800a72a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a72c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a730:	4718      	bx	r3
 800a732:	bd10      	pop	{r4, pc}

0800a734 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a734:	b570      	push	{r4, r5, r6, lr}
 800a736:	4604      	mov	r4, r0
 800a738:	6840      	ldr	r0, [r0, #4]
 800a73a:	6803      	ldr	r3, [r0, #0]
 800a73c:	681b      	ldr	r3, [r3, #0]
 800a73e:	4798      	blx	r3
 800a740:	4605      	mov	r5, r0
 800a742:	b930      	cbnz	r0, 800a752 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a744:	7a23      	ldrb	r3, [r4, #8]
 800a746:	b123      	cbz	r3, 800a752 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a748:	6860      	ldr	r0, [r4, #4]
 800a74a:	6803      	ldr	r3, [r0, #0]
 800a74c:	695b      	ldr	r3, [r3, #20]
 800a74e:	4798      	blx	r3
 800a750:	7225      	strb	r5, [r4, #8]
 800a752:	6860      	ldr	r0, [r4, #4]
 800a754:	6803      	ldr	r3, [r0, #0]
 800a756:	681b      	ldr	r3, [r3, #0]
 800a758:	4798      	blx	r3
 800a75a:	b928      	cbnz	r0, 800a768 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a75c:	6823      	ldr	r3, [r4, #0]
 800a75e:	4620      	mov	r0, r4
 800a760:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a762:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a766:	4718      	bx	r3
 800a768:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a76c:	f7f6 b9c2 	b.w	8000af4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a770 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a770:	b510      	push	{r4, lr}
 800a772:	4c04      	ldr	r4, [pc, #16]	@ (800a784 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a774:	6082      	str	r2, [r0, #8]
 800a776:	2200      	movs	r2, #0
 800a778:	e9c0 4100 	strd	r4, r1, [r0]
 800a77c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a780:	bd10      	pop	{r4, pc}
 800a782:	bf00      	nop
 800a784:	08020384 	.word	0x08020384

0800a788 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a788:	6840      	ldr	r0, [r0, #4]
 800a78a:	6803      	ldr	r3, [r0, #0]
 800a78c:	681b      	ldr	r3, [r3, #0]
 800a78e:	4718      	bx	r3

0800a790 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800a790:	b508      	push	{r3, lr}
 800a792:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800a796:	b10b      	cbz	r3, 800a79c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800a798:	f7f7 fd10 	bl	80021bc <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800a79c:	bd08      	pop	{r3, pc}

0800a79e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800a79e:	6803      	ldr	r3, [r0, #0]
 800a7a0:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
 800a7a4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800a7a6:	4718      	bx	r3

0800a7a8 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800a7a8:	4770      	bx	lr

0800a7aa <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800a7aa:	b510      	push	{r4, lr}
 800a7ac:	212c      	movs	r1, #44	@ 0x2c
 800a7ae:	4604      	mov	r4, r0
 800a7b0:	f012 ff6a 	bl	801d688 <_ZdlPvj>
 800a7b4:	4620      	mov	r0, r4
 800a7b6:	bd10      	pop	{r4, pc}

0800a7b8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800a7b8:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800a7bc:	2bff      	cmp	r3, #255	@ 0xff
 800a7be:	b510      	push	{r4, lr}
 800a7c0:	d104      	bne.n	800a7cc <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800a7c2:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
 800a7c4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a7c8:	429a      	cmp	r2, r3
 800a7ca:	d105      	bne.n	800a7d8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800a7cc:	2300      	movs	r3, #0
 800a7ce:	8003      	strh	r3, [r0, #0]
 800a7d0:	8043      	strh	r3, [r0, #2]
 800a7d2:	8083      	strh	r3, [r0, #4]
 800a7d4:	80c3      	strh	r3, [r0, #6]
 800a7d6:	bd10      	pop	{r4, pc}
 800a7d8:	2300      	movs	r3, #0
 800a7da:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800a7de:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800a7e2:	8003      	strh	r3, [r0, #0]
 800a7e4:	8043      	strh	r3, [r0, #2]
 800a7e6:	8084      	strh	r4, [r0, #4]
 800a7e8:	80c2      	strh	r2, [r0, #6]
 800a7ea:	e7f4      	b.n	800a7d6 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800a7ec <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800a7ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a7f0:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 800a7f4:	b087      	sub	sp, #28
 800a7f6:	4604      	mov	r4, r0
 800a7f8:	4689      	mov	r9, r1
 800a7fa:	b363      	cbz	r3, 800a856 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800a7fc:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
 800a7fe:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a802:	429a      	cmp	r2, r3
 800a804:	d027      	beq.n	800a856 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800a806:	ad06      	add	r5, sp, #24
 800a808:	2700      	movs	r7, #0
 800a80a:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800a80e:	4628      	mov	r0, r5
 800a810:	f005 fae2 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a814:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800a818:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a81c:	6823      	ldr	r3, [r4, #0]
 800a81e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800a822:	a904      	add	r1, sp, #16
 800a824:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a826:	9704      	str	r7, [sp, #16]
 800a828:	4620      	mov	r0, r4
 800a82a:	4798      	blx	r3
 800a82c:	f7f7 fe54 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a830:	6803      	ldr	r3, [r0, #0]
 800a832:	4606      	mov	r6, r0
 800a834:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800a838:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800a83a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a83e:	4628      	mov	r0, r5
 800a840:	f005 fbb6 	bl	800ffb0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800a844:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a848:	9300      	str	r3, [sp, #0]
 800a84a:	4601      	mov	r1, r0
 800a84c:	9701      	str	r7, [sp, #4]
 800a84e:	464b      	mov	r3, r9
 800a850:	aa04      	add	r2, sp, #16
 800a852:	4630      	mov	r0, r6
 800a854:	47c0      	blx	r8
 800a856:	b007      	add	sp, #28
 800a858:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a85c <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800a85c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a85e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a862:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a866:	6803      	ldr	r3, [r0, #0]
 800a868:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a86c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a870:	460d      	mov	r5, r1
 800a872:	2100      	movs	r1, #0
 800a874:	4604      	mov	r4, r0
 800a876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a878:	9100      	str	r1, [sp, #0]
 800a87a:	4669      	mov	r1, sp
 800a87c:	4798      	blx	r3
 800a87e:	4621      	mov	r1, r4
 800a880:	a802      	add	r0, sp, #8
 800a882:	f003 fb45 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a886:	f7f7 fe27 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 800a88a:	6803      	ldr	r3, [r0, #0]
 800a88c:	aa02      	add	r2, sp, #8
 800a88e:	695e      	ldr	r6, [r3, #20]
 800a890:	4669      	mov	r1, sp
 800a892:	462b      	mov	r3, r5
 800a894:	47b0      	blx	r6
 800a896:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a89a:	2800      	cmp	r0, #0
 800a89c:	bf08      	it	eq
 800a89e:	461d      	moveq	r5, r3
 800a8a0:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800a8a2:	b004      	add	sp, #16
 800a8a4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800a8a8 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800a8a8:	2200      	movs	r2, #0
 800a8aa:	8082      	strh	r2, [r0, #4]
 800a8ac:	80c2      	strh	r2, [r0, #6]
 800a8ae:	8102      	strh	r2, [r0, #8]
 800a8b0:	8142      	strh	r2, [r0, #10]
 800a8b2:	8182      	strh	r2, [r0, #12]
 800a8b4:	81c2      	strh	r2, [r0, #14]
 800a8b6:	8202      	strh	r2, [r0, #16]
 800a8b8:	8242      	strh	r2, [r0, #18]
 800a8ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a8be:	61c2      	str	r2, [r0, #28]
 800a8c0:	8402      	strh	r2, [r0, #32]
 800a8c2:	8442      	strh	r2, [r0, #34]	@ 0x22
 800a8c4:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800a8c8:	2201      	movs	r2, #1
 800a8ca:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 800a8ce:	4a04      	ldr	r2, [pc, #16]	@ (800a8e0 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800a8d0:	6002      	str	r2, [r0, #0]
 800a8d2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a8d6:	84c2      	strh	r2, [r0, #38]	@ 0x26
 800a8d8:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
 800a8dc:	4770      	bx	lr
 800a8de:	bf00      	nop
 800a8e0:	080203a8 	.word	0x080203a8

0800a8e4 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 800a8e4:	880b      	ldrh	r3, [r1, #0]
 800a8e6:	8643      	strh	r3, [r0, #50]	@ 0x32
 800a8e8:	4770      	bx	lr

0800a8ea <_ZN8touchgfx13AnimatedImageD1Ev>:
 800a8ea:	4770      	bx	lr

0800a8ec <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 800a8ec:	880b      	ldrh	r3, [r1, #0]
 800a8ee:	8603      	strh	r3, [r0, #48]	@ 0x30
 800a8f0:	f000 bb7d 	b.w	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0800a8f4 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 800a8f4:	b513      	push	{r0, r1, r4, lr}
 800a8f6:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a8fa:	4604      	mov	r4, r0
 800a8fc:	b143      	cbz	r3, 800a910 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
 800a8fe:	f002 f9ab 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 800a902:	4621      	mov	r1, r4
 800a904:	3004      	adds	r0, #4
 800a906:	f002 f9cc 	bl	800cca2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a90a:	2300      	movs	r3, #0
 800a90c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a910:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800a914:	b163      	cbz	r3, 800a930 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
 800a916:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800a918:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a91c:	a901      	add	r1, sp, #4
 800a91e:	4620      	mov	r0, r4
 800a920:	f000 fb65 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a924:	6823      	ldr	r3, [r4, #0]
 800a926:	4620      	mov	r0, r4
 800a928:	695b      	ldr	r3, [r3, #20]
 800a92a:	4798      	blx	r3
 800a92c:	b002      	add	sp, #8
 800a92e:	bd10      	pop	{r4, pc}
 800a930:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800a932:	e7f1      	b.n	800a918 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

0800a934 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 800a934:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a936:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
 800a938:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800a93c:	42bd      	cmp	r5, r7
 800a93e:	4604      	mov	r4, r0
 800a940:	d01a      	beq.n	800a978 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800a942:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
 800a944:	42be      	cmp	r6, r7
 800a946:	d017      	beq.n	800a978 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 800a948:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 800a94c:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 800a950:	b1a1      	cbz	r1, 800a97c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
 800a952:	b142      	cbz	r2, 800a966 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800a954:	a902      	add	r1, sp, #8
 800a956:	f821 6d04 	strh.w	r6, [r1, #-4]!
 800a95a:	f000 fb48 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a95e:	6823      	ldr	r3, [r4, #0]
 800a960:	4620      	mov	r0, r4
 800a962:	695b      	ldr	r3, [r3, #20]
 800a964:	4798      	blx	r3
 800a966:	f002 f977 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 800a96a:	4621      	mov	r1, r4
 800a96c:	3004      	adds	r0, #4
 800a96e:	f002 fa41 	bl	800cdf4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a972:	2301      	movs	r3, #1
 800a974:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a978:	b003      	add	sp, #12
 800a97a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a97c:	2a00      	cmp	r2, #0
 800a97e:	d0f2      	beq.n	800a966 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800a980:	a902      	add	r1, sp, #8
 800a982:	f821 5d04 	strh.w	r5, [r1, #-4]!
 800a986:	e7e8      	b.n	800a95a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0800a988 <_ZN8touchgfx13AnimatedImageD0Ev>:
 800a988:	b510      	push	{r4, lr}
 800a98a:	213c      	movs	r1, #60	@ 0x3c
 800a98c:	4604      	mov	r4, r0
 800a98e:	f012 fe7b 	bl	801d688 <_ZdlPvj>
 800a992:	4620      	mov	r0, r4
 800a994:	bd10      	pop	{r4, pc}

0800a996 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 800a996:	b510      	push	{r4, lr}
 800a998:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a99c:	4604      	mov	r4, r0
 800a99e:	b14b      	cbz	r3, 800a9b4 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
 800a9a0:	f002 f95a 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 800a9a4:	4621      	mov	r1, r4
 800a9a6:	3004      	adds	r0, #4
 800a9a8:	f002 f97b 	bl	800cca2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800a9ac:	2300      	movs	r3, #0
 800a9ae:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800a9b2:	bd10      	pop	{r4, pc}
 800a9b4:	f002 f950 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 800a9b8:	4621      	mov	r1, r4
 800a9ba:	3004      	adds	r0, #4
 800a9bc:	f002 fa1a 	bl	800cdf4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800a9c0:	2301      	movs	r3, #1
 800a9c2:	e7f4      	b.n	800a9ae <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

0800a9c4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 800a9c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a9c6:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800a9ca:	4604      	mov	r4, r0
 800a9cc:	2b00      	cmp	r3, #0
 800a9ce:	d042      	beq.n	800aa56 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a9d0:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800a9d4:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
 800a9d8:	3301      	adds	r3, #1
 800a9da:	b2db      	uxtb	r3, r3
 800a9dc:	429a      	cmp	r2, r3
 800a9de:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a9e2:	d138      	bne.n	800aa56 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800a9e4:	2300      	movs	r3, #0
 800a9e6:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800a9ea:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 800a9ec:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
 800a9ee:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
 800a9f2:	4299      	cmp	r1, r3
 800a9f4:	d100      	bne.n	800a9f8 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 800a9f6:	b122      	cbz	r2, 800aa02 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 800a9f8:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 800a9fa:	4299      	cmp	r1, r3
 800a9fc:	d12f      	bne.n	800aa5e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
 800a9fe:	2a00      	cmp	r2, #0
 800aa00:	d034      	beq.n	800aa6c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800aa02:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
 800aa06:	b93d      	cbnz	r5, 800aa18 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
 800aa08:	f002 f926 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 800aa0c:	4621      	mov	r1, r4
 800aa0e:	3004      	adds	r0, #4
 800aa10:	f002 f947 	bl	800cca2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800aa14:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 800aa18:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800aa1a:	b140      	cbz	r0, 800aa2e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800aa1c:	6803      	ldr	r3, [r0, #0]
 800aa1e:	68db      	ldr	r3, [r3, #12]
 800aa20:	4798      	blx	r3
 800aa22:	b120      	cbz	r0, 800aa2e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 800aa24:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800aa26:	6803      	ldr	r3, [r0, #0]
 800aa28:	4621      	mov	r1, r4
 800aa2a:	689b      	ldr	r3, [r3, #8]
 800aa2c:	4798      	blx	r3
 800aa2e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800aa32:	b183      	cbz	r3, 800aa56 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800aa34:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800aa38:	b16b      	cbz	r3, 800aa56 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 800aa3a:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 800aa3e:	b163      	cbz	r3, 800aa5a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
 800aa40:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 800aa42:	f8ad 3004 	strh.w	r3, [sp, #4]
 800aa46:	a901      	add	r1, sp, #4
 800aa48:	4620      	mov	r0, r4
 800aa4a:	f000 fad0 	bl	800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800aa4e:	6823      	ldr	r3, [r4, #0]
 800aa50:	4620      	mov	r0, r4
 800aa52:	695b      	ldr	r3, [r3, #20]
 800aa54:	4798      	blx	r3
 800aa56:	b003      	add	sp, #12
 800aa58:	bd30      	pop	{r4, r5, pc}
 800aa5a:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 800aa5c:	e7f1      	b.n	800aa42 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
 800aa5e:	b12a      	cbz	r2, 800aa6c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 800aa60:	3b01      	subs	r3, #1
 800aa62:	a902      	add	r1, sp, #8
 800aa64:	b29b      	uxth	r3, r3
 800aa66:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800aa6a:	e7ed      	b.n	800aa48 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
 800aa6c:	3301      	adds	r3, #1
 800aa6e:	e7f8      	b.n	800aa62 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

0800aa70 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800aa70:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800aa74:	b12a      	cbz	r2, 800aa82 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800aa76:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800aa7a:	b112      	cbz	r2, 800aa82 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800aa7c:	6803      	ldr	r3, [r0, #0]
 800aa7e:	695b      	ldr	r3, [r3, #20]
 800aa80:	4718      	bx	r3
 800aa82:	4770      	bx	lr

0800aa84 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 800aa84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa86:	ac02      	add	r4, sp, #8
 800aa88:	6803      	ldr	r3, [r0, #0]
 800aa8a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aa8c:	f824 1d04 	strh.w	r1, [r4, #-4]!
 800aa90:	4605      	mov	r5, r0
 800aa92:	4621      	mov	r1, r4
 800aa94:	4616      	mov	r6, r2
 800aa96:	4798      	blx	r3
 800aa98:	682b      	ldr	r3, [r5, #0]
 800aa9a:	4621      	mov	r1, r4
 800aa9c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800aa9e:	f8ad 6004 	strh.w	r6, [sp, #4]
 800aaa2:	4628      	mov	r0, r5
 800aaa4:	4798      	blx	r3
 800aaa6:	b002      	add	sp, #8
 800aaa8:	bd70      	pop	{r4, r5, r6, pc}

0800aaaa <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 800aaaa:	2300      	movs	r3, #0
 800aaac:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 800aab0:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 800aab4:	4770      	bx	lr
	...

0800aab8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800aab8:	4b07      	ldr	r3, [pc, #28]	@ (800aad8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800aaba:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800aabc:	881b      	ldrh	r3, [r3, #0]
 800aabe:	4293      	cmp	r3, r2
 800aac0:	bf81      	itttt	hi
 800aac2:	4b06      	ldrhi	r3, [pc, #24]	@ (800aadc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800aac4:	681b      	ldrhi	r3, [r3, #0]
 800aac6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800aaca:	7858      	ldrbhi	r0, [r3, #1]
 800aacc:	bf8c      	ite	hi
 800aace:	f000 0003 	andhi.w	r0, r0, #3
 800aad2:	2000      	movls	r0, #0
 800aad4:	4770      	bx	lr
 800aad6:	bf00      	nop
 800aad8:	200132dc 	.word	0x200132dc
 800aadc:	200132d8 	.word	0x200132d8

0800aae0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800aae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aae4:	4b10      	ldr	r3, [pc, #64]	@ (800ab28 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800aae6:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800aae8:	881b      	ldrh	r3, [r3, #0]
 800aaea:	428b      	cmp	r3, r1
 800aaec:	4604      	mov	r4, r0
 800aaee:	d918      	bls.n	800ab22 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800aaf0:	6803      	ldr	r3, [r0, #0]
 800aaf2:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800aaf4:	4b0d      	ldr	r3, [pc, #52]	@ (800ab2c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800aaf6:	6818      	ldr	r0, [r3, #0]
 800aaf8:	f7f8 fc9a 	bl	8003430 <_ZNK8touchgfx5Texts7getTextEt>
 800aafc:	6823      	ldr	r3, [r4, #0]
 800aafe:	4606      	mov	r6, r0
 800ab00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ab02:	4620      	mov	r0, r4
 800ab04:	4798      	blx	r3
 800ab06:	6823      	ldr	r3, [r4, #0]
 800ab08:	4607      	mov	r7, r0
 800ab0a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ab0e:	4620      	mov	r0, r4
 800ab10:	4798      	blx	r3
 800ab12:	463a      	mov	r2, r7
 800ab14:	4603      	mov	r3, r0
 800ab16:	4631      	mov	r1, r6
 800ab18:	4620      	mov	r0, r4
 800ab1a:	46ac      	mov	ip, r5
 800ab1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ab20:	4760      	bx	ip
 800ab22:	2000      	movs	r0, #0
 800ab24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab28:	200132dc 	.word	0x200132dc
 800ab2c:	200132e4 	.word	0x200132e4

0800ab30 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ab30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ab34:	4b17      	ldr	r3, [pc, #92]	@ (800ab94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ab36:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800ab38:	881b      	ldrh	r3, [r3, #0]
 800ab3a:	428b      	cmp	r3, r1
 800ab3c:	4604      	mov	r4, r0
 800ab3e:	d926      	bls.n	800ab8e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800ab40:	4b15      	ldr	r3, [pc, #84]	@ (800ab98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ab42:	681b      	ldr	r3, [r3, #0]
 800ab44:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ab48:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ab4c:	4b13      	ldr	r3, [pc, #76]	@ (800ab9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ab4e:	7855      	ldrb	r5, [r2, #1]
 800ab50:	681b      	ldr	r3, [r3, #0]
 800ab52:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ab56:	6833      	ldr	r3, [r6, #0]
 800ab58:	69df      	ldr	r7, [r3, #28]
 800ab5a:	4b11      	ldr	r3, [pc, #68]	@ (800aba0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ab5c:	6818      	ldr	r0, [r3, #0]
 800ab5e:	f7f8 fc67 	bl	8003430 <_ZNK8touchgfx5Texts7getTextEt>
 800ab62:	6823      	ldr	r3, [r4, #0]
 800ab64:	4680      	mov	r8, r0
 800ab66:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ab68:	4620      	mov	r0, r4
 800ab6a:	4798      	blx	r3
 800ab6c:	6823      	ldr	r3, [r4, #0]
 800ab6e:	4681      	mov	r9, r0
 800ab70:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ab74:	4620      	mov	r0, r4
 800ab76:	4798      	blx	r3
 800ab78:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ab7c:	9000      	str	r0, [sp, #0]
 800ab7e:	464b      	mov	r3, r9
 800ab80:	4642      	mov	r2, r8
 800ab82:	4629      	mov	r1, r5
 800ab84:	4630      	mov	r0, r6
 800ab86:	47b8      	blx	r7
 800ab88:	b003      	add	sp, #12
 800ab8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab8e:	2000      	movs	r0, #0
 800ab90:	e7fa      	b.n	800ab88 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800ab92:	bf00      	nop
 800ab94:	200132dc 	.word	0x200132dc
 800ab98:	200132d8 	.word	0x200132d8
 800ab9c:	200132e0 	.word	0x200132e0
 800aba0:	200132e4 	.word	0x200132e4

0800aba4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800aba4:	b40e      	push	{r1, r2, r3}
 800aba6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800abaa:	4b2f      	ldr	r3, [pc, #188]	@ (800ac68 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800abac:	881a      	ldrh	r2, [r3, #0]
 800abae:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800abb0:	429a      	cmp	r2, r3
 800abb2:	b09d      	sub	sp, #116	@ 0x74
 800abb4:	4604      	mov	r4, r0
 800abb6:	d954      	bls.n	800ac62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800abb8:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800ac6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800abbc:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800ac70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800abc0:	aa26      	add	r2, sp, #152	@ 0x98
 800abc2:	9202      	str	r2, [sp, #8]
 800abc4:	f8d9 2000 	ldr.w	r2, [r9]
 800abc8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800abcc:	f8d8 3000 	ldr.w	r3, [r8]
 800abd0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800abd4:	682b      	ldr	r3, [r5, #0]
 800abd6:	4628      	mov	r0, r5
 800abd8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800abda:	4798      	blx	r3
 800abdc:	b207      	sxth	r7, r0
 800abde:	4606      	mov	r6, r0
 800abe0:	a803      	add	r0, sp, #12
 800abe2:	f003 fd86 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800abe6:	682b      	ldr	r3, [r5, #0]
 800abe8:	4628      	mov	r0, r5
 800abea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800abec:	4798      	blx	r3
 800abee:	682b      	ldr	r3, [r5, #0]
 800abf0:	4682      	mov	sl, r0
 800abf2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800abf4:	4628      	mov	r0, r5
 800abf6:	4798      	blx	r3
 800abf8:	4653      	mov	r3, sl
 800abfa:	9000      	str	r0, [sp, #0]
 800abfc:	9a02      	ldr	r2, [sp, #8]
 800abfe:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800ac00:	a803      	add	r0, sp, #12
 800ac02:	f003 fdc9 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ac06:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800ac08:	f8d9 3000 	ldr.w	r3, [r9]
 800ac0c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800ac10:	8925      	ldrh	r5, [r4, #8]
 800ac12:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ac16:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800ac1a:	eba5 050c 	sub.w	r5, r5, ip
 800ac1e:	784a      	ldrb	r2, [r1, #1]
 800ac20:	f8d8 3000 	ldr.w	r3, [r8]
 800ac24:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800ac28:	b22d      	sxth	r5, r5
 800ac2a:	9500      	str	r5, [sp, #0]
 800ac2c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ac30:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ac34:	a803      	add	r0, sp, #12
 800ac36:	f001 fb7d 	bl	800c334 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ac3a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800ac3e:	18b9      	adds	r1, r7, r2
 800ac40:	2900      	cmp	r1, #0
 800ac42:	b203      	sxth	r3, r0
 800ac44:	dd0b      	ble.n	800ac5e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800ac46:	3b01      	subs	r3, #1
 800ac48:	fb13 f302 	smulbb	r3, r3, r2
 800ac4c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ac50:	b21f      	sxth	r7, r3
 800ac52:	4638      	mov	r0, r7
 800ac54:	b01d      	add	sp, #116	@ 0x74
 800ac56:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ac5a:	b003      	add	sp, #12
 800ac5c:	4770      	bx	lr
 800ac5e:	2b00      	cmp	r3, #0
 800ac60:	dcf7      	bgt.n	800ac52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ac62:	2700      	movs	r7, #0
 800ac64:	e7f5      	b.n	800ac52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ac66:	bf00      	nop
 800ac68:	200132dc 	.word	0x200132dc
 800ac6c:	200132d8 	.word	0x200132d8
 800ac70:	200132e0 	.word	0x200132e0

0800ac74 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ac74:	b570      	push	{r4, r5, r6, lr}
 800ac76:	6803      	ldr	r3, [r0, #0]
 800ac78:	4604      	mov	r4, r0
 800ac7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ac7c:	4615      	mov	r5, r2
 800ac7e:	4798      	blx	r3
 800ac80:	6823      	ldr	r3, [r4, #0]
 800ac82:	4629      	mov	r1, r5
 800ac84:	4620      	mov	r0, r4
 800ac86:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ac88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac8c:	4718      	bx	r3
	...

0800ac90 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800ac90:	b538      	push	{r3, r4, r5, lr}
 800ac92:	4b0e      	ldr	r3, [pc, #56]	@ (800accc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800ac94:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800ac96:	881b      	ldrh	r3, [r3, #0]
 800ac98:	429a      	cmp	r2, r3
 800ac9a:	4604      	mov	r4, r0
 800ac9c:	d214      	bcs.n	800acc8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800ac9e:	6803      	ldr	r3, [r0, #0]
 800aca0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800aca2:	4798      	blx	r3
 800aca4:	6823      	ldr	r3, [r4, #0]
 800aca6:	4605      	mov	r5, r0
 800aca8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800acaa:	4620      	mov	r0, r4
 800acac:	4798      	blx	r3
 800acae:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800acb2:	b22d      	sxth	r5, r5
 800acb4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800acb8:	4601      	mov	r1, r0
 800acba:	bf06      	itte	eq
 800acbc:	4602      	moveq	r2, r0
 800acbe:	4629      	moveq	r1, r5
 800acc0:	462a      	movne	r2, r5
 800acc2:	4620      	mov	r0, r4
 800acc4:	f7ff ffd6 	bl	800ac74 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800acc8:	bd38      	pop	{r3, r4, r5, pc}
 800acca:	bf00      	nop
 800accc:	200132dc 	.word	0x200132dc

0800acd0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800acd0:	b530      	push	{r4, r5, lr}
 800acd2:	888b      	ldrh	r3, [r1, #4]
 800acd4:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800acd6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800acda:	b085      	sub	sp, #20
 800acdc:	4604      	mov	r4, r0
 800acde:	b923      	cbnz	r3, 800acea <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ace0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ace4:	b90b      	cbnz	r3, 800acea <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ace6:	f7ff ffd3 	bl	800ac90 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800acea:	6823      	ldr	r3, [r4, #0]
 800acec:	466d      	mov	r5, sp
 800acee:	4621      	mov	r1, r4
 800acf0:	4628      	mov	r0, r5
 800acf2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800acf6:	4798      	blx	r3
 800acf8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800acfc:	343c      	adds	r4, #60	@ 0x3c
 800acfe:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800ad02:	b005      	add	sp, #20
 800ad04:	bd30      	pop	{r4, r5, pc}

0800ad06 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ad06:	2300      	movs	r3, #0
 800ad08:	8083      	strh	r3, [r0, #4]
 800ad0a:	80c3      	strh	r3, [r0, #6]
 800ad0c:	8003      	strh	r3, [r0, #0]
 800ad0e:	8043      	strh	r3, [r0, #2]
 800ad10:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800ad14:	2bff      	cmp	r3, #255	@ 0xff
 800ad16:	bf01      	itttt	eq
 800ad18:	890b      	ldrheq	r3, [r1, #8]
 800ad1a:	8083      	strheq	r3, [r0, #4]
 800ad1c:	894b      	ldrheq	r3, [r1, #10]
 800ad1e:	80c3      	strheq	r3, [r0, #6]
 800ad20:	4770      	bx	lr
	...

0800ad24 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ad24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ad26:	4604      	mov	r4, r0
 800ad28:	6808      	ldr	r0, [r1, #0]
 800ad2a:	6849      	ldr	r1, [r1, #4]
 800ad2c:	466b      	mov	r3, sp
 800ad2e:	c303      	stmia	r3!, {r0, r1}
 800ad30:	6823      	ldr	r3, [r4, #0]
 800ad32:	4669      	mov	r1, sp
 800ad34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ad36:	4620      	mov	r0, r4
 800ad38:	4798      	blx	r3
 800ad3a:	4b08      	ldr	r3, [pc, #32]	@ (800ad5c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ad3c:	681b      	ldr	r3, [r3, #0]
 800ad3e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ad42:	b10a      	cbz	r2, 800ad48 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ad44:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ad46:	b900      	cbnz	r0, 800ad4a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ad48:	6898      	ldr	r0, [r3, #8]
 800ad4a:	6803      	ldr	r3, [r0, #0]
 800ad4c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800ad4e:	6a1d      	ldr	r5, [r3, #32]
 800ad50:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800ad54:	4669      	mov	r1, sp
 800ad56:	47a8      	blx	r5
 800ad58:	b003      	add	sp, #12
 800ad5a:	bd30      	pop	{r4, r5, pc}
 800ad5c:	20013288 	.word	0x20013288

0800ad60 <_ZN8touchgfx3BoxD1Ev>:
 800ad60:	4770      	bx	lr

0800ad62 <_ZN8touchgfx3BoxD0Ev>:
 800ad62:	b510      	push	{r4, lr}
 800ad64:	212c      	movs	r1, #44	@ 0x2c
 800ad66:	4604      	mov	r4, r0
 800ad68:	f012 fc8e 	bl	801d688 <_ZdlPvj>
 800ad6c:	4620      	mov	r0, r4
 800ad6e:	bd10      	pop	{r4, pc}

0800ad70 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800ad70:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800ad74:	b12a      	cbz	r2, 800ad82 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ad76:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ad7a:	b112      	cbz	r2, 800ad82 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ad7c:	6803      	ldr	r3, [r0, #0]
 800ad7e:	695b      	ldr	r3, [r3, #20]
 800ad80:	4718      	bx	r3
 800ad82:	4770      	bx	lr

0800ad84 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800ad84:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800ad88:	4770      	bx	lr

0800ad8a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ad8a:	b570      	push	{r4, r5, r6, lr}
 800ad8c:	880b      	ldrh	r3, [r1, #0]
 800ad8e:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800ad90:	4605      	mov	r5, r0
 800ad92:	8813      	ldrh	r3, [r2, #0]
 800ad94:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ad98:	4604      	mov	r4, r0
 800ad9a:	4628      	mov	r0, r5
 800ad9c:	f005 f81c 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ada0:	4606      	mov	r6, r0
 800ada2:	4628      	mov	r0, r5
 800ada4:	f005 f84c 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ada8:	6823      	ldr	r3, [r4, #0]
 800adaa:	4605      	mov	r5, r0
 800adac:	4631      	mov	r1, r6
 800adae:	4620      	mov	r0, r4
 800adb0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800adb2:	4798      	blx	r3
 800adb4:	6823      	ldr	r3, [r4, #0]
 800adb6:	4629      	mov	r1, r5
 800adb8:	4620      	mov	r0, r4
 800adba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800adbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adc0:	4718      	bx	r3

0800adc2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800adc2:	b510      	push	{r4, lr}
 800adc4:	4604      	mov	r4, r0
 800adc6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800adc8:	b150      	cbz	r0, 800ade0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800adca:	6803      	ldr	r3, [r0, #0]
 800adcc:	68db      	ldr	r3, [r3, #12]
 800adce:	4798      	blx	r3
 800add0:	b130      	cbz	r0, 800ade0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800add2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800add4:	6803      	ldr	r3, [r0, #0]
 800add6:	4621      	mov	r1, r4
 800add8:	689b      	ldr	r3, [r3, #8]
 800adda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800adde:	4718      	bx	r3
 800ade0:	bd10      	pop	{r4, pc}

0800ade2 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ade2:	b510      	push	{r4, lr}
 800ade4:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800ade8:	2bff      	cmp	r3, #255	@ 0xff
 800adea:	4604      	mov	r4, r0
 800adec:	d006      	beq.n	800adfc <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800adee:	2300      	movs	r3, #0
 800adf0:	8003      	strh	r3, [r0, #0]
 800adf2:	8043      	strh	r3, [r0, #2]
 800adf4:	8083      	strh	r3, [r0, #4]
 800adf6:	80c3      	strh	r3, [r0, #6]
 800adf8:	4620      	mov	r0, r4
 800adfa:	bd10      	pop	{r4, pc}
 800adfc:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800ae00:	b11b      	cbz	r3, 800ae0a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800ae02:	3130      	adds	r1, #48	@ 0x30
 800ae04:	f005 f850 	bl	800fea8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ae08:	e7f6      	b.n	800adf8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800ae0a:	312e      	adds	r1, #46	@ 0x2e
 800ae0c:	e7fa      	b.n	800ae04 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800ae10 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800ae10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae14:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800ae18:	b08a      	sub	sp, #40	@ 0x28
 800ae1a:	4604      	mov	r4, r0
 800ae1c:	4688      	mov	r8, r1
 800ae1e:	2b00      	cmp	r3, #0
 800ae20:	d066      	beq.n	800aef0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ae22:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800ae24:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ae28:	a805      	add	r0, sp, #20
 800ae2a:	f004 ffd5 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ae2e:	4607      	mov	r7, r0
 800ae30:	a805      	add	r0, sp, #20
 800ae32:	f005 f805 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ae36:	f9b8 6000 	ldrsh.w	r6, [r8]
 800ae3a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800ae3e:	4432      	add	r2, r6
 800ae40:	b292      	uxth	r2, r2
 800ae42:	2300      	movs	r3, #0
 800ae44:	fa0f fc82 	sxth.w	ip, r2
 800ae48:	459c      	cmp	ip, r3
 800ae4a:	9306      	str	r3, [sp, #24]
 800ae4c:	dd52      	ble.n	800aef4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae4e:	42b7      	cmp	r7, r6
 800ae50:	dd50      	ble.n	800aef4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae52:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800ae56:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800ae5a:	442b      	add	r3, r5
 800ae5c:	b29b      	uxth	r3, r3
 800ae5e:	b219      	sxth	r1, r3
 800ae60:	2900      	cmp	r1, #0
 800ae62:	dd47      	ble.n	800aef4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae64:	42a8      	cmp	r0, r5
 800ae66:	dd45      	ble.n	800aef4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae68:	4567      	cmp	r7, ip
 800ae6a:	bfb8      	it	lt
 800ae6c:	b2ba      	uxthlt	r2, r7
 800ae6e:	4288      	cmp	r0, r1
 800ae70:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ae74:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ae78:	bfb8      	it	lt
 800ae7a:	b283      	uxthlt	r3, r0
 800ae7c:	1b92      	subs	r2, r2, r6
 800ae7e:	1b5b      	subs	r3, r3, r5
 800ae80:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ae84:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ae88:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ae8c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ae90:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ae94:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ae98:	429a      	cmp	r2, r3
 800ae9a:	d026      	beq.n	800aeea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ae9c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800aea0:	2b00      	cmp	r3, #0
 800aea2:	dd22      	ble.n	800aeea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800aea4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800aea8:	2b00      	cmp	r3, #0
 800aeaa:	dd1e      	ble.n	800aeea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800aeac:	2300      	movs	r3, #0
 800aeae:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800aeb2:	6823      	ldr	r3, [r4, #0]
 800aeb4:	a908      	add	r1, sp, #32
 800aeb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aeb8:	4620      	mov	r0, r4
 800aeba:	4798      	blx	r3
 800aebc:	4b0f      	ldr	r3, [pc, #60]	@ (800aefc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800aebe:	681b      	ldr	r3, [r3, #0]
 800aec0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800aec4:	b10a      	cbz	r2, 800aeca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800aec6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800aec8:	b900      	cbnz	r0, 800aecc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800aeca:	6898      	ldr	r0, [r3, #8]
 800aecc:	6801      	ldr	r1, [r0, #0]
 800aece:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800aed2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800aed6:	2501      	movs	r5, #1
 800aed8:	9502      	str	r5, [sp, #8]
 800aeda:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800aede:	9401      	str	r4, [sp, #4]
 800aee0:	ac06      	add	r4, sp, #24
 800aee2:	9400      	str	r4, [sp, #0]
 800aee4:	688c      	ldr	r4, [r1, #8]
 800aee6:	a905      	add	r1, sp, #20
 800aee8:	47a0      	blx	r4
 800aeea:	b00a      	add	sp, #40	@ 0x28
 800aeec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aef0:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800aef2:	e797      	b.n	800ae24 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800aef4:	2300      	movs	r3, #0
 800aef6:	9307      	str	r3, [sp, #28]
 800aef8:	e7ca      	b.n	800ae90 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800aefa:	bf00      	nop
 800aefc:	20013288 	.word	0x20013288

0800af00 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800af00:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800af04:	b12a      	cbz	r2, 800af12 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800af06:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800af0a:	b112      	cbz	r2, 800af12 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800af0c:	6803      	ldr	r3, [r0, #0]
 800af0e:	695b      	ldr	r3, [r3, #20]
 800af10:	4718      	bx	r3
 800af12:	4770      	bx	lr

0800af14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800af14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af18:	4b2f      	ldr	r3, [pc, #188]	@ (800afd8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800af1a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800af1c:	881b      	ldrh	r3, [r3, #0]
 800af1e:	4293      	cmp	r3, r2
 800af20:	b08d      	sub	sp, #52	@ 0x34
 800af22:	4604      	mov	r4, r0
 800af24:	460f      	mov	r7, r1
 800af26:	d954      	bls.n	800afd2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800af28:	4b2c      	ldr	r3, [pc, #176]	@ (800afdc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800af2a:	6819      	ldr	r1, [r3, #0]
 800af2c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800af30:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800af34:	4a2a      	ldr	r2, [pc, #168]	@ (800afe0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800af36:	6812      	ldr	r2, [r2, #0]
 800af38:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800af3c:	2900      	cmp	r1, #0
 800af3e:	d048      	beq.n	800afd2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800af40:	785a      	ldrb	r2, [r3, #1]
 800af42:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800af46:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800af4a:	4b26      	ldr	r3, [pc, #152]	@ (800afe4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800af4c:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800af50:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800af54:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800af58:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800af5a:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800af5e:	9107      	str	r1, [sp, #28]
 800af60:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800af64:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800af68:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800af6c:	681a      	ldr	r2, [r3, #0]
 800af6e:	f88d 8020 	strb.w	r8, [sp, #32]
 800af72:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800af76:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800af7a:	9609      	str	r6, [sp, #36]	@ 0x24
 800af7c:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800af80:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800af84:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800af88:	b10b      	cbz	r3, 800af8e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800af8a:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800af8c:	b905      	cbnz	r5, 800af90 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800af8e:	6895      	ldr	r5, [r2, #8]
 800af90:	ae05      	add	r6, sp, #20
 800af92:	4621      	mov	r1, r4
 800af94:	4630      	mov	r0, r6
 800af96:	f002 ffbb 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800af9a:	4b13      	ldr	r3, [pc, #76]	@ (800afe8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800af9c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800af9e:	6818      	ldr	r0, [r3, #0]
 800afa0:	f7f8 fa46 	bl	8003430 <_ZNK8touchgfx5Texts7getTextEt>
 800afa4:	6823      	ldr	r3, [r4, #0]
 800afa6:	4680      	mov	r8, r0
 800afa8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800afaa:	4620      	mov	r0, r4
 800afac:	4798      	blx	r3
 800afae:	6823      	ldr	r3, [r4, #0]
 800afb0:	4681      	mov	r9, r0
 800afb2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800afb6:	4620      	mov	r0, r4
 800afb8:	4798      	blx	r3
 800afba:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800afbe:	ab07      	add	r3, sp, #28
 800afc0:	9300      	str	r3, [sp, #0]
 800afc2:	f8cd 8004 	str.w	r8, [sp, #4]
 800afc6:	463b      	mov	r3, r7
 800afc8:	e896 0006 	ldmia.w	r6, {r1, r2}
 800afcc:	4628      	mov	r0, r5
 800afce:	f7f8 f9e1 	bl	8003394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800afd2:	b00d      	add	sp, #52	@ 0x34
 800afd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800afd8:	200132dc 	.word	0x200132dc
 800afdc:	200132d8 	.word	0x200132d8
 800afe0:	200132e0 	.word	0x200132e0
 800afe4:	20013288 	.word	0x20013288
 800afe8:	200132e4 	.word	0x200132e4

0800afec <_ZN8touchgfx5ImageD1Ev>:
 800afec:	4770      	bx	lr

0800afee <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800afee:	b570      	push	{r4, r5, r6, lr}
 800aff0:	880b      	ldrh	r3, [r1, #0]
 800aff2:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800aff4:	4604      	mov	r4, r0
 800aff6:	4608      	mov	r0, r1
 800aff8:	460d      	mov	r5, r1
 800affa:	f004 feed 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800affe:	4606      	mov	r6, r0
 800b000:	4628      	mov	r0, r5
 800b002:	f004 ff1d 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b006:	6823      	ldr	r3, [r4, #0]
 800b008:	4605      	mov	r5, r0
 800b00a:	4631      	mov	r1, r6
 800b00c:	4620      	mov	r0, r4
 800b00e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b010:	4798      	blx	r3
 800b012:	6823      	ldr	r3, [r4, #0]
 800b014:	4629      	mov	r1, r5
 800b016:	4620      	mov	r0, r4
 800b018:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b01a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b01e:	4718      	bx	r3

0800b020 <_ZN8touchgfx5ImageD0Ev>:
 800b020:	b510      	push	{r4, lr}
 800b022:	212c      	movs	r1, #44	@ 0x2c
 800b024:	4604      	mov	r4, r0
 800b026:	f012 fb2f 	bl	801d688 <_ZdlPvj>
 800b02a:	4620      	mov	r0, r4
 800b02c:	bd10      	pop	{r4, pc}

0800b02e <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b02e:	b510      	push	{r4, lr}
 800b030:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800b034:	2bff      	cmp	r3, #255	@ 0xff
 800b036:	4604      	mov	r4, r0
 800b038:	d006      	beq.n	800b048 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b03a:	2300      	movs	r3, #0
 800b03c:	8003      	strh	r3, [r0, #0]
 800b03e:	8043      	strh	r3, [r0, #2]
 800b040:	8083      	strh	r3, [r0, #4]
 800b042:	80c3      	strh	r3, [r0, #6]
 800b044:	4620      	mov	r0, r4
 800b046:	bd10      	pop	{r4, pc}
 800b048:	3126      	adds	r1, #38	@ 0x26
 800b04a:	f004 ff2d 	bl	800fea8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b04e:	e7f9      	b.n	800b044 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b050 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b054:	4604      	mov	r4, r0
 800b056:	b088      	sub	sp, #32
 800b058:	f854 3b26 	ldr.w	r3, [r4], #38
 800b05c:	2500      	movs	r5, #0
 800b05e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b060:	460f      	mov	r7, r1
 800b062:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b066:	a904      	add	r1, sp, #16
 800b068:	4606      	mov	r6, r0
 800b06a:	4798      	blx	r3
 800b06c:	4620      	mov	r0, r4
 800b06e:	f004 feb3 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b072:	4680      	mov	r8, r0
 800b074:	4620      	mov	r0, r4
 800b076:	f004 fee3 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b07a:	9506      	str	r5, [sp, #24]
 800b07c:	ad06      	add	r5, sp, #24
 800b07e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b082:	4639      	mov	r1, r7
 800b084:	4628      	mov	r0, r5
 800b086:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b08a:	f7fe fb8f 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800b08e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b092:	2b00      	cmp	r3, #0
 800b094:	dd19      	ble.n	800b0ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b096:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b09a:	2b00      	cmp	r3, #0
 800b09c:	dd15      	ble.n	800b0ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b09e:	4b0c      	ldr	r3, [pc, #48]	@ (800b0d0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b0a0:	681b      	ldr	r3, [r3, #0]
 800b0a2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b0a6:	b10a      	cbz	r2, 800b0ac <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b0a8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800b0aa:	b900      	cbnz	r0, 800b0ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b0ac:	6898      	ldr	r0, [r3, #8]
 800b0ae:	6801      	ldr	r1, [r0, #0]
 800b0b0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b0b4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b0b8:	2701      	movs	r7, #1
 800b0ba:	9702      	str	r7, [sp, #8]
 800b0bc:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800b0c0:	e9cd 5600 	strd	r5, r6, [sp]
 800b0c4:	688d      	ldr	r5, [r1, #8]
 800b0c6:	4621      	mov	r1, r4
 800b0c8:	47a8      	blx	r5
 800b0ca:	b008      	add	sp, #32
 800b0cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0d0:	20013288 	.word	0x20013288

0800b0d4 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800b0d4:	4770      	bx	lr

0800b0d6 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800b0d6:	b510      	push	{r4, lr}
 800b0d8:	2148      	movs	r1, #72	@ 0x48
 800b0da:	4604      	mov	r4, r0
 800b0dc:	f012 fad4 	bl	801d688 <_ZdlPvj>
 800b0e0:	4620      	mov	r0, r4
 800b0e2:	bd10      	pop	{r4, pc}

0800b0e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b0e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0e8:	b08d      	sub	sp, #52	@ 0x34
 800b0ea:	4604      	mov	r4, r0
 800b0ec:	460f      	mov	r7, r1
 800b0ee:	f7ff fe8f 	bl	800ae10 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b0f2:	4a55      	ldr	r2, [pc, #340]	@ (800b248 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800b0f4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800b0f6:	8812      	ldrh	r2, [r2, #0]
 800b0f8:	429a      	cmp	r2, r3
 800b0fa:	f240 8082 	bls.w	800b202 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b0fe:	4d53      	ldr	r5, [pc, #332]	@ (800b24c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800b100:	682a      	ldr	r2, [r5, #0]
 800b102:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b106:	4b52      	ldr	r3, [pc, #328]	@ (800b250 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b108:	681b      	ldr	r3, [r3, #0]
 800b10a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800b10e:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 800b112:	2200      	movs	r2, #0
 800b114:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800b118:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 800b11c:	2a03      	cmp	r2, #3
 800b11e:	d811      	bhi.n	800b144 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b120:	e8df f002 	tbb	[pc, r2]
 800b124:	89727902 	.word	0x89727902
 800b128:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b12c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b130:	1ad2      	subs	r2, r2, r3
 800b132:	2002      	movs	r0, #2
 800b134:	f8ad 1010 	strh.w	r1, [sp, #16]
 800b138:	fb92 f2f0 	sdiv	r2, r2, r0
 800b13c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b140:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b144:	f10d 080c 	add.w	r8, sp, #12
 800b148:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b14c:	f10d 0914 	add.w	r9, sp, #20
 800b150:	e889 0003 	stmia.w	r9, {r0, r1}
 800b154:	4639      	mov	r1, r7
 800b156:	4648      	mov	r0, r9
 800b158:	f7fe fb28 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800b15c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b160:	2b00      	cmp	r3, #0
 800b162:	dd4e      	ble.n	800b202 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b164:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b168:	2b00      	cmp	r3, #0
 800b16a:	dd4a      	ble.n	800b202 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b16c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b170:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b174:	1a9b      	subs	r3, r3, r2
 800b176:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b17a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b17e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b182:	1a9b      	subs	r3, r3, r2
 800b184:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b188:	6823      	ldr	r3, [r4, #0]
 800b18a:	4641      	mov	r1, r8
 800b18c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b18e:	4620      	mov	r0, r4
 800b190:	4798      	blx	r3
 800b192:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800b196:	2b00      	cmp	r3, #0
 800b198:	d053      	beq.n	800b242 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800b19a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800b19c:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 800b19e:	682b      	ldr	r3, [r5, #0]
 800b1a0:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 800b1a4:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 800b1a8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b1ac:	785b      	ldrb	r3, [r3, #1]
 800b1ae:	9209      	str	r2, [sp, #36]	@ 0x24
 800b1b0:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b1b4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b1b8:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 800b1bc:	2300      	movs	r3, #0
 800b1be:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 800b1c2:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 800b1c6:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800b1ca:	4b22      	ldr	r3, [pc, #136]	@ (800b254 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b1cc:	9607      	str	r6, [sp, #28]
 800b1ce:	681b      	ldr	r3, [r3, #0]
 800b1d0:	f88d 5020 	strb.w	r5, [sp, #32]
 800b1d4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800b1d8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b1dc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b1e0:	b10a      	cbz	r2, 800b1e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800b1e2:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 800b1e4:	b904      	cbnz	r4, 800b1e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800b1e6:	689c      	ldr	r4, [r3, #8]
 800b1e8:	4b1b      	ldr	r3, [pc, #108]	@ (800b258 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b1ea:	6818      	ldr	r0, [r3, #0]
 800b1ec:	f7f8 f920 	bl	8003430 <_ZNK8touchgfx5Texts7getTextEt>
 800b1f0:	ab07      	add	r3, sp, #28
 800b1f2:	9001      	str	r0, [sp, #4]
 800b1f4:	9300      	str	r3, [sp, #0]
 800b1f6:	e898 0006 	ldmia.w	r8, {r1, r2}
 800b1fa:	464b      	mov	r3, r9
 800b1fc:	4620      	mov	r0, r4
 800b1fe:	f7f8 f8c9 	bl	8003394 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b202:	b00d      	add	sp, #52	@ 0x34
 800b204:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b208:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b20c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b210:	1ad2      	subs	r2, r2, r3
 800b212:	3201      	adds	r2, #1
 800b214:	e78d      	b.n	800b132 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800b216:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b21a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b21e:	1ad2      	subs	r2, r2, r3
 800b220:	3201      	adds	r2, #1
 800b222:	2002      	movs	r0, #2
 800b224:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b228:	fb92 f2f0 	sdiv	r2, r2, r0
 800b22c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800b230:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b234:	e786      	b.n	800b144 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b236:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b23a:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b23e:	1ad2      	subs	r2, r2, r3
 800b240:	e7ef      	b.n	800b222 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800b242:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 800b244:	e7aa      	b.n	800b19c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800b246:	bf00      	nop
 800b248:	200132dc 	.word	0x200132dc
 800b24c:	200132d8 	.word	0x200132d8
 800b250:	200132e0 	.word	0x200132e0
 800b254:	20013288 	.word	0x20013288
 800b258:	200132e4 	.word	0x200132e4

0800b25c <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b25c:	b510      	push	{r4, lr}
 800b25e:	2101      	movs	r1, #1
 800b260:	4c13      	ldr	r4, [pc, #76]	@ (800b2b0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b262:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800b266:	2200      	movs	r2, #0
 800b268:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 800b26c:	6004      	str	r4, [r0, #0]
 800b26e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b272:	4c10      	ldr	r4, [pc, #64]	@ (800b2b4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800b274:	8082      	strh	r2, [r0, #4]
 800b276:	80c2      	strh	r2, [r0, #6]
 800b278:	8102      	strh	r2, [r0, #8]
 800b27a:	8142      	strh	r2, [r0, #10]
 800b27c:	8182      	strh	r2, [r0, #12]
 800b27e:	81c2      	strh	r2, [r0, #14]
 800b280:	8202      	strh	r2, [r0, #16]
 800b282:	8242      	strh	r2, [r0, #18]
 800b284:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b288:	61c2      	str	r2, [r0, #28]
 800b28a:	8402      	strh	r2, [r0, #32]
 800b28c:	8442      	strh	r2, [r0, #34]	@ 0x22
 800b28e:	6282      	str	r2, [r0, #40]	@ 0x28
 800b290:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 800b294:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 800b296:	8601      	strh	r1, [r0, #48]	@ 0x30
 800b298:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 800b29c:	6344      	str	r4, [r0, #52]	@ 0x34
 800b29e:	8701      	strh	r1, [r0, #56]	@ 0x38
 800b2a0:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 800b2a4:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 800b2a8:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 800b2ac:	bd10      	pop	{r4, pc}
 800b2ae:	bf00      	nop
 800b2b0:	08020568 	.word	0x08020568
 800b2b4:	0801f7fc 	.word	0x0801f7fc

0800b2b8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b2b8:	b510      	push	{r4, lr}
 800b2ba:	6803      	ldr	r3, [r0, #0]
 800b2bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2be:	460c      	mov	r4, r1
 800b2c0:	4798      	blx	r3
 800b2c2:	1b03      	subs	r3, r0, r4
 800b2c4:	4258      	negs	r0, r3
 800b2c6:	4158      	adcs	r0, r3
 800b2c8:	bd10      	pop	{r4, pc}
	...

0800b2cc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b2cc:	4b01      	ldr	r3, [pc, #4]	@ (800b2d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b2ce:	6019      	str	r1, [r3, #0]
 800b2d0:	4770      	bx	lr
 800b2d2:	bf00      	nop
 800b2d4:	20013290 	.word	0x20013290

0800b2d8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b2d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2dc:	4696      	mov	lr, r2
 800b2de:	4605      	mov	r5, r0
 800b2e0:	4614      	mov	r4, r2
 800b2e2:	460e      	mov	r6, r1
 800b2e4:	461f      	mov	r7, r3
 800b2e6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b2ea:	b097      	sub	sp, #92	@ 0x5c
 800b2ec:	f10d 0c1c 	add.w	ip, sp, #28
 800b2f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b2f4:	f8de 3000 	ldr.w	r3, [lr]
 800b2f8:	f8cc 3000 	str.w	r3, [ip]
 800b2fc:	f104 0e14 	add.w	lr, r4, #20
 800b300:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b304:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800b308:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b30c:	f8de 3000 	ldr.w	r3, [lr]
 800b310:	f8cc 3000 	str.w	r3, [ip]
 800b314:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800b318:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b31c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800b320:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b324:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800b328:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800b32c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800b330:	f8de 3000 	ldr.w	r3, [lr]
 800b334:	f8cc 3000 	str.w	r3, [ip]
 800b338:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800b33a:	682b      	ldr	r3, [r5, #0]
 800b33c:	9201      	str	r2, [sp, #4]
 800b33e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b342:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b344:	9200      	str	r2, [sp, #0]
 800b346:	f8cd 8008 	str.w	r8, [sp, #8]
 800b34a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800b34e:	aa07      	add	r2, sp, #28
 800b350:	463b      	mov	r3, r7
 800b352:	4631      	mov	r1, r6
 800b354:	4628      	mov	r0, r5
 800b356:	47d8      	blx	fp
 800b358:	46a6      	mov	lr, r4
 800b35a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b35e:	f10d 0c1c 	add.w	ip, sp, #28
 800b362:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b366:	f8de 3000 	ldr.w	r3, [lr]
 800b36a:	f8cc 3000 	str.w	r3, [ip]
 800b36e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800b372:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b376:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800b37a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b37e:	343c      	adds	r4, #60	@ 0x3c
 800b380:	f8de 3000 	ldr.w	r3, [lr]
 800b384:	f8cc 3000 	str.w	r3, [ip]
 800b388:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b38a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800b38e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b392:	6823      	ldr	r3, [r4, #0]
 800b394:	f8cc 3000 	str.w	r3, [ip]
 800b398:	682b      	ldr	r3, [r5, #0]
 800b39a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b39e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800b3a0:	9201      	str	r2, [sp, #4]
 800b3a2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b3a4:	9200      	str	r2, [sp, #0]
 800b3a6:	f8cd 8008 	str.w	r8, [sp, #8]
 800b3aa:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800b3ac:	aa07      	add	r2, sp, #28
 800b3ae:	463b      	mov	r3, r7
 800b3b0:	4631      	mov	r1, r6
 800b3b2:	4628      	mov	r0, r5
 800b3b4:	47a0      	blx	r4
 800b3b6:	b017      	add	sp, #92	@ 0x5c
 800b3b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b3bc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b3bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3c0:	b08d      	sub	sp, #52	@ 0x34
 800b3c2:	4688      	mov	r8, r1
 800b3c4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800b3c6:	f8d3 c000 	ldr.w	ip, [r3]
 800b3ca:	680f      	ldr	r7, [r1, #0]
 800b3cc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800b3d0:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800b3d4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800b3d8:	edd3 6a07 	vldr	s13, [r3, #28]
 800b3dc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800b3de:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800b3e2:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b3e6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b3ea:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800b3ee:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800b3f2:	eba7 070c 	sub.w	r7, r7, ip
 800b3f6:	42bc      	cmp	r4, r7
 800b3f8:	bfa8      	it	ge
 800b3fa:	463c      	movge	r4, r7
 800b3fc:	ee07 4a90 	vmov	s15, r4
 800b400:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b404:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800b408:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b40c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b410:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b414:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800b418:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b41c:	eb09 0e0c 	add.w	lr, r9, ip
 800b420:	4571      	cmp	r1, lr
 800b422:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b426:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b42a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b42e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b432:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b436:	f340 808d 	ble.w	800b554 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b43a:	eba1 060e 	sub.w	r6, r1, lr
 800b43e:	fb96 f5f4 	sdiv	r5, r6, r4
 800b442:	ee07 5a10 	vmov	s14, r5
 800b446:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b44a:	2d00      	cmp	r5, #0
 800b44c:	fb04 6615 	mls	r6, r4, r5, r6
 800b450:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b454:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b458:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b45c:	dd13      	ble.n	800b486 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b45e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b462:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b466:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b46a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b46e:	bf18      	it	ne
 800b470:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b474:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b478:	bf08      	it	eq
 800b47a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b47e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b482:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b486:	fb05 f204 	mul.w	r2, r5, r4
 800b48a:	1abf      	subs	r7, r7, r2
 800b48c:	4494      	add	ip, r2
 800b48e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b492:	4411      	add	r1, r2
 800b494:	eb09 020c 	add.w	r2, r9, ip
 800b498:	443a      	add	r2, r7
 800b49a:	b209      	sxth	r1, r1
 800b49c:	428a      	cmp	r2, r1
 800b49e:	bfc4      	itt	gt
 800b4a0:	eba1 0209 	subgt.w	r2, r1, r9
 800b4a4:	eba2 070c 	subgt.w	r7, r2, ip
 800b4a8:	2f00      	cmp	r7, #0
 800b4aa:	dd50      	ble.n	800b54e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b4ac:	fb97 f1f4 	sdiv	r1, r7, r4
 800b4b0:	fb04 7211 	mls	r2, r4, r1, r7
 800b4b4:	b90a      	cbnz	r2, 800b4ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b4b6:	3901      	subs	r1, #1
 800b4b8:	4622      	mov	r2, r4
 800b4ba:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b4be:	6840      	ldr	r0, [r0, #4]
 800b4c0:	900b      	str	r0, [sp, #44]	@ 0x2c
 800b4c2:	f8d0 a000 	ldr.w	sl, [r0]
 800b4c6:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800b4c8:	9008      	str	r0, [sp, #32]
 800b4ca:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800b4ce:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800b4d0:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800b4d4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b4d8:	695b      	ldr	r3, [r3, #20]
 800b4da:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800b4dc:	445b      	add	r3, fp
 800b4de:	eef0 6a42 	vmov.f32	s13, s4
 800b4e2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b4e6:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b4ea:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b4ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b4f2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b4f6:	9307      	str	r3, [sp, #28]
 800b4f8:	ee17 7a90 	vmov	r7, s15
 800b4fc:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b500:	eeb0 7a61 	vmov.f32	s14, s3
 800b504:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b508:	ee16 3a90 	vmov	r3, s13
 800b50c:	fb97 f7f4 	sdiv	r7, r7, r4
 800b510:	ee17 ca90 	vmov	ip, s15
 800b514:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b518:	fb9c fcf4 	sdiv	ip, ip, r4
 800b51c:	fb0c 3306 	mla	r3, ip, r6, r3
 800b520:	9302      	str	r3, [sp, #8]
 800b522:	ee17 3a10 	vmov	r3, s14
 800b526:	44b6      	add	lr, r6
 800b528:	fb04 e505 	mla	r5, r4, r5, lr
 800b52c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b530:	fb07 3706 	mla	r7, r7, r6, r3
 800b534:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b538:	e9cd 4700 	strd	r4, r7, [sp]
 800b53c:	2900      	cmp	r1, #0
 800b53e:	bfcc      	ite	gt
 800b540:	46a1      	movgt	r9, r4
 800b542:	4691      	movle	r9, r2
 800b544:	eba9 0306 	sub.w	r3, r9, r6
 800b548:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b54c:	47a0      	blx	r4
 800b54e:	b00d      	add	sp, #52	@ 0x34
 800b550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b554:	2500      	movs	r5, #0
 800b556:	462e      	mov	r6, r5
 800b558:	e799      	b.n	800b48e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b55c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b55c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b560:	b0db      	sub	sp, #364	@ 0x16c
 800b562:	461d      	mov	r5, r3
 800b564:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800b568:	930a      	str	r3, [sp, #40]	@ 0x28
 800b56a:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800b56e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b570:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800b574:	9310      	str	r3, [sp, #64]	@ 0x40
 800b576:	6803      	ldr	r3, [r0, #0]
 800b578:	910f      	str	r1, [sp, #60]	@ 0x3c
 800b57a:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800b57c:	9009      	str	r0, [sp, #36]	@ 0x24
 800b57e:	4614      	mov	r4, r2
 800b580:	4629      	mov	r1, r5
 800b582:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800b586:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800b58a:	47b8      	blx	r7
 800b58c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b58e:	6058      	str	r0, [r3, #4]
 800b590:	2800      	cmp	r0, #0
 800b592:	f000 83a1 	beq.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b596:	682b      	ldr	r3, [r5, #0]
 800b598:	9314      	str	r3, [sp, #80]	@ 0x50
 800b59a:	686b      	ldr	r3, [r5, #4]
 800b59c:	9315      	str	r3, [sp, #84]	@ 0x54
 800b59e:	4bc4      	ldr	r3, [pc, #784]	@ (800b8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b5a0:	ed94 7a02 	vldr	s14, [r4, #8]
 800b5a4:	7819      	ldrb	r1, [r3, #0]
 800b5a6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b5aa:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800b5ae:	2900      	cmp	r1, #0
 800b5b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5b4:	bf16      	itet	ne
 800b5b6:	4619      	movne	r1, r3
 800b5b8:	4611      	moveq	r1, r2
 800b5ba:	4613      	movne	r3, r2
 800b5bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5c0:	9116      	str	r1, [sp, #88]	@ 0x58
 800b5c2:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800b5c6:	f240 8387 	bls.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5ca:	ed94 7a07 	vldr	s14, [r4, #28]
 800b5ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5d6:	f240 837f 	bls.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5da:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800b5de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5e6:	f240 8377 	bls.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5ea:	6822      	ldr	r2, [r4, #0]
 800b5ec:	4bb1      	ldr	r3, [pc, #708]	@ (800b8b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b5ee:	429a      	cmp	r2, r3
 800b5f0:	f2c0 8372 	blt.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5f4:	49b0      	ldr	r1, [pc, #704]	@ (800b8b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b5f6:	6963      	ldr	r3, [r4, #20]
 800b5f8:	428a      	cmp	r2, r1
 800b5fa:	f300 836d 	bgt.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5fe:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800b602:	48ae      	ldr	r0, [pc, #696]	@ (800b8bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b604:	33ff      	adds	r3, #255	@ 0xff
 800b606:	4283      	cmp	r3, r0
 800b608:	f200 8366 	bhi.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b60c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800b60e:	4dac      	ldr	r5, [pc, #688]	@ (800b8c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b610:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800b614:	33ff      	adds	r3, #255	@ 0xff
 800b616:	42ab      	cmp	r3, r5
 800b618:	f200 835e 	bhi.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b61c:	6862      	ldr	r2, [r4, #4]
 800b61e:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800b622:	33ff      	adds	r3, #255	@ 0xff
 800b624:	4283      	cmp	r3, r0
 800b626:	f200 8357 	bhi.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b62a:	69a1      	ldr	r1, [r4, #24]
 800b62c:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800b630:	33ff      	adds	r3, #255	@ 0xff
 800b632:	4283      	cmp	r3, r0
 800b634:	f200 8350 	bhi.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b638:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800b63a:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800b63e:	30ff      	adds	r0, #255	@ 0xff
 800b640:	42a8      	cmp	r0, r5
 800b642:	f200 8349 	bhi.w	800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b646:	428a      	cmp	r2, r1
 800b648:	f280 8110 	bge.w	800b86c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b64c:	429a      	cmp	r2, r3
 800b64e:	f300 8119 	bgt.w	800b884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b652:	4299      	cmp	r1, r3
 800b654:	f280 811d 	bge.w	800b892 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b658:	2502      	movs	r5, #2
 800b65a:	2701      	movs	r7, #1
 800b65c:	46a9      	mov	r9, r5
 800b65e:	46b8      	mov	r8, r7
 800b660:	f04f 0a00 	mov.w	sl, #0
 800b664:	4621      	mov	r1, r4
 800b666:	a849      	add	r0, sp, #292	@ 0x124
 800b668:	f003 fd72 	bl	800f150 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b66c:	4622      	mov	r2, r4
 800b66e:	4653      	mov	r3, sl
 800b670:	a949      	add	r1, sp, #292	@ 0x124
 800b672:	f8cd 9000 	str.w	r9, [sp]
 800b676:	a819      	add	r0, sp, #100	@ 0x64
 800b678:	f003 fe9a 	bl	800f3b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b67c:	4622      	mov	r2, r4
 800b67e:	4653      	mov	r3, sl
 800b680:	a949      	add	r1, sp, #292	@ 0x124
 800b682:	f8cd 8000 	str.w	r8, [sp]
 800b686:	a829      	add	r0, sp, #164	@ 0xa4
 800b688:	f003 fe92 	bl	800f3b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b68c:	4643      	mov	r3, r8
 800b68e:	4622      	mov	r2, r4
 800b690:	a949      	add	r1, sp, #292	@ 0x124
 800b692:	f8cd 9000 	str.w	r9, [sp]
 800b696:	a839      	add	r0, sp, #228	@ 0xe4
 800b698:	f003 fe8a 	bl	800f3b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b69c:	42af      	cmp	r7, r5
 800b69e:	bfb5      	itete	lt
 800b6a0:	2300      	movlt	r3, #0
 800b6a2:	2301      	movge	r3, #1
 800b6a4:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800b6a6:	930e      	strge	r3, [sp, #56]	@ 0x38
 800b6a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b6aa:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b6ae:	af12      	add	r7, sp, #72	@ 0x48
 800b6b0:	bfb9      	ittee	lt
 800b6b2:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800b6b4:	ac19      	addlt	r4, sp, #100	@ 0x64
 800b6b6:	ad19      	addge	r5, sp, #100	@ 0x64
 800b6b8:	ac29      	addge	r4, sp, #164	@ 0xa4
 800b6ba:	e887 0003 	stmia.w	r7, {r0, r1}
 800b6be:	b928      	cbnz	r0, 800b6cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b6c0:	4b80      	ldr	r3, [pc, #512]	@ (800b8c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b6c2:	6818      	ldr	r0, [r3, #0]
 800b6c4:	6803      	ldr	r3, [r0, #0]
 800b6c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b6c8:	4798      	blx	r3
 800b6ca:	6038      	str	r0, [r7, #0]
 800b6cc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b6ce:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b6d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b6d6:	930c      	str	r3, [sp, #48]	@ 0x30
 800b6d8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800b6da:	6963      	ldr	r3, [r4, #20]
 800b6dc:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800b6de:	440b      	add	r3, r1
 800b6e0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b6e4:	4408      	add	r0, r1
 800b6e6:	b200      	sxth	r0, r0
 800b6e8:	4283      	cmp	r3, r0
 800b6ea:	900d      	str	r0, [sp, #52]	@ 0x34
 800b6ec:	f280 80dd 	bge.w	800b8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b6f0:	428b      	cmp	r3, r1
 800b6f2:	da08      	bge.n	800b706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b6f4:	2a00      	cmp	r2, #0
 800b6f6:	dd06      	ble.n	800b706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b6f8:	1acb      	subs	r3, r1, r3
 800b6fa:	429a      	cmp	r2, r3
 800b6fc:	f2c0 80e4 	blt.w	800b8c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b700:	2b00      	cmp	r3, #0
 800b702:	f300 80e2 	bgt.w	800b8ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b706:	6967      	ldr	r7, [r4, #20]
 800b708:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800b70a:	443b      	add	r3, r7
 800b70c:	461f      	mov	r7, r3
 800b70e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b710:	1bdf      	subs	r7, r3, r7
 800b712:	4297      	cmp	r7, r2
 800b714:	bfa8      	it	ge
 800b716:	4617      	movge	r7, r2
 800b718:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800b71c:	2f00      	cmp	r7, #0
 800b71e:	f340 8166 	ble.w	800b9ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b722:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b724:	6829      	ldr	r1, [r5, #0]
 800b726:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b72a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b72e:	6820      	ldr	r0, [r4, #0]
 800b730:	4411      	add	r1, r2
 800b732:	4299      	cmp	r1, r3
 800b734:	dd1a      	ble.n	800b76c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b736:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b73a:	440b      	add	r3, r1
 800b73c:	4402      	add	r2, r0
 800b73e:	b21b      	sxth	r3, r3
 800b740:	429a      	cmp	r2, r3
 800b742:	dc13      	bgt.n	800b76c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b744:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b746:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800b748:	681b      	ldr	r3, [r3, #0]
 800b74a:	9206      	str	r2, [sp, #24]
 800b74c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b74e:	9205      	str	r2, [sp, #20]
 800b750:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b752:	9500      	str	r5, [sp, #0]
 800b754:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b758:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800b75a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800b75c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b760:	a912      	add	r1, sp, #72	@ 0x48
 800b762:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800b766:	aa49      	add	r2, sp, #292	@ 0x124
 800b768:	4623      	mov	r3, r4
 800b76a:	47c8      	blx	r9
 800b76c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b770:	441a      	add	r2, r3
 800b772:	6963      	ldr	r3, [r4, #20]
 800b774:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800b778:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800b77c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800b780:	68a1      	ldr	r1, [r4, #8]
 800b782:	ed94 6a08 	vldr	s12, [r4, #32]
 800b786:	6022      	str	r2, [r4, #0]
 800b788:	3301      	adds	r3, #1
 800b78a:	6163      	str	r3, [r4, #20]
 800b78c:	69a3      	ldr	r3, [r4, #24]
 800b78e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b792:	3b01      	subs	r3, #1
 800b794:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800b798:	61a3      	str	r3, [r4, #24]
 800b79a:	6923      	ldr	r3, [r4, #16]
 800b79c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b7a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b7a4:	edd4 6a07 	vldr	s13, [r4, #28]
 800b7a8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b7ac:	440b      	add	r3, r1
 800b7ae:	68e1      	ldr	r1, [r4, #12]
 800b7b0:	6123      	str	r3, [r4, #16]
 800b7b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b7b6:	428b      	cmp	r3, r1
 800b7b8:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7bc:	db15      	blt.n	800b7ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b7be:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800b7c2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b7c6:	3201      	adds	r2, #1
 800b7c8:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7cc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800b7d0:	6022      	str	r2, [r4, #0]
 800b7d2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b7d6:	1a5b      	subs	r3, r3, r1
 800b7d8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800b7dc:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800b7e0:	6123      	str	r3, [r4, #16]
 800b7e2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b7e6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800b7ea:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b7ee:	441a      	add	r2, r3
 800b7f0:	696b      	ldr	r3, [r5, #20]
 800b7f2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800b7f6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800b7fa:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800b7fe:	68a9      	ldr	r1, [r5, #8]
 800b800:	ed95 6a08 	vldr	s12, [r5, #32]
 800b804:	602a      	str	r2, [r5, #0]
 800b806:	3301      	adds	r3, #1
 800b808:	616b      	str	r3, [r5, #20]
 800b80a:	69ab      	ldr	r3, [r5, #24]
 800b80c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b810:	3b01      	subs	r3, #1
 800b812:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800b816:	61ab      	str	r3, [r5, #24]
 800b818:	692b      	ldr	r3, [r5, #16]
 800b81a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b81e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b822:	edd5 6a07 	vldr	s13, [r5, #28]
 800b826:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b82a:	440b      	add	r3, r1
 800b82c:	68e9      	ldr	r1, [r5, #12]
 800b82e:	612b      	str	r3, [r5, #16]
 800b830:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b834:	428b      	cmp	r3, r1
 800b836:	edc5 6a07 	vstr	s13, [r5, #28]
 800b83a:	db15      	blt.n	800b868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b83c:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800b840:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b844:	3201      	adds	r2, #1
 800b846:	edc5 6a07 	vstr	s13, [r5, #28]
 800b84a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800b84e:	602a      	str	r2, [r5, #0]
 800b850:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b854:	1a5b      	subs	r3, r3, r1
 800b856:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800b85a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800b85e:	612b      	str	r3, [r5, #16]
 800b860:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b864:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800b868:	3f01      	subs	r7, #1
 800b86a:	e757      	b.n	800b71c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b86c:	4299      	cmp	r1, r3
 800b86e:	dc13      	bgt.n	800b898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b870:	429a      	cmp	r2, r3
 800b872:	da14      	bge.n	800b89e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b874:	2502      	movs	r5, #2
 800b876:	2703      	movs	r7, #3
 800b878:	46a9      	mov	r9, r5
 800b87a:	f04f 0800 	mov.w	r8, #0
 800b87e:	f04f 0a01 	mov.w	sl, #1
 800b882:	e6ef      	b.n	800b664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b884:	2501      	movs	r5, #1
 800b886:	2700      	movs	r7, #0
 800b888:	46a9      	mov	r9, r5
 800b88a:	46b8      	mov	r8, r7
 800b88c:	f04f 0a02 	mov.w	sl, #2
 800b890:	e6e8      	b.n	800b664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b892:	2501      	movs	r5, #1
 800b894:	2702      	movs	r7, #2
 800b896:	e6e1      	b.n	800b65c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b898:	2500      	movs	r5, #0
 800b89a:	2701      	movs	r7, #1
 800b89c:	e7f4      	b.n	800b888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b89e:	2702      	movs	r7, #2
 800b8a0:	2503      	movs	r5, #3
 800b8a2:	f04f 0900 	mov.w	r9, #0
 800b8a6:	46b8      	mov	r8, r7
 800b8a8:	e7e9      	b.n	800b87e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b8aa:	4613      	mov	r3, r2
 800b8ac:	e728      	b.n	800b700 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b8ae:	bf00      	nop
 800b8b0:	20013280 	.word	0x20013280
 800b8b4:	fffd8f01 	.word	0xfffd8f01
 800b8b8:	00027100 	.word	0x00027100
 800b8bc:	0004e1ff 	.word	0x0004e1ff
 800b8c0:	0004e1fe 	.word	0x0004e1fe
 800b8c4:	20013288 	.word	0x20013288
 800b8c8:	4613      	mov	r3, r2
 800b8ca:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800b8cc:	9111      	str	r1, [sp, #68]	@ 0x44
 800b8ce:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800b8d2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800b8d6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800b8d8:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800b8dc:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800b8e0:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800b8e4:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800b8e8:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800b8ec:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800b8f0:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800b8f4:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800b8f8:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800b8fc:	469e      	mov	lr, r3
 800b8fe:	469c      	mov	ip, r3
 800b900:	f04f 0900 	mov.w	r9, #0
 800b904:	f1bc 0f00 	cmp.w	ip, #0
 800b908:	d147      	bne.n	800b99a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b90a:	eb03 0c07 	add.w	ip, r3, r7
 800b90e:	1ad7      	subs	r7, r2, r3
 800b910:	f1b9 0f00 	cmp.w	r9, #0
 800b914:	d009      	beq.n	800b92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b916:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800b91a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800b91c:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800b920:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800b924:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800b928:	912d      	str	r1, [sp, #180]	@ 0xb4
 800b92a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800b92c:	9111      	str	r1, [sp, #68]	@ 0x44
 800b92e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800b932:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800b936:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800b93a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800b93e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800b942:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800b946:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800b94a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800b94e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800b952:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800b956:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800b95a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800b95e:	f04f 0800 	mov.w	r8, #0
 800b962:	f1be 0f00 	cmp.w	lr, #0
 800b966:	d031      	beq.n	800b9cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b968:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800b96a:	4431      	add	r1, r6
 800b96c:	4549      	cmp	r1, r9
 800b96e:	4450      	add	r0, sl
 800b970:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b974:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b978:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b97c:	db08      	blt.n	800b990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b97e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b982:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b986:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b98a:	3001      	adds	r0, #1
 800b98c:	eba1 0109 	sub.w	r1, r1, r9
 800b990:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b994:	f04f 0801 	mov.w	r8, #1
 800b998:	e7e3      	b.n	800b962 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b99a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800b99c:	4431      	add	r1, r6
 800b99e:	4541      	cmp	r1, r8
 800b9a0:	4450      	add	r0, sl
 800b9a2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b9a6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b9aa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b9ae:	db08      	blt.n	800b9c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b9b0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b9b4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b9b8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b9bc:	3001      	adds	r0, #1
 800b9be:	eba1 0108 	sub.w	r1, r1, r8
 800b9c2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b9c6:	f04f 0901 	mov.w	r9, #1
 800b9ca:	e79b      	b.n	800b904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b9cc:	449c      	add	ip, r3
 800b9ce:	1aff      	subs	r7, r7, r3
 800b9d0:	f1b8 0f00 	cmp.w	r8, #0
 800b9d4:	d009      	beq.n	800b9ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b9d6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800b9da:	9019      	str	r0, [sp, #100]	@ 0x64
 800b9dc:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800b9e0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800b9e4:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800b9e8:	911d      	str	r1, [sp, #116]	@ 0x74
 800b9ea:	1ad2      	subs	r2, r2, r3
 800b9ec:	e68b      	b.n	800b706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b9ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b9f0:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800b9f2:	2b00      	cmp	r3, #0
 800b9f4:	f000 80d1 	beq.w	800bb9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b9f8:	ad19      	add	r5, sp, #100	@ 0x64
 800b9fa:	ac39      	add	r4, sp, #228	@ 0xe4
 800b9fc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800b9fe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ba02:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ba06:	930c      	str	r3, [sp, #48]	@ 0x30
 800ba08:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ba0a:	6963      	ldr	r3, [r4, #20]
 800ba0c:	440b      	add	r3, r1
 800ba0e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ba12:	4408      	add	r0, r1
 800ba14:	b200      	sxth	r0, r0
 800ba16:	4283      	cmp	r3, r0
 800ba18:	900d      	str	r0, [sp, #52]	@ 0x34
 800ba1a:	f280 80c1 	bge.w	800bba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ba1e:	428b      	cmp	r3, r1
 800ba20:	da08      	bge.n	800ba34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba22:	2a00      	cmp	r2, #0
 800ba24:	dd06      	ble.n	800ba34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba26:	1acb      	subs	r3, r1, r3
 800ba28:	429a      	cmp	r2, r3
 800ba2a:	f2c0 80bb 	blt.w	800bba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ba2e:	2b00      	cmp	r3, #0
 800ba30:	f300 80b9 	bgt.w	800bba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ba34:	6967      	ldr	r7, [r4, #20]
 800ba36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ba38:	443b      	add	r3, r7
 800ba3a:	461f      	mov	r7, r3
 800ba3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ba3e:	1bdf      	subs	r7, r3, r7
 800ba40:	4297      	cmp	r7, r2
 800ba42:	bfa8      	it	ge
 800ba44:	4617      	movge	r7, r2
 800ba46:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ba4a:	2f00      	cmp	r7, #0
 800ba4c:	f340 813c 	ble.w	800bcc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ba50:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ba52:	6829      	ldr	r1, [r5, #0]
 800ba54:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba58:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ba5c:	6820      	ldr	r0, [r4, #0]
 800ba5e:	4411      	add	r1, r2
 800ba60:	4299      	cmp	r1, r3
 800ba62:	dd1a      	ble.n	800ba9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ba64:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ba68:	440b      	add	r3, r1
 800ba6a:	4402      	add	r2, r0
 800ba6c:	b21b      	sxth	r3, r3
 800ba6e:	429a      	cmp	r2, r3
 800ba70:	dc13      	bgt.n	800ba9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ba72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ba74:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ba76:	681b      	ldr	r3, [r3, #0]
 800ba78:	9206      	str	r2, [sp, #24]
 800ba7a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ba7c:	9205      	str	r2, [sp, #20]
 800ba7e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ba80:	9500      	str	r5, [sp, #0]
 800ba82:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ba86:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ba88:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ba8a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ba8e:	a912      	add	r1, sp, #72	@ 0x48
 800ba90:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ba94:	aa49      	add	r2, sp, #292	@ 0x124
 800ba96:	4623      	mov	r3, r4
 800ba98:	47c8      	blx	r9
 800ba9a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ba9e:	441a      	add	r2, r3
 800baa0:	6963      	ldr	r3, [r4, #20]
 800baa2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800baa6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800baaa:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800baae:	68a1      	ldr	r1, [r4, #8]
 800bab0:	ed94 6a08 	vldr	s12, [r4, #32]
 800bab4:	6022      	str	r2, [r4, #0]
 800bab6:	3301      	adds	r3, #1
 800bab8:	6163      	str	r3, [r4, #20]
 800baba:	69a3      	ldr	r3, [r4, #24]
 800babc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bac0:	3b01      	subs	r3, #1
 800bac2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800bac6:	61a3      	str	r3, [r4, #24]
 800bac8:	6923      	ldr	r3, [r4, #16]
 800baca:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800bace:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bad2:	edd4 6a07 	vldr	s13, [r4, #28]
 800bad6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800bada:	440b      	add	r3, r1
 800badc:	68e1      	ldr	r1, [r4, #12]
 800bade:	6123      	str	r3, [r4, #16]
 800bae0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bae4:	428b      	cmp	r3, r1
 800bae6:	edc4 6a07 	vstr	s13, [r4, #28]
 800baea:	db15      	blt.n	800bb18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800baec:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800baf0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800baf4:	3201      	adds	r2, #1
 800baf6:	edc4 6a07 	vstr	s13, [r4, #28]
 800bafa:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800bafe:	6022      	str	r2, [r4, #0]
 800bb00:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bb04:	1a5b      	subs	r3, r3, r1
 800bb06:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800bb0a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800bb0e:	6123      	str	r3, [r4, #16]
 800bb10:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bb14:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800bb18:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bb1c:	441a      	add	r2, r3
 800bb1e:	696b      	ldr	r3, [r5, #20]
 800bb20:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800bb24:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800bb28:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800bb2c:	68a9      	ldr	r1, [r5, #8]
 800bb2e:	ed95 6a08 	vldr	s12, [r5, #32]
 800bb32:	602a      	str	r2, [r5, #0]
 800bb34:	3301      	adds	r3, #1
 800bb36:	616b      	str	r3, [r5, #20]
 800bb38:	69ab      	ldr	r3, [r5, #24]
 800bb3a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bb3e:	3b01      	subs	r3, #1
 800bb40:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800bb44:	61ab      	str	r3, [r5, #24]
 800bb46:	692b      	ldr	r3, [r5, #16]
 800bb48:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800bb4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bb50:	edd5 6a07 	vldr	s13, [r5, #28]
 800bb54:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800bb58:	440b      	add	r3, r1
 800bb5a:	68e9      	ldr	r1, [r5, #12]
 800bb5c:	612b      	str	r3, [r5, #16]
 800bb5e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bb62:	428b      	cmp	r3, r1
 800bb64:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb68:	db15      	blt.n	800bb96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800bb6a:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800bb6e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bb72:	3201      	adds	r2, #1
 800bb74:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb78:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800bb7c:	602a      	str	r2, [r5, #0]
 800bb7e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bb82:	1a5b      	subs	r3, r3, r1
 800bb84:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800bb88:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800bb8c:	612b      	str	r3, [r5, #16]
 800bb8e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bb92:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800bb96:	3f01      	subs	r7, #1
 800bb98:	e757      	b.n	800ba4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800bb9a:	ad39      	add	r5, sp, #228	@ 0xe4
 800bb9c:	ac19      	add	r4, sp, #100	@ 0x64
 800bb9e:	e72d      	b.n	800b9fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800bba0:	4613      	mov	r3, r2
 800bba2:	e744      	b.n	800ba2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800bba4:	4613      	mov	r3, r2
 800bba6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800bbaa:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800bbac:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800bbb0:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800bbb4:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800bbb8:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800bbbc:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800bbc0:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800bbc4:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800bbc8:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800bbca:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800bbce:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800bbd2:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800bbd6:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800bbda:	960e      	str	r6, [sp, #56]	@ 0x38
 800bbdc:	469e      	mov	lr, r3
 800bbde:	461f      	mov	r7, r3
 800bbe0:	f04f 0900 	mov.w	r9, #0
 800bbe4:	2f00      	cmp	r7, #0
 800bbe6:	d146      	bne.n	800bc76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800bbe8:	449c      	add	ip, r3
 800bbea:	1ad7      	subs	r7, r2, r3
 800bbec:	f1b9 0f00 	cmp.w	r9, #0
 800bbf0:	d009      	beq.n	800bc06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800bbf2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800bbf6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800bbf8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800bbfa:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800bbfe:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800bc02:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800bc06:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800bc08:	910e      	str	r1, [sp, #56]	@ 0x38
 800bc0a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800bc0e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800bc12:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800bc16:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800bc1a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800bc1e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800bc22:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800bc26:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800bc2a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800bc2e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800bc32:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800bc36:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800bc3a:	f04f 0800 	mov.w	r8, #0
 800bc3e:	f1be 0f00 	cmp.w	lr, #0
 800bc42:	d030      	beq.n	800bca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bc44:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800bc46:	4431      	add	r1, r6
 800bc48:	4549      	cmp	r1, r9
 800bc4a:	4450      	add	r0, sl
 800bc4c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bc50:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bc54:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bc58:	db08      	blt.n	800bc6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bc5a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bc5e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bc62:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bc66:	3001      	adds	r0, #1
 800bc68:	eba1 0109 	sub.w	r1, r1, r9
 800bc6c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bc70:	f04f 0801 	mov.w	r8, #1
 800bc74:	e7e3      	b.n	800bc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bc76:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800bc78:	4431      	add	r1, r6
 800bc7a:	4541      	cmp	r1, r8
 800bc7c:	4450      	add	r0, sl
 800bc7e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bc82:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bc86:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bc8a:	db08      	blt.n	800bc9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bc8c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bc90:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bc94:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bc98:	3001      	adds	r0, #1
 800bc9a:	eba1 0108 	sub.w	r1, r1, r8
 800bc9e:	3f01      	subs	r7, #1
 800bca0:	f04f 0901 	mov.w	r9, #1
 800bca4:	e79e      	b.n	800bbe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bca6:	449c      	add	ip, r3
 800bca8:	1aff      	subs	r7, r7, r3
 800bcaa:	f1b8 0f00 	cmp.w	r8, #0
 800bcae:	d009      	beq.n	800bcc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bcb0:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800bcb4:	9019      	str	r0, [sp, #100]	@ 0x64
 800bcb6:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800bcba:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800bcbe:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800bcc2:	911d      	str	r1, [sp, #116]	@ 0x74
 800bcc4:	1ad2      	subs	r2, r2, r3
 800bcc6:	e6b5      	b.n	800ba34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bcc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bcca:	681b      	ldr	r3, [r3, #0]
 800bccc:	b923      	cbnz	r3, 800bcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bcce:	4b04      	ldr	r3, [pc, #16]	@ (800bce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bcd0:	6818      	ldr	r0, [r3, #0]
 800bcd2:	6803      	ldr	r3, [r0, #0]
 800bcd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bcd6:	4798      	blx	r3
 800bcd8:	b05b      	add	sp, #364	@ 0x16c
 800bcda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcde:	bf00      	nop
 800bce0:	20013288 	.word	0x20013288

0800bce4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800bce4:	b570      	push	{r4, r5, r6, lr}
 800bce6:	4604      	mov	r4, r0
 800bce8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800bcec:	9805      	ldr	r0, [sp, #20]
 800bcee:	6061      	str	r1, [r4, #4]
 800bcf0:	2500      	movs	r5, #0
 800bcf2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800bcf6:	8263      	strh	r3, [r4, #18]
 800bcf8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bcfc:	8025      	strh	r5, [r4, #0]
 800bcfe:	7221      	strb	r1, [r4, #8]
 800bd00:	7266      	strb	r6, [r4, #9]
 800bd02:	60e0      	str	r0, [r4, #12]
 800bd04:	8222      	strh	r2, [r4, #16]
 800bd06:	82a3      	strh	r3, [r4, #20]
 800bd08:	82e5      	strh	r5, [r4, #22]
 800bd0a:	8325      	strh	r5, [r4, #24]
 800bd0c:	8365      	strh	r5, [r4, #26]
 800bd0e:	83a5      	strh	r5, [r4, #28]
 800bd10:	83e5      	strh	r5, [r4, #30]
 800bd12:	8425      	strh	r5, [r4, #32]
 800bd14:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800bd18:	b32e      	cbz	r6, 800bd66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd1a:	6803      	ldr	r3, [r0, #0]
 800bd1c:	695b      	ldr	r3, [r3, #20]
 800bd1e:	4798      	blx	r3
 800bd20:	4606      	mov	r6, r0
 800bd22:	b300      	cbz	r0, 800bd66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd24:	68e0      	ldr	r0, [r4, #12]
 800bd26:	6803      	ldr	r3, [r0, #0]
 800bd28:	4631      	mov	r1, r6
 800bd2a:	68db      	ldr	r3, [r3, #12]
 800bd2c:	4798      	blx	r3
 800bd2e:	4605      	mov	r5, r0
 800bd30:	b1c8      	cbz	r0, 800bd66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd32:	7b43      	ldrb	r3, [r0, #13]
 800bd34:	7a82      	ldrb	r2, [r0, #10]
 800bd36:	005b      	lsls	r3, r3, #1
 800bd38:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800bd3c:	4313      	orrs	r3, r2
 800bd3e:	8423      	strh	r3, [r4, #32]
 800bd40:	7a63      	ldrb	r3, [r4, #9]
 800bd42:	2b06      	cmp	r3, #6
 800bd44:	d10f      	bne.n	800bd66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd46:	68e0      	ldr	r0, [r4, #12]
 800bd48:	6803      	ldr	r3, [r0, #0]
 800bd4a:	462a      	mov	r2, r5
 800bd4c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bd4e:	4631      	mov	r1, r6
 800bd50:	4798      	blx	r3
 800bd52:	7b6b      	ldrb	r3, [r5, #13]
 800bd54:	005b      	lsls	r3, r3, #1
 800bd56:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800bd5a:	7aab      	ldrb	r3, [r5, #10]
 800bd5c:	4313      	orrs	r3, r2
 800bd5e:	4418      	add	r0, r3
 800bd60:	8c23      	ldrh	r3, [r4, #32]
 800bd62:	4418      	add	r0, r3
 800bd64:	8420      	strh	r0, [r4, #32]
 800bd66:	4620      	mov	r0, r4
 800bd68:	bd70      	pop	{r4, r5, r6, pc}

0800bd6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bd6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd6e:	2400      	movs	r4, #0
 800bd70:	b085      	sub	sp, #20
 800bd72:	4681      	mov	r9, r0
 800bd74:	4688      	mov	r8, r1
 800bd76:	4692      	mov	sl, r2
 800bd78:	469b      	mov	fp, r3
 800bd7a:	4627      	mov	r7, r4
 800bd7c:	4625      	mov	r5, r4
 800bd7e:	4626      	mov	r6, r4
 800bd80:	4554      	cmp	r4, sl
 800bd82:	da2a      	bge.n	800bdda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bd84:	2300      	movs	r3, #0
 800bd86:	9303      	str	r3, [sp, #12]
 800bd88:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800bd8c:	429d      	cmp	r5, r3
 800bd8e:	d004      	beq.n	800bd9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bd90:	f242 030b 	movw	r3, #8203	@ 0x200b
 800bd94:	429d      	cmp	r5, r3
 800bd96:	bf18      	it	ne
 800bd98:	462f      	movne	r7, r5
 800bd9a:	ab03      	add	r3, sp, #12
 800bd9c:	4642      	mov	r2, r8
 800bd9e:	4659      	mov	r1, fp
 800bda0:	4648      	mov	r0, r9
 800bda2:	f002 ffeb 	bl	800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bda6:	4605      	mov	r5, r0
 800bda8:	b1b8      	cbz	r0, 800bdda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdaa:	280a      	cmp	r0, #10
 800bdac:	d015      	beq.n	800bdda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdae:	9a03      	ldr	r2, [sp, #12]
 800bdb0:	b18a      	cbz	r2, 800bdd6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bdb2:	7b50      	ldrb	r0, [r2, #13]
 800bdb4:	7a93      	ldrb	r3, [r2, #10]
 800bdb6:	8895      	ldrh	r5, [r2, #4]
 800bdb8:	0040      	lsls	r0, r0, #1
 800bdba:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800bdbe:	4303      	orrs	r3, r0
 800bdc0:	9301      	str	r3, [sp, #4]
 800bdc2:	f8d8 3000 	ldr.w	r3, [r8]
 800bdc6:	4639      	mov	r1, r7
 800bdc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bdca:	4640      	mov	r0, r8
 800bdcc:	4798      	blx	r3
 800bdce:	9b01      	ldr	r3, [sp, #4]
 800bdd0:	4418      	add	r0, r3
 800bdd2:	4406      	add	r6, r0
 800bdd4:	b2b6      	uxth	r6, r6
 800bdd6:	3401      	adds	r4, #1
 800bdd8:	e7d2      	b.n	800bd80 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bdda:	4630      	mov	r0, r6
 800bddc:	b005      	add	sp, #20
 800bdde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bde2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bde2:	2a02      	cmp	r2, #2
 800bde4:	b530      	push	{r4, r5, lr}
 800bde6:	d011      	beq.n	800be0c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bde8:	2a03      	cmp	r2, #3
 800bdea:	d01c      	beq.n	800be26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bdec:	2a01      	cmp	r2, #1
 800bdee:	d10c      	bne.n	800be0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bdf0:	888b      	ldrh	r3, [r1, #4]
 800bdf2:	8801      	ldrh	r1, [r0, #0]
 800bdf4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bdf8:	8844      	ldrh	r4, [r0, #2]
 800bdfa:	8004      	strh	r4, [r0, #0]
 800bdfc:	1a5b      	subs	r3, r3, r1
 800bdfe:	1a9b      	subs	r3, r3, r2
 800be00:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800be04:	8043      	strh	r3, [r0, #2]
 800be06:	8081      	strh	r1, [r0, #4]
 800be08:	80c2      	strh	r2, [r0, #6]
 800be0a:	bd30      	pop	{r4, r5, pc}
 800be0c:	88cb      	ldrh	r3, [r1, #6]
 800be0e:	8842      	ldrh	r2, [r0, #2]
 800be10:	1a9b      	subs	r3, r3, r2
 800be12:	88c2      	ldrh	r2, [r0, #6]
 800be14:	1a9b      	subs	r3, r3, r2
 800be16:	888a      	ldrh	r2, [r1, #4]
 800be18:	8801      	ldrh	r1, [r0, #0]
 800be1a:	8043      	strh	r3, [r0, #2]
 800be1c:	1a52      	subs	r2, r2, r1
 800be1e:	8881      	ldrh	r1, [r0, #4]
 800be20:	1a52      	subs	r2, r2, r1
 800be22:	8002      	strh	r2, [r0, #0]
 800be24:	e7f1      	b.n	800be0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800be26:	88cb      	ldrh	r3, [r1, #6]
 800be28:	8841      	ldrh	r1, [r0, #2]
 800be2a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800be2e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800be32:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800be36:	8045      	strh	r5, [r0, #2]
 800be38:	1a5b      	subs	r3, r3, r1
 800be3a:	1a9b      	subs	r3, r3, r2
 800be3c:	8003      	strh	r3, [r0, #0]
 800be3e:	8082      	strh	r2, [r0, #4]
 800be40:	80c4      	strh	r4, [r0, #6]
 800be42:	e7e2      	b.n	800be0a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800be44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800be44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be48:	b09f      	sub	sp, #124	@ 0x7c
 800be4a:	9116      	str	r1, [sp, #88]	@ 0x58
 800be4c:	9317      	str	r3, [sp, #92]	@ 0x5c
 800be4e:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800be50:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800be52:	8809      	ldrh	r1, [r1, #0]
 800be54:	889b      	ldrh	r3, [r3, #4]
 800be56:	f8dd 80a8 	ldr.w	r8, [sp, #168]	@ 0xa8
 800be5a:	9212      	str	r2, [sp, #72]	@ 0x48
 800be5c:	440b      	add	r3, r1
 800be5e:	b21b      	sxth	r3, r3
 800be60:	9310      	str	r3, [sp, #64]	@ 0x40
 800be62:	f8d8 3000 	ldr.w	r3, [r8]
 800be66:	f89d 20b8 	ldrb.w	r2, [sp, #184]	@ 0xb8
 800be6a:	7b19      	ldrb	r1, [r3, #12]
 800be6c:	7adb      	ldrb	r3, [r3, #11]
 800be6e:	9011      	str	r0, [sp, #68]	@ 0x44
 800be70:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800be74:	9114      	str	r1, [sp, #80]	@ 0x50
 800be76:	9315      	str	r3, [sp, #84]	@ 0x54
 800be78:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800be7c:	2a00      	cmp	r2, #0
 800be7e:	d06a      	beq.n	800bf56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800be80:	f898 3010 	ldrb.w	r3, [r8, #16]
 800be84:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800be86:	2b06      	cmp	r3, #6
 800be88:	bf14      	ite	ne
 800be8a:	2301      	movne	r3, #1
 800be8c:	2302      	moveq	r3, #2
 800be8e:	4413      	add	r3, r2
 800be90:	f04f 0900 	mov.w	r9, #0
 800be94:	930f      	str	r3, [sp, #60]	@ 0x3c
 800be96:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 800be9a:	464c      	mov	r4, r9
 800be9c:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800bea0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
 800bea4:	4293      	cmp	r3, r2
 800bea6:	f280 808f 	bge.w	800bfc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800beaa:	2300      	movs	r3, #0
 800beac:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800beb0:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800beb4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800beb8:	429c      	cmp	r4, r3
 800beba:	d006      	beq.n	800beca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800bebc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800bebe:	f242 020b 	movw	r2, #8203	@ 0x200b
 800bec2:	4294      	cmp	r4, r2
 800bec4:	bf18      	it	ne
 800bec6:	4623      	movne	r3, r4
 800bec8:	930d      	str	r3, [sp, #52]	@ 0x34
 800beca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800becc:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800bece:	f8d8 2000 	ldr.w	r2, [r8]
 800bed2:	428b      	cmp	r3, r1
 800bed4:	db41      	blt.n	800bf5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800bed6:	6813      	ldr	r3, [r2, #0]
 800bed8:	4610      	mov	r0, r2
 800beda:	695b      	ldr	r3, [r3, #20]
 800bedc:	4798      	blx	r3
 800bede:	4604      	mov	r4, r0
 800bee0:	f8d8 0000 	ldr.w	r0, [r8]
 800bee4:	6803      	ldr	r3, [r0, #0]
 800bee6:	aa1d      	add	r2, sp, #116	@ 0x74
 800bee8:	689d      	ldr	r5, [r3, #8]
 800beea:	4621      	mov	r1, r4
 800beec:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800bef0:	47a8      	blx	r5
 800bef2:	901c      	str	r0, [sp, #112]	@ 0x70
 800bef4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800bef8:	429c      	cmp	r4, r3
 800befa:	f000 80eb 	beq.w	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800befe:	f242 030b 	movw	r3, #8203	@ 0x200b
 800bf02:	429c      	cmp	r4, r3
 800bf04:	f000 80e6 	beq.w	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf08:	2c00      	cmp	r4, #0
 800bf0a:	f000 80f8 	beq.w	800c0fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800bf0e:	2c0a      	cmp	r4, #10
 800bf10:	d060      	beq.n	800bfd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800bf12:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800bf14:	b36a      	cbz	r2, 800bf72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800bf16:	8894      	ldrh	r4, [r2, #4]
 800bf18:	f1bb 0f00 	cmp.w	fp, #0
 800bf1c:	d03b      	beq.n	800bf96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800bf1e:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bf22:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bf26:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800bf2a:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bf2e:	f1bb 0f01 	cmp.w	fp, #1
 800bf32:	ea49 0903 	orr.w	r9, r9, r3
 800bf36:	d134      	bne.n	800bfa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800bf38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800bf3a:	eba6 0609 	sub.w	r6, r6, r9
 800bf3e:	2b00      	cmp	r3, #0
 800bf40:	d14f      	bne.n	800bfe2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800bf42:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800bf44:	eb09 0306 	add.w	r3, r9, r6
 800bf48:	4413      	add	r3, r2
 800bf4a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800bf4c:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bf50:	4293      	cmp	r3, r2
 800bf52:	da51      	bge.n	800bff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800bf54:	e038      	b.n	800bfc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800bf56:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800bf58:	e79a      	b.n	800be90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800bf5a:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800bf5e:	9301      	str	r3, [sp, #4]
 800bf60:	ab1d      	add	r3, sp, #116	@ 0x74
 800bf62:	9300      	str	r3, [sp, #0]
 800bf64:	4659      	mov	r1, fp
 800bf66:	ab1c      	add	r3, sp, #112	@ 0x70
 800bf68:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800bf6a:	f002 ff50 	bl	800ee0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bf6e:	4604      	mov	r4, r0
 800bf70:	e7c0      	b.n	800bef4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800bf72:	f8d8 0000 	ldr.w	r0, [r8]
 800bf76:	6803      	ldr	r3, [r0, #0]
 800bf78:	691b      	ldr	r3, [r3, #16]
 800bf7a:	4798      	blx	r3
 800bf7c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800bf80:	4298      	cmp	r0, r3
 800bf82:	f000 80a7 	beq.w	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf86:	f242 030b 	movw	r3, #8203	@ 0x200b
 800bf8a:	4298      	cmp	r0, r3
 800bf8c:	f000 80a2 	beq.w	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf90:	f1bb 0f00 	cmp.w	fp, #0
 800bf94:	d100      	bne.n	800bf98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800bf96:	444e      	add	r6, r9
 800bf98:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800bf9a:	2a00      	cmp	r2, #0
 800bf9c:	d1bf      	bne.n	800bf1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800bf9e:	4691      	mov	r9, r2
 800bfa0:	e098      	b.n	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bfa2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800bfa4:	2b00      	cmp	r3, #0
 800bfa6:	f000 80ac 	beq.w	800c102 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 800bfaa:	f1bb 0f00 	cmp.w	fp, #0
 800bfae:	d118      	bne.n	800bfe2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800bfb0:	f8d8 0000 	ldr.w	r0, [r8]
 800bfb4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800bfb6:	6803      	ldr	r3, [r0, #0]
 800bfb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bfba:	4798      	blx	r3
 800bfbc:	4406      	add	r6, r0
 800bfbe:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800bfc0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800bfc2:	1af3      	subs	r3, r6, r3
 800bfc4:	4293      	cmp	r3, r2
 800bfc6:	dd17      	ble.n	800bff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800bfc8:	2c00      	cmp	r4, #0
 800bfca:	f000 8098 	beq.w	800c0fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800bfce:	2c0a      	cmp	r4, #10
 800bfd0:	f040 8086 	bne.w	800c0e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800bfd4:	240a      	movs	r4, #10
 800bfd6:	fab4 f084 	clz	r0, r4
 800bfda:	0940      	lsrs	r0, r0, #5
 800bfdc:	b01f      	add	sp, #124	@ 0x7c
 800bfde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfe2:	f8d8 0000 	ldr.w	r0, [r8]
 800bfe6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800bfe8:	6803      	ldr	r3, [r0, #0]
 800bfea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bfec:	4798      	blx	r3
 800bfee:	f1bb 0f01 	cmp.w	fp, #1
 800bff2:	eba6 0600 	sub.w	r6, r6, r0
 800bff6:	d0a4      	beq.n	800bf42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800bff8:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800bffa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800bffc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c000:	f9b3 7000 	ldrsh.w	r7, [r3]
 800c004:	7b43      	ldrb	r3, [r0, #13]
 800c006:	015b      	lsls	r3, r3, #5
 800c008:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800c00c:	7983      	ldrb	r3, [r0, #6]
 800c00e:	4431      	add	r1, r6
 800c010:	4313      	orrs	r3, r2
 800c012:	440b      	add	r3, r1
 800c014:	42bb      	cmp	r3, r7
 800c016:	db5d      	blt.n	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c018:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800c01a:	4299      	cmp	r1, r3
 800c01c:	da5a      	bge.n	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c01e:	f8d8 0000 	ldr.w	r0, [r8]
 800c022:	6803      	ldr	r3, [r0, #0]
 800c024:	42b7      	cmp	r7, r6
 800c026:	bfc8      	it	gt
 800c028:	1bbf      	subgt	r7, r7, r6
 800c02a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c02c:	bfcc      	ite	gt
 800c02e:	b2bf      	uxthgt	r7, r7
 800c030:	2700      	movle	r7, #0
 800c032:	4798      	blx	r3
 800c034:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800c036:	7b5a      	ldrb	r2, [r3, #13]
 800c038:	00d1      	lsls	r1, r2, #3
 800c03a:	f401 7580 	and.w	r5, r1, #256	@ 0x100
 800c03e:	7a19      	ldrb	r1, [r3, #8]
 800c040:	4329      	orrs	r1, r5
 800c042:	0655      	lsls	r5, r2, #25
 800c044:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 800c046:	bf44      	itt	mi
 800c048:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800c04c:	b209      	sxthmi	r1, r1
 800c04e:	1945      	adds	r5, r0, r5
 800c050:	1a6d      	subs	r5, r5, r1
 800c052:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800c054:	b2ad      	uxth	r5, r5
 800c056:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c05a:	fa0f fa85 	sxth.w	sl, r5
 800c05e:	4551      	cmp	r1, sl
 800c060:	dd3c      	ble.n	800c0dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800c062:	0112      	lsls	r2, r2, #4
 800c064:	79d8      	ldrb	r0, [r3, #7]
 800c066:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800c06a:	4302      	orrs	r2, r0
 800c06c:	4492      	add	sl, r2
 800c06e:	4551      	cmp	r1, sl
 800c070:	dc30      	bgt.n	800c0d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c072:	1b4d      	subs	r5, r1, r5
 800c074:	b22d      	sxth	r5, r5
 800c076:	468a      	mov	sl, r1
 800c078:	9319      	str	r3, [sp, #100]	@ 0x64
 800c07a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800c07c:	f8d8 0000 	ldr.w	r0, [r8]
 800c080:	681a      	ldr	r2, [r3, #0]
 800c082:	6801      	ldr	r1, [r0, #0]
 800c084:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 800c086:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 800c088:	9313      	str	r3, [sp, #76]	@ 0x4c
 800c08a:	9218      	str	r2, [sp, #96]	@ 0x60
 800c08c:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800c08e:	4788      	blx	r1
 800c090:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c094:	910b      	str	r1, [sp, #44]	@ 0x2c
 800c096:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c09a:	910a      	str	r1, [sp, #40]	@ 0x28
 800c09c:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800c0a0:	9109      	str	r1, [sp, #36]	@ 0x24
 800c0a2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c0a6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c0a8:	9305      	str	r3, [sp, #20]
 800c0aa:	b2ad      	uxth	r5, r5
 800c0ac:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c0b0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800c0b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800c0b6:	9304      	str	r3, [sp, #16]
 800c0b8:	4437      	add	r7, r6
 800c0ba:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 800c0bc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800c0be:	9206      	str	r2, [sp, #24]
 800c0c0:	b23f      	sxth	r7, r7
 800c0c2:	f8cd a004 	str.w	sl, [sp, #4]
 800c0c6:	9700      	str	r7, [sp, #0]
 800c0c8:	681a      	ldr	r2, [r3, #0]
 800c0ca:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800c0cc:	685b      	ldr	r3, [r3, #4]
 800c0ce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800c0d0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800c0d2:	47a8      	blx	r5
 800c0d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c0d6:	3301      	adds	r3, #1
 800c0d8:	930e      	str	r3, [sp, #56]	@ 0x38
 800c0da:	e6e1      	b.n	800bea0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800c0dc:	2500      	movs	r5, #0
 800c0de:	e7cb      	b.n	800c078 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800c0e0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 800c0e2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800c0e4:	3501      	adds	r5, #1
 800c0e6:	429d      	cmp	r5, r3
 800c0e8:	f6bf af75 	bge.w	800bfd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c0ec:	4659      	mov	r1, fp
 800c0ee:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800c0f0:	f7f7 f90c 	bl	800330c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c0f4:	4604      	mov	r4, r0
 800c0f6:	b110      	cbz	r0, 800c0fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800c0f8:	280a      	cmp	r0, #10
 800c0fa:	d1f2      	bne.n	800c0e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800c0fc:	e76a      	b.n	800bfd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800c0fe:	2400      	movs	r4, #0
 800c100:	e769      	b.n	800bfd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c102:	f1bb 0f00 	cmp.w	fp, #0
 800c106:	f43f af5a 	beq.w	800bfbe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800c10a:	e775      	b.n	800bff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800c10c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c10c:	b530      	push	{r4, r5, lr}
 800c10e:	8ac4      	ldrh	r4, [r0, #22]
 800c110:	8b45      	ldrh	r5, [r0, #26]
 800c112:	8343      	strh	r3, [r0, #26]
 800c114:	442c      	add	r4, r5
 800c116:	1ae4      	subs	r4, r4, r3
 800c118:	82c4      	strh	r4, [r0, #22]
 800c11a:	8b83      	ldrh	r3, [r0, #28]
 800c11c:	8b04      	ldrh	r4, [r0, #24]
 800c11e:	4422      	add	r2, r4
 800c120:	440c      	add	r4, r1
 800c122:	1a59      	subs	r1, r3, r1
 800c124:	83c2      	strh	r2, [r0, #30]
 800c126:	8304      	strh	r4, [r0, #24]
 800c128:	8381      	strh	r1, [r0, #28]
 800c12a:	bd30      	pop	{r4, r5, pc}

0800c12c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800c12c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c130:	4604      	mov	r4, r0
 800c132:	8a47      	ldrh	r7, [r0, #18]
 800c134:	68c0      	ldr	r0, [r0, #12]
 800c136:	6803      	ldr	r3, [r0, #0]
 800c138:	b085      	sub	sp, #20
 800c13a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c13c:	4798      	blx	r3
 800c13e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800c142:	7a63      	ldrb	r3, [r4, #9]
 800c144:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800c148:	42b7      	cmp	r7, r6
 800c14a:	f103 33ff 	add.w	r3, r3, #4294967295
 800c14e:	bfac      	ite	ge
 800c150:	f04f 0900 	movge.w	r9, #0
 800c154:	f04f 0901 	movlt.w	r9, #1
 800c158:	2b05      	cmp	r3, #5
 800c15a:	d804      	bhi.n	800c166 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800c15c:	e8df f003 	tbb	[pc, r3]
 800c160:	470e0854 	.word	0x470e0854
 800c164:	4c4c      	.short	0x4c4c
 800c166:	2500      	movs	r5, #0
 800c168:	46a9      	mov	r9, r5
 800c16a:	462e      	mov	r6, r5
 800c16c:	462f      	mov	r7, r5
 800c16e:	e00d      	b.n	800c18c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c170:	42b7      	cmp	r7, r6
 800c172:	bfb4      	ite	lt
 800c174:	2600      	movlt	r6, #0
 800c176:	2601      	movge	r6, #1
 800c178:	2500      	movs	r5, #0
 800c17a:	e7f7      	b.n	800c16c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c17c:	42b7      	cmp	r7, r6
 800c17e:	464d      	mov	r5, r9
 800c180:	f04f 0900 	mov.w	r9, #0
 800c184:	bfb4      	ite	lt
 800c186:	2600      	movlt	r6, #0
 800c188:	2601      	movge	r6, #1
 800c18a:	464f      	mov	r7, r9
 800c18c:	f04f 0800 	mov.w	r8, #0
 800c190:	f8a4 8016 	strh.w	r8, [r4, #22]
 800c194:	f8a4 8018 	strh.w	r8, [r4, #24]
 800c198:	f8cd 8004 	str.w	r8, [sp, #4]
 800c19c:	2300      	movs	r3, #0
 800c19e:	9303      	str	r3, [sp, #12]
 800c1a0:	8823      	ldrh	r3, [r4, #0]
 800c1a2:	2b20      	cmp	r3, #32
 800c1a4:	d034      	beq.n	800c210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800c1a6:	f242 010b 	movw	r1, #8203	@ 0x200b
 800c1aa:	1a5a      	subs	r2, r3, r1
 800c1ac:	f1d2 0a00 	rsbs	sl, r2, #0
 800c1b0:	eb4a 0a02 	adc.w	sl, sl, r2
 800c1b4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800c1b8:	4293      	cmp	r3, r2
 800c1ba:	d009      	beq.n	800c1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c1bc:	428b      	cmp	r3, r1
 800c1be:	9a01      	ldr	r2, [sp, #4]
 800c1c0:	bf18      	it	ne
 800c1c2:	461a      	movne	r2, r3
 800c1c4:	9201      	str	r2, [sp, #4]
 800c1c6:	bf0c      	ite	eq
 800c1c8:	f04f 0a01 	moveq.w	sl, #1
 800c1cc:	f04f 0a00 	movne.w	sl, #0
 800c1d0:	ab03      	add	r3, sp, #12
 800c1d2:	68e2      	ldr	r2, [r4, #12]
 800c1d4:	7a21      	ldrb	r1, [r4, #8]
 800c1d6:	6860      	ldr	r0, [r4, #4]
 800c1d8:	f002 fdd0 	bl	800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c1dc:	8020      	strh	r0, [r4, #0]
 800c1de:	b9d8      	cbnz	r0, 800c218 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800c1e0:	8ba2      	ldrh	r2, [r4, #28]
 800c1e2:	2300      	movs	r3, #0
 800c1e4:	4611      	mov	r1, r2
 800c1e6:	4620      	mov	r0, r4
 800c1e8:	f7ff ff90 	bl	800c10c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c1ec:	e06e      	b.n	800c2cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c1ee:	2500      	movs	r5, #0
 800c1f0:	46a9      	mov	r9, r5
 800c1f2:	462e      	mov	r6, r5
 800c1f4:	2701      	movs	r7, #1
 800c1f6:	e7c9      	b.n	800c18c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c1f8:	42b7      	cmp	r7, r6
 800c1fa:	f04f 0500 	mov.w	r5, #0
 800c1fe:	bfb4      	ite	lt
 800c200:	2700      	movlt	r7, #0
 800c202:	2701      	movge	r7, #1
 800c204:	462e      	mov	r6, r5
 800c206:	e7c1      	b.n	800c18c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c208:	2500      	movs	r5, #0
 800c20a:	46a9      	mov	r9, r5
 800c20c:	2601      	movs	r6, #1
 800c20e:	e7ad      	b.n	800c16c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c210:	9301      	str	r3, [sp, #4]
 800c212:	f04f 0a01 	mov.w	sl, #1
 800c216:	e7db      	b.n	800c1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c218:	8b63      	ldrh	r3, [r4, #26]
 800c21a:	280a      	cmp	r0, #10
 800c21c:	f103 0301 	add.w	r3, r3, #1
 800c220:	8363      	strh	r3, [r4, #26]
 800c222:	d0dd      	beq.n	800c1e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800c224:	9a03      	ldr	r2, [sp, #12]
 800c226:	bb62      	cbnz	r2, 800c282 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800c228:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800c22c:	4298      	cmp	r0, r3
 800c22e:	d003      	beq.n	800c238 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c230:	f242 030b 	movw	r3, #8203	@ 0x200b
 800c234:	4298      	cmp	r0, r3
 800c236:	d1b1      	bne.n	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c238:	8823      	ldrh	r3, [r4, #0]
 800c23a:	8ba1      	ldrh	r1, [r4, #28]
 800c23c:	2b20      	cmp	r3, #32
 800c23e:	d003      	beq.n	800c248 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800c240:	f242 000b 	movw	r0, #8203	@ 0x200b
 800c244:	4283      	cmp	r3, r0
 800c246:	d131      	bne.n	800c2ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800c248:	f1ba 0f00 	cmp.w	sl, #0
 800c24c:	bf0a      	itet	eq
 800c24e:	4688      	moveq	r8, r1
 800c250:	4650      	movne	r0, sl
 800c252:	2001      	moveq	r0, #1
 800c254:	440a      	add	r2, r1
 800c256:	8b23      	ldrh	r3, [r4, #24]
 800c258:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c25c:	b292      	uxth	r2, r2
 800c25e:	83a2      	strh	r2, [r4, #28]
 800c260:	4413      	add	r3, r2
 800c262:	f1b9 0f00 	cmp.w	r9, #0
 800c266:	d102      	bne.n	800c26e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800c268:	2d00      	cmp	r5, #0
 800c26a:	d042      	beq.n	800c2f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800c26c:	b300      	cbz	r0, 800c2b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800c26e:	8c21      	ldrh	r1, [r4, #32]
 800c270:	4419      	add	r1, r3
 800c272:	458c      	cmp	ip, r1
 800c274:	da37      	bge.n	800c2e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c276:	8ae1      	ldrh	r1, [r4, #22]
 800c278:	2900      	cmp	r1, #0
 800c27a:	d034      	beq.n	800c2e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c27c:	4563      	cmp	r3, ip
 800c27e:	dd8d      	ble.n	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c280:	e01d      	b.n	800c2be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800c282:	8893      	ldrh	r3, [r2, #4]
 800c284:	8023      	strh	r3, [r4, #0]
 800c286:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800c28a:	9901      	ldr	r1, [sp, #4]
 800c28c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800c290:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800c294:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800c298:	ea4b 0b00 	orr.w	fp, fp, r0
 800c29c:	68e0      	ldr	r0, [r4, #12]
 800c29e:	6803      	ldr	r3, [r0, #0]
 800c2a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c2a2:	4798      	blx	r3
 800c2a4:	eb0b 0200 	add.w	r2, fp, r0
 800c2a8:	b292      	uxth	r2, r2
 800c2aa:	e7c5      	b.n	800c238 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c2ac:	2000      	movs	r0, #0
 800c2ae:	e7d1      	b.n	800c254 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800c2b0:	4563      	cmp	r3, ip
 800c2b2:	f77f af73 	ble.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2b6:	8ae3      	ldrh	r3, [r4, #22]
 800c2b8:	2b00      	cmp	r3, #0
 800c2ba:	f43f af6f 	beq.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2be:	2301      	movs	r3, #1
 800c2c0:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800c2c4:	8c22      	ldrh	r2, [r4, #32]
 800c2c6:	8be3      	ldrh	r3, [r4, #30]
 800c2c8:	4413      	add	r3, r2
 800c2ca:	83e3      	strh	r3, [r4, #30]
 800c2cc:	68e0      	ldr	r0, [r4, #12]
 800c2ce:	6803      	ldr	r3, [r0, #0]
 800c2d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c2d2:	4798      	blx	r3
 800c2d4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800c2d8:	4418      	add	r0, r3
 800c2da:	8a63      	ldrh	r3, [r4, #18]
 800c2dc:	1a18      	subs	r0, r3, r0
 800c2de:	8260      	strh	r0, [r4, #18]
 800c2e0:	b005      	add	sp, #20
 800c2e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2e6:	2300      	movs	r3, #0
 800c2e8:	4611      	mov	r1, r2
 800c2ea:	4620      	mov	r0, r4
 800c2ec:	f7ff ff0e 	bl	800c10c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c2f0:	e754      	b.n	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2f2:	4563      	cmp	r3, ip
 800c2f4:	dd14      	ble.n	800c320 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800c2f6:	b117      	cbz	r7, 800c2fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800c2f8:	2301      	movs	r3, #1
 800c2fa:	460a      	mov	r2, r1
 800c2fc:	e772      	b.n	800c1e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800c2fe:	2e00      	cmp	r6, #0
 800c300:	f43f af4c 	beq.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c304:	2800      	cmp	r0, #0
 800c306:	f47f af49 	bne.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c30a:	f1ba 0f00 	cmp.w	sl, #0
 800c30e:	d002      	beq.n	800c316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800c310:	2301      	movs	r3, #1
 800c312:	4642      	mov	r2, r8
 800c314:	e767      	b.n	800c1e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800c316:	8ae3      	ldrh	r3, [r4, #22]
 800c318:	2b00      	cmp	r3, #0
 800c31a:	f43f af3f 	beq.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c31e:	e7d5      	b.n	800c2cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c320:	2800      	cmp	r0, #0
 800c322:	f47f af3b 	bne.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c326:	f1ba 0f00 	cmp.w	sl, #0
 800c32a:	f43f af37 	beq.w	800c19c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c32e:	2301      	movs	r3, #1
 800c330:	4642      	mov	r2, r8
 800c332:	e7da      	b.n	800c2ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800c334 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c334:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c336:	4605      	mov	r5, r0
 800c338:	b08f      	sub	sp, #60	@ 0x3c
 800c33a:	4617      	mov	r7, r2
 800c33c:	461c      	mov	r4, r3
 800c33e:	460e      	mov	r6, r1
 800c340:	b1d1      	cbz	r1, 800c378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c342:	681b      	ldr	r3, [r3, #0]
 800c344:	4620      	mov	r0, r4
 800c346:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c348:	4798      	blx	r3
 800c34a:	4240      	negs	r0, r0
 800c34c:	b200      	sxth	r0, r0
 800c34e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800c352:	9603      	str	r6, [sp, #12]
 800c354:	9700      	str	r7, [sp, #0]
 800c356:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c35a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800c35e:	4629      	mov	r1, r5
 800c360:	a805      	add	r0, sp, #20
 800c362:	f7ff fcbf 	bl	800bce4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c366:	2401      	movs	r4, #1
 800c368:	a805      	add	r0, sp, #20
 800c36a:	f7ff fedf 	bl	800c12c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c36e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c372:	b163      	cbz	r3, 800c38e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800c374:	3401      	adds	r4, #1
 800c376:	e7f7      	b.n	800c368 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c378:	f002 fdce 	bl	800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c37c:	2401      	movs	r4, #1
 800c37e:	280a      	cmp	r0, #10
 800c380:	4628      	mov	r0, r5
 800c382:	bf08      	it	eq
 800c384:	3401      	addeq	r4, #1
 800c386:	f002 fdc7 	bl	800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c38a:	2800      	cmp	r0, #0
 800c38c:	d1f7      	bne.n	800c37e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800c38e:	b2a0      	uxth	r0, r4
 800c390:	b00f      	add	sp, #60	@ 0x3c
 800c392:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c394 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c398:	b0e3      	sub	sp, #396	@ 0x18c
 800c39a:	461c      	mov	r4, r3
 800c39c:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800c39e:	4683      	mov	fp, r0
 800c3a0:	4688      	mov	r8, r1
 800c3a2:	2b00      	cmp	r3, #0
 800c3a4:	f000 8112 	beq.w	800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c3a8:	6823      	ldr	r3, [r4, #0]
 800c3aa:	2b00      	cmp	r3, #0
 800c3ac:	f000 810e 	beq.w	800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c3b0:	7ba3      	ldrb	r3, [r4, #14]
 800c3b2:	2b00      	cmp	r3, #0
 800c3b4:	f000 810a 	beq.w	800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c3b8:	6810      	ldr	r0, [r2, #0]
 800c3ba:	6851      	ldr	r1, [r2, #4]
 800c3bc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800c3c0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800c3c4:	ad0a      	add	r5, sp, #40	@ 0x28
 800c3c6:	462b      	mov	r3, r5
 800c3c8:	c303      	stmia	r3!, {r0, r1}
 800c3ca:	2100      	movs	r1, #0
 800c3cc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800c3d0:	910c      	str	r1, [sp, #48]	@ 0x30
 800c3d2:	79a2      	ldrb	r2, [r4, #6]
 800c3d4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c3d8:	a90c      	add	r1, sp, #48	@ 0x30
 800c3da:	4628      	mov	r0, r5
 800c3dc:	f7ff fd01 	bl	800bde2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c3e0:	a90c      	add	r1, sp, #48	@ 0x30
 800c3e2:	4608      	mov	r0, r1
 800c3e4:	79a2      	ldrb	r2, [r4, #6]
 800c3e6:	f7ff fcfc 	bl	800bde2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c3ea:	a817      	add	r0, sp, #92	@ 0x5c
 800c3ec:	f002 f981 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800c3f0:	6820      	ldr	r0, [r4, #0]
 800c3f2:	6803      	ldr	r3, [r0, #0]
 800c3f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c3f6:	4798      	blx	r3
 800c3f8:	4606      	mov	r6, r0
 800c3fa:	6820      	ldr	r0, [r4, #0]
 800c3fc:	6803      	ldr	r3, [r0, #0]
 800c3fe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c400:	4798      	blx	r3
 800c402:	4633      	mov	r3, r6
 800c404:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800c406:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800c408:	9000      	str	r0, [sp, #0]
 800c40a:	a817      	add	r0, sp, #92	@ 0x5c
 800c40c:	f002 f9c4 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c410:	6820      	ldr	r0, [r4, #0]
 800c412:	f894 a004 	ldrb.w	sl, [r4, #4]
 800c416:	6803      	ldr	r3, [r0, #0]
 800c418:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c41a:	4798      	blx	r3
 800c41c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800c420:	6823      	ldr	r3, [r4, #0]
 800c422:	4607      	mov	r7, r0
 800c424:	4406      	add	r6, r0
 800c426:	a830      	add	r0, sp, #192	@ 0xc0
 800c428:	f893 9009 	ldrb.w	r9, [r3, #9]
 800c42c:	f002 f961 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800c430:	7c23      	ldrb	r3, [r4, #16]
 800c432:	b17b      	cbz	r3, 800c454 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800c434:	6820      	ldr	r0, [r4, #0]
 800c436:	6803      	ldr	r3, [r0, #0]
 800c438:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800c43a:	4798      	blx	r3
 800c43c:	9009      	str	r0, [sp, #36]	@ 0x24
 800c43e:	6820      	ldr	r0, [r4, #0]
 800c440:	6802      	ldr	r2, [r0, #0]
 800c442:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800c444:	4790      	blx	r2
 800c446:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c448:	9000      	str	r0, [sp, #0]
 800c44a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800c44c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800c44e:	a830      	add	r0, sp, #192	@ 0xc0
 800c450:	f002 f9a2 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c454:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800c458:	7be2      	ldrb	r2, [r4, #15]
 800c45a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800c45e:	1a8a      	subs	r2, r1, r2
 800c460:	7c21      	ldrb	r1, [r4, #16]
 800c462:	9103      	str	r1, [sp, #12]
 800c464:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800c468:	9102      	str	r1, [sp, #8]
 800c46a:	6821      	ldr	r1, [r4, #0]
 800c46c:	9101      	str	r1, [sp, #4]
 800c46e:	7961      	ldrb	r1, [r4, #5]
 800c470:	9100      	str	r1, [sp, #0]
 800c472:	b292      	uxth	r2, r2
 800c474:	a930      	add	r1, sp, #192	@ 0xc0
 800c476:	a80e      	add	r0, sp, #56	@ 0x38
 800c478:	f7ff fc34 	bl	800bce4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c47c:	2e00      	cmp	r6, #0
 800c47e:	dc5b      	bgt.n	800c538 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800c480:	af17      	add	r7, sp, #92	@ 0x5c
 800c482:	f04f 0900 	mov.w	r9, #0
 800c486:	7c23      	ldrb	r3, [r4, #16]
 800c488:	2b00      	cmp	r3, #0
 800c48a:	f000 80b1 	beq.w	800c5f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c48e:	a80e      	add	r0, sp, #56	@ 0x38
 800c490:	f7ff fe4c 	bl	800c12c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c494:	f1ba 0f00 	cmp.w	sl, #0
 800c498:	f000 80a5 	beq.w	800c5e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c49c:	7c23      	ldrb	r3, [r4, #16]
 800c49e:	9309      	str	r3, [sp, #36]	@ 0x24
 800c4a0:	2264      	movs	r2, #100	@ 0x64
 800c4a2:	4639      	mov	r1, r7
 800c4a4:	a849      	add	r0, sp, #292	@ 0x124
 800c4a6:	f011 fbf4 	bl	801dc92 <memcpy>
 800c4aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c4ac:	2b00      	cmp	r3, #0
 800c4ae:	f000 80a7 	beq.w	800c600 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800c4b2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800c4b6:	7922      	ldrb	r2, [r4, #4]
 800c4b8:	2a01      	cmp	r2, #1
 800c4ba:	f040 808a 	bne.w	800c5d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c4be:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800c4c2:	1ac0      	subs	r0, r0, r3
 800c4c4:	2302      	movs	r3, #2
 800c4c6:	fb90 f0f3 	sdiv	r0, r0, r3
 800c4ca:	b200      	sxth	r0, r0
 800c4cc:	7c23      	ldrb	r3, [r4, #16]
 800c4ce:	2b00      	cmp	r3, #0
 800c4d0:	f000 808b 	beq.w	800c5ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c4d4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800c4d8:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800c4dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c4e0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c4e4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800c4e8:	4410      	add	r0, r2
 800c4ea:	b200      	sxth	r0, r0
 800c4ec:	9000      	str	r0, [sp, #0]
 800c4ee:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800c4f2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c4f6:	4642      	mov	r2, r8
 800c4f8:	2100      	movs	r1, #0
 800c4fa:	4658      	mov	r0, fp
 800c4fc:	f7ff fca2 	bl	800be44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c500:	2800      	cmp	r0, #0
 800c502:	d163      	bne.n	800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c504:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800c508:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800c50c:	b2b2      	uxth	r2, r6
 800c50e:	4413      	add	r3, r2
 800c510:	1a8a      	subs	r2, r1, r2
 800c512:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800c516:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800c51a:	b21b      	sxth	r3, r3
 800c51c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800c520:	2a00      	cmp	r2, #0
 800c522:	d153      	bne.n	800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c524:	6822      	ldr	r2, [r4, #0]
 800c526:	8869      	ldrh	r1, [r5, #2]
 800c528:	7a12      	ldrb	r2, [r2, #8]
 800c52a:	1a9b      	subs	r3, r3, r2
 800c52c:	88ea      	ldrh	r2, [r5, #6]
 800c52e:	440a      	add	r2, r1
 800c530:	b212      	sxth	r2, r2
 800c532:	4293      	cmp	r3, r2
 800c534:	dda7      	ble.n	800c486 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800c536:	e049      	b.n	800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c538:	7c23      	ldrb	r3, [r4, #16]
 800c53a:	444f      	add	r7, r9
 800c53c:	b1c3      	cbz	r3, 800c570 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800c53e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800c542:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c546:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c54a:	443b      	add	r3, r7
 800c54c:	4293      	cmp	r3, r2
 800c54e:	da97      	bge.n	800c480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c550:	a80e      	add	r0, sp, #56	@ 0x38
 800c552:	f7ff fdeb 	bl	800c12c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c556:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800c55a:	3b01      	subs	r3, #1
 800c55c:	b29b      	uxth	r3, r3
 800c55e:	454b      	cmp	r3, r9
 800c560:	9309      	str	r3, [sp, #36]	@ 0x24
 800c562:	d021      	beq.n	800c5a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800c564:	7961      	ldrb	r1, [r4, #5]
 800c566:	a817      	add	r0, sp, #92	@ 0x5c
 800c568:	f7f6 fed0 	bl	800330c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c56c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c56e:	e7f4      	b.n	800c55a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800c570:	fa1f f986 	uxth.w	r9, r6
 800c574:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c578:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c57c:	443b      	add	r3, r7
 800c57e:	4293      	cmp	r3, r2
 800c580:	f6bf af7e 	bge.w	800c480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c584:	a817      	add	r0, sp, #92	@ 0x5c
 800c586:	f002 fcc7 	bl	800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c58a:	b1f8      	cbz	r0, 800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c58c:	280a      	cmp	r0, #10
 800c58e:	d1f1      	bne.n	800c574 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c590:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800c594:	444b      	add	r3, r9
 800c596:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800c59a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800c59e:	eba3 0309 	sub.w	r3, r3, r9
 800c5a2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c5a6:	e7e5      	b.n	800c574 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c5a8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800c5ac:	b2b3      	uxth	r3, r6
 800c5ae:	441a      	add	r2, r3
 800c5b0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800c5b4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800c5b8:	1ad3      	subs	r3, r2, r3
 800c5ba:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800c5be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800c5c2:	b11b      	cbz	r3, 800c5cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c5c4:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800c5c8:	2b00      	cmp	r3, #0
 800c5ca:	d0ba      	beq.n	800c542 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800c5cc:	b063      	add	sp, #396	@ 0x18c
 800c5ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5d2:	2a02      	cmp	r2, #2
 800c5d4:	d105      	bne.n	800c5e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800c5d6:	7be2      	ldrb	r2, [r4, #15]
 800c5d8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800c5dc:	1a80      	subs	r0, r0, r2
 800c5de:	1ac0      	subs	r0, r0, r3
 800c5e0:	e773      	b.n	800c4ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800c5e2:	2000      	movs	r0, #0
 800c5e4:	e772      	b.n	800c4cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c5e6:	7be0      	ldrb	r0, [r4, #15]
 800c5e8:	e770      	b.n	800c4cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c5ea:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800c5ee:	e773      	b.n	800c4d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800c5f0:	f1ba 0f00 	cmp.w	sl, #0
 800c5f4:	d0f7      	beq.n	800c5e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c5f6:	2264      	movs	r2, #100	@ 0x64
 800c5f8:	4639      	mov	r1, r7
 800c5fa:	a849      	add	r0, sp, #292	@ 0x124
 800c5fc:	f011 fb49 	bl	801dc92 <memcpy>
 800c600:	2300      	movs	r3, #0
 800c602:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800c606:	6821      	ldr	r1, [r4, #0]
 800c608:	a849      	add	r0, sp, #292	@ 0x124
 800c60a:	f7ff fbae 	bl	800bd6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c60e:	b203      	sxth	r3, r0
 800c610:	e751      	b.n	800c4b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800c612 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c612:	2b03      	cmp	r3, #3
 800c614:	d818      	bhi.n	800c648 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c616:	e8df f003 	tbb	[pc, r3]
 800c61a:	0602      	.short	0x0602
 800c61c:	130d      	.short	0x130d
 800c61e:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c622:	1850      	adds	r0, r2, r1
 800c624:	4770      	bx	lr
 800c626:	8803      	ldrh	r3, [r0, #0]
 800c628:	8880      	ldrh	r0, [r0, #4]
 800c62a:	4418      	add	r0, r3
 800c62c:	b200      	sxth	r0, r0
 800c62e:	1a80      	subs	r0, r0, r2
 800c630:	3801      	subs	r0, #1
 800c632:	4770      	bx	lr
 800c634:	8803      	ldrh	r3, [r0, #0]
 800c636:	8880      	ldrh	r0, [r0, #4]
 800c638:	4418      	add	r0, r3
 800c63a:	b200      	sxth	r0, r0
 800c63c:	1a40      	subs	r0, r0, r1
 800c63e:	e7f7      	b.n	800c630 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c640:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c644:	4410      	add	r0, r2
 800c646:	4770      	bx	lr
 800c648:	2000      	movs	r0, #0
 800c64a:	4770      	bx	lr

0800c64c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c64c:	2b03      	cmp	r3, #3
 800c64e:	d817      	bhi.n	800c680 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800c650:	e8df f003 	tbb	[pc, r3]
 800c654:	10090602 	.word	0x10090602
 800c658:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c65c:	1850      	adds	r0, r2, r1
 800c65e:	4770      	bx	lr
 800c660:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c664:	e7fa      	b.n	800c65c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800c666:	8843      	ldrh	r3, [r0, #2]
 800c668:	88c0      	ldrh	r0, [r0, #6]
 800c66a:	4418      	add	r0, r3
 800c66c:	b200      	sxth	r0, r0
 800c66e:	1a80      	subs	r0, r0, r2
 800c670:	3801      	subs	r0, #1
 800c672:	4770      	bx	lr
 800c674:	8843      	ldrh	r3, [r0, #2]
 800c676:	88c0      	ldrh	r0, [r0, #6]
 800c678:	4418      	add	r0, r3
 800c67a:	b200      	sxth	r0, r0
 800c67c:	1a40      	subs	r0, r0, r1
 800c67e:	e7f7      	b.n	800c670 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c680:	2000      	movs	r0, #0
 800c682:	4770      	bx	lr

0800c684 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c684:	4b01      	ldr	r3, [pc, #4]	@ (800c68c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c686:	2200      	movs	r2, #0
 800c688:	601a      	str	r2, [r3, #0]
 800c68a:	4770      	bx	lr
 800c68c:	20013290 	.word	0x20013290

0800c690 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c690:	4603      	mov	r3, r0
 800c692:	b1c8      	cbz	r0, 800c6c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c694:	0c02      	lsrs	r2, r0, #16
 800c696:	0412      	lsls	r2, r2, #16
 800c698:	b9a2      	cbnz	r2, 800c6c4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c69a:	0403      	lsls	r3, r0, #16
 800c69c:	2010      	movs	r0, #16
 800c69e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800c6a2:	bf04      	itt	eq
 800c6a4:	021b      	lsleq	r3, r3, #8
 800c6a6:	3008      	addeq	r0, #8
 800c6a8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800c6ac:	bf04      	itt	eq
 800c6ae:	011b      	lsleq	r3, r3, #4
 800c6b0:	3004      	addeq	r0, #4
 800c6b2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800c6b6:	bf04      	itt	eq
 800c6b8:	009b      	lsleq	r3, r3, #2
 800c6ba:	3002      	addeq	r0, #2
 800c6bc:	2b00      	cmp	r3, #0
 800c6be:	db04      	blt.n	800c6ca <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c6c0:	3001      	adds	r0, #1
 800c6c2:	4770      	bx	lr
 800c6c4:	2000      	movs	r0, #0
 800c6c6:	e7ea      	b.n	800c69e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c6c8:	2020      	movs	r0, #32
 800c6ca:	4770      	bx	lr

0800c6cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c6cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6d0:	b087      	sub	sp, #28
 800c6d2:	460d      	mov	r5, r1
 800c6d4:	4616      	mov	r6, r2
 800c6d6:	4698      	mov	r8, r3
 800c6d8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800c6dc:	4601      	mov	r1, r0
 800c6de:	b120      	cbz	r0, 800c6ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c6e0:	b11a      	cbz	r2, 800c6ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c6e2:	2d1f      	cmp	r5, #31
 800c6e4:	d801      	bhi.n	800c6ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800c6e6:	2b1f      	cmp	r3, #31
 800c6e8:	d904      	bls.n	800c6f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800c6ea:	2000      	movs	r0, #0
 800c6ec:	6038      	str	r0, [r7, #0]
 800c6ee:	b007      	add	sp, #28
 800c6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6f4:	b97d      	cbnz	r5, 800c716 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800c6f6:	b143      	cbz	r3, 800c70a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800c6f8:	4602      	mov	r2, r0
 800c6fa:	e9cd 4700 	strd	r4, r7, [sp]
 800c6fe:	462b      	mov	r3, r5
 800c700:	4641      	mov	r1, r8
 800c702:	4630      	mov	r0, r6
 800c704:	f7ff ffe2 	bl	800c6cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c708:	e7f1      	b.n	800c6ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800c70a:	f04f 33ff 	mov.w	r3, #4294967295
 800c70e:	603b      	str	r3, [r7, #0]
 800c710:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800c714:	e7eb      	b.n	800c6ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800c716:	fa32 fa05 	lsrs.w	sl, r2, r5
 800c71a:	d106      	bne.n	800c72a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800c71c:	4346      	muls	r6, r0
 800c71e:	fbb6 f0f4 	udiv	r0, r6, r4
 800c722:	fb04 6610 	mls	r6, r4, r0, r6
 800c726:	603e      	str	r6, [r7, #0]
 800c728:	e7e1      	b.n	800c6ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800c72a:	2201      	movs	r2, #1
 800c72c:	40aa      	lsls	r2, r5
 800c72e:	3a01      	subs	r2, #1
 800c730:	4016      	ands	r6, r2
 800c732:	fa00 fb05 	lsl.w	fp, r0, r5
 800c736:	4630      	mov	r0, r6
 800c738:	fbbb f9f4 	udiv	r9, fp, r4
 800c73c:	fb0a f309 	mul.w	r3, sl, r9
 800c740:	9303      	str	r3, [sp, #12]
 800c742:	f7ff ffa5 	bl	800c690 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c746:	462b      	mov	r3, r5
 800c748:	460a      	mov	r2, r1
 800c74a:	e9cd 4700 	strd	r4, r7, [sp]
 800c74e:	4601      	mov	r1, r0
 800c750:	4630      	mov	r0, r6
 800c752:	f7ff ffbb 	bl	800c6cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c756:	fb04 b919 	mls	r9, r4, r9, fp
 800c75a:	4606      	mov	r6, r0
 800c75c:	4648      	mov	r0, r9
 800c75e:	eb05 0108 	add.w	r1, r5, r8
 800c762:	f7ff ff95 	bl	800c690 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c766:	ab05      	add	r3, sp, #20
 800c768:	e9cd 4300 	strd	r4, r3, [sp]
 800c76c:	464a      	mov	r2, r9
 800c76e:	4603      	mov	r3, r0
 800c770:	4650      	mov	r0, sl
 800c772:	f7ff ffab 	bl	800c6cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c776:	6839      	ldr	r1, [r7, #0]
 800c778:	9a05      	ldr	r2, [sp, #20]
 800c77a:	9b03      	ldr	r3, [sp, #12]
 800c77c:	4411      	add	r1, r2
 800c77e:	fbb1 f2f4 	udiv	r2, r1, r4
 800c782:	18d3      	adds	r3, r2, r3
 800c784:	441e      	add	r6, r3
 800c786:	fb04 1412 	mls	r4, r4, r2, r1
 800c78a:	4430      	add	r0, r6
 800c78c:	603c      	str	r4, [r7, #0]
 800c78e:	e7ae      	b.n	800c6ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800c790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c790:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c794:	b085      	sub	sp, #20
 800c796:	f1b0 0900 	subs.w	r9, r0, #0
 800c79a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800c79c:	461d      	mov	r5, r3
 800c79e:	bfbf      	itttt	lt
 800c7a0:	6823      	ldrlt	r3, [r4, #0]
 800c7a2:	425b      	neglt	r3, r3
 800c7a4:	f1c9 0900 	rsblt	r9, r9, #0
 800c7a8:	6023      	strlt	r3, [r4, #0]
 800c7aa:	bfb4      	ite	lt
 800c7ac:	f04f 36ff 	movlt.w	r6, #4294967295
 800c7b0:	2601      	movge	r6, #1
 800c7b2:	2a00      	cmp	r2, #0
 800c7b4:	4617      	mov	r7, r2
 800c7b6:	da04      	bge.n	800c7c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c7b8:	6823      	ldr	r3, [r4, #0]
 800c7ba:	425b      	negs	r3, r3
 800c7bc:	4257      	negs	r7, r2
 800c7be:	4276      	negs	r6, r6
 800c7c0:	6023      	str	r3, [r4, #0]
 800c7c2:	2d00      	cmp	r5, #0
 800c7c4:	4638      	mov	r0, r7
 800c7c6:	bfba      	itte	lt
 800c7c8:	426d      	neglt	r5, r5
 800c7ca:	f04f 38ff 	movlt.w	r8, #4294967295
 800c7ce:	f04f 0801 	movge.w	r8, #1
 800c7d2:	f7ff ff5d 	bl	800c690 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c7d6:	ab03      	add	r3, sp, #12
 800c7d8:	e9cd 5300 	strd	r5, r3, [sp]
 800c7dc:	463a      	mov	r2, r7
 800c7de:	4603      	mov	r3, r0
 800c7e0:	4648      	mov	r0, r9
 800c7e2:	f7ff ff73 	bl	800c6cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c7e6:	6823      	ldr	r3, [r4, #0]
 800c7e8:	9a03      	ldr	r2, [sp, #12]
 800c7ea:	4546      	cmp	r6, r8
 800c7ec:	441a      	add	r2, r3
 800c7ee:	fb92 f3f5 	sdiv	r3, r2, r5
 800c7f2:	4418      	add	r0, r3
 800c7f4:	bf18      	it	ne
 800c7f6:	4240      	negne	r0, r0
 800c7f8:	fb05 2313 	mls	r3, r5, r3, r2
 800c7fc:	1c72      	adds	r2, r6, #1
 800c7fe:	6023      	str	r3, [r4, #0]
 800c800:	d105      	bne.n	800c80e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c802:	2b00      	cmp	r3, #0
 800c804:	f1c3 0200 	rsb	r2, r3, #0
 800c808:	db0b      	blt.n	800c822 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c80a:	6022      	str	r2, [r4, #0]
 800c80c:	e006      	b.n	800c81c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c80e:	2e01      	cmp	r6, #1
 800c810:	d104      	bne.n	800c81c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c812:	2b00      	cmp	r3, #0
 800c814:	da02      	bge.n	800c81c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c816:	442b      	add	r3, r5
 800c818:	3801      	subs	r0, #1
 800c81a:	6023      	str	r3, [r4, #0]
 800c81c:	b005      	add	sp, #20
 800c81e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c822:	3801      	subs	r0, #1
 800c824:	1b52      	subs	r2, r2, r5
 800c826:	e7f0      	b.n	800c80a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800c828 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c828:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c82c:	4c1c      	ldr	r4, [pc, #112]	@ (800c8a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c82e:	6807      	ldr	r7, [r0, #0]
 800c830:	69a3      	ldr	r3, [r4, #24]
 800c832:	4605      	mov	r5, r0
 800c834:	b92b      	cbnz	r3, 800c842 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c836:	6840      	ldr	r0, [r0, #4]
 800c838:	e9c5 7000 	strd	r7, r0, [r5]
 800c83c:	b004      	add	sp, #16
 800c83e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c842:	68a2      	ldr	r2, [r4, #8]
 800c844:	6820      	ldr	r0, [r4, #0]
 800c846:	ae04      	add	r6, sp, #16
 800c848:	f04f 0802 	mov.w	r8, #2
 800c84c:	fb93 f1f8 	sdiv	r1, r3, r8
 800c850:	440a      	add	r2, r1
 800c852:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c856:	69e1      	ldr	r1, [r4, #28]
 800c858:	9600      	str	r6, [sp, #0]
 800c85a:	463a      	mov	r2, r7
 800c85c:	f7ff ff98 	bl	800c790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c860:	69a3      	ldr	r3, [r4, #24]
 800c862:	686a      	ldr	r2, [r5, #4]
 800c864:	6a21      	ldr	r1, [r4, #32]
 800c866:	9600      	str	r6, [sp, #0]
 800c868:	4607      	mov	r7, r0
 800c86a:	6860      	ldr	r0, [r4, #4]
 800c86c:	f7ff ff90 	bl	800c790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c870:	6962      	ldr	r2, [r4, #20]
 800c872:	69a3      	ldr	r3, [r4, #24]
 800c874:	fb93 f8f8 	sdiv	r8, r3, r8
 800c878:	4442      	add	r2, r8
 800c87a:	9203      	str	r2, [sp, #12]
 800c87c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800c87e:	682a      	ldr	r2, [r5, #0]
 800c880:	9600      	str	r6, [sp, #0]
 800c882:	4407      	add	r7, r0
 800c884:	68e0      	ldr	r0, [r4, #12]
 800c886:	f7ff ff83 	bl	800c790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c88a:	9600      	str	r6, [sp, #0]
 800c88c:	4680      	mov	r8, r0
 800c88e:	69a3      	ldr	r3, [r4, #24]
 800c890:	686a      	ldr	r2, [r5, #4]
 800c892:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800c894:	6920      	ldr	r0, [r4, #16]
 800c896:	f7ff ff7b 	bl	800c790 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c89a:	4440      	add	r0, r8
 800c89c:	e7cc      	b.n	800c838 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c89e:	bf00      	nop
 800c8a0:	20013294 	.word	0x20013294

0800c8a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c8a4:	4b07      	ldr	r3, [pc, #28]	@ (800c8c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c8a6:	781b      	ldrb	r3, [r3, #0]
 800c8a8:	2b01      	cmp	r3, #1
 800c8aa:	d109      	bne.n	800c8c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c8ac:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c8b0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8b4:	8003      	strh	r3, [r0, #0]
 800c8b6:	4b04      	ldr	r3, [pc, #16]	@ (800c8c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c8b8:	881b      	ldrh	r3, [r3, #0]
 800c8ba:	3b01      	subs	r3, #1
 800c8bc:	1a9b      	subs	r3, r3, r2
 800c8be:	800b      	strh	r3, [r1, #0]
 800c8c0:	4770      	bx	lr
 800c8c2:	bf00      	nop
 800c8c4:	20013280 	.word	0x20013280
 800c8c8:	2001327c 	.word	0x2001327c

0800c8cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c8cc:	b510      	push	{r4, lr}
 800c8ce:	4b07      	ldr	r3, [pc, #28]	@ (800c8ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c8d0:	781b      	ldrb	r3, [r3, #0]
 800c8d2:	2b01      	cmp	r3, #1
 800c8d4:	d108      	bne.n	800c8e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c8d6:	4b06      	ldr	r3, [pc, #24]	@ (800c8f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c8d8:	880c      	ldrh	r4, [r1, #0]
 800c8da:	881b      	ldrh	r3, [r3, #0]
 800c8dc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8e0:	3b01      	subs	r3, #1
 800c8e2:	1b1b      	subs	r3, r3, r4
 800c8e4:	8003      	strh	r3, [r0, #0]
 800c8e6:	800a      	strh	r2, [r1, #0]
 800c8e8:	bd10      	pop	{r4, pc}
 800c8ea:	bf00      	nop
 800c8ec:	20013280 	.word	0x20013280
 800c8f0:	2001327c 	.word	0x2001327c

0800c8f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c8f4:	b510      	push	{r4, lr}
 800c8f6:	4b0a      	ldr	r3, [pc, #40]	@ (800c920 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c8f8:	781b      	ldrb	r3, [r3, #0]
 800c8fa:	2b01      	cmp	r3, #1
 800c8fc:	d10e      	bne.n	800c91c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c8fe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c902:	8843      	ldrh	r3, [r0, #2]
 800c904:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c908:	8044      	strh	r4, [r0, #2]
 800c90a:	18ca      	adds	r2, r1, r3
 800c90c:	4b05      	ldr	r3, [pc, #20]	@ (800c924 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c90e:	881b      	ldrh	r3, [r3, #0]
 800c910:	1a9b      	subs	r3, r3, r2
 800c912:	8003      	strh	r3, [r0, #0]
 800c914:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c918:	80c3      	strh	r3, [r0, #6]
 800c91a:	8081      	strh	r1, [r0, #4]
 800c91c:	bd10      	pop	{r4, pc}
 800c91e:	bf00      	nop
 800c920:	20013280 	.word	0x20013280
 800c924:	2001327c 	.word	0x2001327c

0800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c928:	4b08      	ldr	r3, [pc, #32]	@ (800c94c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c92a:	781b      	ldrb	r3, [r3, #0]
 800c92c:	2b01      	cmp	r3, #1
 800c92e:	d10c      	bne.n	800c94a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c930:	8803      	ldrh	r3, [r0, #0]
 800c932:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c936:	8842      	ldrh	r2, [r0, #2]
 800c938:	8002      	strh	r2, [r0, #0]
 800c93a:	185a      	adds	r2, r3, r1
 800c93c:	4b04      	ldr	r3, [pc, #16]	@ (800c950 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c93e:	881b      	ldrh	r3, [r3, #0]
 800c940:	1a9b      	subs	r3, r3, r2
 800c942:	8043      	strh	r3, [r0, #2]
 800c944:	88c3      	ldrh	r3, [r0, #6]
 800c946:	8083      	strh	r3, [r0, #4]
 800c948:	80c1      	strh	r1, [r0, #6]
 800c94a:	4770      	bx	lr
 800c94c:	20013280 	.word	0x20013280
 800c950:	2001327c 	.word	0x2001327c

0800c954 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c954:	b510      	push	{r4, lr}
 800c956:	4b07      	ldr	r3, [pc, #28]	@ (800c974 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c958:	781b      	ldrb	r3, [r3, #0]
 800c95a:	2b01      	cmp	r3, #1
 800c95c:	d108      	bne.n	800c970 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c95e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c962:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c966:	8003      	strh	r3, [r0, #0]
 800c968:	8893      	ldrh	r3, [r2, #4]
 800c96a:	3b01      	subs	r3, #1
 800c96c:	1b1b      	subs	r3, r3, r4
 800c96e:	800b      	strh	r3, [r1, #0]
 800c970:	bd10      	pop	{r4, pc}
 800c972:	bf00      	nop
 800c974:	20013280 	.word	0x20013280

0800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c978:	b510      	push	{r4, lr}
 800c97a:	4b0a      	ldr	r3, [pc, #40]	@ (800c9a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c97c:	781b      	ldrb	r3, [r3, #0]
 800c97e:	2b01      	cmp	r3, #1
 800c980:	460a      	mov	r2, r1
 800c982:	d10d      	bne.n	800c9a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c984:	8881      	ldrh	r1, [r0, #4]
 800c986:	8803      	ldrh	r3, [r0, #0]
 800c988:	440b      	add	r3, r1
 800c98a:	4601      	mov	r1, r0
 800c98c:	3b01      	subs	r3, #1
 800c98e:	f821 3b02 	strh.w	r3, [r1], #2
 800c992:	f7ff ffdf 	bl	800c954 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c996:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c99a:	88c2      	ldrh	r2, [r0, #6]
 800c99c:	8082      	strh	r2, [r0, #4]
 800c99e:	80c3      	strh	r3, [r0, #6]
 800c9a0:	bd10      	pop	{r4, pc}
 800c9a2:	bf00      	nop
 800c9a4:	20013280 	.word	0x20013280

0800c9a8 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c9a8:	4b06      	ldr	r3, [pc, #24]	@ (800c9c4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c9aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9ae:	4b06      	ldr	r3, [pc, #24]	@ (800c9c8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c9b0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800c9b4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9b8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800c9bc:	2100      	movs	r1, #0
 800c9be:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800c9c2:	4770      	bx	lr
 800c9c4:	2001327c 	.word	0x2001327c
 800c9c8:	2001327e 	.word	0x2001327e

0800c9cc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c9cc:	4b03      	ldr	r3, [pc, #12]	@ (800c9dc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c9ce:	6818      	ldr	r0, [r3, #0]
 800c9d0:	b110      	cbz	r0, 800c9d8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c9d2:	6803      	ldr	r3, [r0, #0]
 800c9d4:	699b      	ldr	r3, [r3, #24]
 800c9d6:	4718      	bx	r3
 800c9d8:	4770      	bx	lr
 800c9da:	bf00      	nop
 800c9dc:	200132c4 	.word	0x200132c4

0800c9e0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c9e0:	4770      	bx	lr
	...

0800c9e4 <_ZN8touchgfx11Application4drawEv>:
 800c9e4:	b507      	push	{r0, r1, r2, lr}
 800c9e6:	4b09      	ldr	r3, [pc, #36]	@ (800ca0c <_ZN8touchgfx11Application4drawEv+0x28>)
 800c9e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9ec:	4b08      	ldr	r3, [pc, #32]	@ (800ca10 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c9ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c9f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c9fa:	6803      	ldr	r3, [r0, #0]
 800c9fc:	2100      	movs	r1, #0
 800c9fe:	9100      	str	r1, [sp, #0]
 800ca00:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ca02:	4669      	mov	r1, sp
 800ca04:	4798      	blx	r3
 800ca06:	b003      	add	sp, #12
 800ca08:	f85d fb04 	ldr.w	pc, [sp], #4
 800ca0c:	2001327c 	.word	0x2001327c
 800ca10:	2001327e 	.word	0x2001327e

0800ca14 <_ZN8touchgfx11Application10invalidateEv>:
 800ca14:	4b09      	ldr	r3, [pc, #36]	@ (800ca3c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800ca16:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca1a:	4b09      	ldr	r3, [pc, #36]	@ (800ca40 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800ca1c:	b082      	sub	sp, #8
 800ca1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca22:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ca26:	2100      	movs	r1, #0
 800ca28:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ca2c:	9100      	str	r1, [sp, #0]
 800ca2e:	6803      	ldr	r3, [r0, #0]
 800ca30:	aa02      	add	r2, sp, #8
 800ca32:	e912 0006 	ldmdb	r2, {r1, r2}
 800ca36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ca38:	b002      	add	sp, #8
 800ca3a:	4718      	bx	r3
 800ca3c:	2001327c 	.word	0x2001327c
 800ca40:	2001327e 	.word	0x2001327e

0800ca44 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ca44:	4b03      	ldr	r3, [pc, #12]	@ (800ca54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ca46:	6818      	ldr	r0, [r3, #0]
 800ca48:	b110      	cbz	r0, 800ca50 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ca4a:	6803      	ldr	r3, [r0, #0]
 800ca4c:	69db      	ldr	r3, [r3, #28]
 800ca4e:	4718      	bx	r3
 800ca50:	4770      	bx	lr
 800ca52:	bf00      	nop
 800ca54:	200132c4 	.word	0x200132c4

0800ca58 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ca58:	4b03      	ldr	r3, [pc, #12]	@ (800ca68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ca5a:	6818      	ldr	r0, [r3, #0]
 800ca5c:	b110      	cbz	r0, 800ca64 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ca5e:	6803      	ldr	r3, [r0, #0]
 800ca60:	6a1b      	ldr	r3, [r3, #32]
 800ca62:	4718      	bx	r3
 800ca64:	4770      	bx	lr
 800ca66:	bf00      	nop
 800ca68:	200132c4 	.word	0x200132c4

0800ca6c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ca6c:	2300      	movs	r3, #0
 800ca6e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ca72:	4770      	bx	lr

0800ca74 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ca74:	4b03      	ldr	r3, [pc, #12]	@ (800ca84 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ca76:	6818      	ldr	r0, [r3, #0]
 800ca78:	b110      	cbz	r0, 800ca80 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ca7a:	6803      	ldr	r3, [r0, #0]
 800ca7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ca7e:	4718      	bx	r3
 800ca80:	4770      	bx	lr
 800ca82:	bf00      	nop
 800ca84:	200132c4 	.word	0x200132c4

0800ca88 <_ZN8touchgfx11ApplicationD1Ev>:
 800ca88:	4770      	bx	lr

0800ca8a <_ZN8touchgfx11ApplicationD0Ev>:
 800ca8a:	b510      	push	{r4, lr}
 800ca8c:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800ca90:	4604      	mov	r4, r0
 800ca92:	f010 fdf9 	bl	801d688 <_ZdlPvj>
 800ca96:	4620      	mov	r0, r4
 800ca98:	bd10      	pop	{r4, pc}

0800ca9a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ca9a:	b510      	push	{r4, lr}
 800ca9c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800caa0:	888a      	ldrh	r2, [r1, #4]
 800caa2:	f9b0 3000 	ldrsh.w	r3, [r0]
 800caa6:	4422      	add	r2, r4
 800caa8:	b212      	sxth	r2, r2
 800caaa:	4293      	cmp	r3, r2
 800caac:	da15      	bge.n	800cada <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800caae:	8882      	ldrh	r2, [r0, #4]
 800cab0:	4413      	add	r3, r2
 800cab2:	b21b      	sxth	r3, r3
 800cab4:	429c      	cmp	r4, r3
 800cab6:	da10      	bge.n	800cada <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cab8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cabc:	88c9      	ldrh	r1, [r1, #6]
 800cabe:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cac2:	4419      	add	r1, r3
 800cac4:	b209      	sxth	r1, r1
 800cac6:	428a      	cmp	r2, r1
 800cac8:	da07      	bge.n	800cada <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800caca:	88c0      	ldrh	r0, [r0, #6]
 800cacc:	4410      	add	r0, r2
 800cace:	b200      	sxth	r0, r0
 800cad0:	4283      	cmp	r3, r0
 800cad2:	bfac      	ite	ge
 800cad4:	2000      	movge	r0, #0
 800cad6:	2001      	movlt	r0, #1
 800cad8:	bd10      	pop	{r4, pc}
 800cada:	2000      	movs	r0, #0
 800cadc:	e7fc      	b.n	800cad8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cade <_ZN8touchgfx4Rect10restrictToEss>:
 800cade:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cae2:	2b00      	cmp	r3, #0
 800cae4:	b510      	push	{r4, lr}
 800cae6:	da04      	bge.n	800caf2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cae8:	8884      	ldrh	r4, [r0, #4]
 800caea:	4423      	add	r3, r4
 800caec:	8083      	strh	r3, [r0, #4]
 800caee:	2300      	movs	r3, #0
 800caf0:	8003      	strh	r3, [r0, #0]
 800caf2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800caf6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cafa:	1b09      	subs	r1, r1, r4
 800cafc:	428b      	cmp	r3, r1
 800cafe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cb02:	bfc8      	it	gt
 800cb04:	8081      	strhgt	r1, [r0, #4]
 800cb06:	2b00      	cmp	r3, #0
 800cb08:	da04      	bge.n	800cb14 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800cb0a:	88c1      	ldrh	r1, [r0, #6]
 800cb0c:	440b      	add	r3, r1
 800cb0e:	80c3      	strh	r3, [r0, #6]
 800cb10:	2300      	movs	r3, #0
 800cb12:	8043      	strh	r3, [r0, #2]
 800cb14:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cb18:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cb1c:	1a52      	subs	r2, r2, r1
 800cb1e:	4293      	cmp	r3, r2
 800cb20:	bfc8      	it	gt
 800cb22:	80c2      	strhgt	r2, [r0, #6]
 800cb24:	bd10      	pop	{r4, pc}
	...

0800cb28 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cb28:	b510      	push	{r4, lr}
 800cb2a:	4b10      	ldr	r3, [pc, #64]	@ (800cb6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cb2c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb30:	4b0f      	ldr	r3, [pc, #60]	@ (800cb70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cb32:	460c      	mov	r4, r1
 800cb34:	4620      	mov	r0, r4
 800cb36:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cb3a:	f7ff ffd0 	bl	800cade <_ZN8touchgfx4Rect10restrictToEss>
 800cb3e:	4b0d      	ldr	r3, [pc, #52]	@ (800cb74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cb40:	6818      	ldr	r0, [r3, #0]
 800cb42:	b190      	cbz	r0, 800cb6a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cb44:	6803      	ldr	r3, [r0, #0]
 800cb46:	4621      	mov	r1, r4
 800cb48:	689b      	ldr	r3, [r3, #8]
 800cb4a:	4798      	blx	r3
 800cb4c:	4b0a      	ldr	r3, [pc, #40]	@ (800cb78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cb4e:	6818      	ldr	r0, [r3, #0]
 800cb50:	b118      	cbz	r0, 800cb5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cb52:	6803      	ldr	r3, [r0, #0]
 800cb54:	4621      	mov	r1, r4
 800cb56:	689b      	ldr	r3, [r3, #8]
 800cb58:	4798      	blx	r3
 800cb5a:	4b08      	ldr	r3, [pc, #32]	@ (800cb7c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cb5c:	6818      	ldr	r0, [r3, #0]
 800cb5e:	6803      	ldr	r3, [r0, #0]
 800cb60:	4621      	mov	r1, r4
 800cb62:	69db      	ldr	r3, [r3, #28]
 800cb64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb68:	4718      	bx	r3
 800cb6a:	bd10      	pop	{r4, pc}
 800cb6c:	2001327e 	.word	0x2001327e
 800cb70:	2001327c 	.word	0x2001327c
 800cb74:	200132c4 	.word	0x200132c4
 800cb78:	200132c0 	.word	0x200132c0
 800cb7c:	20013288 	.word	0x20013288

0800cb80 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cb80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb82:	4606      	mov	r6, r0
 800cb84:	4608      	mov	r0, r1
 800cb86:	460f      	mov	r7, r1
 800cb88:	f7fc fe53 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb8c:	b9e8      	cbnz	r0, 800cbca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb8e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cb92:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cb96:	42a5      	cmp	r5, r4
 800cb98:	db17      	blt.n	800cbca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb9a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cb9e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cba2:	429a      	cmp	r2, r3
 800cba4:	db11      	blt.n	800cbca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cba6:	88b9      	ldrh	r1, [r7, #4]
 800cba8:	440d      	add	r5, r1
 800cbaa:	88b1      	ldrh	r1, [r6, #4]
 800cbac:	440c      	add	r4, r1
 800cbae:	b22d      	sxth	r5, r5
 800cbb0:	b224      	sxth	r4, r4
 800cbb2:	42a5      	cmp	r5, r4
 800cbb4:	dc09      	bgt.n	800cbca <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cbb6:	88f8      	ldrh	r0, [r7, #6]
 800cbb8:	4410      	add	r0, r2
 800cbba:	88f2      	ldrh	r2, [r6, #6]
 800cbbc:	4413      	add	r3, r2
 800cbbe:	b200      	sxth	r0, r0
 800cbc0:	b21b      	sxth	r3, r3
 800cbc2:	4298      	cmp	r0, r3
 800cbc4:	bfcc      	ite	gt
 800cbc6:	2000      	movgt	r0, #0
 800cbc8:	2001      	movle	r0, #1
 800cbca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cbcc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cbcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cbce:	4604      	mov	r4, r0
 800cbd0:	4608      	mov	r0, r1
 800cbd2:	460d      	mov	r5, r1
 800cbd4:	f7fc fe2d 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbd8:	b978      	cbnz	r0, 800cbfa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cbda:	4620      	mov	r0, r4
 800cbdc:	f7fc fe29 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbe0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cbe4:	b150      	cbz	r0, 800cbfc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cbe6:	8026      	strh	r6, [r4, #0]
 800cbe8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cbec:	8063      	strh	r3, [r4, #2]
 800cbee:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cbf2:	80a3      	strh	r3, [r4, #4]
 800cbf4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cbf8:	80e3      	strh	r3, [r4, #6]
 800cbfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbfc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cc00:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cc04:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cc08:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cc0c:	88ed      	ldrh	r5, [r5, #6]
 800cc0e:	42b1      	cmp	r1, r6
 800cc10:	460f      	mov	r7, r1
 800cc12:	bfa8      	it	ge
 800cc14:	4637      	movge	r7, r6
 800cc16:	4293      	cmp	r3, r2
 800cc18:	4618      	mov	r0, r3
 800cc1a:	4466      	add	r6, ip
 800cc1c:	bfa8      	it	ge
 800cc1e:	4610      	movge	r0, r2
 800cc20:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cc24:	8027      	strh	r7, [r4, #0]
 800cc26:	442a      	add	r2, r5
 800cc28:	88e5      	ldrh	r5, [r4, #6]
 800cc2a:	8060      	strh	r0, [r4, #2]
 800cc2c:	4461      	add	r1, ip
 800cc2e:	442b      	add	r3, r5
 800cc30:	b236      	sxth	r6, r6
 800cc32:	b209      	sxth	r1, r1
 800cc34:	b212      	sxth	r2, r2
 800cc36:	b21b      	sxth	r3, r3
 800cc38:	428e      	cmp	r6, r1
 800cc3a:	bfac      	ite	ge
 800cc3c:	ebc7 0106 	rsbge	r1, r7, r6
 800cc40:	ebc7 0101 	rsblt	r1, r7, r1
 800cc44:	429a      	cmp	r2, r3
 800cc46:	bfac      	ite	ge
 800cc48:	ebc0 0202 	rsbge	r2, r0, r2
 800cc4c:	ebc0 0203 	rsblt	r2, r0, r3
 800cc50:	80a1      	strh	r1, [r4, #4]
 800cc52:	80e2      	strh	r2, [r4, #6]
 800cc54:	e7d1      	b.n	800cbfa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800cc58 <_ZN8touchgfx11Application11getInstanceEv>:
 800cc58:	4b01      	ldr	r3, [pc, #4]	@ (800cc60 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800cc5a:	6818      	ldr	r0, [r3, #0]
 800cc5c:	4770      	bx	lr
 800cc5e:	bf00      	nop
 800cc60:	200132d4 	.word	0x200132d4

0800cc64 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800cc64:	b510      	push	{r4, lr}
 800cc66:	2300      	movs	r3, #0
 800cc68:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800cc6c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800cc70:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800cc74:	4604      	mov	r4, r0
 800cc76:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800cc7a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800cc7e:	429a      	cmp	r2, r3
 800cc80:	d90e      	bls.n	800cca0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800cc82:	18e2      	adds	r2, r4, r3
 800cc84:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800cc88:	b122      	cbz	r2, 800cc94 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800cc8a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800cc8e:	6803      	ldr	r3, [r0, #0]
 800cc90:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cc92:	4798      	blx	r3
 800cc94:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800cc98:	3301      	adds	r3, #1
 800cc9a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800cc9e:	e7ea      	b.n	800cc76 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800cca0:	bd10      	pop	{r4, pc}

0800cca2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 800cca2:	b530      	push	{r4, r5, lr}
 800cca4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 800cca8:	2200      	movs	r2, #0
 800ccaa:	b293      	uxth	r3, r2
 800ccac:	429d      	cmp	r5, r3
 800ccae:	d90e      	bls.n	800ccce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800ccb0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 800ccb4:	428b      	cmp	r3, r1
 800ccb6:	d10b      	bne.n	800ccd0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800ccb8:	1884      	adds	r4, r0, r2
 800ccba:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 800ccbe:	b13b      	cbz	r3, 800ccd0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 800ccc0:	3b01      	subs	r3, #1
 800ccc2:	b2db      	uxtb	r3, r3
 800ccc4:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 800ccc8:	b90b      	cbnz	r3, 800ccce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 800ccca:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 800ccce:	bd30      	pop	{r4, r5, pc}
 800ccd0:	3201      	adds	r2, #1
 800ccd2:	e7ea      	b.n	800ccaa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0800ccd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800ccd4:	2300      	movs	r3, #0
 800ccd6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800ccda:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800ccde:	30a4      	adds	r0, #164	@ 0xa4
 800cce0:	f802 3b01 	strb.w	r3, [r2], #1
 800cce4:	4282      	cmp	r2, r0
 800cce6:	d1fb      	bne.n	800cce0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800cce8:	4770      	bx	lr
	...

0800ccec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ccec:	b570      	push	{r4, r5, r6, lr}
 800ccee:	4c0b      	ldr	r4, [pc, #44]	@ (800cd1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800ccf0:	4605      	mov	r5, r0
 800ccf2:	6820      	ldr	r0, [r4, #0]
 800ccf4:	460e      	mov	r6, r1
 800ccf6:	b110      	cbz	r0, 800ccfe <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800ccf8:	6803      	ldr	r3, [r0, #0]
 800ccfa:	695b      	ldr	r3, [r3, #20]
 800ccfc:	4798      	blx	r3
 800ccfe:	1d28      	adds	r0, r5, #4
 800cd00:	f7ff ffe8 	bl	800ccd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800cd04:	6026      	str	r6, [r4, #0]
 800cd06:	6833      	ldr	r3, [r6, #0]
 800cd08:	4630      	mov	r0, r6
 800cd0a:	68db      	ldr	r3, [r3, #12]
 800cd0c:	4798      	blx	r3
 800cd0e:	682b      	ldr	r3, [r5, #0]
 800cd10:	4628      	mov	r0, r5
 800cd12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cd14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd18:	4718      	bx	r3
 800cd1a:	bf00      	nop
 800cd1c:	200132c4 	.word	0x200132c4

0800cd20 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800cd20:	2300      	movs	r3, #0
 800cd22:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800cd26:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800cd2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd2c:	461a      	mov	r2, r3
 800cd2e:	461c      	mov	r4, r3
 800cd30:	461d      	mov	r5, r3
 800cd32:	459c      	cmp	ip, r3
 800cd34:	dd1a      	ble.n	800cd6c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800cd36:	18c6      	adds	r6, r0, r3
 800cd38:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800cd3c:	b16e      	cbz	r6, 800cd5a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800cd3e:	429a      	cmp	r2, r3
 800cd40:	d008      	beq.n	800cd54 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800cd42:	fa1f fe82 	uxth.w	lr, r2
 800cd46:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800cd4a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800cd4e:	1887      	adds	r7, r0, r2
 800cd50:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800cd54:	3201      	adds	r2, #1
 800cd56:	3301      	adds	r3, #1
 800cd58:	e7eb      	b.n	800cd32 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800cd5a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800cd5e:	4299      	cmp	r1, r3
 800cd60:	bfa8      	it	ge
 800cd62:	3501      	addge	r5, #1
 800cd64:	429e      	cmp	r6, r3
 800cd66:	bfc8      	it	gt
 800cd68:	3401      	addgt	r4, #1
 800cd6a:	e7f4      	b.n	800cd56 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800cd6c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800cd70:	1b49      	subs	r1, r1, r5
 800cd72:	1b1b      	subs	r3, r3, r4
 800cd74:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800cd78:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800cd7c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800cd80:	4293      	cmp	r3, r2
 800cd82:	dd03      	ble.n	800cd8c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800cd84:	3b01      	subs	r3, #1
 800cd86:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800cd8a:	e7f7      	b.n	800cd7c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800cd8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cd90 <_ZN8touchgfx11Application15handleTickEventEv>:
 800cd90:	b570      	push	{r4, r5, r6, lr}
 800cd92:	4d16      	ldr	r5, [pc, #88]	@ (800cdec <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800cd94:	4604      	mov	r4, r0
 800cd96:	6828      	ldr	r0, [r5, #0]
 800cd98:	b140      	cbz	r0, 800cdac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cd9a:	7a03      	ldrb	r3, [r0, #8]
 800cd9c:	b933      	cbnz	r3, 800cdac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cd9e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800cda2:	6803      	ldr	r3, [r0, #0]
 800cda4:	689b      	ldr	r3, [r3, #8]
 800cda6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdaa:	4718      	bx	r3
 800cdac:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800cdb0:	4e0f      	ldr	r6, [pc, #60]	@ (800cdf0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800cdb2:	b973      	cbnz	r3, 800cdd2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cdb4:	b168      	cbz	r0, 800cdd2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cdb6:	7a03      	ldrb	r3, [r0, #8]
 800cdb8:	b15b      	cbz	r3, 800cdd2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cdba:	6830      	ldr	r0, [r6, #0]
 800cdbc:	b110      	cbz	r0, 800cdc4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800cdbe:	6803      	ldr	r3, [r0, #0]
 800cdc0:	691b      	ldr	r3, [r3, #16]
 800cdc2:	4798      	blx	r3
 800cdc4:	6828      	ldr	r0, [r5, #0]
 800cdc6:	6803      	ldr	r3, [r0, #0]
 800cdc8:	68db      	ldr	r3, [r3, #12]
 800cdca:	4798      	blx	r3
 800cdcc:	2301      	movs	r3, #1
 800cdce:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800cdd2:	3404      	adds	r4, #4
 800cdd4:	4620      	mov	r0, r4
 800cdd6:	f7ff ff45 	bl	800cc64 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800cdda:	4620      	mov	r0, r4
 800cddc:	f7ff ffa0 	bl	800cd20 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800cde0:	6830      	ldr	r0, [r6, #0]
 800cde2:	b110      	cbz	r0, 800cdea <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800cde4:	6803      	ldr	r3, [r0, #0]
 800cde6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cde8:	e7dd      	b.n	800cda6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cdea:	bd70      	pop	{r4, r5, r6, pc}
 800cdec:	200132c8 	.word	0x200132c8
 800cdf0:	200132c4 	.word	0x200132c4

0800cdf4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 800cdf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdf6:	2300      	movs	r3, #0
 800cdf8:	4604      	mov	r4, r0
 800cdfa:	460d      	mov	r5, r1
 800cdfc:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 800ce00:	4618      	mov	r0, r3
 800ce02:	b29a      	uxth	r2, r3
 800ce04:	4291      	cmp	r1, r2
 800ce06:	d911      	bls.n	800ce2c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 800ce08:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 800ce0c:	18e6      	adds	r6, r4, r3
 800ce0e:	42af      	cmp	r7, r5
 800ce10:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 800ce14:	d105      	bne.n	800ce22 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 800ce16:	2aff      	cmp	r2, #255	@ 0xff
 800ce18:	d002      	beq.n	800ce20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800ce1a:	3201      	adds	r2, #1
 800ce1c:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 800ce20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce22:	2a00      	cmp	r2, #0
 800ce24:	bf08      	it	eq
 800ce26:	2001      	moveq	r0, #1
 800ce28:	3301      	adds	r3, #1
 800ce2a:	e7ea      	b.n	800ce02 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 800ce2c:	b120      	cbz	r0, 800ce38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800ce2e:	2920      	cmp	r1, #32
 800ce30:	d102      	bne.n	800ce38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 800ce32:	4620      	mov	r0, r4
 800ce34:	f7ff ff74 	bl	800cd20 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800ce38:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 800ce3c:	2b1f      	cmp	r3, #31
 800ce3e:	d8ef      	bhi.n	800ce20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 800ce40:	18e2      	adds	r2, r4, r3
 800ce42:	2101      	movs	r1, #1
 800ce44:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 800ce48:	185a      	adds	r2, r3, r1
 800ce4a:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 800ce4e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 800ce52:	e7e5      	b.n	800ce20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0800ce54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ce54:	4603      	mov	r3, r0
 800ce56:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800ce5a:	2200      	movs	r2, #0
 800ce5c:	801a      	strh	r2, [r3, #0]
 800ce5e:	805a      	strh	r2, [r3, #2]
 800ce60:	809a      	strh	r2, [r3, #4]
 800ce62:	80da      	strh	r2, [r3, #6]
 800ce64:	3308      	adds	r3, #8
 800ce66:	428b      	cmp	r3, r1
 800ce68:	d1f8      	bne.n	800ce5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ce6a:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800ce6e:	4770      	bx	lr

0800ce70 <_ZN8touchgfx11ApplicationC1Ev>:
 800ce70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce72:	4606      	mov	r6, r0
 800ce74:	4b1c      	ldr	r3, [pc, #112]	@ (800cee8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ce76:	f846 3b04 	str.w	r3, [r6], #4
 800ce7a:	4604      	mov	r4, r0
 800ce7c:	2500      	movs	r5, #0
 800ce7e:	22a8      	movs	r2, #168	@ 0xa8
 800ce80:	2100      	movs	r1, #0
 800ce82:	4630      	mov	r0, r6
 800ce84:	f010 fe35 	bl	801daf2 <memset>
 800ce88:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800ce8c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800ce90:	f7ff ffe0 	bl	800ce54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce94:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800ce98:	f7ff ffdc 	bl	800ce54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce9c:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800cea0:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800cea4:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800cea8:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800ceac:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800ceb0:	490e      	ldr	r1, [pc, #56]	@ (800ceec <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ceb2:	480f      	ldr	r0, [pc, #60]	@ (800cef0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ceb4:	4f0f      	ldr	r7, [pc, #60]	@ (800cef4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800ceb6:	f010 fabf 	bl	801d438 <CRC_Lock>
 800ceba:	4b0f      	ldr	r3, [pc, #60]	@ (800cef8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800cebc:	b158      	cbz	r0, 800ced6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800cebe:	801d      	strh	r5, [r3, #0]
 800cec0:	4a0e      	ldr	r2, [pc, #56]	@ (800cefc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800cec2:	2300      	movs	r3, #0
 800cec4:	6013      	str	r3, [r2, #0]
 800cec6:	4a0e      	ldr	r2, [pc, #56]	@ (800cf00 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800cec8:	603b      	str	r3, [r7, #0]
 800ceca:	4630      	mov	r0, r6
 800cecc:	6013      	str	r3, [r2, #0]
 800cece:	f7ff ff01 	bl	800ccd4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800ced2:	4620      	mov	r0, r4
 800ced4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ced6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800ceda:	2002      	movs	r0, #2
 800cedc:	801a      	strh	r2, [r3, #0]
 800cede:	6038      	str	r0, [r7, #0]
 800cee0:	f001 fa5a 	bl	800e398 <_ZN8touchgfx6Screen4drawEv>
 800cee4:	e7ec      	b.n	800cec0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800cee6:	bf00      	nop
 800cee8:	080205dc 	.word	0x080205dc
 800ceec:	b5e8b5cd 	.word	0xb5e8b5cd
 800cef0:	f407a5c2 	.word	0xf407a5c2
 800cef4:	200132c4 	.word	0x200132c4
 800cef8:	2000008c 	.word	0x2000008c
 800cefc:	200132d4 	.word	0x200132d4
 800cf00:	200132c8 	.word	0x200132c8

0800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800cf04:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800cf08:	3b01      	subs	r3, #1
 800cf0a:	b29b      	uxth	r3, r3
 800cf0c:	428b      	cmp	r3, r1
 800cf0e:	b510      	push	{r4, lr}
 800cf10:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800cf14:	d908      	bls.n	800cf28 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800cf16:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800cf1a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800cf1e:	681a      	ldr	r2, [r3, #0]
 800cf20:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800cf24:	685a      	ldr	r2, [r3, #4]
 800cf26:	6062      	str	r2, [r4, #4]
 800cf28:	bd10      	pop	{r4, pc}
	...

0800cf2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cf2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf30:	4b8f      	ldr	r3, [pc, #572]	@ (800d170 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800cf32:	b08f      	sub	sp, #60	@ 0x3c
 800cf34:	ac0a      	add	r4, sp, #40	@ 0x28
 800cf36:	e884 0006 	stmia.w	r4, {r1, r2}
 800cf3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf3e:	4b8d      	ldr	r3, [pc, #564]	@ (800d174 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800cf40:	4683      	mov	fp, r0
 800cf42:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cf46:	4620      	mov	r0, r4
 800cf48:	f7ff fdc9 	bl	800cade <_ZN8touchgfx4Rect10restrictToEss>
 800cf4c:	4620      	mov	r0, r4
 800cf4e:	f7fc fc70 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf52:	2800      	cmp	r0, #0
 800cf54:	d16a      	bne.n	800d02c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cf56:	9403      	str	r4, [sp, #12]
 800cf58:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800cf5c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800cf60:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800cf64:	35a4      	adds	r5, #164	@ 0xa4
 800cf66:	9301      	str	r3, [sp, #4]
 800cf68:	b15c      	cbz	r4, 800cf82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800cf6a:	4629      	mov	r1, r5
 800cf6c:	9803      	ldr	r0, [sp, #12]
 800cf6e:	f7ff fe07 	bl	800cb80 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cf72:	3c01      	subs	r4, #1
 800cf74:	b118      	cbz	r0, 800cf7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800cf76:	b2a1      	uxth	r1, r4
 800cf78:	9801      	ldr	r0, [sp, #4]
 800cf7a:	f7ff ffc3 	bl	800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cf7e:	3d08      	subs	r5, #8
 800cf80:	e7f2      	b.n	800cf68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800cf82:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800cf86:	f8cd a010 	str.w	sl, [sp, #16]
 800cf8a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800cf8e:	9302      	str	r3, [sp, #8]
 800cf90:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800cf94:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800cf98:	9306      	str	r3, [sp, #24]
 800cf9a:	445c      	add	r4, fp
 800cf9c:	2500      	movs	r5, #0
 800cf9e:	4626      	mov	r6, r4
 800cfa0:	f8cd a014 	str.w	sl, [sp, #20]
 800cfa4:	462f      	mov	r7, r5
 800cfa6:	9b05      	ldr	r3, [sp, #20]
 800cfa8:	2b00      	cmp	r3, #0
 800cfaa:	d073      	beq.n	800d094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cfac:	9903      	ldr	r1, [sp, #12]
 800cfae:	4630      	mov	r0, r6
 800cfb0:	f7ff fd73 	bl	800ca9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cfb4:	b350      	cbz	r0, 800d00c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800cfb6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800cfba:	f9b6 c000 	ldrsh.w	ip, [r6]
 800cfbe:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800cfc2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800cfc6:	45e6      	cmp	lr, ip
 800cfc8:	db33      	blt.n	800d032 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cfca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800cfce:	88b3      	ldrh	r3, [r6, #4]
 800cfd0:	4472      	add	r2, lr
 800cfd2:	4463      	add	r3, ip
 800cfd4:	b212      	sxth	r2, r2
 800cfd6:	b21b      	sxth	r3, r3
 800cfd8:	429a      	cmp	r2, r3
 800cfda:	dc2a      	bgt.n	800d032 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cfdc:	88f3      	ldrh	r3, [r6, #6]
 800cfde:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800cfe2:	fa1f f289 	uxth.w	r2, r9
 800cfe6:	4413      	add	r3, r2
 800cfe8:	b29b      	uxth	r3, r3
 800cfea:	45c8      	cmp	r8, r9
 800cfec:	fa1f fc88 	uxth.w	ip, r8
 800cff0:	fa0f fe83 	sxth.w	lr, r3
 800cff4:	db0f      	blt.n	800d016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cff6:	eba3 030c 	sub.w	r3, r3, ip
 800cffa:	1ac9      	subs	r1, r1, r3
 800cffc:	b209      	sxth	r1, r1
 800cffe:	2900      	cmp	r1, #0
 800d000:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d004:	dd12      	ble.n	800d02c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d006:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800d00a:	4605      	mov	r5, r0
 800d00c:	9b05      	ldr	r3, [sp, #20]
 800d00e:	3b01      	subs	r3, #1
 800d010:	9305      	str	r3, [sp, #20]
 800d012:	3e08      	subs	r6, #8
 800d014:	e7c7      	b.n	800cfa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d016:	4461      	add	r1, ip
 800d018:	b209      	sxth	r1, r1
 800d01a:	4571      	cmp	r1, lr
 800d01c:	dc38      	bgt.n	800d090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d01e:	eba2 020c 	sub.w	r2, r2, ip
 800d022:	b212      	sxth	r2, r2
 800d024:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800d028:	2a00      	cmp	r2, #0
 800d02a:	dcee      	bgt.n	800d00a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d02c:	b00f      	add	sp, #60	@ 0x3c
 800d02e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d032:	45c8      	cmp	r8, r9
 800d034:	db2c      	blt.n	800d090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d036:	88f3      	ldrh	r3, [r6, #6]
 800d038:	4499      	add	r9, r3
 800d03a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800d03e:	4498      	add	r8, r3
 800d040:	fa0f f989 	sxth.w	r9, r9
 800d044:	fa0f f888 	sxth.w	r8, r8
 800d048:	45c1      	cmp	r9, r8
 800d04a:	db21      	blt.n	800d090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d04c:	88b3      	ldrh	r3, [r6, #4]
 800d04e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800d052:	fa1f f28c 	uxth.w	r2, ip
 800d056:	4413      	add	r3, r2
 800d058:	b29b      	uxth	r3, r3
 800d05a:	45e6      	cmp	lr, ip
 800d05c:	fa1f f88e 	uxth.w	r8, lr
 800d060:	fa0f f983 	sxth.w	r9, r3
 800d064:	db0a      	blt.n	800d07c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800d066:	eba3 0308 	sub.w	r3, r3, r8
 800d06a:	1ac9      	subs	r1, r1, r3
 800d06c:	b209      	sxth	r1, r1
 800d06e:	2900      	cmp	r1, #0
 800d070:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800d074:	ddda      	ble.n	800d02c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d076:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d07a:	e7c6      	b.n	800d00a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d07c:	4441      	add	r1, r8
 800d07e:	b209      	sxth	r1, r1
 800d080:	4549      	cmp	r1, r9
 800d082:	dc05      	bgt.n	800d090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800d084:	eba2 0208 	sub.w	r2, r2, r8
 800d088:	b212      	sxth	r2, r2
 800d08a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800d08e:	e7cb      	b.n	800d028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d090:	4607      	mov	r7, r0
 800d092:	e7bb      	b.n	800d00c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d094:	2d00      	cmp	r5, #0
 800d096:	d181      	bne.n	800cf9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800d098:	2f00      	cmp	r7, #0
 800d09a:	f000 81dd 	beq.w	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d09e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800d0a2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800d0a6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800d0aa:	b2b3      	uxth	r3, r6
 800d0ac:	9305      	str	r3, [sp, #20]
 800d0ae:	9a05      	ldr	r2, [sp, #20]
 800d0b0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800d0b4:	4413      	add	r3, r2
 800d0b6:	b2ba      	uxth	r2, r7
 800d0b8:	4492      	add	sl, r2
 800d0ba:	b29b      	uxth	r3, r3
 800d0bc:	fa1f fa8a 	uxth.w	sl, sl
 800d0c0:	fa0f f883 	sxth.w	r8, r3
 800d0c4:	fa0f f98a 	sxth.w	r9, sl
 800d0c8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d0cc:	9b04      	ldr	r3, [sp, #16]
 800d0ce:	2b00      	cmp	r3, #0
 800d0d0:	d052      	beq.n	800d178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d0d2:	9903      	ldr	r1, [sp, #12]
 800d0d4:	4620      	mov	r0, r4
 800d0d6:	f7ff fce0 	bl	800ca9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d0da:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d0de:	b1c0      	cbz	r0, 800d112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d0e0:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d0e4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d0e8:	4576      	cmp	r6, lr
 800d0ea:	dc22      	bgt.n	800d132 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d0ec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d0f0:	44f4      	add	ip, lr
 800d0f2:	fa0f fc8c 	sxth.w	ip, ip
 800d0f6:	45e0      	cmp	r8, ip
 800d0f8:	db1b      	blt.n	800d132 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d0fa:	428f      	cmp	r7, r1
 800d0fc:	fa1f fc81 	uxth.w	ip, r1
 800d100:	88e1      	ldrh	r1, [r4, #6]
 800d102:	dc0d      	bgt.n	800d120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800d104:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d108:	eba1 010c 	sub.w	r1, r1, ip
 800d10c:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d110:	80e1      	strh	r1, [r4, #6]
 800d112:	4628      	mov	r0, r5
 800d114:	9904      	ldr	r1, [sp, #16]
 800d116:	3901      	subs	r1, #1
 800d118:	9104      	str	r1, [sp, #16]
 800d11a:	3c08      	subs	r4, #8
 800d11c:	4605      	mov	r5, r0
 800d11e:	e7d3      	b.n	800d0c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800d120:	4461      	add	r1, ip
 800d122:	b209      	sxth	r1, r1
 800d124:	4549      	cmp	r1, r9
 800d126:	dcf5      	bgt.n	800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d128:	eba2 0c0c 	sub.w	ip, r2, ip
 800d12c:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d130:	e7ef      	b.n	800d112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d132:	428f      	cmp	r7, r1
 800d134:	dcee      	bgt.n	800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d136:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d13a:	4461      	add	r1, ip
 800d13c:	b209      	sxth	r1, r1
 800d13e:	4589      	cmp	r9, r1
 800d140:	dbe8      	blt.n	800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d142:	4576      	cmp	r6, lr
 800d144:	fa1f fc8e 	uxth.w	ip, lr
 800d148:	88a1      	ldrh	r1, [r4, #4]
 800d14a:	dc07      	bgt.n	800d15c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d14c:	eba3 0c0c 	sub.w	ip, r3, ip
 800d150:	eba1 010c 	sub.w	r1, r1, ip
 800d154:	f8a4 8000 	strh.w	r8, [r4]
 800d158:	80a1      	strh	r1, [r4, #4]
 800d15a:	e7da      	b.n	800d112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d15c:	4461      	add	r1, ip
 800d15e:	b209      	sxth	r1, r1
 800d160:	4588      	cmp	r8, r1
 800d162:	dbd7      	blt.n	800d114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800d164:	9905      	ldr	r1, [sp, #20]
 800d166:	eba1 0c0c 	sub.w	ip, r1, ip
 800d16a:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d16e:	e7d0      	b.n	800d112 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d170:	2001327e 	.word	0x2001327e
 800d174:	2001327c 	.word	0x2001327c
 800d178:	2d00      	cmp	r5, #0
 800d17a:	f000 816d 	beq.w	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d17e:	9b06      	ldr	r3, [sp, #24]
 800d180:	445b      	add	r3, fp
 800d182:	461c      	mov	r4, r3
 800d184:	9b02      	ldr	r3, [sp, #8]
 800d186:	3301      	adds	r3, #1
 800d188:	f000 8166 	beq.w	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d18c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800d190:	4629      	mov	r1, r5
 800d192:	9803      	ldr	r0, [sp, #12]
 800d194:	f7ff fcf4 	bl	800cb80 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d198:	b120      	cbz	r0, 800d1a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d19a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d19e:	9801      	ldr	r0, [sp, #4]
 800d1a0:	f7ff feb0 	bl	800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d1a4:	9903      	ldr	r1, [sp, #12]
 800d1a6:	4628      	mov	r0, r5
 800d1a8:	f7ff fc77 	bl	800ca9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d1ac:	2800      	cmp	r0, #0
 800d1ae:	f000 809c 	beq.w	800d2ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d1b2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800d1b6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d1ba:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d1be:	9309      	str	r3, [sp, #36]	@ 0x24
 800d1c0:	fa1f f189 	uxth.w	r1, r9
 800d1c4:	eb01 0c03 	add.w	ip, r1, r3
 800d1c8:	fa1f fa8c 	uxth.w	sl, ip
 800d1cc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800d1d0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800d1d4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800d1d8:	b283      	uxth	r3, r0
 800d1da:	eb03 050c 	add.w	r5, r3, ip
 800d1de:	b2ad      	uxth	r5, r5
 800d1e0:	9505      	str	r5, [sp, #20]
 800d1e2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d1e6:	9504      	str	r5, [sp, #16]
 800d1e8:	4548      	cmp	r0, r9
 800d1ea:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800d1ee:	f340 8099 	ble.w	800d324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d1f2:	1a5b      	subs	r3, r3, r1
 800d1f4:	b29b      	uxth	r3, r3
 800d1f6:	4596      	cmp	lr, r2
 800d1f8:	fa0f f08a 	sxth.w	r0, sl
 800d1fc:	b21e      	sxth	r6, r3
 800d1fe:	dd2e      	ble.n	800d25e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d200:	9f02      	ldr	r7, [sp, #8]
 800d202:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800d206:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d20a:	9f04      	ldr	r7, [sp, #16]
 800d20c:	1a3f      	subs	r7, r7, r0
 800d20e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800d212:	fa1f fe8e 	uxth.w	lr, lr
 800d216:	b292      	uxth	r2, r2
 800d218:	ebae 0102 	sub.w	r1, lr, r2
 800d21c:	44a6      	add	lr, r4
 800d21e:	4402      	add	r2, r0
 800d220:	b289      	uxth	r1, r1
 800d222:	fa0f fe8e 	sxth.w	lr, lr
 800d226:	b212      	sxth	r2, r2
 800d228:	b20d      	sxth	r5, r1
 800d22a:	ebae 0202 	sub.w	r2, lr, r2
 800d22e:	436f      	muls	r7, r5
 800d230:	4372      	muls	r2, r6
 800d232:	4297      	cmp	r7, r2
 800d234:	db09      	blt.n	800d24a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d236:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800d23a:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800d23e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d242:	449c      	add	ip, r3
 800d244:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d248:	e686      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d24a:	4421      	add	r1, r4
 800d24c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800d250:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800d254:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d258:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d25c:	e67c      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d25e:	9f04      	ldr	r7, [sp, #16]
 800d260:	42b8      	cmp	r0, r7
 800d262:	da27      	bge.n	800d2b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d264:	9902      	ldr	r1, [sp, #8]
 800d266:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800d26a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d26e:	eb05 010e 	add.w	r1, r5, lr
 800d272:	fa1f f881 	uxth.w	r8, r1
 800d276:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800d27a:	4411      	add	r1, r2
 800d27c:	eba1 0108 	sub.w	r1, r1, r8
 800d280:	b289      	uxth	r1, r1
 800d282:	fa0f f988 	sxth.w	r9, r8
 800d286:	eba2 020e 	sub.w	r2, r2, lr
 800d28a:	fa0f f881 	sxth.w	r8, r1
 800d28e:	1a3f      	subs	r7, r7, r0
 800d290:	4372      	muls	r2, r6
 800d292:	fb08 f707 	mul.w	r7, r8, r7
 800d296:	42ba      	cmp	r2, r7
 800d298:	dc06      	bgt.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d29a:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800d29e:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800d2a2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800d2a6:	e7ca      	b.n	800d23e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d2a8:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800d2ac:	4429      	add	r1, r5
 800d2ae:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d2b2:	e651      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d2b4:	9805      	ldr	r0, [sp, #20]
 800d2b6:	ebaa 0000 	sub.w	r0, sl, r0
 800d2ba:	b280      	uxth	r0, r0
 800d2bc:	2d06      	cmp	r5, #6
 800d2be:	fa0f fe80 	sxth.w	lr, r0
 800d2c2:	d817      	bhi.n	800d2f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d2c4:	9b04      	ldr	r3, [sp, #16]
 800d2c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800d2ca:	1c6b      	adds	r3, r5, #1
 800d2cc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800d2d0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800d2d4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d2d8:	9b01      	ldr	r3, [sp, #4]
 800d2da:	9801      	ldr	r0, [sp, #4]
 800d2dc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d2e0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d2e4:	805a      	strh	r2, [r3, #2]
 800d2e6:	809e      	strh	r6, [r3, #4]
 800d2e8:	80d9      	strh	r1, [r3, #6]
 800d2ea:	9b02      	ldr	r3, [sp, #8]
 800d2ec:	3b01      	subs	r3, #1
 800d2ee:	9302      	str	r3, [sp, #8]
 800d2f0:	3c08      	subs	r4, #8
 800d2f2:	e747      	b.n	800d184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d2f4:	9a02      	ldr	r2, [sp, #8]
 800d2f6:	45b6      	cmp	lr, r6
 800d2f8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d2fc:	db0d      	blt.n	800d31a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d2fe:	449c      	add	ip, r3
 800d300:	fa1f fc8c 	uxth.w	ip, ip
 800d304:	445a      	add	r2, fp
 800d306:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800d30a:	448c      	add	ip, r1
 800d30c:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800d310:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800d314:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800d318:	e61e      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d31a:	445a      	add	r2, fp
 800d31c:	4484      	add	ip, r0
 800d31e:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800d322:	e78f      	b.n	800d244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d324:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800d328:	fa1f f18e 	uxth.w	r1, lr
 800d32c:	eb01 0806 	add.w	r8, r1, r6
 800d330:	b293      	uxth	r3, r2
 800d332:	fa1f f888 	uxth.w	r8, r8
 800d336:	9306      	str	r3, [sp, #24]
 800d338:	fa0f f388 	sxth.w	r3, r8
 800d33c:	9307      	str	r3, [sp, #28]
 800d33e:	9f06      	ldr	r7, [sp, #24]
 800d340:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d344:	443b      	add	r3, r7
 800d346:	b29b      	uxth	r3, r3
 800d348:	4596      	cmp	lr, r2
 800d34a:	9308      	str	r3, [sp, #32]
 800d34c:	da24      	bge.n	800d398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d34e:	9905      	ldr	r1, [sp, #20]
 800d350:	eba3 0308 	sub.w	r3, r3, r8
 800d354:	ebaa 0401 	sub.w	r4, sl, r1
 800d358:	b2a4      	uxth	r4, r4
 800d35a:	b29b      	uxth	r3, r3
 800d35c:	b225      	sxth	r5, r4
 800d35e:	b219      	sxth	r1, r3
 800d360:	eba2 020e 	sub.w	r2, r2, lr
 800d364:	eba9 0000 	sub.w	r0, r9, r0
 800d368:	436a      	muls	r2, r5
 800d36a:	4348      	muls	r0, r1
 800d36c:	4282      	cmp	r2, r0
 800d36e:	9a02      	ldr	r2, [sp, #8]
 800d370:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d374:	445a      	add	r2, fp
 800d376:	dc06      	bgt.n	800d386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d378:	9b07      	ldr	r3, [sp, #28]
 800d37a:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800d37e:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800d382:	44a4      	add	ip, r4
 800d384:	e75e      	b.n	800d244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d386:	9904      	ldr	r1, [sp, #16]
 800d388:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800d38c:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800d390:	4433      	add	r3, r6
 800d392:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d396:	e5df      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d398:	9f06      	ldr	r7, [sp, #24]
 800d39a:	9b04      	ldr	r3, [sp, #16]
 800d39c:	1bc9      	subs	r1, r1, r7
 800d39e:	fa0f f78a 	sxth.w	r7, sl
 800d3a2:	b289      	uxth	r1, r1
 800d3a4:	429f      	cmp	r7, r3
 800d3a6:	fa0f fe81 	sxth.w	lr, r1
 800d3aa:	dd23      	ble.n	800d3f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800d3ac:	9a05      	ldr	r2, [sp, #20]
 800d3ae:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d3b2:	9d07      	ldr	r5, [sp, #28]
 800d3b4:	ebaa 0202 	sub.w	r2, sl, r2
 800d3b8:	b292      	uxth	r2, r2
 800d3ba:	eba5 0a03 	sub.w	sl, r5, r3
 800d3be:	b214      	sxth	r4, r2
 800d3c0:	eba9 0000 	sub.w	r0, r9, r0
 800d3c4:	9b02      	ldr	r3, [sp, #8]
 800d3c6:	fb0e f000 	mul.w	r0, lr, r0
 800d3ca:	fb04 fa0a 	mul.w	sl, r4, sl
 800d3ce:	00db      	lsls	r3, r3, #3
 800d3d0:	4550      	cmp	r0, sl
 800d3d2:	445b      	add	r3, fp
 800d3d4:	db03      	blt.n	800d3de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800d3d6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800d3da:	4494      	add	ip, r2
 800d3dc:	e732      	b.n	800d244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d3de:	9a04      	ldr	r2, [sp, #16]
 800d3e0:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800d3e4:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800d3e8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800d3ec:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800d3f0:	4431      	add	r1, r6
 800d3f2:	e75c      	b.n	800d2ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d3f4:	9b08      	ldr	r3, [sp, #32]
 800d3f6:	eba3 0308 	sub.w	r3, r3, r8
 800d3fa:	b29b      	uxth	r3, r3
 800d3fc:	2d06      	cmp	r5, #6
 800d3fe:	b218      	sxth	r0, r3
 800d400:	d813      	bhi.n	800d42a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800d402:	9b07      	ldr	r3, [sp, #28]
 800d404:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800d408:	1c6b      	adds	r3, r5, #1
 800d40a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800d40e:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800d412:	9b01      	ldr	r3, [sp, #4]
 800d414:	9901      	ldr	r1, [sp, #4]
 800d416:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d41a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d41e:	805a      	strh	r2, [r3, #2]
 800d420:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d422:	809a      	strh	r2, [r3, #4]
 800d424:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d428:	e75f      	b.n	800d2ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d42a:	9c02      	ldr	r4, [sp, #8]
 800d42c:	4570      	cmp	r0, lr
 800d42e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d432:	db0d      	blt.n	800d450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800d434:	4431      	add	r1, r6
 800d436:	9b06      	ldr	r3, [sp, #24]
 800d438:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800d43c:	b289      	uxth	r1, r1
 800d43e:	445c      	add	r4, fp
 800d440:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800d444:	4419      	add	r1, r3
 800d446:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800d44a:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800d44e:	e583      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d450:	445c      	add	r4, fp
 800d452:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800d456:	e79b      	b.n	800d390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d458:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800d45c:	1e65      	subs	r5, r4, #1
 800d45e:	b2ad      	uxth	r5, r5
 800d460:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800d464:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800d468:	42b5      	cmp	r5, r6
 800d46a:	d044      	beq.n	800d4f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d46c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800d470:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800d474:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800d478:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800d47c:	4282      	cmp	r2, r0
 800d47e:	d11f      	bne.n	800d4c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800d480:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800d484:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d488:	459c      	cmp	ip, r3
 800d48a:	d119      	bne.n	800d4c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800d48c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800d490:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800d494:	19d8      	adds	r0, r3, r7
 800d496:	b200      	sxth	r0, r0
 800d498:	4288      	cmp	r0, r1
 800d49a:	d109      	bne.n	800d4b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800d49c:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800d4a0:	4413      	add	r3, r2
 800d4a2:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800d4a6:	4629      	mov	r1, r5
 800d4a8:	9801      	ldr	r0, [sp, #4]
 800d4aa:	f7ff fd2b 	bl	800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d4ae:	e003      	b.n	800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d4b0:	4411      	add	r1, r2
 800d4b2:	b209      	sxth	r1, r1
 800d4b4:	42b9      	cmp	r1, r7
 800d4b6:	d0f3      	beq.n	800d4a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 800d4b8:	3d01      	subs	r5, #1
 800d4ba:	b2ad      	uxth	r5, r5
 800d4bc:	3c08      	subs	r4, #8
 800d4be:	e7d3      	b.n	800d468 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800d4c0:	42b9      	cmp	r1, r7
 800d4c2:	d1f9      	bne.n	800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d4c4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800d4c8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d4cc:	4299      	cmp	r1, r3
 800d4ce:	d1f3      	bne.n	800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d4d0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800d4d4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800d4d8:	181f      	adds	r7, r3, r0
 800d4da:	b23f      	sxth	r7, r7
 800d4dc:	42ba      	cmp	r2, r7
 800d4de:	d105      	bne.n	800d4ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 800d4e0:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800d4e4:	440b      	add	r3, r1
 800d4e6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d4ea:	e7dc      	b.n	800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 800d4ec:	440a      	add	r2, r1
 800d4ee:	b212      	sxth	r2, r2
 800d4f0:	4290      	cmp	r0, r2
 800d4f2:	d1e1      	bne.n	800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800d4f4:	e7f6      	b.n	800d4e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 800d4f6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800d4fa:	2e07      	cmp	r6, #7
 800d4fc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d500:	d812      	bhi.n	800d528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800d502:	1c75      	adds	r5, r6, #1
 800d504:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800d508:	9d01      	ldr	r5, [sp, #4]
 800d50a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800d50e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800d512:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800d516:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800d51a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d51e:	442c      	add	r4, r5
 800d520:	8061      	strh	r1, [r4, #2]
 800d522:	80a2      	strh	r2, [r4, #4]
 800d524:	80e3      	strh	r3, [r4, #6]
 800d526:	e581      	b.n	800d02c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d528:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800d52c:	3e01      	subs	r6, #1
 800d52e:	445c      	add	r4, fp
 800d530:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800d534:	f04f 37ff 	mov.w	r7, #4294967295
 800d538:	2500      	movs	r5, #0
 800d53a:	9305      	str	r3, [sp, #20]
 800d53c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800d540:	9302      	str	r3, [sp, #8]
 800d542:	1e72      	subs	r2, r6, #1
 800d544:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800d548:	9304      	str	r3, [sp, #16]
 800d54a:	4691      	mov	r9, r2
 800d54c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800d550:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d554:	bf14      	ite	ne
 800d556:	9905      	ldrne	r1, [sp, #20]
 800d558:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d55c:	6818      	ldr	r0, [r3, #0]
 800d55e:	9207      	str	r2, [sp, #28]
 800d560:	bf18      	it	ne
 800d562:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d566:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d56a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d56e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d572:	9306      	str	r3, [sp, #24]
 800d574:	fb18 f801 	smulbb	r8, r8, r1
 800d578:	6859      	ldr	r1, [r3, #4]
 800d57a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d57e:	4671      	mov	r1, lr
 800d580:	a80c      	add	r0, sp, #48	@ 0x30
 800d582:	f7ff fb23 	bl	800cbcc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d586:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800d58a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800d58e:	9b04      	ldr	r3, [sp, #16]
 800d590:	9a02      	ldr	r2, [sp, #8]
 800d592:	fb10 f001 	smulbb	r0, r0, r1
 800d596:	fb02 8803 	mla	r8, r2, r3, r8
 800d59a:	eba0 0108 	sub.w	r1, r0, r8
 800d59e:	f04f 0c08 	mov.w	ip, #8
 800d5a2:	fb90 f0fc 	sdiv	r0, r0, ip
 800d5a6:	4288      	cmp	r0, r1
 800d5a8:	dc20      	bgt.n	800d5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d5aa:	4551      	cmp	r1, sl
 800d5ac:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d5b0:	da03      	bge.n	800d5ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 800d5b2:	b1d9      	cbz	r1, 800d5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 800d5b4:	468a      	mov	sl, r1
 800d5b6:	464f      	mov	r7, r9
 800d5b8:	4635      	mov	r5, r6
 800d5ba:	f109 39ff 	add.w	r9, r9, #4294967295
 800d5be:	f119 0f02 	cmn.w	r9, #2
 800d5c2:	d1c5      	bne.n	800d550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800d5c4:	4616      	mov	r6, r2
 800d5c6:	3201      	adds	r2, #1
 800d5c8:	f1a4 0408 	sub.w	r4, r4, #8
 800d5cc:	d1b6      	bne.n	800d53c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800d5ce:	9b01      	ldr	r3, [sp, #4]
 800d5d0:	b2ac      	uxth	r4, r5
 800d5d2:	00ed      	lsls	r5, r5, #3
 800d5d4:	1958      	adds	r0, r3, r5
 800d5d6:	1c7b      	adds	r3, r7, #1
 800d5d8:	d10b      	bne.n	800d5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 800d5da:	4601      	mov	r1, r0
 800d5dc:	9803      	ldr	r0, [sp, #12]
 800d5de:	f7ff faf5 	bl	800cbcc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d5e2:	4621      	mov	r1, r4
 800d5e4:	9801      	ldr	r0, [sp, #4]
 800d5e6:	f7ff fc8d 	bl	800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d5ea:	e4b5      	b.n	800cf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5ec:	464f      	mov	r7, r9
 800d5ee:	4635      	mov	r5, r6
 800d5f0:	e7ed      	b.n	800d5ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 800d5f2:	9b01      	ldr	r3, [sp, #4]
 800d5f4:	00ff      	lsls	r7, r7, #3
 800d5f6:	19d9      	adds	r1, r3, r7
 800d5f8:	f7ff fae8 	bl	800cbcc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d5fc:	9b03      	ldr	r3, [sp, #12]
 800d5fe:	cb03      	ldmia	r3!, {r0, r1}
 800d600:	445f      	add	r7, fp
 800d602:	445d      	add	r5, fp
 800d604:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800d608:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800d60c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d610:	9b03      	ldr	r3, [sp, #12]
 800d612:	6869      	ldr	r1, [r5, #4]
 800d614:	c303      	stmia	r3!, {r0, r1}
 800d616:	e7e4      	b.n	800d5e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

0800d618 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d61c:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800d620:	b09b      	sub	sp, #108	@ 0x6c
 800d622:	4604      	mov	r4, r0
 800d624:	4630      	mov	r0, r6
 800d626:	f7fc f904 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d62a:	4605      	mov	r5, r0
 800d62c:	b948      	cbnz	r0, 800d642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800d62e:	6823      	ldr	r3, [r4, #0]
 800d630:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d636:	4620      	mov	r0, r4
 800d638:	4798      	blx	r3
 800d63a:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800d63e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800d642:	4bc6      	ldr	r3, [pc, #792]	@ (800d95c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d644:	681b      	ldr	r3, [r3, #0]
 800d646:	2b00      	cmp	r3, #0
 800d648:	d03f      	beq.n	800d6ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d64a:	4dc5      	ldr	r5, [pc, #788]	@ (800d960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d64c:	4628      	mov	r0, r5
 800d64e:	f7fc f8f0 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d652:	4606      	mov	r6, r0
 800d654:	2800      	cmp	r0, #0
 800d656:	d138      	bne.n	800d6ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 800d658:	4628      	mov	r0, r5
 800d65a:	f7ff f94b 	bl	800c8f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d65e:	6823      	ldr	r3, [r4, #0]
 800d660:	6829      	ldr	r1, [r5, #0]
 800d662:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d664:	686a      	ldr	r2, [r5, #4]
 800d666:	4620      	mov	r0, r4
 800d668:	4798      	blx	r3
 800d66a:	802e      	strh	r6, [r5, #0]
 800d66c:	806e      	strh	r6, [r5, #2]
 800d66e:	80ae      	strh	r6, [r5, #4]
 800d670:	80ee      	strh	r6, [r5, #6]
 800d672:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 800d676:	4dbb      	ldr	r5, [pc, #748]	@ (800d964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d678:	4640      	mov	r0, r8
 800d67a:	f7ff fbeb 	bl	800ce54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d67e:	882e      	ldrh	r6, [r5, #0]
 800d680:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800d684:	4633      	mov	r3, r6
 800d686:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800d68a:	42bb      	cmp	r3, r7
 800d68c:	d224      	bcs.n	800d6d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d68e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 800d692:	2907      	cmp	r1, #7
 800d694:	d816      	bhi.n	800d6c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 800d696:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d69a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800d69e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800d6a2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d6a6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d6aa:	1c4a      	adds	r2, r1, #1
 800d6ac:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 800d6b0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 800d6b4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 800d6b8:	f8a2 a002 	strh.w	sl, [r2, #2]
 800d6bc:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d6c0:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d6c4:	3301      	adds	r3, #1
 800d6c6:	b29b      	uxth	r3, r3
 800d6c8:	e7df      	b.n	800d68a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 800d6ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800d6ce:	2b00      	cmp	r3, #0
 800d6d0:	d1cf      	bne.n	800d672 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 800d6d2:	b01b      	add	sp, #108	@ 0x6c
 800d6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6d8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800d6dc:	42b3      	cmp	r3, r6
 800d6de:	d90c      	bls.n	800d6fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 800d6e0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d6e4:	6822      	ldr	r2, [r4, #0]
 800d6e6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800d6ea:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800d6ec:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800d6f0:	4620      	mov	r0, r4
 800d6f2:	3601      	adds	r6, #1
 800d6f4:	47b8      	blx	r7
 800d6f6:	b2b6      	uxth	r6, r6
 800d6f8:	e7ee      	b.n	800d6d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800d6fa:	4a9b      	ldr	r2, [pc, #620]	@ (800d968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d6fc:	6813      	ldr	r3, [r2, #0]
 800d6fe:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800d702:	2b01      	cmp	r3, #1
 800d704:	4691      	mov	r9, r2
 800d706:	f040 80e2 	bne.w	800d8ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800d70a:	8829      	ldrh	r1, [r5, #0]
 800d70c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 800d710:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 800d714:	33ae      	adds	r3, #174	@ 0xae
 800d716:	2600      	movs	r6, #0
 800d718:	428f      	cmp	r7, r1
 800d71a:	f103 0308 	add.w	r3, r3, #8
 800d71e:	dd0a      	ble.n	800d736 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 800d720:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 800d724:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 800d728:	4402      	add	r2, r0
 800d72a:	b212      	sxth	r2, r2
 800d72c:	4296      	cmp	r6, r2
 800d72e:	bfb8      	it	lt
 800d730:	4616      	movlt	r6, r2
 800d732:	3101      	adds	r1, #1
 800d734:	e7f0      	b.n	800d718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 800d736:	4b8d      	ldr	r3, [pc, #564]	@ (800d96c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800d738:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 800d968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 800d73c:	881b      	ldrh	r3, [r3, #0]
 800d73e:	2b0f      	cmp	r3, #15
 800d740:	bf88      	it	hi
 800d742:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 800d746:	f04f 0300 	mov.w	r3, #0
 800d74a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d74e:	bf98      	it	ls
 800d750:	f04f 0b01 	movls.w	fp, #1
 800d754:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 800d758:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800d75c:	4b82      	ldr	r3, [pc, #520]	@ (800d968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d75e:	4438      	add	r0, r7
 800d760:	b207      	sxth	r7, r0
 800d762:	6818      	ldr	r0, [r3, #0]
 800d764:	42b7      	cmp	r7, r6
 800d766:	6803      	ldr	r3, [r0, #0]
 800d768:	f280 8083 	bge.w	800d872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800d76c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800d770:	4798      	blx	r3
 800d772:	eb07 030b 	add.w	r3, r7, fp
 800d776:	4298      	cmp	r0, r3
 800d778:	da07      	bge.n	800d78a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800d77a:	42b0      	cmp	r0, r6
 800d77c:	da05      	bge.n	800d78a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 800d77e:	4287      	cmp	r7, r0
 800d780:	dd6c      	ble.n	800d85c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d782:	2f00      	cmp	r7, #0
 800d784:	dd6a      	ble.n	800d85c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d786:	4630      	mov	r0, r6
 800d788:	e004      	b.n	800d794 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 800d78a:	4287      	cmp	r7, r0
 800d78c:	dcfb      	bgt.n	800d786 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 800d78e:	42b0      	cmp	r0, r6
 800d790:	bfa8      	it	ge
 800d792:	4630      	movge	r0, r6
 800d794:	4b76      	ldr	r3, [pc, #472]	@ (800d970 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800d796:	f8ad 7016 	strh.w	r7, [sp, #22]
 800d79a:	1bc0      	subs	r0, r0, r7
 800d79c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d7a0:	882f      	ldrh	r7, [r5, #0]
 800d7a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d7a6:	2200      	movs	r2, #0
 800d7a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d7ac:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d7b0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800d7b4:	42bb      	cmp	r3, r7
 800d7b6:	d9cd      	bls.n	800d754 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800d7b8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800d7bc:	ab07      	add	r3, sp, #28
 800d7be:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d7c2:	6851      	ldr	r1, [r2, #4]
 800d7c4:	c303      	stmia	r3!, {r0, r1}
 800d7c6:	a905      	add	r1, sp, #20
 800d7c8:	a807      	add	r0, sp, #28
 800d7ca:	f7ff f966 	bl	800ca9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d7ce:	2800      	cmp	r0, #0
 800d7d0:	d04c      	beq.n	800d86c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800d7d2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800d7d6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800d7da:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800d7de:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800d7e2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d7e6:	9302      	str	r3, [sp, #8]
 800d7e8:	4686      	mov	lr, r0
 800d7ea:	4290      	cmp	r0, r2
 800d7ec:	4450      	add	r0, sl
 800d7ee:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800d7f2:	bfb8      	it	lt
 800d7f4:	4696      	movlt	lr, r2
 800d7f6:	4452      	add	r2, sl
 800d7f8:	4299      	cmp	r1, r3
 800d7fa:	b280      	uxth	r0, r0
 800d7fc:	b292      	uxth	r2, r2
 800d7fe:	468c      	mov	ip, r1
 800d800:	fa0f fa82 	sxth.w	sl, r2
 800d804:	bfb8      	it	lt
 800d806:	469c      	movlt	ip, r3
 800d808:	b203      	sxth	r3, r0
 800d80a:	4553      	cmp	r3, sl
 800d80c:	bfb8      	it	lt
 800d80e:	4602      	movlt	r2, r0
 800d810:	eba2 020e 	sub.w	r2, r2, lr
 800d814:	f8ad 2020 	strh.w	r2, [sp, #32]
 800d818:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 800d81c:	9b02      	ldr	r3, [sp, #8]
 800d81e:	f8ad e01c 	strh.w	lr, [sp, #28]
 800d822:	4411      	add	r1, r2
 800d824:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d828:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d82c:	4413      	add	r3, r2
 800d82e:	b289      	uxth	r1, r1
 800d830:	b29b      	uxth	r3, r3
 800d832:	b208      	sxth	r0, r1
 800d834:	b21a      	sxth	r2, r3
 800d836:	4290      	cmp	r0, r2
 800d838:	bfb8      	it	lt
 800d83a:	460b      	movlt	r3, r1
 800d83c:	eba3 030c 	sub.w	r3, r3, ip
 800d840:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800d844:	a807      	add	r0, sp, #28
 800d846:	f7fb fff4 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d84a:	b920      	cbnz	r0, 800d856 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800d84c:	6823      	ldr	r3, [r4, #0]
 800d84e:	a907      	add	r1, sp, #28
 800d850:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d852:	4620      	mov	r0, r4
 800d854:	4798      	blx	r3
 800d856:	3701      	adds	r7, #1
 800d858:	b2bf      	uxth	r7, r7
 800d85a:	e7a9      	b.n	800d7b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800d85c:	f8d9 0000 	ldr.w	r0, [r9]
 800d860:	6803      	ldr	r3, [r0, #0]
 800d862:	2101      	movs	r1, #1
 800d864:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800d868:	4798      	blx	r3
 800d86a:	e773      	b.n	800d754 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800d86c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800d870:	e7e8      	b.n	800d844 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800d872:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d874:	4798      	blx	r3
 800d876:	4b3f      	ldr	r3, [pc, #252]	@ (800d974 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800d878:	781b      	ldrb	r3, [r3, #0]
 800d87a:	2b00      	cmp	r3, #0
 800d87c:	f43f af29 	beq.w	800d6d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800d880:	2300      	movs	r3, #0
 800d882:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800d886:	882b      	ldrh	r3, [r5, #0]
 800d888:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 800d88c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800d890:	42ab      	cmp	r3, r5
 800d892:	f4bf af1e 	bcs.w	800d6d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 800d896:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800d89a:	2907      	cmp	r1, #7
 800d89c:	d814      	bhi.n	800d8c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800d89e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 800d8a2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 800d8a6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 800d8aa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 800d8ae:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 800d8b2:	1c4a      	adds	r2, r1, #1
 800d8b4:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800d8b8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800d8bc:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 800d8c0:	f8a2 c002 	strh.w	ip, [r2, #2]
 800d8c4:	8097      	strh	r7, [r2, #4]
 800d8c6:	80d6      	strh	r6, [r2, #6]
 800d8c8:	3301      	adds	r3, #1
 800d8ca:	b29b      	uxth	r3, r3
 800d8cc:	e7e0      	b.n	800d890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 800d8ce:	2b02      	cmp	r3, #2
 800d8d0:	f040 8133 	bne.w	800db3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800d8d4:	4b28      	ldr	r3, [pc, #160]	@ (800d978 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800d8d6:	781b      	ldrb	r3, [r3, #0]
 800d8d8:	2b01      	cmp	r3, #1
 800d8da:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800d8de:	f000 8098 	beq.w	800da12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800d8e2:	882a      	ldrh	r2, [r5, #0]
 800d8e4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800d8e8:	3201      	adds	r2, #1
 800d8ea:	b292      	uxth	r2, r2
 800d8ec:	2900      	cmp	r1, #0
 800d8ee:	d0c2      	beq.n	800d876 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d8f0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 800d8f4:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 800d8f8:	441e      	add	r6, r3
 800d8fa:	b236      	sxth	r6, r6
 800d8fc:	4694      	mov	ip, r2
 800d8fe:	f04f 0900 	mov.w	r9, #0
 800d902:	fa1f f38c 	uxth.w	r3, ip
 800d906:	4299      	cmp	r1, r3
 800d908:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800d90c:	f240 80bf 	bls.w	800da8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 800d910:	4427      	add	r7, r4
 800d912:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800d916:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800d91a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800d91e:	4283      	cmp	r3, r0
 800d920:	f340 80a1 	ble.w	800da66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 800d924:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 800d928:	4406      	add	r6, r0
 800d92a:	b236      	sxth	r6, r6
 800d92c:	429e      	cmp	r6, r3
 800d92e:	bfa8      	it	ge
 800d930:	461e      	movge	r6, r3
 800d932:	46e1      	mov	r9, ip
 800d934:	f10c 0c01 	add.w	ip, ip, #1
 800d938:	e7e3      	b.n	800d902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 800d93a:	d10a      	bne.n	800d952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800d93c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 800d940:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800d944:	4562      	cmp	r2, ip
 800d946:	bfb8      	it	lt
 800d948:	4662      	movlt	r2, ip
 800d94a:	4288      	cmp	r0, r1
 800d94c:	bfb8      	it	lt
 800d94e:	461f      	movlt	r7, r3
 800d950:	e087      	b.n	800da62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800d952:	428a      	cmp	r2, r1
 800d954:	bfb8      	it	lt
 800d956:	460a      	movlt	r2, r1
 800d958:	e083      	b.n	800da62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 800d95a:	bf00      	nop
 800d95c:	200132c0 	.word	0x200132c0
 800d960:	200132cc 	.word	0x200132cc
 800d964:	2000008c 	.word	0x2000008c
 800d968:	20013288 	.word	0x20013288
 800d96c:	2001327e 	.word	0x2001327e
 800d970:	2001327c 	.word	0x2001327c
 800d974:	20013286 	.word	0x20013286
 800d978:	20013280 	.word	0x20013280
 800d97c:	19a1      	adds	r1, r4, r6
 800d97e:	ab07      	add	r3, sp, #28
 800d980:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800d984:	6849      	ldr	r1, [r1, #4]
 800d986:	c303      	stmia	r3!, {r0, r1}
 800d988:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d98c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d990:	2b13      	cmp	r3, #19
 800d992:	bfd8      	it	le
 800d994:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d998:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d99c:	440b      	add	r3, r1
 800d99e:	1a9b      	subs	r3, r3, r2
 800d9a0:	a807      	add	r0, sp, #28
 800d9a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d9a6:	f7fe ffbf 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d9aa:	a807      	add	r0, sp, #28
 800d9ac:	f7fb ff41 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9b0:	bb78      	cbnz	r0, 800da12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800d9b2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 800d9b6:	f8d9 0000 	ldr.w	r0, [r9]
 800d9ba:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d9be:	f8d0 e000 	ldr.w	lr, [r0]
 800d9c2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d9c6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d9ca:	f1bc 0f14 	cmp.w	ip, #20
 800d9ce:	bfa8      	it	ge
 800d9d0:	f04f 0c14 	movge.w	ip, #20
 800d9d4:	fa1f fc8c 	uxth.w	ip, ip
 800d9d8:	f8cd c000 	str.w	ip, [sp]
 800d9dc:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 800d9e0:	47d8      	blx	fp
 800d9e2:	4683      	mov	fp, r0
 800d9e4:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800d9e8:	a807      	add	r0, sp, #28
 800d9ea:	f7fe ff83 	bl	800c8f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d9ee:	6823      	ldr	r3, [r4, #0]
 800d9f0:	4426      	add	r6, r4
 800d9f2:	4620      	mov	r0, r4
 800d9f4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800d9f6:	a907      	add	r1, sp, #28
 800d9f8:	4798      	blx	r3
 800d9fa:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800d9fe:	eba0 000b 	sub.w	r0, r0, fp
 800da02:	b200      	sxth	r0, r0
 800da04:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 800da08:	b918      	cbnz	r0, 800da12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 800da0a:	b2b9      	uxth	r1, r7
 800da0c:	4650      	mov	r0, sl
 800da0e:	f7ff fa79 	bl	800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800da12:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800da16:	f1bb 0f00 	cmp.w	fp, #0
 800da1a:	f43f af2c 	beq.w	800d876 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800da1e:	882b      	ldrh	r3, [r5, #0]
 800da20:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800da24:	3301      	adds	r3, #1
 800da26:	b29b      	uxth	r3, r3
 800da28:	2700      	movs	r7, #0
 800da2a:	b299      	uxth	r1, r3
 800da2c:	458b      	cmp	fp, r1
 800da2e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 800da32:	d9a3      	bls.n	800d97c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800da34:	4426      	add	r6, r4
 800da36:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800da3a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 800da3e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 800da42:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800da46:	4408      	add	r0, r1
 800da48:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800da4c:	4461      	add	r1, ip
 800da4e:	b200      	sxth	r0, r0
 800da50:	b209      	sxth	r1, r1
 800da52:	4288      	cmp	r0, r1
 800da54:	f6bf af71 	bge.w	800d93a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800da58:	4584      	cmp	ip, r0
 800da5a:	4662      	mov	r2, ip
 800da5c:	461f      	mov	r7, r3
 800da5e:	bfb8      	it	lt
 800da60:	4602      	movlt	r2, r0
 800da62:	3301      	adds	r3, #1
 800da64:	e7e1      	b.n	800da2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 800da66:	d10e      	bne.n	800da86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 800da68:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800da6c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800da70:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800da74:	4473      	add	r3, lr
 800da76:	b21b      	sxth	r3, r3
 800da78:	429e      	cmp	r6, r3
 800da7a:	bfa8      	it	ge
 800da7c:	461e      	movge	r6, r3
 800da7e:	4287      	cmp	r7, r0
 800da80:	bfb8      	it	lt
 800da82:	46e1      	movlt	r9, ip
 800da84:	e756      	b.n	800d934 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800da86:	4286      	cmp	r6, r0
 800da88:	bfa8      	it	ge
 800da8a:	4606      	movge	r6, r0
 800da8c:	e752      	b.n	800d934 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800da8e:	eb0a 0007 	add.w	r0, sl, r7
 800da92:	4427      	add	r7, r4
 800da94:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800da98:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800da9c:	f1bb 0f13 	cmp.w	fp, #19
 800daa0:	bfde      	ittt	le
 800daa2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 800daa6:	445e      	addle	r6, fp
 800daa8:	b236      	sxthle	r6, r6
 800daaa:	f7fb fec2 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800daae:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800dab2:	2800      	cmp	r0, #0
 800dab4:	f47f af1a 	bne.w	800d8ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 800dab8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800dabc:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800dac0:	482a      	ldr	r0, [pc, #168]	@ (800db6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 800dac2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800dac6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800daca:	6800      	ldr	r0, [r0, #0]
 800dacc:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dad0:	1ab6      	subs	r6, r6, r2
 800dad2:	2e14      	cmp	r6, #20
 800dad4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800dad8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dadc:	bfa8      	it	ge
 800dade:	2614      	movge	r6, #20
 800dae0:	f8d0 c000 	ldr.w	ip, [r0]
 800dae4:	b2b6      	uxth	r6, r6
 800dae6:	fa1f fb8b 	uxth.w	fp, fp
 800daea:	455e      	cmp	r6, fp
 800daec:	bf94      	ite	ls
 800daee:	9600      	strls	r6, [sp, #0]
 800daf0:	f8cd b000 	strhi.w	fp, [sp]
 800daf4:	b292      	uxth	r2, r2
 800daf6:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 800dafa:	b29b      	uxth	r3, r3
 800dafc:	b289      	uxth	r1, r1
 800dafe:	47b0      	blx	r6
 800db00:	6823      	ldr	r3, [r4, #0]
 800db02:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 800db06:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800db08:	a907      	add	r1, sp, #28
 800db0a:	4620      	mov	r0, r4
 800db0c:	4798      	blx	r3
 800db0e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 800db12:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800db16:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800db1a:	1a5b      	subs	r3, r3, r1
 800db1c:	440a      	add	r2, r1
 800db1e:	b21b      	sxth	r3, r3
 800db20:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800db24:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800db28:	2b00      	cmp	r3, #0
 800db2a:	f47f aeda 	bne.w	800d8e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800db2e:	fa1f f189 	uxth.w	r1, r9
 800db32:	4650      	mov	r0, sl
 800db34:	f7ff f9e6 	bl	800cf04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800db38:	e6d3      	b.n	800d8e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800db3a:	882e      	ldrh	r6, [r5, #0]
 800db3c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800db40:	42b3      	cmp	r3, r6
 800db42:	f67f ae98 	bls.w	800d876 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800db46:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 800db4a:	ab07      	add	r3, sp, #28
 800db4c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800db50:	6851      	ldr	r1, [r2, #4]
 800db52:	c303      	stmia	r3!, {r0, r1}
 800db54:	a807      	add	r0, sp, #28
 800db56:	f7fb fe6c 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800db5a:	b920      	cbnz	r0, 800db66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 800db5c:	6823      	ldr	r3, [r4, #0]
 800db5e:	a907      	add	r1, sp, #28
 800db60:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800db62:	4620      	mov	r0, r4
 800db64:	4798      	blx	r3
 800db66:	3601      	adds	r6, #1
 800db68:	b2b6      	uxth	r6, r6
 800db6a:	e7e7      	b.n	800db3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 800db6c:	20013288 	.word	0x20013288

0800db70 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800db70:	4b03      	ldr	r3, [pc, #12]	@ (800db80 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800db72:	2200      	movs	r2, #0
 800db74:	801a      	strh	r2, [r3, #0]
 800db76:	805a      	strh	r2, [r3, #2]
 800db78:	809a      	strh	r2, [r3, #4]
 800db7a:	80da      	strh	r2, [r3, #6]
 800db7c:	4770      	bx	lr
 800db7e:	bf00      	nop
 800db80:	200132cc 	.word	0x200132cc

0800db84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800db84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db88:	4606      	mov	r6, r0
 800db8a:	b09d      	sub	sp, #116	@ 0x74
 800db8c:	a803      	add	r0, sp, #12
 800db8e:	4614      	mov	r4, r2
 800db90:	468a      	mov	sl, r1
 800db92:	461d      	mov	r5, r3
 800db94:	f000 fdad 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800db98:	6833      	ldr	r3, [r6, #0]
 800db9a:	4630      	mov	r0, r6
 800db9c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800db9e:	4798      	blx	r3
 800dba0:	6833      	ldr	r3, [r6, #0]
 800dba2:	4607      	mov	r7, r0
 800dba4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dba6:	4630      	mov	r0, r6
 800dba8:	4798      	blx	r3
 800dbaa:	462a      	mov	r2, r5
 800dbac:	9000      	str	r0, [sp, #0]
 800dbae:	4621      	mov	r1, r4
 800dbb0:	463b      	mov	r3, r7
 800dbb2:	a803      	add	r0, sp, #12
 800dbb4:	f000 fdf0 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dbb8:	2500      	movs	r5, #0
 800dbba:	462c      	mov	r4, r5
 800dbbc:	46a9      	mov	r9, r5
 800dbbe:	46a8      	mov	r8, r5
 800dbc0:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800dbc4:	2300      	movs	r3, #0
 800dbc6:	9302      	str	r3, [sp, #8]
 800dbc8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800dbcc:	429c      	cmp	r4, r3
 800dbce:	d002      	beq.n	800dbd6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800dbd0:	455c      	cmp	r4, fp
 800dbd2:	bf18      	it	ne
 800dbd4:	4625      	movne	r5, r4
 800dbd6:	ab02      	add	r3, sp, #8
 800dbd8:	4632      	mov	r2, r6
 800dbda:	4651      	mov	r1, sl
 800dbdc:	a803      	add	r0, sp, #12
 800dbde:	f001 f8cd 	bl	800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dbe2:	4604      	mov	r4, r0
 800dbe4:	b108      	cbz	r0, 800dbea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800dbe6:	280a      	cmp	r0, #10
 800dbe8:	d10a      	bne.n	800dc00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800dbea:	45c1      	cmp	r9, r8
 800dbec:	bf38      	it	cc
 800dbee:	46c1      	movcc	r9, r8
 800dbf0:	f04f 0800 	mov.w	r8, #0
 800dbf4:	2c00      	cmp	r4, #0
 800dbf6:	d1e5      	bne.n	800dbc4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800dbf8:	4648      	mov	r0, r9
 800dbfa:	b01d      	add	sp, #116	@ 0x74
 800dbfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc00:	9a02      	ldr	r2, [sp, #8]
 800dc02:	2a00      	cmp	r2, #0
 800dc04:	d0de      	beq.n	800dbc4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800dc06:	7b57      	ldrb	r7, [r2, #13]
 800dc08:	6833      	ldr	r3, [r6, #0]
 800dc0a:	8894      	ldrh	r4, [r2, #4]
 800dc0c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800dc0e:	007f      	lsls	r7, r7, #1
 800dc10:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800dc14:	7a97      	ldrb	r7, [r2, #10]
 800dc16:	4629      	mov	r1, r5
 800dc18:	4307      	orrs	r7, r0
 800dc1a:	4630      	mov	r0, r6
 800dc1c:	4798      	blx	r3
 800dc1e:	4438      	add	r0, r7
 800dc20:	4480      	add	r8, r0
 800dc22:	fa1f f888 	uxth.w	r8, r8
 800dc26:	e7e5      	b.n	800dbf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800dc28 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800dc28:	b508      	push	{r3, lr}
 800dc2a:	6803      	ldr	r3, [r0, #0]
 800dc2c:	68db      	ldr	r3, [r3, #12]
 800dc2e:	4798      	blx	r3
 800dc30:	b128      	cbz	r0, 800dc3e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800dc32:	7b43      	ldrb	r3, [r0, #13]
 800dc34:	7a80      	ldrb	r0, [r0, #10]
 800dc36:	005b      	lsls	r3, r3, #1
 800dc38:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc3c:	4318      	orrs	r0, r3
 800dc3e:	bd08      	pop	{r3, pc}

0800dc40 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dc40:	b40e      	push	{r1, r2, r3}
 800dc42:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc44:	b09e      	sub	sp, #120	@ 0x78
 800dc46:	ab23      	add	r3, sp, #140	@ 0x8c
 800dc48:	4605      	mov	r5, r0
 800dc4a:	f853 4b04 	ldr.w	r4, [r3], #4
 800dc4e:	9303      	str	r3, [sp, #12]
 800dc50:	a805      	add	r0, sp, #20
 800dc52:	f000 fd4e 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800dc56:	682b      	ldr	r3, [r5, #0]
 800dc58:	4628      	mov	r0, r5
 800dc5a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dc5c:	4798      	blx	r3
 800dc5e:	682b      	ldr	r3, [r5, #0]
 800dc60:	4606      	mov	r6, r0
 800dc62:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dc64:	4628      	mov	r0, r5
 800dc66:	4798      	blx	r3
 800dc68:	4633      	mov	r3, r6
 800dc6a:	ae1e      	add	r6, sp, #120	@ 0x78
 800dc6c:	4621      	mov	r1, r4
 800dc6e:	9000      	str	r0, [sp, #0]
 800dc70:	9a03      	ldr	r2, [sp, #12]
 800dc72:	2400      	movs	r4, #0
 800dc74:	a805      	add	r0, sp, #20
 800dc76:	f000 fd8f 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dc7a:	f846 4d68 	str.w	r4, [r6, #-104]!
 800dc7e:	462a      	mov	r2, r5
 800dc80:	4633      	mov	r3, r6
 800dc82:	4621      	mov	r1, r4
 800dc84:	a805      	add	r0, sp, #20
 800dc86:	f001 f879 	bl	800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dc8a:	b1f0      	cbz	r0, 800dcca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800dc8c:	280a      	cmp	r0, #10
 800dc8e:	d018      	beq.n	800dcc2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dc90:	9f04      	ldr	r7, [sp, #16]
 800dc92:	b1b7      	cbz	r7, 800dcc2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800dc94:	7b78      	ldrb	r0, [r7, #13]
 800dc96:	7a3b      	ldrb	r3, [r7, #8]
 800dc98:	88ea      	ldrh	r2, [r5, #6]
 800dc9a:	00c1      	lsls	r1, r0, #3
 800dc9c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800dca0:	4319      	orrs	r1, r3
 800dca2:	0643      	lsls	r3, r0, #25
 800dca4:	bf44      	itt	mi
 800dca6:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800dcaa:	b219      	sxthmi	r1, r3
 800dcac:	0100      	lsls	r0, r0, #4
 800dcae:	79fb      	ldrb	r3, [r7, #7]
 800dcb0:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800dcb4:	4303      	orrs	r3, r0
 800dcb6:	4413      	add	r3, r2
 800dcb8:	1a5b      	subs	r3, r3, r1
 800dcba:	b21b      	sxth	r3, r3
 800dcbc:	429c      	cmp	r4, r3
 800dcbe:	bfb8      	it	lt
 800dcc0:	461c      	movlt	r4, r3
 800dcc2:	4633      	mov	r3, r6
 800dcc4:	462a      	mov	r2, r5
 800dcc6:	2100      	movs	r1, #0
 800dcc8:	e7dc      	b.n	800dc84 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800dcca:	b2a0      	uxth	r0, r4
 800dccc:	b01e      	add	sp, #120	@ 0x78
 800dcce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dcd2:	b003      	add	sp, #12
 800dcd4:	4770      	bx	lr

0800dcd6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800dcd6:	7a43      	ldrb	r3, [r0, #9]
 800dcd8:	8880      	ldrh	r0, [r0, #4]
 800dcda:	4418      	add	r0, r3
 800dcdc:	b280      	uxth	r0, r0
 800dcde:	4770      	bx	lr

0800dce0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800dce0:	6803      	ldr	r3, [r0, #0]
 800dce2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dce4:	4718      	bx	r3

0800dce6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800dce6:	b40e      	push	{r1, r2, r3}
 800dce8:	b570      	push	{r4, r5, r6, lr}
 800dcea:	b09d      	sub	sp, #116	@ 0x74
 800dcec:	ab21      	add	r3, sp, #132	@ 0x84
 800dcee:	4604      	mov	r4, r0
 800dcf0:	f853 5b04 	ldr.w	r5, [r3], #4
 800dcf4:	9302      	str	r3, [sp, #8]
 800dcf6:	a803      	add	r0, sp, #12
 800dcf8:	f000 fcfb 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800dcfc:	6823      	ldr	r3, [r4, #0]
 800dcfe:	4620      	mov	r0, r4
 800dd00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dd02:	4798      	blx	r3
 800dd04:	6823      	ldr	r3, [r4, #0]
 800dd06:	4606      	mov	r6, r0
 800dd08:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dd0a:	4620      	mov	r0, r4
 800dd0c:	4798      	blx	r3
 800dd0e:	4633      	mov	r3, r6
 800dd10:	9000      	str	r0, [sp, #0]
 800dd12:	9a02      	ldr	r2, [sp, #8]
 800dd14:	4629      	mov	r1, r5
 800dd16:	a803      	add	r0, sp, #12
 800dd18:	f000 fd3e 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dd1c:	a803      	add	r0, sp, #12
 800dd1e:	f001 f8fb 	bl	800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dd22:	2401      	movs	r4, #1
 800dd24:	b2a3      	uxth	r3, r4
 800dd26:	b140      	cbz	r0, 800dd3a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800dd28:	280a      	cmp	r0, #10
 800dd2a:	bf08      	it	eq
 800dd2c:	3301      	addeq	r3, #1
 800dd2e:	a803      	add	r0, sp, #12
 800dd30:	bf08      	it	eq
 800dd32:	b21c      	sxtheq	r4, r3
 800dd34:	f001 f8f0 	bl	800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dd38:	e7f4      	b.n	800dd24 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800dd3a:	4618      	mov	r0, r3
 800dd3c:	b01d      	add	sp, #116	@ 0x74
 800dd3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd42:	b003      	add	sp, #12
 800dd44:	4770      	bx	lr

0800dd46 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800dd46:	b40e      	push	{r1, r2, r3}
 800dd48:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd4a:	b09e      	sub	sp, #120	@ 0x78
 800dd4c:	ab23      	add	r3, sp, #140	@ 0x8c
 800dd4e:	4604      	mov	r4, r0
 800dd50:	f853 5b04 	ldr.w	r5, [r3], #4
 800dd54:	9303      	str	r3, [sp, #12]
 800dd56:	a805      	add	r0, sp, #20
 800dd58:	f000 fccb 	bl	800e6f2 <_ZN8touchgfx12TextProviderC1Ev>
 800dd5c:	6823      	ldr	r3, [r4, #0]
 800dd5e:	4620      	mov	r0, r4
 800dd60:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800dd62:	4798      	blx	r3
 800dd64:	6823      	ldr	r3, [r4, #0]
 800dd66:	4606      	mov	r6, r0
 800dd68:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dd6a:	4620      	mov	r0, r4
 800dd6c:	4798      	blx	r3
 800dd6e:	4633      	mov	r3, r6
 800dd70:	4629      	mov	r1, r5
 800dd72:	9000      	str	r0, [sp, #0]
 800dd74:	9a03      	ldr	r2, [sp, #12]
 800dd76:	a805      	add	r0, sp, #20
 800dd78:	ad1e      	add	r5, sp, #120	@ 0x78
 800dd7a:	f000 fd0d 	bl	800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dd7e:	2100      	movs	r1, #0
 800dd80:	f845 1d68 	str.w	r1, [r5, #-104]!
 800dd84:	4622      	mov	r2, r4
 800dd86:	462b      	mov	r3, r5
 800dd88:	a805      	add	r0, sp, #20
 800dd8a:	f000 fff7 	bl	800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd8e:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800dd92:	b1d8      	cbz	r0, 800ddcc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800dd94:	280a      	cmp	r0, #10
 800dd96:	d012      	beq.n	800ddbe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dd98:	9804      	ldr	r0, [sp, #16]
 800dd9a:	b180      	cbz	r0, 800ddbe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dd9c:	7b47      	ldrb	r7, [r0, #13]
 800dd9e:	88e2      	ldrh	r2, [r4, #6]
 800dda0:	00fb      	lsls	r3, r7, #3
 800dda2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800dda6:	7a03      	ldrb	r3, [r0, #8]
 800dda8:	430b      	orrs	r3, r1
 800ddaa:	0679      	lsls	r1, r7, #25
 800ddac:	bf44      	itt	mi
 800ddae:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ddb2:	b21b      	sxthmi	r3, r3
 800ddb4:	1ad3      	subs	r3, r2, r3
 800ddb6:	b21b      	sxth	r3, r3
 800ddb8:	429e      	cmp	r6, r3
 800ddba:	bfa8      	it	ge
 800ddbc:	461e      	movge	r6, r3
 800ddbe:	462b      	mov	r3, r5
 800ddc0:	4622      	mov	r2, r4
 800ddc2:	2100      	movs	r1, #0
 800ddc4:	a805      	add	r0, sp, #20
 800ddc6:	f000 ffd9 	bl	800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ddca:	e7e2      	b.n	800dd92 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800ddcc:	4630      	mov	r0, r6
 800ddce:	b01e      	add	sp, #120	@ 0x78
 800ddd0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ddd4:	b003      	add	sp, #12
 800ddd6:	4770      	bx	lr

0800ddd8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ddd8:	b513      	push	{r0, r1, r4, lr}
 800ddda:	6803      	ldr	r3, [r0, #0]
 800dddc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dde0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dde4:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dde8:	2400      	movs	r4, #0
 800ddea:	9400      	str	r4, [sp, #0]
 800ddec:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ddf0:	691b      	ldr	r3, [r3, #16]
 800ddf2:	4669      	mov	r1, sp
 800ddf4:	4798      	blx	r3
 800ddf6:	b002      	add	sp, #8
 800ddf8:	bd10      	pop	{r4, pc}

0800ddfa <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ddfa:	b538      	push	{r3, r4, r5, lr}
 800ddfc:	680b      	ldr	r3, [r1, #0]
 800ddfe:	460c      	mov	r4, r1
 800de00:	68db      	ldr	r3, [r3, #12]
 800de02:	4605      	mov	r5, r0
 800de04:	4798      	blx	r3
 800de06:	6823      	ldr	r3, [r4, #0]
 800de08:	4620      	mov	r0, r4
 800de0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de0c:	4629      	mov	r1, r5
 800de0e:	4798      	blx	r3
 800de10:	4628      	mov	r0, r5
 800de12:	bd38      	pop	{r3, r4, r5, pc}

0800de14 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800de14:	b410      	push	{r4}
 800de16:	880a      	ldrh	r2, [r1, #0]
 800de18:	8884      	ldrh	r4, [r0, #4]
 800de1a:	4422      	add	r2, r4
 800de1c:	800a      	strh	r2, [r1, #0]
 800de1e:	88c4      	ldrh	r4, [r0, #6]
 800de20:	884a      	ldrh	r2, [r1, #2]
 800de22:	4422      	add	r2, r4
 800de24:	804a      	strh	r2, [r1, #2]
 800de26:	6940      	ldr	r0, [r0, #20]
 800de28:	b120      	cbz	r0, 800de34 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800de2a:	6803      	ldr	r3, [r0, #0]
 800de2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de32:	4718      	bx	r3
 800de34:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de38:	4770      	bx	lr

0800de3a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800de3a:	b570      	push	{r4, r5, r6, lr}
 800de3c:	8882      	ldrh	r2, [r0, #4]
 800de3e:	880b      	ldrh	r3, [r1, #0]
 800de40:	4413      	add	r3, r2
 800de42:	800b      	strh	r3, [r1, #0]
 800de44:	88c2      	ldrh	r2, [r0, #6]
 800de46:	884b      	ldrh	r3, [r1, #2]
 800de48:	460c      	mov	r4, r1
 800de4a:	4413      	add	r3, r2
 800de4c:	804b      	strh	r3, [r1, #2]
 800de4e:	4605      	mov	r5, r0
 800de50:	1d01      	adds	r1, r0, #4
 800de52:	4620      	mov	r0, r4
 800de54:	f7fb fcaa 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800de58:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800de5c:	2b00      	cmp	r3, #0
 800de5e:	dd0b      	ble.n	800de78 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800de60:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800de64:	2b00      	cmp	r3, #0
 800de66:	dd07      	ble.n	800de78 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800de68:	6968      	ldr	r0, [r5, #20]
 800de6a:	b128      	cbz	r0, 800de78 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800de6c:	6803      	ldr	r3, [r0, #0]
 800de6e:	4621      	mov	r1, r4
 800de70:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800de72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de76:	4718      	bx	r3
 800de78:	bd70      	pop	{r4, r5, r6, pc}
	...

0800de7c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800de7c:	b570      	push	{r4, r5, r6, lr}
 800de7e:	8882      	ldrh	r2, [r0, #4]
 800de80:	880b      	ldrh	r3, [r1, #0]
 800de82:	4413      	add	r3, r2
 800de84:	800b      	strh	r3, [r1, #0]
 800de86:	88c2      	ldrh	r2, [r0, #6]
 800de88:	884b      	ldrh	r3, [r1, #2]
 800de8a:	460c      	mov	r4, r1
 800de8c:	4413      	add	r3, r2
 800de8e:	804b      	strh	r3, [r1, #2]
 800de90:	4605      	mov	r5, r0
 800de92:	1d01      	adds	r1, r0, #4
 800de94:	4620      	mov	r0, r4
 800de96:	f7fb fc89 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800de9a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800de9e:	2b00      	cmp	r3, #0
 800dea0:	dd19      	ble.n	800ded6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800dea2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800dea6:	2b00      	cmp	r3, #0
 800dea8:	dd15      	ble.n	800ded6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800deaa:	6968      	ldr	r0, [r5, #20]
 800deac:	b128      	cbz	r0, 800deba <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800deae:	6803      	ldr	r3, [r0, #0]
 800deb0:	4621      	mov	r1, r4
 800deb2:	691b      	ldr	r3, [r3, #16]
 800deb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800deb8:	4718      	bx	r3
 800deba:	4b07      	ldr	r3, [pc, #28]	@ (800ded8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800debc:	681b      	ldr	r3, [r3, #0]
 800debe:	3304      	adds	r3, #4
 800dec0:	429d      	cmp	r5, r3
 800dec2:	d108      	bne.n	800ded6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800dec4:	f7fe fec8 	bl	800cc58 <_ZN8touchgfx11Application11getInstanceEv>
 800dec8:	6803      	ldr	r3, [r0, #0]
 800deca:	6821      	ldr	r1, [r4, #0]
 800decc:	6862      	ldr	r2, [r4, #4]
 800dece:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ded0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ded4:	4718      	bx	r3
 800ded6:	bd70      	pop	{r4, r5, r6, pc}
 800ded8:	200132c4 	.word	0x200132c4

0800dedc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800dedc:	b570      	push	{r4, r5, r6, lr}
 800dede:	4604      	mov	r4, r0
 800dee0:	4616      	mov	r6, r2
 800dee2:	460d      	mov	r5, r1
 800dee4:	b901      	cbnz	r1, 800dee8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800dee6:	b192      	cbz	r2, 800df0e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800dee8:	6823      	ldr	r3, [r4, #0]
 800deea:	4620      	mov	r0, r4
 800deec:	699b      	ldr	r3, [r3, #24]
 800deee:	4798      	blx	r3
 800def0:	88e2      	ldrh	r2, [r4, #6]
 800def2:	88a1      	ldrh	r1, [r4, #4]
 800def4:	4432      	add	r2, r6
 800def6:	4429      	add	r1, r5
 800def8:	4620      	mov	r0, r4
 800defa:	b212      	sxth	r2, r2
 800defc:	b209      	sxth	r1, r1
 800defe:	f7f4 fda4 	bl	8002a4a <_ZN8touchgfx8Drawable5setXYEss>
 800df02:	6823      	ldr	r3, [r4, #0]
 800df04:	4620      	mov	r0, r4
 800df06:	699b      	ldr	r3, [r3, #24]
 800df08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df0c:	4718      	bx	r3
 800df0e:	bd70      	pop	{r4, r5, r6, pc}

0800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800df10:	b510      	push	{r4, lr}
 800df12:	4604      	mov	r4, r0
 800df14:	4608      	mov	r0, r1
 800df16:	2300      	movs	r3, #0
 800df18:	8023      	strh	r3, [r4, #0]
 800df1a:	8063      	strh	r3, [r4, #2]
 800df1c:	6803      	ldr	r3, [r0, #0]
 800df1e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800df22:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800df26:	80a1      	strh	r1, [r4, #4]
 800df28:	80e2      	strh	r2, [r4, #6]
 800df2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800df2c:	4621      	mov	r1, r4
 800df2e:	4798      	blx	r3
 800df30:	4620      	mov	r0, r4
 800df32:	bd10      	pop	{r4, pc}

0800df34 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800df34:	b530      	push	{r4, r5, lr}
 800df36:	8083      	strh	r3, [r0, #4]
 800df38:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800df3c:	80c3      	strh	r3, [r0, #6]
 800df3e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800df42:	7203      	strb	r3, [r0, #8]
 800df44:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800df48:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800df4c:	7243      	strb	r3, [r0, #9]
 800df4e:	7a83      	ldrb	r3, [r0, #10]
 800df50:	6141      	str	r1, [r0, #20]
 800df52:	f365 0306 	bfi	r3, r5, #0, #7
 800df56:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800df5a:	8302      	strh	r2, [r0, #24]
 800df5c:	f365 13c7 	bfi	r3, r5, #7, #1
 800df60:	7283      	strb	r3, [r0, #10]
 800df62:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800df66:	72c3      	strb	r3, [r0, #11]
 800df68:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 800df6c:	7303      	strb	r3, [r0, #12]
 800df6e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 800df72:	81c3      	strh	r3, [r0, #14]
 800df74:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800df78:	8203      	strh	r3, [r0, #16]
 800df7a:	4b01      	ldr	r3, [pc, #4]	@ (800df80 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800df7c:	6003      	str	r3, [r0, #0]
 800df7e:	bd30      	pop	{r4, r5, pc}
 800df80:	08020630 	.word	0x08020630

0800df84 <_ZNK8touchgfx9ConstFont4findEt>:
 800df84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df86:	6944      	ldr	r4, [r0, #20]
 800df88:	b3bc      	cbz	r4, 800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df8a:	88a3      	ldrh	r3, [r4, #4]
 800df8c:	8b02      	ldrh	r2, [r0, #24]
 800df8e:	1acb      	subs	r3, r1, r3
 800df90:	f102 32ff 	add.w	r2, r2, #4294967295
 800df94:	d431      	bmi.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800df96:	4293      	cmp	r3, r2
 800df98:	dd0c      	ble.n	800dfb4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800df9a:	230e      	movs	r3, #14
 800df9c:	fb03 4302 	mla	r3, r3, r2, r4
 800dfa0:	889b      	ldrh	r3, [r3, #4]
 800dfa2:	1a5b      	subs	r3, r3, r1
 800dfa4:	1ad3      	subs	r3, r2, r3
 800dfa6:	429a      	cmp	r2, r3
 800dfa8:	db27      	blt.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dfaa:	2b00      	cmp	r3, #0
 800dfac:	bfbc      	itt	lt
 800dfae:	2302      	movlt	r3, #2
 800dfb0:	fb92 f3f3 	sdivlt	r3, r2, r3
 800dfb4:	2500      	movs	r5, #0
 800dfb6:	260e      	movs	r6, #14
 800dfb8:	4295      	cmp	r5, r2
 800dfba:	dc1e      	bgt.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dfbc:	fb06 4003 	mla	r0, r6, r3, r4
 800dfc0:	8887      	ldrh	r7, [r0, #4]
 800dfc2:	42b9      	cmp	r1, r7
 800dfc4:	d01a      	beq.n	800dffc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800dfc6:	d20d      	bcs.n	800dfe4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800dfc8:	1e5a      	subs	r2, r3, #1
 800dfca:	4295      	cmp	r5, r2
 800dfcc:	dc15      	bgt.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dfce:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800dfd2:	1a5b      	subs	r3, r3, r1
 800dfd4:	1ad3      	subs	r3, r2, r3
 800dfd6:	429a      	cmp	r2, r3
 800dfd8:	db0f      	blt.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dfda:	429d      	cmp	r5, r3
 800dfdc:	ddec      	ble.n	800dfb8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dfde:	1953      	adds	r3, r2, r5
 800dfe0:	105b      	asrs	r3, r3, #1
 800dfe2:	e7e9      	b.n	800dfb8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dfe4:	1c5d      	adds	r5, r3, #1
 800dfe6:	42aa      	cmp	r2, r5
 800dfe8:	db07      	blt.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dfea:	8a43      	ldrh	r3, [r0, #18]
 800dfec:	1acb      	subs	r3, r1, r3
 800dfee:	442b      	add	r3, r5
 800dff0:	429d      	cmp	r5, r3
 800dff2:	dc02      	bgt.n	800dffa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dff4:	429a      	cmp	r2, r3
 800dff6:	dadf      	bge.n	800dfb8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dff8:	e7f1      	b.n	800dfde <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800dffa:	2000      	movs	r0, #0
 800dffc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dffe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800dffe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e000:	4604      	mov	r4, r0
 800e002:	4617      	mov	r7, r2
 800e004:	461e      	mov	r6, r3
 800e006:	b911      	cbnz	r1, 800e00e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e008:	2500      	movs	r5, #0
 800e00a:	4628      	mov	r0, r5
 800e00c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e00e:	290a      	cmp	r1, #10
 800e010:	d0fa      	beq.n	800e008 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e012:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800e016:	4291      	cmp	r1, r2
 800e018:	d0f6      	beq.n	800e008 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e01a:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e01e:	4291      	cmp	r1, r2
 800e020:	d0f2      	beq.n	800e008 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e022:	f7ff ffaf 	bl	800df84 <_ZNK8touchgfx9ConstFont4findEt>
 800e026:	4605      	mov	r5, r0
 800e028:	b950      	cbnz	r0, 800e040 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e02a:	6823      	ldr	r3, [r4, #0]
 800e02c:	4620      	mov	r0, r4
 800e02e:	691b      	ldr	r3, [r3, #16]
 800e030:	4798      	blx	r3
 800e032:	4601      	mov	r1, r0
 800e034:	4620      	mov	r0, r4
 800e036:	f7ff ffa5 	bl	800df84 <_ZNK8touchgfx9ConstFont4findEt>
 800e03a:	4605      	mov	r5, r0
 800e03c:	2800      	cmp	r0, #0
 800e03e:	d0e3      	beq.n	800e008 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e040:	6823      	ldr	r3, [r4, #0]
 800e042:	4629      	mov	r1, r5
 800e044:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e046:	4620      	mov	r0, r4
 800e048:	4798      	blx	r3
 800e04a:	6038      	str	r0, [r7, #0]
 800e04c:	6823      	ldr	r3, [r4, #0]
 800e04e:	4620      	mov	r0, r4
 800e050:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e052:	4798      	blx	r3
 800e054:	7030      	strb	r0, [r6, #0]
 800e056:	e7d8      	b.n	800e00a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e058 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800e058:	2000      	movs	r0, #0
 800e05a:	4770      	bx	lr

0800e05c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800e05c:	2001      	movs	r0, #1
 800e05e:	4770      	bx	lr

0800e060 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800e060:	2002      	movs	r0, #2
 800e062:	4770      	bx	lr

0800e064 <_ZN8touchgfx6ScreenD1Ev>:
 800e064:	4770      	bx	lr

0800e066 <_ZN8touchgfx12GestureEventD1Ev>:
 800e066:	4770      	bx	lr

0800e068 <_ZN8touchgfx9DragEventD1Ev>:
 800e068:	4770      	bx	lr

0800e06a <_ZN8touchgfx10ClickEventD1Ev>:
 800e06a:	4770      	bx	lr

0800e06c <_ZN8touchgfx10ClickEventD0Ev>:
 800e06c:	b510      	push	{r4, lr}
 800e06e:	210c      	movs	r1, #12
 800e070:	4604      	mov	r4, r0
 800e072:	f00f fb09 	bl	801d688 <_ZdlPvj>
 800e076:	4620      	mov	r0, r4
 800e078:	bd10      	pop	{r4, pc}

0800e07a <_ZN8touchgfx9DragEventD0Ev>:
 800e07a:	b510      	push	{r4, lr}
 800e07c:	2110      	movs	r1, #16
 800e07e:	4604      	mov	r4, r0
 800e080:	f00f fb02 	bl	801d688 <_ZdlPvj>
 800e084:	4620      	mov	r0, r4
 800e086:	bd10      	pop	{r4, pc}

0800e088 <_ZN8touchgfx12GestureEventD0Ev>:
 800e088:	b510      	push	{r4, lr}
 800e08a:	210c      	movs	r1, #12
 800e08c:	4604      	mov	r4, r0
 800e08e:	f00f fafb 	bl	801d688 <_ZdlPvj>
 800e092:	4620      	mov	r0, r4
 800e094:	bd10      	pop	{r4, pc}

0800e096 <_ZN8touchgfx6ScreenD0Ev>:
 800e096:	b510      	push	{r4, lr}
 800e098:	213c      	movs	r1, #60	@ 0x3c
 800e09a:	4604      	mov	r4, r0
 800e09c:	f00f faf4 	bl	801d688 <_ZdlPvj>
 800e0a0:	4620      	mov	r0, r4
 800e0a2:	bd10      	pop	{r4, pc}

0800e0a4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e0a4:	b530      	push	{r4, r5, lr}
 800e0a6:	460d      	mov	r5, r1
 800e0a8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800e0aa:	b087      	sub	sp, #28
 800e0ac:	4604      	mov	r4, r0
 800e0ae:	b301      	cbz	r1, 800e0f2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e0b0:	a801      	add	r0, sp, #4
 800e0b2:	f7ff ff2d 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e0b6:	892a      	ldrh	r2, [r5, #8]
 800e0b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e0bc:	7928      	ldrb	r0, [r5, #4]
 800e0be:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e0c2:	f88d 0010 	strb.w	r0, [sp, #16]
 800e0c6:	1ad2      	subs	r2, r2, r3
 800e0c8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800e0ca:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800e0cc:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e0d0:	441a      	add	r2, r3
 800e0d2:	896b      	ldrh	r3, [r5, #10]
 800e0d4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e0d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e0dc:	1b5b      	subs	r3, r3, r5
 800e0de:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 800e0e0:	442b      	add	r3, r5
 800e0e2:	4d05      	ldr	r5, [pc, #20]	@ (800e0f8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e0e4:	9503      	str	r5, [sp, #12]
 800e0e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e0ea:	6803      	ldr	r3, [r0, #0]
 800e0ec:	a903      	add	r1, sp, #12
 800e0ee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e0f0:	4798      	blx	r3
 800e0f2:	b007      	add	sp, #28
 800e0f4:	bd30      	pop	{r4, r5, pc}
 800e0f6:	bf00      	nop
 800e0f8:	080206b8 	.word	0x080206b8

0800e0fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e0fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e100:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800e102:	b08a      	sub	sp, #40	@ 0x28
 800e104:	4604      	mov	r4, r0
 800e106:	460d      	mov	r5, r1
 800e108:	b113      	cbz	r3, 800e110 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800e10a:	790b      	ldrb	r3, [r1, #4]
 800e10c:	2b00      	cmp	r3, #0
 800e10e:	d044      	beq.n	800e19a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e110:	f104 0804 	add.w	r8, r4, #4
 800e114:	4641      	mov	r1, r8
 800e116:	a803      	add	r0, sp, #12
 800e118:	f7ff fefa 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e11c:	792b      	ldrb	r3, [r5, #4]
 800e11e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800e122:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800e126:	b983      	cbnz	r3, 800e14a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800e128:	892a      	ldrh	r2, [r5, #8]
 800e12a:	88e9      	ldrh	r1, [r5, #6]
 800e12c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 800e130:	1b92      	subs	r2, r2, r6
 800e132:	1bc9      	subs	r1, r1, r7
 800e134:	9301      	str	r3, [sp, #4]
 800e136:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 800e13a:	9300      	str	r3, [sp, #0]
 800e13c:	b212      	sxth	r2, r2
 800e13e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 800e142:	b209      	sxth	r1, r1
 800e144:	4640      	mov	r0, r8
 800e146:	f7fb fa4d 	bl	80095e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800e14a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800e14c:	b329      	cbz	r1, 800e19a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e14e:	a805      	add	r0, sp, #20
 800e150:	f7ff fede 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e154:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e158:	792b      	ldrb	r3, [r5, #4]
 800e15a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800e15c:	f88d 3020 	strb.w	r3, [sp, #32]
 800e160:	1abf      	subs	r7, r7, r2
 800e162:	88ea      	ldrh	r2, [r5, #6]
 800e164:	4417      	add	r7, r2
 800e166:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 800e168:	4417      	add	r7, r2
 800e16a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e16e:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800e172:	1ab6      	subs	r6, r6, r2
 800e174:	892a      	ldrh	r2, [r5, #8]
 800e176:	4416      	add	r6, r2
 800e178:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800e17a:	4416      	add	r6, r2
 800e17c:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 800e180:	4a07      	ldr	r2, [pc, #28]	@ (800e1a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800e182:	9207      	str	r2, [sp, #28]
 800e184:	2600      	movs	r6, #0
 800e186:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 800e18a:	6803      	ldr	r3, [r0, #0]
 800e18c:	a907      	add	r1, sp, #28
 800e18e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e190:	4798      	blx	r3
 800e192:	792b      	ldrb	r3, [r5, #4]
 800e194:	b10b      	cbz	r3, 800e19a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e196:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 800e19a:	b00a      	add	sp, #40	@ 0x28
 800e19c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1a0:	08020690 	.word	0x08020690

0800e1a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e1a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1a8:	460c      	mov	r4, r1
 800e1aa:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 800e1ac:	b088      	sub	sp, #32
 800e1ae:	4605      	mov	r5, r0
 800e1b0:	2900      	cmp	r1, #0
 800e1b2:	d06d      	beq.n	800e290 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800e1b4:	4668      	mov	r0, sp
 800e1b6:	f7ff feab 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1ba:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 800e1bc:	88e3      	ldrh	r3, [r4, #6]
 800e1be:	f9bd 8000 	ldrsh.w	r8, [sp]
 800e1c2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800e1c6:	440b      	add	r3, r1
 800e1c8:	b21b      	sxth	r3, r3
 800e1ca:	4543      	cmp	r3, r8
 800e1cc:	db31      	blt.n	800e232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e1ce:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800e1d2:	44c4      	add	ip, r8
 800e1d4:	fa0f fc8c 	sxth.w	ip, ip
 800e1d8:	4563      	cmp	r3, ip
 800e1da:	da2a      	bge.n	800e232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e1dc:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 800e1de:	8926      	ldrh	r6, [r4, #8]
 800e1e0:	4416      	add	r6, r2
 800e1e2:	b236      	sxth	r6, r6
 800e1e4:	42be      	cmp	r6, r7
 800e1e6:	db24      	blt.n	800e232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e1e8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e1ec:	4438      	add	r0, r7
 800e1ee:	b200      	sxth	r0, r0
 800e1f0:	4286      	cmp	r6, r0
 800e1f2:	da1e      	bge.n	800e232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e1f4:	8963      	ldrh	r3, [r4, #10]
 800e1f6:	4419      	add	r1, r3
 800e1f8:	b209      	sxth	r1, r1
 800e1fa:	4541      	cmp	r1, r8
 800e1fc:	db08      	blt.n	800e210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e1fe:	4561      	cmp	r1, ip
 800e200:	da06      	bge.n	800e210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e202:	89a3      	ldrh	r3, [r4, #12]
 800e204:	441a      	add	r2, r3
 800e206:	b212      	sxth	r2, r2
 800e208:	42ba      	cmp	r2, r7
 800e20a:	db01      	blt.n	800e210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e20c:	4282      	cmp	r2, r0
 800e20e:	db10      	blt.n	800e232 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e210:	4b21      	ldr	r3, [pc, #132]	@ (800e298 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800e212:	9304      	str	r3, [sp, #16]
 800e214:	2302      	movs	r3, #2
 800e216:	f88d 3014 	strb.w	r3, [sp, #20]
 800e21a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800e21c:	2300      	movs	r3, #0
 800e21e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e222:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e226:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e22a:	6803      	ldr	r3, [r0, #0]
 800e22c:	a904      	add	r1, sp, #16
 800e22e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e230:	4798      	blx	r3
 800e232:	1d29      	adds	r1, r5, #4
 800e234:	a802      	add	r0, sp, #8
 800e236:	f7ff fe6b 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e23a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e23e:	88e0      	ldrh	r0, [r4, #6]
 800e240:	7921      	ldrb	r1, [r4, #4]
 800e242:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 800e246:	8922      	ldrh	r2, [r4, #8]
 800e248:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 800e24a:	f88d 1014 	strb.w	r1, [sp, #20]
 800e24e:	eba3 0808 	sub.w	r8, r3, r8
 800e252:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e256:	1bdf      	subs	r7, r3, r7
 800e258:	b2bb      	uxth	r3, r7
 800e25a:	fa1f f888 	uxth.w	r8, r8
 800e25e:	8967      	ldrh	r7, [r4, #10]
 800e260:	89a4      	ldrh	r4, [r4, #12]
 800e262:	4440      	add	r0, r8
 800e264:	4460      	add	r0, ip
 800e266:	441a      	add	r2, r3
 800e268:	44b8      	add	r8, r7
 800e26a:	4423      	add	r3, r4
 800e26c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e270:	4433      	add	r3, r6
 800e272:	4432      	add	r2, r6
 800e274:	44e0      	add	r8, ip
 800e276:	4c09      	ldr	r4, [pc, #36]	@ (800e29c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800e278:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 800e27a:	9404      	str	r4, [sp, #16]
 800e27c:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e280:	f8ad 801a 	strh.w	r8, [sp, #26]
 800e284:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e288:	6803      	ldr	r3, [r0, #0]
 800e28a:	a904      	add	r1, sp, #16
 800e28c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e28e:	4798      	blx	r3
 800e290:	b008      	add	sp, #32
 800e292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e296:	bf00      	nop
 800e298:	08020690 	.word	0x08020690
 800e29c:	080206a4 	.word	0x080206a4

0800e2a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e2a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2a2:	4604      	mov	r4, r0
 800e2a4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e2a8:	3201      	adds	r2, #1
 800e2aa:	d112      	bne.n	800e2d2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e2ac:	6803      	ldr	r3, [r0, #0]
 800e2ae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e2b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e2b6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e2ba:	2500      	movs	r5, #0
 800e2bc:	9500      	str	r5, [sp, #0]
 800e2be:	466d      	mov	r5, sp
 800e2c0:	4629      	mov	r1, r5
 800e2c2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e2c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e2c8:	4798      	blx	r3
 800e2ca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e2ce:	e884 0003 	stmia.w	r4, {r0, r1}
 800e2d2:	4620      	mov	r0, r4
 800e2d4:	b003      	add	sp, #12
 800e2d6:	bd30      	pop	{r4, r5, pc}

0800e2d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e2d8:	b513      	push	{r0, r1, r4, lr}
 800e2da:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e2de:	3301      	adds	r3, #1
 800e2e0:	4604      	mov	r4, r0
 800e2e2:	d109      	bne.n	800e2f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e2e4:	4601      	mov	r1, r0
 800e2e6:	4668      	mov	r0, sp
 800e2e8:	f7ff fe12 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2ec:	f8bd 3000 	ldrh.w	r3, [sp]
 800e2f0:	8423      	strh	r3, [r4, #32]
 800e2f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e2f6:	8463      	strh	r3, [r4, #34]	@ 0x22
 800e2f8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e2fc:	b002      	add	sp, #8
 800e2fe:	bd10      	pop	{r4, pc}

0800e300 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e300:	b513      	push	{r0, r1, r4, lr}
 800e302:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 800e306:	3301      	adds	r3, #1
 800e308:	4604      	mov	r4, r0
 800e30a:	d109      	bne.n	800e320 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e30c:	4601      	mov	r1, r0
 800e30e:	4668      	mov	r0, sp
 800e310:	f7ff fdfe 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e314:	f8bd 3000 	ldrh.w	r3, [sp]
 800e318:	8423      	strh	r3, [r4, #32]
 800e31a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e31e:	8463      	strh	r3, [r4, #34]	@ 0x22
 800e320:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 800e324:	b002      	add	sp, #8
 800e326:	bd10      	pop	{r4, pc}

0800e328 <_ZN8touchgfx6ScreenC1Ev>:
 800e328:	b570      	push	{r4, r5, r6, lr}
 800e32a:	4605      	mov	r5, r0
 800e32c:	4b16      	ldr	r3, [pc, #88]	@ (800e388 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e32e:	f845 3b04 	str.w	r3, [r5], #4
 800e332:	2300      	movs	r3, #0
 800e334:	8103      	strh	r3, [r0, #8]
 800e336:	8143      	strh	r3, [r0, #10]
 800e338:	8183      	strh	r3, [r0, #12]
 800e33a:	81c3      	strh	r3, [r0, #14]
 800e33c:	8203      	strh	r3, [r0, #16]
 800e33e:	8243      	strh	r3, [r0, #18]
 800e340:	8283      	strh	r3, [r0, #20]
 800e342:	82c3      	strh	r3, [r0, #22]
 800e344:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e348:	6203      	str	r3, [r0, #32]
 800e34a:	8483      	strh	r3, [r0, #36]	@ 0x24
 800e34c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800e34e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 800e352:	4a0e      	ldr	r2, [pc, #56]	@ (800e38c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e354:	6343      	str	r3, [r0, #52]	@ 0x34
 800e356:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 800e35a:	4b0d      	ldr	r3, [pc, #52]	@ (800e390 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e35c:	6042      	str	r2, [r0, #4]
 800e35e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e362:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800e364:	4a0b      	ldr	r2, [pc, #44]	@ (800e394 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e366:	4604      	mov	r4, r0
 800e368:	2101      	movs	r1, #1
 800e36a:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 800e36e:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 800e372:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e376:	4628      	mov	r0, r5
 800e378:	4798      	blx	r3
 800e37a:	6863      	ldr	r3, [r4, #4]
 800e37c:	4628      	mov	r0, r5
 800e37e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e380:	4631      	mov	r1, r6
 800e382:	4798      	blx	r3
 800e384:	4620      	mov	r0, r4
 800e386:	bd70      	pop	{r4, r5, r6, pc}
 800e388:	080206cc 	.word	0x080206cc
 800e38c:	080202e8 	.word	0x080202e8
 800e390:	2001327e 	.word	0x2001327e
 800e394:	2001327c 	.word	0x2001327c

0800e398 <_ZN8touchgfx6Screen4drawEv>:
 800e398:	b507      	push	{r0, r1, r2, lr}
 800e39a:	4b09      	ldr	r3, [pc, #36]	@ (800e3c0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e39c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e3a0:	4b08      	ldr	r3, [pc, #32]	@ (800e3c4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e3a2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e3a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e3aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e3ae:	6803      	ldr	r3, [r0, #0]
 800e3b0:	2100      	movs	r1, #0
 800e3b2:	9100      	str	r1, [sp, #0]
 800e3b4:	689b      	ldr	r3, [r3, #8]
 800e3b6:	4669      	mov	r1, sp
 800e3b8:	4798      	blx	r3
 800e3ba:	b003      	add	sp, #12
 800e3bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800e3c0:	2001327c 	.word	0x2001327c
 800e3c4:	2001327e 	.word	0x2001327e

0800e3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3cc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e3d0:	2b00      	cmp	r3, #0
 800e3d2:	b089      	sub	sp, #36	@ 0x24
 800e3d4:	4680      	mov	r8, r0
 800e3d6:	460c      	mov	r4, r1
 800e3d8:	4615      	mov	r5, r2
 800e3da:	dd0e      	ble.n	800e3fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e3dc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e3e0:	2b00      	cmp	r3, #0
 800e3e2:	dd0a      	ble.n	800e3fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e3e4:	4628      	mov	r0, r5
 800e3e6:	f7ff ff5b 	bl	800e2a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e3ea:	4621      	mov	r1, r4
 800e3ec:	f7fe fb55 	bl	800ca9a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e3f0:	69eb      	ldr	r3, [r5, #28]
 800e3f2:	b928      	cbnz	r0, 800e400 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e3f4:	461d      	mov	r5, r3
 800e3f6:	2b00      	cmp	r3, #0
 800e3f8:	d1f4      	bne.n	800e3e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e3fa:	b009      	add	sp, #36	@ 0x24
 800e3fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e400:	ae04      	add	r6, sp, #16
 800e402:	2b00      	cmp	r3, #0
 800e404:	f000 80b5 	beq.w	800e572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e408:	682b      	ldr	r3, [r5, #0]
 800e40a:	4629      	mov	r1, r5
 800e40c:	68db      	ldr	r3, [r3, #12]
 800e40e:	a802      	add	r0, sp, #8
 800e410:	4798      	blx	r3
 800e412:	4628      	mov	r0, r5
 800e414:	f7ff ff60 	bl	800e2d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e418:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e41c:	4407      	add	r7, r0
 800e41e:	4628      	mov	r0, r5
 800e420:	f7ff ff6e 	bl	800e300 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e424:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e428:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e42c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e430:	4418      	add	r0, r3
 800e432:	4621      	mov	r1, r4
 800e434:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e438:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e43c:	b23f      	sxth	r7, r7
 800e43e:	4630      	mov	r0, r6
 800e440:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e444:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e448:	f7fb f9b0 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800e44c:	4628      	mov	r0, r5
 800e44e:	f7ff ff27 	bl	800e2a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e452:	4602      	mov	r2, r0
 800e454:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e458:	ab06      	add	r3, sp, #24
 800e45a:	e883 0003 	stmia.w	r3, {r0, r1}
 800e45e:	4611      	mov	r1, r2
 800e460:	4618      	mov	r0, r3
 800e462:	f7fb f9a3 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800e466:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e46a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e46e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e472:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e476:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e47a:	4299      	cmp	r1, r3
 800e47c:	d10b      	bne.n	800e496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e47e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e482:	4552      	cmp	r2, sl
 800e484:	d107      	bne.n	800e496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e486:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e48a:	455a      	cmp	r2, fp
 800e48c:	d103      	bne.n	800e496 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e48e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e492:	454a      	cmp	r2, r9
 800e494:	d06d      	beq.n	800e572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e496:	f1bb 0f00 	cmp.w	fp, #0
 800e49a:	dd65      	ble.n	800e568 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e49c:	f1b9 0f00 	cmp.w	r9, #0
 800e4a0:	dd62      	ble.n	800e568 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e4a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e4a6:	fa1f f08a 	uxth.w	r0, sl
 800e4aa:	4552      	cmp	r2, sl
 800e4ac:	9000      	str	r0, [sp, #0]
 800e4ae:	da12      	bge.n	800e4d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e4b0:	9301      	str	r3, [sp, #4]
 800e4b2:	9b00      	ldr	r3, [sp, #0]
 800e4b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e4b8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e4bc:	1a9a      	subs	r2, r3, r2
 800e4be:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e4c2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e4c6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e4ca:	69ea      	ldr	r2, [r5, #28]
 800e4cc:	4631      	mov	r1, r6
 800e4ce:	4640      	mov	r0, r8
 800e4d0:	f7ff ff7a 	bl	800e3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4d4:	9b01      	ldr	r3, [sp, #4]
 800e4d6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e4da:	429a      	cmp	r2, r3
 800e4dc:	b29f      	uxth	r7, r3
 800e4de:	da0d      	bge.n	800e4fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e4e0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e4e4:	1aba      	subs	r2, r7, r2
 800e4e6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e4ea:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e4ee:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e4f2:	69ea      	ldr	r2, [r5, #28]
 800e4f4:	4631      	mov	r1, r6
 800e4f6:	4640      	mov	r0, r8
 800e4f8:	f7ff ff66 	bl	800e3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4fc:	8822      	ldrh	r2, [r4, #0]
 800e4fe:	88a3      	ldrh	r3, [r4, #4]
 800e500:	445f      	add	r7, fp
 800e502:	4413      	add	r3, r2
 800e504:	b29b      	uxth	r3, r3
 800e506:	b2bf      	uxth	r7, r7
 800e508:	b23a      	sxth	r2, r7
 800e50a:	b219      	sxth	r1, r3
 800e50c:	4291      	cmp	r1, r2
 800e50e:	dd0d      	ble.n	800e52c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e510:	1bdb      	subs	r3, r3, r7
 800e512:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e516:	f8ad a012 	strh.w	sl, [sp, #18]
 800e51a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e51e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e522:	69ea      	ldr	r2, [r5, #28]
 800e524:	4631      	mov	r1, r6
 800e526:	4640      	mov	r0, r8
 800e528:	f7ff ff4e 	bl	800e3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e52c:	88e2      	ldrh	r2, [r4, #6]
 800e52e:	8863      	ldrh	r3, [r4, #2]
 800e530:	4413      	add	r3, r2
 800e532:	9a00      	ldr	r2, [sp, #0]
 800e534:	444a      	add	r2, r9
 800e536:	b29b      	uxth	r3, r3
 800e538:	fa1f f982 	uxth.w	r9, r2
 800e53c:	fa0f f289 	sxth.w	r2, r9
 800e540:	b219      	sxth	r1, r3
 800e542:	428a      	cmp	r2, r1
 800e544:	da15      	bge.n	800e572 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e546:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e54a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e54e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e552:	eba3 0309 	sub.w	r3, r3, r9
 800e556:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e55a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e55e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e562:	69ea      	ldr	r2, [r5, #28]
 800e564:	4631      	mov	r1, r6
 800e566:	e001      	b.n	800e56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e568:	69ea      	ldr	r2, [r5, #28]
 800e56a:	4621      	mov	r1, r4
 800e56c:	4640      	mov	r0, r8
 800e56e:	f7ff ff2b 	bl	800e3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e572:	4628      	mov	r0, r5
 800e574:	f7ff fe94 	bl	800e2a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e578:	6861      	ldr	r1, [r4, #4]
 800e57a:	4602      	mov	r2, r0
 800e57c:	6820      	ldr	r0, [r4, #0]
 800e57e:	4633      	mov	r3, r6
 800e580:	c303      	stmia	r3!, {r0, r1}
 800e582:	4611      	mov	r1, r2
 800e584:	4630      	mov	r0, r6
 800e586:	f7fb f911 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800e58a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e58e:	2b00      	cmp	r3, #0
 800e590:	f77f af33 	ble.w	800e3fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e594:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e598:	2b00      	cmp	r3, #0
 800e59a:	f77f af2e 	ble.w	800e3fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e59e:	4628      	mov	r0, r5
 800e5a0:	f7ff fe9a 	bl	800e2d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e5a4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e5a8:	1a18      	subs	r0, r3, r0
 800e5aa:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e5ae:	4628      	mov	r0, r5
 800e5b0:	f7ff fea6 	bl	800e300 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e5b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e5b8:	1a18      	subs	r0, r3, r0
 800e5ba:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e5be:	682b      	ldr	r3, [r5, #0]
 800e5c0:	4631      	mov	r1, r6
 800e5c2:	689b      	ldr	r3, [r3, #8]
 800e5c4:	4628      	mov	r0, r5
 800e5c6:	4798      	blx	r3
 800e5c8:	e717      	b.n	800e3fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e5ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e5ca:	b570      	push	{r4, r5, r6, lr}
 800e5cc:	460c      	mov	r4, r1
 800e5ce:	b086      	sub	sp, #24
 800e5d0:	1d06      	adds	r6, r0, #4
 800e5d2:	2300      	movs	r3, #0
 800e5d4:	4631      	mov	r1, r6
 800e5d6:	4605      	mov	r5, r0
 800e5d8:	a802      	add	r0, sp, #8
 800e5da:	9301      	str	r3, [sp, #4]
 800e5dc:	f7ff fc98 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e5e0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e5e4:	8822      	ldrh	r2, [r4, #0]
 800e5e6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e5ea:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e5ee:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e5f2:	1ad2      	subs	r2, r2, r3
 800e5f4:	8863      	ldrh	r3, [r4, #2]
 800e5f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e5fa:	1a5b      	subs	r3, r3, r1
 800e5fc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e600:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e604:	aa01      	add	r2, sp, #4
 800e606:	a904      	add	r1, sp, #16
 800e608:	4630      	mov	r0, r6
 800e60a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e60e:	f7fb f9a5 	bl	800995c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e612:	9a01      	ldr	r2, [sp, #4]
 800e614:	b11a      	cbz	r2, 800e61e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e616:	4621      	mov	r1, r4
 800e618:	4628      	mov	r0, r5
 800e61a:	f7ff fed5 	bl	800e3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e61e:	b006      	add	sp, #24
 800e620:	bd70      	pop	{r4, r5, r6, pc}

0800e622 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e622:	b530      	push	{r4, r5, lr}
 800e624:	4602      	mov	r2, r0
 800e626:	4604      	mov	r4, r0
 800e628:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e62c:	b085      	sub	sp, #20
 800e62e:	460d      	mov	r5, r1
 800e630:	6851      	ldr	r1, [r2, #4]
 800e632:	466b      	mov	r3, sp
 800e634:	c303      	stmia	r3!, {r0, r1}
 800e636:	4629      	mov	r1, r5
 800e638:	4668      	mov	r0, sp
 800e63a:	f7fb f8b7 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 800e63e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e642:	b12b      	cbz	r3, 800e650 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e644:	4669      	mov	r1, sp
 800e646:	4620      	mov	r0, r4
 800e648:	f7ff ffbf 	bl	800e5ca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e64c:	b005      	add	sp, #20
 800e64e:	bd30      	pop	{r4, r5, pc}
 800e650:	3404      	adds	r4, #4
 800e652:	4621      	mov	r1, r4
 800e654:	a802      	add	r0, sp, #8
 800e656:	f7ff fc5b 	bl	800df10 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e65a:	f8bd 3000 	ldrh.w	r3, [sp]
 800e65e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e662:	1a9b      	subs	r3, r3, r2
 800e664:	f8ad 3000 	strh.w	r3, [sp]
 800e668:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e66c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e670:	4669      	mov	r1, sp
 800e672:	1a9b      	subs	r3, r3, r2
 800e674:	4620      	mov	r0, r4
 800e676:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e67a:	f7fb f936 	bl	80098ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e67e:	e7e5      	b.n	800e64c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e680 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e680:	680a      	ldr	r2, [r1, #0]
 800e682:	460b      	mov	r3, r1
 800e684:	6992      	ldr	r2, [r2, #24]
 800e686:	1d01      	adds	r1, r0, #4
 800e688:	4618      	mov	r0, r3
 800e68a:	4710      	bx	r2

0800e68c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800e68c:	4298      	cmp	r0, r3
 800e68e:	d200      	bcs.n	800e692 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 800e690:	b913      	cbnz	r3, 800e698 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 800e692:	440a      	add	r2, r1
 800e694:	b210      	sxth	r0, r2
 800e696:	4770      	bx	lr
 800e698:	ee07 0a90 	vmov	s15, r0
 800e69c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800e6a0:	ee07 3a90 	vmov	s15, r3
 800e6a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6a8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800e6ac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800e6b0:	ee37 7a66 	vsub.f32	s14, s14, s13
 800e6b4:	ee07 2a90 	vmov	s15, r2
 800e6b8:	ee67 5a07 	vmul.f32	s11, s14, s14
 800e6bc:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800e6c0:	eee5 6a87 	vfma.f32	s13, s11, s14
 800e6c4:	ee07 1a90 	vmov	s15, r1
 800e6c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e6cc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800e6d0:	eee6 7a26 	vfma.f32	s15, s12, s13
 800e6d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e6d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e6dc:	bfcc      	ite	gt
 800e6de:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e6e2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e6e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e6ea:	ee17 3a90 	vmov	r3, s15
 800e6ee:	b218      	sxth	r0, r3
 800e6f0:	4770      	bx	lr

0800e6f2 <_ZN8touchgfx12TextProviderC1Ev>:
 800e6f2:	b538      	push	{r3, r4, r5, lr}
 800e6f4:	2500      	movs	r5, #0
 800e6f6:	2302      	movs	r3, #2
 800e6f8:	4604      	mov	r4, r0
 800e6fa:	e9c0 5500 	strd	r5, r5, [r0]
 800e6fe:	7403      	strb	r3, [r0, #16]
 800e700:	6145      	str	r5, [r0, #20]
 800e702:	7605      	strb	r5, [r0, #24]
 800e704:	83c5      	strh	r5, [r0, #30]
 800e706:	8405      	strh	r5, [r0, #32]
 800e708:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800e70a:	8705      	strh	r5, [r0, #56]	@ 0x38
 800e70c:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 800e70e:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 800e712:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 800e716:	220e      	movs	r2, #14
 800e718:	4629      	mov	r1, r5
 800e71a:	304c      	adds	r0, #76	@ 0x4c
 800e71c:	f00f f9e9 	bl	801daf2 <memset>
 800e720:	2301      	movs	r3, #1
 800e722:	4620      	mov	r0, r4
 800e724:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 800e728:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800e72c:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 800e730:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 800e734:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 800e738:	f7f4 fe2a 	bl	8003390 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e73c:	4620      	mov	r0, r4
 800e73e:	bd38      	pop	{r3, r4, r5, pc}

0800e740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e740:	b530      	push	{r4, r5, lr}
 800e742:	2500      	movs	r5, #0
 800e744:	2401      	movs	r4, #1
 800e746:	6843      	ldr	r3, [r0, #4]
 800e748:	b913      	cbnz	r3, 800e750 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e74a:	6803      	ldr	r3, [r0, #0]
 800e74c:	b313      	cbz	r3, 800e794 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e74e:	6043      	str	r3, [r0, #4]
 800e750:	7e03      	ldrb	r3, [r0, #24]
 800e752:	b143      	cbz	r3, 800e766 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e754:	6943      	ldr	r3, [r0, #20]
 800e756:	b12b      	cbz	r3, 800e764 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e758:	881a      	ldrh	r2, [r3, #0]
 800e75a:	b11a      	cbz	r2, 800e764 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e75c:	1c9a      	adds	r2, r3, #2
 800e75e:	6142      	str	r2, [r0, #20]
 800e760:	8818      	ldrh	r0, [r3, #0]
 800e762:	bd30      	pop	{r4, r5, pc}
 800e764:	7605      	strb	r5, [r0, #24]
 800e766:	6843      	ldr	r3, [r0, #4]
 800e768:	8819      	ldrh	r1, [r3, #0]
 800e76a:	b199      	cbz	r1, 800e794 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e76c:	1c9a      	adds	r2, r3, #2
 800e76e:	2902      	cmp	r1, #2
 800e770:	6042      	str	r2, [r0, #4]
 800e772:	d1f5      	bne.n	800e760 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e774:	7c03      	ldrb	r3, [r0, #16]
 800e776:	2b01      	cmp	r3, #1
 800e778:	d8e5      	bhi.n	800e746 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e77a:	1c5a      	adds	r2, r3, #1
 800e77c:	3302      	adds	r3, #2
 800e77e:	7402      	strb	r2, [r0, #16]
 800e780:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e784:	6143      	str	r3, [r0, #20]
 800e786:	2b00      	cmp	r3, #0
 800e788:	d0dd      	beq.n	800e746 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e78a:	881b      	ldrh	r3, [r3, #0]
 800e78c:	2b00      	cmp	r3, #0
 800e78e:	d0da      	beq.n	800e746 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e790:	7604      	strb	r4, [r0, #24]
 800e792:	e7d8      	b.n	800e746 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e794:	2000      	movs	r0, #0
 800e796:	e7e4      	b.n	800e762 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e798 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e798:	b430      	push	{r4, r5}
 800e79a:	6001      	str	r1, [r0, #0]
 800e79c:	2100      	movs	r1, #0
 800e79e:	6041      	str	r1, [r0, #4]
 800e7a0:	6815      	ldr	r5, [r2, #0]
 800e7a2:	6085      	str	r5, [r0, #8]
 800e7a4:	6852      	ldr	r2, [r2, #4]
 800e7a6:	6443      	str	r3, [r0, #68]	@ 0x44
 800e7a8:	9b02      	ldr	r3, [sp, #8]
 800e7aa:	60c2      	str	r2, [r0, #12]
 800e7ac:	7401      	strb	r1, [r0, #16]
 800e7ae:	6141      	str	r1, [r0, #20]
 800e7b0:	7601      	strb	r1, [r0, #24]
 800e7b2:	8701      	strh	r1, [r0, #56]	@ 0x38
 800e7b4:	8401      	strh	r1, [r0, #32]
 800e7b6:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 800e7ba:	6483      	str	r3, [r0, #72]	@ 0x48
 800e7bc:	bc30      	pop	{r4, r5}
 800e7be:	f7f4 bde7 	b.w	8003390 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e7c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e7c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7c4:	4605      	mov	r5, r0
 800e7c6:	4608      	mov	r0, r1
 800e7c8:	b1e9      	cbz	r1, 800e806 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e7ca:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 800e7ce:	460b      	mov	r3, r1
 800e7d0:	f101 0708 	add.w	r7, r1, #8
 800e7d4:	4622      	mov	r2, r4
 800e7d6:	6818      	ldr	r0, [r3, #0]
 800e7d8:	6859      	ldr	r1, [r3, #4]
 800e7da:	4626      	mov	r6, r4
 800e7dc:	c603      	stmia	r6!, {r0, r1}
 800e7de:	3308      	adds	r3, #8
 800e7e0:	42bb      	cmp	r3, r7
 800e7e2:	4634      	mov	r4, r6
 800e7e4:	d1f7      	bne.n	800e7d6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e7e6:	6818      	ldr	r0, [r3, #0]
 800e7e8:	6030      	str	r0, [r6, #0]
 800e7ea:	889b      	ldrh	r3, [r3, #4]
 800e7ec:	80b3      	strh	r3, [r6, #4]
 800e7ee:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 800e7f2:	015b      	lsls	r3, r3, #5
 800e7f4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800e7f8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 800e7fc:	430b      	orrs	r3, r1
 800e7fe:	425b      	negs	r3, r3
 800e800:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 800e804:	4610      	mov	r0, r2
 800e806:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e808 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e808:	b538      	push	{r3, r4, r5, lr}
 800e80a:	460c      	mov	r4, r1
 800e80c:	6811      	ldr	r1, [r2, #0]
 800e80e:	4610      	mov	r0, r2
 800e810:	68cd      	ldr	r5, [r1, #12]
 800e812:	4619      	mov	r1, r3
 800e814:	47a8      	blx	r5
 800e816:	2800      	cmp	r0, #0
 800e818:	bf08      	it	eq
 800e81a:	4620      	moveq	r0, r4
 800e81c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e820 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e822:	4604      	mov	r4, r0
 800e824:	4615      	mov	r5, r2
 800e826:	4608      	mov	r0, r1
 800e828:	b93a      	cbnz	r2, 800e83a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e82a:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800e82e:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 800e832:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 800e836:	4628      	mov	r0, r5
 800e838:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e83a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e83e:	8893      	ldrh	r3, [r2, #4]
 800e840:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e844:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800e848:	79ee      	ldrb	r6, [r5, #7]
 800e84a:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
 800e84e:	4316      	orrs	r6, r2
 800e850:	19da      	adds	r2, r3, r7
 800e852:	b291      	uxth	r1, r2
 800e854:	291d      	cmp	r1, #29
 800e856:	b2b7      	uxth	r7, r6
 800e858:	d87a      	bhi.n	800e950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e85a:	2201      	movs	r2, #1
 800e85c:	408a      	lsls	r2, r1
 800e85e:	4975      	ldr	r1, [pc, #468]	@ (800ea34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800e860:	420a      	tst	r2, r1
 800e862:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e866:	d12d      	bne.n	800e8c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e868:	f412 7f60 	tst.w	r2, #896	@ 0x380
 800e86c:	d070      	beq.n	800e950 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e86e:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 800e872:	462b      	mov	r3, r5
 800e874:	f105 0e08 	add.w	lr, r5, #8
 800e878:	4615      	mov	r5, r2
 800e87a:	6818      	ldr	r0, [r3, #0]
 800e87c:	6859      	ldr	r1, [r3, #4]
 800e87e:	4694      	mov	ip, r2
 800e880:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e884:	3308      	adds	r3, #8
 800e886:	4573      	cmp	r3, lr
 800e888:	4662      	mov	r2, ip
 800e88a:	d1f6      	bne.n	800e87a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800e88c:	6818      	ldr	r0, [r3, #0]
 800e88e:	f8cc 0000 	str.w	r0, [ip]
 800e892:	889b      	ldrh	r3, [r3, #4]
 800e894:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e898:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800e89c:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 800e8a0:	b2b3      	uxth	r3, r6
 800e8a2:	1aca      	subs	r2, r1, r3
 800e8a4:	b292      	uxth	r2, r2
 800e8a6:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 800e8aa:	10d2      	asrs	r2, r2, #3
 800e8ac:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 800e8b0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 800e8b4:	4302      	orrs	r2, r0
 800e8b6:	1bcf      	subs	r7, r1, r7
 800e8b8:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 800e8bc:	1afb      	subs	r3, r7, r3
 800e8be:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800e8c2:	e7b8      	b.n	800e836 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e8c4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800e8c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e8ca:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 800e8cc:	f640 6333 	movw	r3, #3635	@ 0xe33
 800e8d0:	4299      	cmp	r1, r3
 800e8d2:	d110      	bne.n	800e8f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800e8d4:	6803      	ldr	r3, [r0, #0]
 800e8d6:	68db      	ldr	r3, [r3, #12]
 800e8d8:	4798      	blx	r3
 800e8da:	7b41      	ldrb	r1, [r0, #13]
 800e8dc:	00cb      	lsls	r3, r1, #3
 800e8de:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e8e2:	7a03      	ldrb	r3, [r0, #8]
 800e8e4:	0648      	lsls	r0, r1, #25
 800e8e6:	ea43 0302 	orr.w	r3, r3, r2
 800e8ea:	bf44      	itt	mi
 800e8ec:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e8f0:	b21b      	sxthmi	r3, r3
 800e8f2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e8f6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 800e8fa:	443b      	add	r3, r7
 800e8fc:	4433      	add	r3, r6
 800e8fe:	b29b      	uxth	r3, r3
 800e900:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
 800e904:	462a      	mov	r2, r5
 800e906:	f105 0c08 	add.w	ip, r5, #8
 800e90a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e90e:	4635      	mov	r5, r6
 800e910:	6810      	ldr	r0, [r2, #0]
 800e912:	6851      	ldr	r1, [r2, #4]
 800e914:	4637      	mov	r7, r6
 800e916:	c703      	stmia	r7!, {r0, r1}
 800e918:	3208      	adds	r2, #8
 800e91a:	4562      	cmp	r2, ip
 800e91c:	463e      	mov	r6, r7
 800e91e:	d1f7      	bne.n	800e910 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800e920:	6810      	ldr	r0, [r2, #0]
 800e922:	6038      	str	r0, [r7, #0]
 800e924:	8892      	ldrh	r2, [r2, #4]
 800e926:	80ba      	strh	r2, [r7, #4]
 800e928:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800e92c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800e930:	10db      	asrs	r3, r3, #3
 800e932:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800e936:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800e93a:	4313      	orrs	r3, r2
 800e93c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800e940:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 800e944:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 800e948:	1a9b      	subs	r3, r3, r2
 800e94a:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 800e94e:	e772      	b.n	800e836 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e950:	f023 0204 	bic.w	r2, r3, #4
 800e954:	f640 611b 	movw	r1, #3611	@ 0xe1b
 800e958:	428a      	cmp	r2, r1
 800e95a:	d003      	beq.n	800e964 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800e95c:	f640 621d 	movw	r2, #3613	@ 0xe1d
 800e960:	4293      	cmp	r3, r2
 800e962:	d120      	bne.n	800e9a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800e964:	3b01      	subs	r3, #1
 800e966:	4602      	mov	r2, r0
 800e968:	b29b      	uxth	r3, r3
 800e96a:	4629      	mov	r1, r5
 800e96c:	4620      	mov	r0, r4
 800e96e:	f7ff ff4b 	bl	800e808 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e972:	7b41      	ldrb	r1, [r0, #13]
 800e974:	00cb      	lsls	r3, r1, #3
 800e976:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e97a:	7a03      	ldrb	r3, [r0, #8]
 800e97c:	0649      	lsls	r1, r1, #25
 800e97e:	ea43 0302 	orr.w	r3, r3, r2
 800e982:	bf44      	itt	mi
 800e984:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800e988:	b21b      	sxthmi	r3, r3
 800e98a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e98e:	7b6b      	ldrb	r3, [r5, #13]
 800e990:	7aaa      	ldrb	r2, [r5, #10]
 800e992:	005b      	lsls	r3, r3, #1
 800e994:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e998:	4313      	orrs	r3, r2
 800e99a:	115a      	asrs	r2, r3, #5
 800e99c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e9a0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800e9a4:	e036      	b.n	800ea14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800e9a6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e9aa:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 800e9ae:	7a2a      	ldrb	r2, [r5, #8]
 800e9b0:	f01c 0f40 	tst.w	ip, #64	@ 0x40
 800e9b4:	ea42 0201 	orr.w	r2, r2, r1
 800e9b8:	bf1c      	itt	ne
 800e9ba:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
 800e9be:	b212      	sxthne	r2, r2
 800e9c0:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 800e9c4:	f640 6109 	movw	r1, #3593	@ 0xe09
 800e9c8:	f023 0210 	bic.w	r2, r3, #16
 800e9cc:	428a      	cmp	r2, r1
 800e9ce:	d003      	beq.n	800e9d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800e9d0:	f640 6213 	movw	r2, #3603	@ 0xe13
 800e9d4:	4293      	cmp	r3, r2
 800e9d6:	d12a      	bne.n	800ea2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800e9d8:	7b6e      	ldrb	r6, [r5, #13]
 800e9da:	0076      	lsls	r6, r6, #1
 800e9dc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 800e9e0:	7aae      	ldrb	r6, [r5, #10]
 800e9e2:	4316      	orrs	r6, r2
 800e9e4:	f640 6213 	movw	r2, #3603	@ 0xe13
 800e9e8:	4293      	cmp	r3, r2
 800e9ea:	bf18      	it	ne
 800e9ec:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e9f0:	4602      	mov	r2, r0
 800e9f2:	bf14      	ite	ne
 800e9f4:	b29b      	uxthne	r3, r3
 800e9f6:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 800e9fa:	4629      	mov	r1, r5
 800e9fc:	4620      	mov	r0, r4
 800e9fe:	f7ff ff03 	bl	800e808 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ea02:	7b43      	ldrb	r3, [r0, #13]
 800ea04:	7a82      	ldrb	r2, [r0, #10]
 800ea06:	005b      	lsls	r3, r3, #1
 800ea08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ea0c:	4313      	orrs	r3, r2
 800ea0e:	1af6      	subs	r6, r6, r3
 800ea10:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 800ea14:	7b69      	ldrb	r1, [r5, #13]
 800ea16:	00cb      	lsls	r3, r1, #3
 800ea18:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ea1c:	7a2b      	ldrb	r3, [r5, #8]
 800ea1e:	4313      	orrs	r3, r2
 800ea20:	064a      	lsls	r2, r1, #25
 800ea22:	bf44      	itt	mi
 800ea24:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ea28:	b21b      	sxthmi	r3, r3
 800ea2a:	1bdb      	subs	r3, r3, r7
 800ea2c:	e747      	b.n	800e8be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800ea2e:	2300      	movs	r3, #0
 800ea30:	e7b6      	b.n	800e9a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800ea32:	bf00      	nop
 800ea34:	3fc00079 	.word	0x3fc00079

0800ea38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800ea38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea3c:	4604      	mov	r4, r0
 800ea3e:	b942      	cbnz	r2, 800ea52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ea40:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ea44:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800ea48:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 800ea4c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 800ea50:	e047      	b.n	800eae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800ea52:	7b51      	ldrb	r1, [r2, #13]
 800ea54:	8893      	ldrh	r3, [r2, #4]
 800ea56:	010d      	lsls	r5, r1, #4
 800ea58:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 800ea5c:	79d5      	ldrb	r5, [r2, #7]
 800ea5e:	4305      	orrs	r5, r0
 800ea60:	2d04      	cmp	r5, #4
 800ea62:	bfcc      	ite	gt
 800ea64:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800ea68:	f04f 0e01 	movle.w	lr, #1
 800ea6c:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 800ea70:	f200 80ab 	bhi.w	800ebca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800ea74:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 800ea78:	4283      	cmp	r3, r0
 800ea7a:	d216      	bcs.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea7c:	f240 605b 	movw	r0, #1627	@ 0x65b
 800ea80:	4283      	cmp	r3, r0
 800ea82:	d859      	bhi.n	800eb38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800ea84:	f240 6057 	movw	r0, #1623	@ 0x657
 800ea88:	4283      	cmp	r3, r0
 800ea8a:	d20e      	bcs.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea8c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800ea90:	d24a      	bcs.n	800eb28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800ea92:	f240 604e 	movw	r0, #1614	@ 0x64e
 800ea96:	4283      	cmp	r3, r0
 800ea98:	d207      	bcs.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea9a:	f240 601a 	movw	r0, #1562	@ 0x61a
 800ea9e:	4283      	cmp	r3, r0
 800eaa0:	d02a      	beq.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eaa2:	d821      	bhi.n	800eae8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800eaa4:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 800eaa8:	d35b      	bcc.n	800eb62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800eaaa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 800eaae:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800eab2:	f040 80d0 	bne.w	800ec56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800eab6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 800eaba:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800eabe:	f040 80ca 	bne.w	800ec56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800eac2:	00cb      	lsls	r3, r1, #3
 800eac4:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800eac8:	7a13      	ldrb	r3, [r2, #8]
 800eaca:	0649      	lsls	r1, r1, #25
 800eacc:	ea43 0300 	orr.w	r3, r3, r0
 800ead0:	bf44      	itt	mi
 800ead2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ead6:	b21b      	sxthmi	r3, r3
 800ead8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800eadc:	1b5d      	subs	r5, r3, r5
 800eade:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800eae2:	4610      	mov	r0, r2
 800eae4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eae8:	f240 604b 	movw	r0, #1611	@ 0x64b
 800eaec:	4283      	cmp	r3, r0
 800eaee:	d338      	bcc.n	800eb62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800eaf0:	f240 604c 	movw	r0, #1612	@ 0x64c
 800eaf4:	4283      	cmp	r3, r0
 800eaf6:	d9d8      	bls.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eaf8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 800eafc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 800eb00:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800eb04:	f040 80f2 	bne.w	800ecec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800eb08:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800eb0c:	f040 80ee 	bne.w	800ecec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800eb10:	00cb      	lsls	r3, r1, #3
 800eb12:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800eb16:	7a13      	ldrb	r3, [r2, #8]
 800eb18:	064e      	lsls	r6, r1, #25
 800eb1a:	ea43 0300 	orr.w	r3, r3, r0
 800eb1e:	bf44      	itt	mi
 800eb20:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800eb24:	b21b      	sxthmi	r3, r3
 800eb26:	e7d9      	b.n	800eadc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800eb28:	f240 6054 	movw	r0, #1620	@ 0x654
 800eb2c:	4283      	cmp	r3, r0
 800eb2e:	d8e3      	bhi.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eb30:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 800eb34:	d9e0      	bls.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eb36:	e7b8      	b.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb38:	f240 6074 	movw	r0, #1652	@ 0x674
 800eb3c:	4283      	cmp	r3, r0
 800eb3e:	d0b4      	beq.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb40:	d82d      	bhi.n	800eb9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800eb42:	f240 605e 	movw	r0, #1630	@ 0x65e
 800eb46:	4283      	cmp	r3, r0
 800eb48:	d804      	bhi.n	800eb54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800eb4a:	f240 605d 	movw	r0, #1629	@ 0x65d
 800eb4e:	4283      	cmp	r3, r0
 800eb50:	d3d2      	bcc.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eb52:	e7aa      	b.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb54:	f240 605f 	movw	r0, #1631	@ 0x65f
 800eb58:	4283      	cmp	r3, r0
 800eb5a:	d0cd      	beq.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eb5c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 800eb60:	d0a3      	beq.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eb62:	00cb      	lsls	r3, r1, #3
 800eb64:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 800eb68:	7a13      	ldrb	r3, [r2, #8]
 800eb6a:	0649      	lsls	r1, r1, #25
 800eb6c:	ea43 0300 	orr.w	r3, r3, r0
 800eb70:	bf44      	itt	mi
 800eb72:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800eb76:	b21b      	sxthmi	r3, r3
 800eb78:	1b5d      	subs	r5, r3, r5
 800eb7a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800eb7e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800eb82:	7b53      	ldrb	r3, [r2, #13]
 800eb84:	015b      	lsls	r3, r3, #5
 800eb86:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800eb8a:	7993      	ldrb	r3, [r2, #6]
 800eb8c:	430b      	orrs	r3, r1
 800eb8e:	005b      	lsls	r3, r3, #1
 800eb90:	2105      	movs	r1, #5
 800eb92:	fb93 f3f1 	sdiv	r3, r3, r1
 800eb96:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800eb9a:	440b      	add	r3, r1
 800eb9c:	e756      	b.n	800ea4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800eb9e:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 800eba2:	4283      	cmp	r3, r0
 800eba4:	d809      	bhi.n	800ebba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800eba6:	f240 60df 	movw	r0, #1759	@ 0x6df
 800ebaa:	4283      	cmp	r3, r0
 800ebac:	f4bf af7d 	bcs.w	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebb0:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 800ebb4:	2b05      	cmp	r3, #5
 800ebb6:	d8d4      	bhi.n	800eb62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ebb8:	e777      	b.n	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebba:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 800ebbe:	4283      	cmp	r3, r0
 800ebc0:	d09a      	beq.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ebc2:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 800ebc6:	4283      	cmp	r3, r0
 800ebc8:	e7ca      	b.n	800eb60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ebca:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 800ebce:	d22b      	bcs.n	800ec28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800ebd0:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 800ebd4:	4283      	cmp	r3, r0
 800ebd6:	d28f      	bcs.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ebd8:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 800ebdc:	4283      	cmp	r3, r0
 800ebde:	d816      	bhi.n	800ec0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800ebe0:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 800ebe4:	4283      	cmp	r3, r0
 800ebe6:	f4bf af60 	bcs.w	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebea:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 800ebee:	4283      	cmp	r3, r0
 800ebf0:	d80a      	bhi.n	800ec08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ebf2:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 800ebf6:	4283      	cmp	r3, r0
 800ebf8:	f4bf af57 	bcs.w	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ebfc:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 800ec00:	4283      	cmp	r3, r0
 800ec02:	f43f af79 	beq.w	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec06:	e7ac      	b.n	800eb62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ec08:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 800ec0c:	e7f8      	b.n	800ec00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800ec0e:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 800ec12:	4283      	cmp	r3, r0
 800ec14:	d802      	bhi.n	800ec1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800ec16:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 800ec1a:	e798      	b.n	800eb4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800ec1c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 800ec20:	4283      	cmp	r3, r0
 800ec22:	f47f af42 	bne.w	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec26:	e767      	b.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec28:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 800ec2c:	4283      	cmp	r3, r0
 800ec2e:	f43f af63 	beq.w	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec32:	d802      	bhi.n	800ec3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800ec34:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 800ec38:	e7f2      	b.n	800ec20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800ec3a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 800ec3e:	4283      	cmp	r3, r0
 800ec40:	d805      	bhi.n	800ec4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800ec42:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 800ec46:	4283      	cmp	r3, r0
 800ec48:	f4ff af2f 	bcc.w	800eaaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ec4c:	e754      	b.n	800eaf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ec4e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 800ec52:	4283      	cmp	r3, r0
 800ec54:	e7af      	b.n	800ebb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800ec56:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800ec5a:	4617      	mov	r7, r2
 800ec5c:	f102 0808 	add.w	r8, r2, #8
 800ec60:	4666      	mov	r6, ip
 800ec62:	6838      	ldr	r0, [r7, #0]
 800ec64:	6879      	ldr	r1, [r7, #4]
 800ec66:	46e6      	mov	lr, ip
 800ec68:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ec6c:	3708      	adds	r7, #8
 800ec6e:	4547      	cmp	r7, r8
 800ec70:	46f4      	mov	ip, lr
 800ec72:	d1f6      	bne.n	800ec62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800ec74:	6838      	ldr	r0, [r7, #0]
 800ec76:	f8ce 0000 	str.w	r0, [lr]
 800ec7a:	88b9      	ldrh	r1, [r7, #4]
 800ec7c:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ec80:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800ec84:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800ec88:	d009      	beq.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800ec8a:	7b51      	ldrb	r1, [r2, #13]
 800ec8c:	7992      	ldrb	r2, [r2, #6]
 800ec8e:	0149      	lsls	r1, r1, #5
 800ec90:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800ec94:	4311      	orrs	r1, r2
 800ec96:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ec9a:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800ec9e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800eca2:	b2ad      	uxth	r5, r5
 800eca4:	d00d      	beq.n	800ecc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800eca6:	442b      	add	r3, r5
 800eca8:	b29b      	uxth	r3, r3
 800ecaa:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800ecae:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800ecb2:	10db      	asrs	r3, r3, #3
 800ecb4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800ecb8:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ecbc:	4313      	orrs	r3, r2
 800ecbe:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800ecc2:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800ecc6:	00cb      	lsls	r3, r1, #3
 800ecc8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800eccc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800ecd0:	064f      	lsls	r7, r1, #25
 800ecd2:	ea43 0302 	orr.w	r3, r3, r2
 800ecd6:	bf44      	itt	mi
 800ecd8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ecdc:	b21b      	sxthmi	r3, r3
 800ecde:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800ece2:	1b5b      	subs	r3, r3, r5
 800ece4:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800ece8:	4632      	mov	r2, r6
 800ecea:	e6fa      	b.n	800eae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800ecec:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 800ecf0:	4617      	mov	r7, r2
 800ecf2:	f102 0908 	add.w	r9, r2, #8
 800ecf6:	4666      	mov	r6, ip
 800ecf8:	6838      	ldr	r0, [r7, #0]
 800ecfa:	6879      	ldr	r1, [r7, #4]
 800ecfc:	46e0      	mov	r8, ip
 800ecfe:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ed02:	3708      	adds	r7, #8
 800ed04:	454f      	cmp	r7, r9
 800ed06:	46c4      	mov	ip, r8
 800ed08:	d1f6      	bne.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800ed0a:	6838      	ldr	r0, [r7, #0]
 800ed0c:	f8c8 0000 	str.w	r0, [r8]
 800ed10:	88b9      	ldrh	r1, [r7, #4]
 800ed12:	f8a8 1004 	strh.w	r1, [r8, #4]
 800ed16:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 800ed1a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 800ed1e:	d009      	beq.n	800ed34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800ed20:	7b51      	ldrb	r1, [r2, #13]
 800ed22:	7992      	ldrb	r2, [r2, #6]
 800ed24:	0149      	lsls	r1, r1, #5
 800ed26:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800ed2a:	4311      	orrs	r1, r2
 800ed2c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ed30:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 800ed34:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 800ed38:	d00e      	beq.n	800ed58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800ed3a:	eba3 030e 	sub.w	r3, r3, lr
 800ed3e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 800ed42:	b29b      	uxth	r3, r3
 800ed44:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800ed48:	10db      	asrs	r3, r3, #3
 800ed4a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800ed4e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800ed52:	4313      	orrs	r3, r2
 800ed54:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 800ed58:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 800ed5c:	00cb      	lsls	r3, r1, #3
 800ed5e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ed62:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 800ed66:	0648      	lsls	r0, r1, #25
 800ed68:	ea43 0302 	orr.w	r3, r3, r2
 800ed6c:	bf44      	itt	mi
 800ed6e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800ed72:	b21b      	sxthmi	r3, r3
 800ed74:	1b5d      	subs	r5, r3, r5
 800ed76:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800ed7a:	e7b5      	b.n	800ece8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800ed7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ed7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed80:	461e      	mov	r6, r3
 800ed82:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800ed84:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ed88:	4604      	mov	r4, r0
 800ed8a:	4617      	mov	r7, r2
 800ed8c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800ed90:	f7f4 fabc 	bl	800330c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ed94:	4605      	mov	r5, r0
 800ed96:	b918      	cbnz	r0, 800eda0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800ed98:	6030      	str	r0, [r6, #0]
 800ed9a:	4628      	mov	r0, r5
 800ed9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eda0:	683b      	ldr	r3, [r7, #0]
 800eda2:	4601      	mov	r1, r0
 800eda4:	68db      	ldr	r3, [r3, #12]
 800eda6:	4638      	mov	r0, r7
 800eda8:	4798      	blx	r3
 800edaa:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800edae:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800edb2:	4602      	mov	r2, r0
 800edb4:	6030      	str	r0, [r6, #0]
 800edb6:	d213      	bcs.n	800ede0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800edb8:	4643      	mov	r3, r8
 800edba:	4639      	mov	r1, r7
 800edbc:	4620      	mov	r0, r4
 800edbe:	f7ff fe3b 	bl	800ea38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800edc2:	6030      	str	r0, [r6, #0]
 800edc4:	6833      	ldr	r3, [r6, #0]
 800edc6:	b143      	cbz	r3, 800edda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800edc8:	7b5a      	ldrb	r2, [r3, #13]
 800edca:	7a9b      	ldrb	r3, [r3, #10]
 800edcc:	0052      	lsls	r2, r2, #1
 800edce:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800edd2:	4313      	orrs	r3, r2
 800edd4:	bf0c      	ite	eq
 800edd6:	2301      	moveq	r3, #1
 800edd8:	2300      	movne	r3, #0
 800edda:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800edde:	e7dc      	b.n	800ed9a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800ede0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800ede4:	b29b      	uxth	r3, r3
 800ede6:	2b7f      	cmp	r3, #127	@ 0x7f
 800ede8:	d804      	bhi.n	800edf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800edea:	4639      	mov	r1, r7
 800edec:	4620      	mov	r0, r4
 800edee:	f7ff fd17 	bl	800e820 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800edf2:	e7e6      	b.n	800edc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800edf4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800edf8:	2b00      	cmp	r3, #0
 800edfa:	d0e3      	beq.n	800edc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800edfc:	f640 1302 	movw	r3, #2306	@ 0x902
 800ee00:	429d      	cmp	r5, r3
 800ee02:	d1df      	bne.n	800edc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800ee04:	4601      	mov	r1, r0
 800ee06:	4620      	mov	r0, r4
 800ee08:	f7ff fcdb 	bl	800e7c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ee0c:	e7d9      	b.n	800edc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800ee0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800ee0e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ee12:	461e      	mov	r6, r3
 800ee14:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800ee16:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ee1a:	4604      	mov	r4, r0
 800ee1c:	4617      	mov	r7, r2
 800ee1e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800ee22:	f7f4 fa73 	bl	800330c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ee26:	4605      	mov	r5, r0
 800ee28:	b918      	cbnz	r0, 800ee32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800ee2a:	6030      	str	r0, [r6, #0]
 800ee2c:	4628      	mov	r0, r5
 800ee2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ee32:	683b      	ldr	r3, [r7, #0]
 800ee34:	4601      	mov	r1, r0
 800ee36:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800ee3a:	4638      	mov	r0, r7
 800ee3c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ee40:	47c8      	blx	r9
 800ee42:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 800ee46:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800ee4a:	4602      	mov	r2, r0
 800ee4c:	6030      	str	r0, [r6, #0]
 800ee4e:	d213      	bcs.n	800ee78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800ee50:	4643      	mov	r3, r8
 800ee52:	4639      	mov	r1, r7
 800ee54:	4620      	mov	r0, r4
 800ee56:	f7ff fdef 	bl	800ea38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ee5a:	6030      	str	r0, [r6, #0]
 800ee5c:	6833      	ldr	r3, [r6, #0]
 800ee5e:	b143      	cbz	r3, 800ee72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800ee60:	7b5a      	ldrb	r2, [r3, #13]
 800ee62:	7a9b      	ldrb	r3, [r3, #10]
 800ee64:	0052      	lsls	r2, r2, #1
 800ee66:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800ee6a:	4313      	orrs	r3, r2
 800ee6c:	bf0c      	ite	eq
 800ee6e:	2301      	moveq	r3, #1
 800ee70:	2300      	movne	r3, #0
 800ee72:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 800ee76:	e7d9      	b.n	800ee2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800ee78:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 800ee7c:	b29b      	uxth	r3, r3
 800ee7e:	2b7f      	cmp	r3, #127	@ 0x7f
 800ee80:	d804      	bhi.n	800ee8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800ee82:	4639      	mov	r1, r7
 800ee84:	4620      	mov	r0, r4
 800ee86:	f7ff fccb 	bl	800e820 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ee8a:	e7e6      	b.n	800ee5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800ee8c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 800ee90:	2b00      	cmp	r3, #0
 800ee92:	d0e3      	beq.n	800ee5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ee94:	f640 1302 	movw	r3, #2306	@ 0x902
 800ee98:	429d      	cmp	r5, r3
 800ee9a:	d1df      	bne.n	800ee5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ee9c:	4601      	mov	r1, r0
 800ee9e:	4620      	mov	r0, r4
 800eea0:	f7ff fc8f 	bl	800e7c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800eea4:	e7d9      	b.n	800ee5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800eea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800eea6:	b510      	push	{r4, lr}
 800eea8:	4604      	mov	r4, r0
 800eeaa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 800eeae:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800eeb0:	b1f1      	cbz	r1, 800eef0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800eeb2:	2b0a      	cmp	r3, #10
 800eeb4:	d02f      	beq.n	800ef16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800eeb6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800eeb8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800eebc:	3901      	subs	r1, #1
 800eebe:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 800eec0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800eec4:	1c51      	adds	r1, r2, #1
 800eec6:	b289      	uxth	r1, r1
 800eec8:	2901      	cmp	r1, #1
 800eeca:	bf84      	itt	hi
 800eecc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800eed0:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 800eed2:	f103 0201 	add.w	r2, r3, #1
 800eed6:	8722      	strh	r2, [r4, #56]	@ 0x38
 800eed8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800eeda:	bf98      	it	ls
 800eedc:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 800eede:	4413      	add	r3, r2
 800eee0:	b29b      	uxth	r3, r3
 800eee2:	2b09      	cmp	r3, #9
 800eee4:	bf88      	it	hi
 800eee6:	3b0a      	subhi	r3, #10
 800eee8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800eeec:	8458      	strh	r0, [r3, #34]	@ 0x22
 800eeee:	e7dc      	b.n	800eeaa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800eef0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800eef2:	2b0a      	cmp	r3, #10
 800eef4:	d00f      	beq.n	800ef16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800eef6:	4620      	mov	r0, r4
 800eef8:	f7ff fc22 	bl	800e740 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800eefc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800eefe:	1c5a      	adds	r2, r3, #1
 800ef00:	8722      	strh	r2, [r4, #56]	@ 0x38
 800ef02:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800ef04:	4413      	add	r3, r2
 800ef06:	b29b      	uxth	r3, r3
 800ef08:	2b09      	cmp	r3, #9
 800ef0a:	bf88      	it	hi
 800ef0c:	3b0a      	subhi	r3, #10
 800ef0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ef12:	8458      	strh	r0, [r3, #34]	@ 0x22
 800ef14:	e7ec      	b.n	800eef0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800ef16:	bd10      	pop	{r4, pc}

0800ef18 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ef18:	b538      	push	{r3, r4, r5, lr}
 800ef1a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 800ef1c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800ef20:	4604      	mov	r4, r0
 800ef22:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 800ef24:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 800ef26:	3a01      	subs	r2, #1
 800ef28:	8702      	strh	r2, [r0, #56]	@ 0x38
 800ef2a:	1c5a      	adds	r2, r3, #1
 800ef2c:	b292      	uxth	r2, r2
 800ef2e:	2a09      	cmp	r2, #9
 800ef30:	bf86      	itte	hi
 800ef32:	3b09      	subhi	r3, #9
 800ef34:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 800ef36:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 800ef38:	f7ff ffb5 	bl	800eea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ef3c:	8c23      	ldrh	r3, [r4, #32]
 800ef3e:	2b01      	cmp	r3, #1
 800ef40:	bf9c      	itt	ls
 800ef42:	3301      	addls	r3, #1
 800ef44:	8423      	strhls	r3, [r4, #32]
 800ef46:	8be3      	ldrh	r3, [r4, #30]
 800ef48:	b90b      	cbnz	r3, 800ef4e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800ef4a:	2302      	movs	r3, #2
 800ef4c:	83e3      	strh	r3, [r4, #30]
 800ef4e:	8be3      	ldrh	r3, [r4, #30]
 800ef50:	3b01      	subs	r3, #1
 800ef52:	b29b      	uxth	r3, r3
 800ef54:	83e3      	strh	r3, [r4, #30]
 800ef56:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ef5a:	4628      	mov	r0, r5
 800ef5c:	8365      	strh	r5, [r4, #26]
 800ef5e:	bd38      	pop	{r3, r4, r5, pc}

0800ef60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ef60:	428a      	cmp	r2, r1
 800ef62:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ef66:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 800ef68:	d931      	bls.n	800efce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800ef6a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 800ef6c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 800ef70:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 800ef74:	19ee      	adds	r6, r5, r7
 800ef76:	1a54      	subs	r4, r2, r1
 800ef78:	3e01      	subs	r6, #1
 800ef7a:	fa1f fe84 	uxth.w	lr, r4
 800ef7e:	b2b4      	uxth	r4, r6
 800ef80:	eba4 090e 	sub.w	r9, r4, lr
 800ef84:	fa1f f989 	uxth.w	r9, r9
 800ef88:	2c09      	cmp	r4, #9
 800ef8a:	4626      	mov	r6, r4
 800ef8c:	bf88      	it	hi
 800ef8e:	f1a4 060a 	subhi.w	r6, r4, #10
 800ef92:	f1bc 0f00 	cmp.w	ip, #0
 800ef96:	bf08      	it	eq
 800ef98:	f04f 0c02 	moveq.w	ip, #2
 800ef9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800efa0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800efa4:	fa1f fc8c 	uxth.w	ip, ip
 800efa8:	3c01      	subs	r4, #1
 800efaa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 800efae:	b2a4      	uxth	r4, r4
 800efb0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800efb4:	454c      	cmp	r4, r9
 800efb6:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 800efba:	d1e5      	bne.n	800ef88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800efbc:	eba5 050e 	sub.w	r5, r5, lr
 800efc0:	eb0e 0408 	add.w	r4, lr, r8
 800efc4:	8705      	strh	r5, [r0, #56]	@ 0x38
 800efc6:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 800efca:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 800efce:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 800efd0:	1a64      	subs	r4, r4, r1
 800efd2:	4439      	add	r1, r7
 800efd4:	b289      	uxth	r1, r1
 800efd6:	2909      	cmp	r1, #9
 800efd8:	bf88      	it	hi
 800efda:	390a      	subhi	r1, #10
 800efdc:	8704      	strh	r4, [r0, #56]	@ 0x38
 800efde:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800efe0:	250a      	movs	r5, #10
 800efe2:	b18a      	cbz	r2, 800f008 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800efe4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 800efe6:	3a01      	subs	r2, #1
 800efe8:	b292      	uxth	r2, r2
 800efea:	3101      	adds	r1, #1
 800efec:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800eff0:	8701      	strh	r1, [r0, #56]	@ 0x38
 800eff2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800eff4:	b901      	cbnz	r1, 800eff8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800eff6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 800eff8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 800effa:	3901      	subs	r1, #1
 800effc:	b289      	uxth	r1, r1
 800effe:	86c1      	strh	r1, [r0, #54]	@ 0x36
 800f000:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f004:	844c      	strh	r4, [r1, #34]	@ 0x22
 800f006:	e7ec      	b.n	800efe2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800f008:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f00c:	f7ff bf4b 	b.w	800eea6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800f010 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f010:	b570      	push	{r4, r5, r6, lr}
 800f012:	2500      	movs	r5, #0
 800f014:	4295      	cmp	r5, r2
 800f016:	d011      	beq.n	800f03c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800f018:	8bc4      	ldrh	r4, [r0, #30]
 800f01a:	f831 6b02 	ldrh.w	r6, [r1], #2
 800f01e:	4414      	add	r4, r2
 800f020:	3c01      	subs	r4, #1
 800f022:	1b64      	subs	r4, r4, r5
 800f024:	b2a4      	uxth	r4, r4
 800f026:	2c01      	cmp	r4, #1
 800f028:	bf88      	it	hi
 800f02a:	3c02      	subhi	r4, #2
 800f02c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f030:	8b64      	ldrh	r4, [r4, #26]
 800f032:	42b4      	cmp	r4, r6
 800f034:	d117      	bne.n	800f066 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800f036:	3501      	adds	r5, #1
 800f038:	b2ad      	uxth	r5, r5
 800f03a:	e7eb      	b.n	800f014 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800f03c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f040:	2400      	movs	r4, #0
 800f042:	4413      	add	r3, r2
 800f044:	b2a2      	uxth	r2, r4
 800f046:	429a      	cmp	r2, r3
 800f048:	da0f      	bge.n	800f06a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800f04a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 800f04c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f050:	4432      	add	r2, r6
 800f052:	b292      	uxth	r2, r2
 800f054:	2a09      	cmp	r2, #9
 800f056:	bf88      	it	hi
 800f058:	3a0a      	subhi	r2, #10
 800f05a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f05e:	3401      	adds	r4, #1
 800f060:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 800f062:	42aa      	cmp	r2, r5
 800f064:	d0ee      	beq.n	800f044 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800f066:	2000      	movs	r0, #0
 800f068:	bd70      	pop	{r4, r5, r6, pc}
 800f06a:	2001      	movs	r0, #1
 800f06c:	e7fc      	b.n	800f068 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800f06e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f06e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f072:	4605      	mov	r5, r0
 800f074:	4616      	mov	r6, r2
 800f076:	1c8c      	adds	r4, r1, #2
 800f078:	8809      	ldrh	r1, [r1, #0]
 800f07a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f07e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f082:	42b3      	cmp	r3, r6
 800f084:	d124      	bne.n	800f0d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f086:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f08a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f08e:	f001 070f 	and.w	r7, r1, #15
 800f092:	f8cd 8000 	str.w	r8, [sp]
 800f096:	464b      	mov	r3, r9
 800f098:	4652      	mov	r2, sl
 800f09a:	4621      	mov	r1, r4
 800f09c:	4628      	mov	r0, r5
 800f09e:	f7ff ffb7 	bl	800f010 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f0a2:	4683      	mov	fp, r0
 800f0a4:	b168      	cbz	r0, 800f0c2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f0a6:	eb0a 0109 	add.w	r1, sl, r9
 800f0aa:	4441      	add	r1, r8
 800f0ac:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f0b0:	463a      	mov	r2, r7
 800f0b2:	4649      	mov	r1, r9
 800f0b4:	4628      	mov	r0, r5
 800f0b6:	f7ff ff53 	bl	800ef60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f0ba:	4658      	mov	r0, fp
 800f0bc:	b003      	add	sp, #12
 800f0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0c2:	eb07 010a 	add.w	r1, r7, sl
 800f0c6:	4449      	add	r1, r9
 800f0c8:	4441      	add	r1, r8
 800f0ca:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f0ce:	e7d2      	b.n	800f076 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f0d0:	f04f 0b00 	mov.w	fp, #0
 800f0d4:	e7f1      	b.n	800f0ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f0d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f0d6:	b570      	push	{r4, r5, r6, lr}
 800f0d8:	8810      	ldrh	r0, [r2, #0]
 800f0da:	4298      	cmp	r0, r3
 800f0dc:	d817      	bhi.n	800f10e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f0de:	1e48      	subs	r0, r1, #1
 800f0e0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f0e4:	4298      	cmp	r0, r3
 800f0e6:	d312      	bcc.n	800f10e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f0e8:	2400      	movs	r4, #0
 800f0ea:	428c      	cmp	r4, r1
 800f0ec:	d20f      	bcs.n	800f10e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f0ee:	1860      	adds	r0, r4, r1
 800f0f0:	1040      	asrs	r0, r0, #1
 800f0f2:	0085      	lsls	r5, r0, #2
 800f0f4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f0f8:	42b3      	cmp	r3, r6
 800f0fa:	d902      	bls.n	800f102 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f0fc:	3001      	adds	r0, #1
 800f0fe:	b284      	uxth	r4, r0
 800f100:	e7f3      	b.n	800f0ea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f102:	d201      	bcs.n	800f108 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f104:	b281      	uxth	r1, r0
 800f106:	e7f0      	b.n	800f0ea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f108:	442a      	add	r2, r5
 800f10a:	8850      	ldrh	r0, [r2, #2]
 800f10c:	bd70      	pop	{r4, r5, r6, pc}
 800f10e:	2000      	movs	r0, #0
 800f110:	e7fc      	b.n	800f10c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f112 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f112:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f116:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 800f118:	886f      	ldrh	r7, [r5, #2]
 800f11a:	4604      	mov	r4, r0
 800f11c:	087f      	lsrs	r7, r7, #1
 800f11e:	260b      	movs	r6, #11
 800f120:	3e01      	subs	r6, #1
 800f122:	d013      	beq.n	800f14c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f124:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800f126:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f12a:	462a      	mov	r2, r5
 800f12c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 800f130:	4639      	mov	r1, r7
 800f132:	4643      	mov	r3, r8
 800f134:	4620      	mov	r0, r4
 800f136:	f7ff ffce 	bl	800f0d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f13a:	b138      	cbz	r0, 800f14c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800f13c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f140:	4642      	mov	r2, r8
 800f142:	4620      	mov	r0, r4
 800f144:	f7ff ff93 	bl	800f06e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f148:	2800      	cmp	r0, #0
 800f14a:	d1e9      	bne.n	800f120 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f14c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f150 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f150:	b570      	push	{r4, r5, r6, lr}
 800f152:	694a      	ldr	r2, [r1, #20]
 800f154:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800f156:	684b      	ldr	r3, [r1, #4]
 800f158:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 800f15a:	1b54      	subs	r4, r2, r5
 800f15c:	f000 8106 	beq.w	800f36c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f160:	1b9b      	subs	r3, r3, r6
 800f162:	d003      	beq.n	800f16c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f164:	4363      	muls	r3, r4
 800f166:	2210      	movs	r2, #16
 800f168:	fb93 f3f2 	sdiv	r3, r3, r2
 800f16c:	680c      	ldr	r4, [r1, #0]
 800f16e:	698a      	ldr	r2, [r1, #24]
 800f170:	1b65      	subs	r5, r4, r5
 800f172:	f000 80fd 	beq.w	800f370 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f176:	1b92      	subs	r2, r2, r6
 800f178:	d003      	beq.n	800f182 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f17a:	436a      	muls	r2, r5
 800f17c:	2410      	movs	r4, #16
 800f17e:	fb92 f2f4 	sdiv	r2, r2, r4
 800f182:	1a9b      	subs	r3, r3, r2
 800f184:	ee07 3a90 	vmov	s15, r3
 800f188:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 800f3ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f18c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f190:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800f194:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f198:	460a      	mov	r2, r1
 800f19a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f19e:	4603      	mov	r3, r0
 800f1a0:	f100 040c 	add.w	r4, r0, #12
 800f1a4:	eeb1 6a43 	vneg.f32	s12, s6
 800f1a8:	edd2 7a02 	vldr	s15, [r2, #8]
 800f1ac:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f1b0:	3214      	adds	r2, #20
 800f1b2:	ece3 6a01 	vstmia	r3!, {s13}
 800f1b6:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f1ba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f1be:	429c      	cmp	r4, r3
 800f1c0:	edc3 7a02 	vstr	s15, [r3, #8]
 800f1c4:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f1c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f1cc:	edc3 7a05 	vstr	s15, [r3, #20]
 800f1d0:	d1ea      	bne.n	800f1a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f1d2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f1d4:	698b      	ldr	r3, [r1, #24]
 800f1d6:	edd0 4a02 	vldr	s9, [r0, #8]
 800f1da:	edd0 3a00 	vldr	s7, [r0]
 800f1de:	edd0 6a01 	vldr	s13, [r0, #4]
 800f1e2:	ed90 5a05 	vldr	s10, [r0, #20]
 800f1e6:	ed90 2a03 	vldr	s4, [r0, #12]
 800f1ea:	edd0 5a04 	vldr	s11, [r0, #16]
 800f1ee:	ed90 1a07 	vldr	s2, [r0, #28]
 800f1f2:	edd0 2a06 	vldr	s5, [r0, #24]
 800f1f6:	1a9b      	subs	r3, r3, r2
 800f1f8:	ee07 3a90 	vmov	s15, r3
 800f1fc:	684b      	ldr	r3, [r1, #4]
 800f1fe:	1a9b      	subs	r3, r3, r2
 800f200:	ee07 3a10 	vmov	s14, r3
 800f204:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f208:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f20c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f210:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f214:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f218:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f21c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f220:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f224:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f228:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f22c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f230:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 800f234:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800f236:	694a      	ldr	r2, [r1, #20]
 800f238:	1b13      	subs	r3, r2, r4
 800f23a:	ee07 3a10 	vmov	s14, r3
 800f23e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f242:	680b      	ldr	r3, [r1, #0]
 800f244:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f248:	1b1b      	subs	r3, r3, r4
 800f24a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f24e:	ee07 3a10 	vmov	s14, r3
 800f252:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f256:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f25a:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f25e:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f262:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 800f266:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f268:	698b      	ldr	r3, [r1, #24]
 800f26a:	1a9b      	subs	r3, r3, r2
 800f26c:	ee06 3a90 	vmov	s13, r3
 800f270:	684b      	ldr	r3, [r1, #4]
 800f272:	1a9b      	subs	r3, r3, r2
 800f274:	ee07 3a10 	vmov	s14, r3
 800f278:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f27c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f280:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f284:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f288:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f28c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f290:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f294:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 800f298:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800f29a:	694a      	ldr	r2, [r1, #20]
 800f29c:	1b13      	subs	r3, r2, r4
 800f29e:	ee07 3a10 	vmov	s14, r3
 800f2a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2a6:	680b      	ldr	r3, [r1, #0]
 800f2a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2ac:	1b1b      	subs	r3, r3, r4
 800f2ae:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f2b2:	ee07 3a10 	vmov	s14, r3
 800f2b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2be:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f2c2:	edd0 5a08 	vldr	s11, [r0, #32]
 800f2c6:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f2ca:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f2ce:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 800f2d2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f2d4:	698b      	ldr	r3, [r1, #24]
 800f2d6:	1a9b      	subs	r3, r3, r2
 800f2d8:	ee07 3a10 	vmov	s14, r3
 800f2dc:	684b      	ldr	r3, [r1, #4]
 800f2de:	1a9b      	subs	r3, r3, r2
 800f2e0:	ee01 3a90 	vmov	s3, r3
 800f2e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f2e8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f2ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f2f0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f2f4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f2f8:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f2fc:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f300:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f304:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800f308:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 800f30a:	694a      	ldr	r2, [r1, #20]
 800f30c:	1b13      	subs	r3, r2, r4
 800f30e:	ee03 3a10 	vmov	s6, r3
 800f312:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f316:	680b      	ldr	r3, [r1, #0]
 800f318:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f31c:	1b1b      	subs	r3, r3, r4
 800f31e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f322:	ee03 3a10 	vmov	s6, r3
 800f326:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f32a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f32e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f332:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f336:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f33a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 800f33e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f342:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f34a:	dd13      	ble.n	800f374 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f34c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f350:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f354:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800f356:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f35a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f35e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f362:	dd15      	ble.n	800f390 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f364:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800f368:	6403      	str	r3, [r0, #64]	@ 0x40
 800f36a:	bd70      	pop	{r4, r5, r6, pc}
 800f36c:	4623      	mov	r3, r4
 800f36e:	e6fd      	b.n	800f16c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f370:	462a      	mov	r2, r5
 800f372:	e706      	b.n	800f182 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f374:	d502      	bpl.n	800f37c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f376:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800f37a:	e7e9      	b.n	800f350 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f37c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f380:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f384:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f38c:	dade      	bge.n	800f34c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f38e:	e7f2      	b.n	800f376 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f390:	d502      	bpl.n	800f398 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f392:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 800f396:	e7e7      	b.n	800f368 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f398:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f39c:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f3a0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f3a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3a8:	dadc      	bge.n	800f364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f3aa:	e7f2      	b.n	800f392 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f3ac:	3d800000 	.word	0x3d800000

0800f3b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f3b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f3b4:	2714      	movs	r7, #20
 800f3b6:	435f      	muls	r7, r3
 800f3b8:	eb02 0c07 	add.w	ip, r2, r7
 800f3bc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800f3c0:	f115 0e0f 	adds.w	lr, r5, #15
 800f3c4:	f100 80a2 	bmi.w	800f50c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f3c8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800f3cc:	9c08      	ldr	r4, [sp, #32]
 800f3ce:	f8c0 e014 	str.w	lr, [r0, #20]
 800f3d2:	2614      	movs	r6, #20
 800f3d4:	4366      	muls	r6, r4
 800f3d6:	eb02 0806 	add.w	r8, r2, r6
 800f3da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800f3de:	f115 040f 	adds.w	r4, r5, #15
 800f3e2:	f100 809f 	bmi.w	800f524 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800f3e6:	1124      	asrs	r4, r4, #4
 800f3e8:	eba4 040e 	sub.w	r4, r4, lr
 800f3ec:	6184      	str	r4, [r0, #24]
 800f3ee:	2c00      	cmp	r4, #0
 800f3f0:	f000 808a 	beq.w	800f508 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800f3f4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800f3f8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800f3fc:	5995      	ldr	r5, [r2, r6]
 800f3fe:	eba4 0809 	sub.w	r8, r4, r9
 800f402:	59d4      	ldr	r4, [r2, r7]
 800f404:	eba5 0a04 	sub.w	sl, r5, r4
 800f408:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800f40c:	fb0e fe05 	mul.w	lr, lr, r5
 800f410:	fb0a ee19 	mls	lr, sl, r9, lr
 800f414:	fb08 e404 	mla	r4, r8, r4, lr
 800f418:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800f41c:	3c01      	subs	r4, #1
 800f41e:	19a4      	adds	r4, r4, r6
 800f420:	f100 808c 	bmi.w	800f53c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800f424:	fb94 fef6 	sdiv	lr, r4, r6
 800f428:	f8c0 e000 	str.w	lr, [r0]
 800f42c:	fb06 441e 	mls	r4, r6, lr, r4
 800f430:	6104      	str	r4, [r0, #16]
 800f432:	2d00      	cmp	r5, #0
 800f434:	f2c0 8095 	blt.w	800f562 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800f438:	fb95 f4f6 	sdiv	r4, r5, r6
 800f43c:	6044      	str	r4, [r0, #4]
 800f43e:	fb06 5514 	mls	r5, r6, r4, r5
 800f442:	6085      	str	r5, [r0, #8]
 800f444:	60c6      	str	r6, [r0, #12]
 800f446:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f44a:	6945      	ldr	r5, [r0, #20]
 800f44c:	59d2      	ldr	r2, [r2, r7]
 800f44e:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 800f584 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800f452:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800f456:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f45a:	ee07 4a10 	vmov	s14, r4
 800f45e:	6804      	ldr	r4, [r0, #0]
 800f460:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f464:	ee07 2a90 	vmov	s15, r2
 800f468:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f46c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f470:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f474:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f478:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f47c:	edd3 6a00 	vldr	s13, [r3]
 800f480:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f484:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 800f488:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f48c:	edc0 6a07 	vstr	s13, [r0, #28]
 800f490:	edd0 6a01 	vldr	s13, [r0, #4]
 800f494:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 800f498:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 800f49c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f4a0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f4a4:	ed80 6a08 	vstr	s12, [r0, #32]
 800f4a8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 800f4aa:	6242      	str	r2, [r0, #36]	@ 0x24
 800f4ac:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 800f4b0:	ed93 6a03 	vldr	s12, [r3, #12]
 800f4b4:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f4b8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800f4bc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f4c0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 800f4c4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 800f4c8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 800f4cc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f4d0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 800f4d4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 800f4d6:	6302      	str	r2, [r0, #48]	@ 0x30
 800f4d8:	ed93 6a06 	vldr	s12, [r3, #24]
 800f4dc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 800f4e0:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f4e4:	eeb0 7a46 	vmov.f32	s14, s12
 800f4e8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 800f4ec:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f4f0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 800f4f4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 800f4f8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 800f4fc:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f500:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 800f504:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 800f506:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800f508:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f50c:	f1c5 0501 	rsb	r5, r5, #1
 800f510:	f015 050f 	ands.w	r5, r5, #15
 800f514:	bf18      	it	ne
 800f516:	2501      	movne	r5, #1
 800f518:	2410      	movs	r4, #16
 800f51a:	fb9e fef4 	sdiv	lr, lr, r4
 800f51e:	ebae 0e05 	sub.w	lr, lr, r5
 800f522:	e753      	b.n	800f3cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800f524:	f1c5 0501 	rsb	r5, r5, #1
 800f528:	f015 050f 	ands.w	r5, r5, #15
 800f52c:	bf18      	it	ne
 800f52e:	2501      	movne	r5, #1
 800f530:	f04f 0910 	mov.w	r9, #16
 800f534:	fb94 f4f9 	sdiv	r4, r4, r9
 800f538:	1b64      	subs	r4, r4, r5
 800f53a:	e755      	b.n	800f3e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800f53c:	4264      	negs	r4, r4
 800f53e:	fb94 fef6 	sdiv	lr, r4, r6
 800f542:	f1ce 0800 	rsb	r8, lr, #0
 800f546:	fb06 441e 	mls	r4, r6, lr, r4
 800f54a:	f8c0 8000 	str.w	r8, [r0]
 800f54e:	6104      	str	r4, [r0, #16]
 800f550:	2c00      	cmp	r4, #0
 800f552:	f43f af6e 	beq.w	800f432 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800f556:	ea6f 0e0e 	mvn.w	lr, lr
 800f55a:	f8c0 e000 	str.w	lr, [r0]
 800f55e:	1b34      	subs	r4, r6, r4
 800f560:	e766      	b.n	800f430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800f562:	426d      	negs	r5, r5
 800f564:	fb95 f4f6 	sdiv	r4, r5, r6
 800f568:	f1c4 0e00 	rsb	lr, r4, #0
 800f56c:	fb06 5514 	mls	r5, r6, r4, r5
 800f570:	f8c0 e004 	str.w	lr, [r0, #4]
 800f574:	6085      	str	r5, [r0, #8]
 800f576:	2d00      	cmp	r5, #0
 800f578:	f43f af64 	beq.w	800f444 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800f57c:	43e4      	mvns	r4, r4
 800f57e:	6044      	str	r4, [r0, #4]
 800f580:	1b75      	subs	r5, r6, r5
 800f582:	e75e      	b.n	800f442 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800f584:	3d800000 	.word	0x3d800000

0800f588 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f588:	4602      	mov	r2, r0
 800f58a:	b148      	cbz	r0, 800f5a0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f58c:	2300      	movs	r3, #0
 800f58e:	b298      	uxth	r0, r3
 800f590:	3301      	adds	r3, #1
 800f592:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f596:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f59a:	2900      	cmp	r1, #0
 800f59c:	d1f7      	bne.n	800f58e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f59e:	4770      	bx	lr
 800f5a0:	4770      	bx	lr

0800f5a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f5a2:	b530      	push	{r4, r5, lr}
 800f5a4:	4604      	mov	r4, r0
 800f5a6:	b159      	cbz	r1, 800f5c0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f5a8:	b148      	cbz	r0, 800f5be <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f5aa:	2300      	movs	r3, #0
 800f5ac:	b298      	uxth	r0, r3
 800f5ae:	4282      	cmp	r2, r0
 800f5b0:	d905      	bls.n	800f5be <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f5b2:	5ccd      	ldrb	r5, [r1, r3]
 800f5b4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f5b8:	3301      	adds	r3, #1
 800f5ba:	2d00      	cmp	r5, #0
 800f5bc:	d1f6      	bne.n	800f5ac <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f5be:	bd30      	pop	{r4, r5, pc}
 800f5c0:	4608      	mov	r0, r1
 800f5c2:	e7fc      	b.n	800f5be <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f5c4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 800f5c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f5c6:	b08b      	sub	sp, #44	@ 0x2c
 800f5c8:	468c      	mov	ip, r1
 800f5ca:	2100      	movs	r1, #0
 800f5cc:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 800f5d0:	4604      	mov	r4, r0
 800f5d2:	261f      	movs	r6, #31
 800f5d4:	af01      	add	r7, sp, #4
 800f5d6:	fb94 fef3 	sdiv	lr, r4, r3
 800f5da:	fb03 441e 	mls	r4, r3, lr, r4
 800f5de:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f5e2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f5e6:	b2ec      	uxtb	r4, r5
 800f5e8:	2d09      	cmp	r5, #9
 800f5ea:	bfd4      	ite	le
 800f5ec:	3430      	addle	r4, #48	@ 0x30
 800f5ee:	3457      	addgt	r4, #87	@ 0x57
 800f5f0:	b2e4      	uxtb	r4, r4
 800f5f2:	55bc      	strb	r4, [r7, r6]
 800f5f4:	4674      	mov	r4, lr
 800f5f6:	1e71      	subs	r1, r6, #1
 800f5f8:	b974      	cbnz	r4, 800f618 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 800f5fa:	2800      	cmp	r0, #0
 800f5fc:	da05      	bge.n	800f60a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 800f5fe:	ab0a      	add	r3, sp, #40	@ 0x28
 800f600:	4419      	add	r1, r3
 800f602:	232d      	movs	r3, #45	@ 0x2d
 800f604:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f608:	1eb1      	subs	r1, r6, #2
 800f60a:	3101      	adds	r1, #1
 800f60c:	4439      	add	r1, r7
 800f60e:	4660      	mov	r0, ip
 800f610:	f7ff ffc7 	bl	800f5a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f614:	b00b      	add	sp, #44	@ 0x2c
 800f616:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f618:	460e      	mov	r6, r1
 800f61a:	e7dc      	b.n	800f5d6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0800f61c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 800f61c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f61e:	b08b      	sub	sp, #44	@ 0x2c
 800f620:	468c      	mov	ip, r1
 800f622:	2100      	movs	r1, #0
 800f624:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 800f628:	ae01      	add	r6, sp, #4
 800f62a:	211f      	movs	r1, #31
 800f62c:	fbb0 f7f3 	udiv	r7, r0, r3
 800f630:	fb03 0517 	mls	r5, r3, r7, r0
 800f634:	b2ec      	uxtb	r4, r5
 800f636:	2d09      	cmp	r5, #9
 800f638:	bfd4      	ite	le
 800f63a:	3430      	addle	r4, #48	@ 0x30
 800f63c:	3457      	addgt	r4, #87	@ 0x57
 800f63e:	b2e4      	uxtb	r4, r4
 800f640:	558c      	strb	r4, [r1, r6]
 800f642:	4638      	mov	r0, r7
 800f644:	1e4c      	subs	r4, r1, #1
 800f646:	b92f      	cbnz	r7, 800f654 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 800f648:	4431      	add	r1, r6
 800f64a:	4660      	mov	r0, ip
 800f64c:	f7ff ffa9 	bl	800f5a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f650:	b00b      	add	sp, #44	@ 0x2c
 800f652:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f654:	4621      	mov	r1, r4
 800f656:	e7e9      	b.n	800f62c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0800f658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f65c:	4691      	mov	r9, r2
 800f65e:	b085      	sub	sp, #20
 800f660:	6802      	ldr	r2, [r0, #0]
 800f662:	9201      	str	r2, [sp, #4]
 800f664:	4688      	mov	r8, r1
 800f666:	4683      	mov	fp, r0
 800f668:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 800f66c:	9103      	str	r1, [sp, #12]
 800f66e:	4610      	mov	r0, r2
 800f670:	461c      	mov	r4, r3
 800f672:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 800f676:	9302      	str	r3, [sp, #8]
 800f678:	f7ff ff86 	bl	800f588 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f67c:	f1b8 0f00 	cmp.w	r8, #0
 800f680:	bf0c      	ite	eq
 800f682:	4684      	moveq	ip, r0
 800f684:	f100 0c01 	addne.w	ip, r0, #1
 800f688:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 800f68c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 800f690:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800f692:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 800f694:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 800f698:	9903      	ldr	r1, [sp, #12]
 800f69a:	fa1f fc8c 	uxth.w	ip, ip
 800f69e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f6a2:	d041      	beq.n	800f728 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f6a4:	d834      	bhi.n	800f710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f6a6:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 800f6aa:	d059      	beq.n	800f760 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f6ac:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 800f6b0:	d03a      	beq.n	800f728 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f6b2:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 800f6b6:	d034      	beq.n	800f722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f6b8:	2400      	movs	r4, #0
 800f6ba:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800f6be:	3a01      	subs	r2, #1
 800f6c0:	b169      	cbz	r1, 800f6de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f6c2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800f6c4:	458c      	cmp	ip, r1
 800f6c6:	da09      	bge.n	800f6dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f6c8:	eba1 010c 	sub.w	r1, r1, ip
 800f6cc:	b289      	uxth	r1, r1
 800f6ce:	b933      	cbnz	r3, 800f6de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f6d0:	2e00      	cmp	r6, #0
 800f6d2:	d051      	beq.n	800f778 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f6d4:	2800      	cmp	r0, #0
 800f6d6:	d04f      	beq.n	800f778 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f6d8:	440c      	add	r4, r1
 800f6da:	b2a4      	uxth	r4, r4
 800f6dc:	2100      	movs	r1, #0
 800f6de:	682b      	ldr	r3, [r5, #0]
 800f6e0:	4293      	cmp	r3, r2
 800f6e2:	da07      	bge.n	800f6f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f6e4:	f1b8 0f00 	cmp.w	r8, #0
 800f6e8:	d004      	beq.n	800f6f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f6ea:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f6ee:	682b      	ldr	r3, [r5, #0]
 800f6f0:	3301      	adds	r3, #1
 800f6f2:	602b      	str	r3, [r5, #0]
 800f6f4:	2730      	movs	r7, #48	@ 0x30
 800f6f6:	2c00      	cmp	r4, #0
 800f6f8:	d04e      	beq.n	800f798 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f6fa:	682e      	ldr	r6, [r5, #0]
 800f6fc:	3c01      	subs	r4, #1
 800f6fe:	42b2      	cmp	r2, r6
 800f700:	b2a4      	uxth	r4, r4
 800f702:	dd49      	ble.n	800f798 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f704:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f708:	682b      	ldr	r3, [r5, #0]
 800f70a:	3301      	adds	r3, #1
 800f70c:	602b      	str	r3, [r5, #0]
 800f70e:	e7f2      	b.n	800f6f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f710:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 800f714:	d01d      	beq.n	800f752 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f716:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 800f71a:	d002      	beq.n	800f722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f71c:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 800f720:	e7c9      	b.n	800f6b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f722:	4684      	mov	ip, r0
 800f724:	f04f 0800 	mov.w	r8, #0
 800f728:	2c00      	cmp	r4, #0
 800f72a:	d0c6      	beq.n	800f6ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f72c:	b947      	cbnz	r7, 800f740 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f72e:	2801      	cmp	r0, #1
 800f730:	d106      	bne.n	800f740 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f732:	8814      	ldrh	r4, [r2, #0]
 800f734:	2c30      	cmp	r4, #48	@ 0x30
 800f736:	bf02      	ittt	eq
 800f738:	3202      	addeq	r2, #2
 800f73a:	f8cb 2000 	streq.w	r2, [fp]
 800f73e:	4638      	moveq	r0, r7
 800f740:	45bc      	cmp	ip, r7
 800f742:	da14      	bge.n	800f76e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f744:	b2bf      	uxth	r7, r7
 800f746:	eba7 040c 	sub.w	r4, r7, ip
 800f74a:	b2a4      	uxth	r4, r4
 800f74c:	46bc      	mov	ip, r7
 800f74e:	2600      	movs	r6, #0
 800f750:	e7b3      	b.n	800f6ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f752:	4684      	mov	ip, r0
 800f754:	b16c      	cbz	r4, 800f772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f756:	42b8      	cmp	r0, r7
 800f758:	dd00      	ble.n	800f75c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f75a:	b2b8      	uxth	r0, r7
 800f75c:	2400      	movs	r4, #0
 800f75e:	e003      	b.n	800f768 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f760:	f04f 0c01 	mov.w	ip, #1
 800f764:	2400      	movs	r4, #0
 800f766:	4660      	mov	r0, ip
 800f768:	4626      	mov	r6, r4
 800f76a:	46a0      	mov	r8, r4
 800f76c:	e7a5      	b.n	800f6ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f76e:	2400      	movs	r4, #0
 800f770:	e7ed      	b.n	800f74e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f772:	4626      	mov	r6, r4
 800f774:	46a0      	mov	r8, r4
 800f776:	e7a0      	b.n	800f6ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f778:	2900      	cmp	r1, #0
 800f77a:	d0b0      	beq.n	800f6de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f77c:	2720      	movs	r7, #32
 800f77e:	682e      	ldr	r6, [r5, #0]
 800f780:	2900      	cmp	r1, #0
 800f782:	d0ac      	beq.n	800f6de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f784:	3901      	subs	r1, #1
 800f786:	4296      	cmp	r6, r2
 800f788:	b289      	uxth	r1, r1
 800f78a:	daa7      	bge.n	800f6dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f78c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f790:	682b      	ldr	r3, [r5, #0]
 800f792:	3301      	adds	r3, #1
 800f794:	602b      	str	r3, [r5, #0]
 800f796:	e7f2      	b.n	800f77e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f798:	b188      	cbz	r0, 800f7be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f79a:	682b      	ldr	r3, [r5, #0]
 800f79c:	3801      	subs	r0, #1
 800f79e:	429a      	cmp	r2, r3
 800f7a0:	b280      	uxth	r0, r0
 800f7a2:	dd0c      	ble.n	800f7be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f7a4:	f8db 3000 	ldr.w	r3, [fp]
 800f7a8:	1c9c      	adds	r4, r3, #2
 800f7aa:	f8cb 4000 	str.w	r4, [fp]
 800f7ae:	881c      	ldrh	r4, [r3, #0]
 800f7b0:	682b      	ldr	r3, [r5, #0]
 800f7b2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f7b6:	682b      	ldr	r3, [r5, #0]
 800f7b8:	3301      	adds	r3, #1
 800f7ba:	602b      	str	r3, [r5, #0]
 800f7bc:	e7ec      	b.n	800f798 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f7be:	2620      	movs	r6, #32
 800f7c0:	b151      	cbz	r1, 800f7d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f7c2:	6828      	ldr	r0, [r5, #0]
 800f7c4:	3901      	subs	r1, #1
 800f7c6:	4282      	cmp	r2, r0
 800f7c8:	b289      	uxth	r1, r1
 800f7ca:	dd05      	ble.n	800f7d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f7cc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f7d0:	682b      	ldr	r3, [r5, #0]
 800f7d2:	3301      	adds	r3, #1
 800f7d4:	602b      	str	r3, [r5, #0]
 800f7d6:	e7f3      	b.n	800f7c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f7d8:	b005      	add	sp, #20
 800f7da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f7de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f7de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7e2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f7e6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 800f7ea:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 800f7ee:	2400      	movs	r4, #0
 800f7f0:	8014      	strh	r4, [r2, #0]
 800f7f2:	701c      	strb	r4, [r3, #0]
 800f7f4:	f888 4000 	strb.w	r4, [r8]
 800f7f8:	f88c 4000 	strb.w	r4, [ip]
 800f7fc:	f88e 4000 	strb.w	r4, [lr]
 800f800:	703c      	strb	r4, [r7, #0]
 800f802:	6804      	ldr	r4, [r0, #0]
 800f804:	b1a4      	cbz	r4, 800f830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f806:	8824      	ldrh	r4, [r4, #0]
 800f808:	f04f 0901 	mov.w	r9, #1
 800f80c:	b314      	cbz	r4, 800f854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f80e:	2c2b      	cmp	r4, #43	@ 0x2b
 800f810:	d001      	beq.n	800f816 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f812:	2c20      	cmp	r4, #32
 800f814:	d110      	bne.n	800f838 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f816:	8014      	strh	r4, [r2, #0]
 800f818:	6804      	ldr	r4, [r0, #0]
 800f81a:	b10c      	cbz	r4, 800f820 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f81c:	3402      	adds	r4, #2
 800f81e:	6004      	str	r4, [r0, #0]
 800f820:	680c      	ldr	r4, [r1, #0]
 800f822:	b10c      	cbz	r4, 800f828 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f824:	3401      	adds	r4, #1
 800f826:	600c      	str	r4, [r1, #0]
 800f828:	6804      	ldr	r4, [r0, #0]
 800f82a:	b17c      	cbz	r4, 800f84c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f82c:	8824      	ldrh	r4, [r4, #0]
 800f82e:	e7ed      	b.n	800f80c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f830:	680c      	ldr	r4, [r1, #0]
 800f832:	b17c      	cbz	r4, 800f854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f834:	7824      	ldrb	r4, [r4, #0]
 800f836:	e7e7      	b.n	800f808 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f838:	2c2d      	cmp	r4, #45	@ 0x2d
 800f83a:	d102      	bne.n	800f842 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f83c:	f883 9000 	strb.w	r9, [r3]
 800f840:	e7ea      	b.n	800f818 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f842:	2c23      	cmp	r4, #35	@ 0x23
 800f844:	d107      	bne.n	800f856 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f846:	f888 9000 	strb.w	r9, [r8]
 800f84a:	e7e5      	b.n	800f818 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f84c:	680c      	ldr	r4, [r1, #0]
 800f84e:	b10c      	cbz	r4, 800f854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f850:	7824      	ldrb	r4, [r4, #0]
 800f852:	e7db      	b.n	800f80c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f854:	2400      	movs	r4, #0
 800f856:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 800f85a:	2b09      	cmp	r3, #9
 800f85c:	d901      	bls.n	800f862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f85e:	2c2a      	cmp	r4, #42	@ 0x2a
 800f860:	d122      	bne.n	800f8a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f862:	2301      	movs	r3, #1
 800f864:	2c30      	cmp	r4, #48	@ 0x30
 800f866:	f88e 3000 	strb.w	r3, [lr]
 800f86a:	d10d      	bne.n	800f888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f86c:	f88c 3000 	strb.w	r3, [ip]
 800f870:	6803      	ldr	r3, [r0, #0]
 800f872:	b10b      	cbz	r3, 800f878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f874:	3302      	adds	r3, #2
 800f876:	6003      	str	r3, [r0, #0]
 800f878:	680b      	ldr	r3, [r1, #0]
 800f87a:	b10b      	cbz	r3, 800f880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f87c:	3301      	adds	r3, #1
 800f87e:	600b      	str	r3, [r1, #0]
 800f880:	6803      	ldr	r3, [r0, #0]
 800f882:	2b00      	cmp	r3, #0
 800f884:	d02f      	beq.n	800f8e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f886:	881c      	ldrh	r4, [r3, #0]
 800f888:	2c2a      	cmp	r4, #42	@ 0x2a
 800f88a:	d135      	bne.n	800f8f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f88c:	f04f 33ff 	mov.w	r3, #4294967295
 800f890:	6033      	str	r3, [r6, #0]
 800f892:	6803      	ldr	r3, [r0, #0]
 800f894:	b10b      	cbz	r3, 800f89a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f896:	3302      	adds	r3, #2
 800f898:	6003      	str	r3, [r0, #0]
 800f89a:	680b      	ldr	r3, [r1, #0]
 800f89c:	b10b      	cbz	r3, 800f8a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f89e:	3301      	adds	r3, #1
 800f8a0:	600b      	str	r3, [r1, #0]
 800f8a2:	6803      	ldr	r3, [r0, #0]
 800f8a4:	b31b      	cbz	r3, 800f8ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f8a6:	881c      	ldrh	r4, [r3, #0]
 800f8a8:	2c2e      	cmp	r4, #46	@ 0x2e
 800f8aa:	d11a      	bne.n	800f8e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f8ac:	2301      	movs	r3, #1
 800f8ae:	703b      	strb	r3, [r7, #0]
 800f8b0:	6803      	ldr	r3, [r0, #0]
 800f8b2:	b10b      	cbz	r3, 800f8b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f8b4:	3302      	adds	r3, #2
 800f8b6:	6003      	str	r3, [r0, #0]
 800f8b8:	680b      	ldr	r3, [r1, #0]
 800f8ba:	b10b      	cbz	r3, 800f8c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f8bc:	3301      	adds	r3, #1
 800f8be:	600b      	str	r3, [r1, #0]
 800f8c0:	6803      	ldr	r3, [r0, #0]
 800f8c2:	2b00      	cmp	r3, #0
 800f8c4:	d036      	beq.n	800f934 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f8c6:	881b      	ldrh	r3, [r3, #0]
 800f8c8:	2b2a      	cmp	r3, #42	@ 0x2a
 800f8ca:	d137      	bne.n	800f93c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f8cc:	f04f 33ff 	mov.w	r3, #4294967295
 800f8d0:	602b      	str	r3, [r5, #0]
 800f8d2:	6803      	ldr	r3, [r0, #0]
 800f8d4:	b10b      	cbz	r3, 800f8da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f8d6:	3302      	adds	r3, #2
 800f8d8:	6003      	str	r3, [r0, #0]
 800f8da:	680b      	ldr	r3, [r1, #0]
 800f8dc:	b10b      	cbz	r3, 800f8e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f8de:	3301      	adds	r3, #1
 800f8e0:	600b      	str	r3, [r1, #0]
 800f8e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f8e6:	680c      	ldr	r4, [r1, #0]
 800f8e8:	b134      	cbz	r4, 800f8f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f8ea:	7824      	ldrb	r4, [r4, #0]
 800f8ec:	e7cc      	b.n	800f888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f8ee:	680b      	ldr	r3, [r1, #0]
 800f8f0:	2b00      	cmp	r3, #0
 800f8f2:	d0f6      	beq.n	800f8e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f8f4:	781c      	ldrb	r4, [r3, #0]
 800f8f6:	e7d7      	b.n	800f8a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f8f8:	2300      	movs	r3, #0
 800f8fa:	6033      	str	r3, [r6, #0]
 800f8fc:	220a      	movs	r2, #10
 800f8fe:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 800f902:	fa1f f38c 	uxth.w	r3, ip
 800f906:	2b09      	cmp	r3, #9
 800f908:	d8ce      	bhi.n	800f8a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f90a:	6833      	ldr	r3, [r6, #0]
 800f90c:	fb02 c303 	mla	r3, r2, r3, ip
 800f910:	6033      	str	r3, [r6, #0]
 800f912:	6803      	ldr	r3, [r0, #0]
 800f914:	b10b      	cbz	r3, 800f91a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f916:	3302      	adds	r3, #2
 800f918:	6003      	str	r3, [r0, #0]
 800f91a:	680b      	ldr	r3, [r1, #0]
 800f91c:	b10b      	cbz	r3, 800f922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f91e:	3301      	adds	r3, #1
 800f920:	600b      	str	r3, [r1, #0]
 800f922:	6803      	ldr	r3, [r0, #0]
 800f924:	b10b      	cbz	r3, 800f92a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f926:	881c      	ldrh	r4, [r3, #0]
 800f928:	e7e9      	b.n	800f8fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f92a:	680c      	ldr	r4, [r1, #0]
 800f92c:	2c00      	cmp	r4, #0
 800f92e:	d0e6      	beq.n	800f8fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f930:	7824      	ldrb	r4, [r4, #0]
 800f932:	e7e4      	b.n	800f8fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f934:	680b      	ldr	r3, [r1, #0]
 800f936:	b10b      	cbz	r3, 800f93c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f938:	781b      	ldrb	r3, [r3, #0]
 800f93a:	e7c5      	b.n	800f8c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f93c:	2200      	movs	r2, #0
 800f93e:	602a      	str	r2, [r5, #0]
 800f940:	240a      	movs	r4, #10
 800f942:	3b30      	subs	r3, #48	@ 0x30
 800f944:	b29e      	uxth	r6, r3
 800f946:	2e09      	cmp	r6, #9
 800f948:	682a      	ldr	r2, [r5, #0]
 800f94a:	d813      	bhi.n	800f974 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f94c:	fb04 3302 	mla	r3, r4, r2, r3
 800f950:	602b      	str	r3, [r5, #0]
 800f952:	6803      	ldr	r3, [r0, #0]
 800f954:	b10b      	cbz	r3, 800f95a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f956:	3302      	adds	r3, #2
 800f958:	6003      	str	r3, [r0, #0]
 800f95a:	680b      	ldr	r3, [r1, #0]
 800f95c:	b10b      	cbz	r3, 800f962 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f95e:	3301      	adds	r3, #1
 800f960:	600b      	str	r3, [r1, #0]
 800f962:	6803      	ldr	r3, [r0, #0]
 800f964:	b10b      	cbz	r3, 800f96a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f966:	881b      	ldrh	r3, [r3, #0]
 800f968:	e7eb      	b.n	800f942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f96a:	680b      	ldr	r3, [r1, #0]
 800f96c:	2b00      	cmp	r3, #0
 800f96e:	d0e8      	beq.n	800f942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f970:	781b      	ldrb	r3, [r3, #0]
 800f972:	e7e6      	b.n	800f942 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f974:	2a06      	cmp	r2, #6
 800f976:	bfa8      	it	ge
 800f978:	2206      	movge	r2, #6
 800f97a:	602a      	str	r2, [r5, #0]
 800f97c:	e7b1      	b.n	800f8e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f97e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f982:	b0a3      	sub	sp, #140	@ 0x8c
 800f984:	2600      	movs	r6, #0
 800f986:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 800f98a:	4607      	mov	r7, r0
 800f98c:	4688      	mov	r8, r1
 800f98e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f992:	4631      	mov	r1, r6
 800f994:	2242      	movs	r2, #66	@ 0x42
 800f996:	4648      	mov	r0, r9
 800f998:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 800f99a:	960d      	str	r6, [sp, #52]	@ 0x34
 800f99c:	f00e f8a9 	bl	801daf2 <memset>
 800f9a0:	b15f      	cbz	r7, 800f9ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f9a2:	f108 3aff 	add.w	sl, r8, #4294967295
 800f9a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f9a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f9aa:	b152      	cbz	r2, 800f9c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f9ac:	8812      	ldrh	r2, [r2, #0]
 800f9ae:	b10a      	cbz	r2, 800f9b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f9b0:	459a      	cmp	sl, r3
 800f9b2:	dc2e      	bgt.n	800fa12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f9b4:	2200      	movs	r2, #0
 800f9b6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f9ba:	4638      	mov	r0, r7
 800f9bc:	b023      	add	sp, #140	@ 0x8c
 800f9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9c2:	9a08      	ldr	r2, [sp, #32]
 800f9c4:	2a00      	cmp	r2, #0
 800f9c6:	d0f5      	beq.n	800f9b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f9c8:	7812      	ldrb	r2, [r2, #0]
 800f9ca:	e7f0      	b.n	800f9ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f9cc:	2d00      	cmp	r5, #0
 800f9ce:	d0ea      	beq.n	800f9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f9d0:	782a      	ldrb	r2, [r5, #0]
 800f9d2:	b142      	cbz	r2, 800f9e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f9d4:	2a25      	cmp	r2, #37	@ 0x25
 800f9d6:	d001      	beq.n	800f9dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f9d8:	459a      	cmp	sl, r3
 800f9da:	dc08      	bgt.n	800f9ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f9dc:	f1bb 0f00 	cmp.w	fp, #0
 800f9e0:	d121      	bne.n	800fa26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f9e2:	2d00      	cmp	r5, #0
 800f9e4:	d0df      	beq.n	800f9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f9e6:	782a      	ldrb	r2, [r5, #0]
 800f9e8:	f04f 0b00 	mov.w	fp, #0
 800f9ec:	e01d      	b.n	800fa2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f9ee:	f1bb 0f00 	cmp.w	fp, #0
 800f9f2:	d078      	beq.n	800fae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f9f4:	f8bb 2000 	ldrh.w	r2, [fp]
 800f9f8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f9fc:	f1bb 0f00 	cmp.w	fp, #0
 800fa00:	d002      	beq.n	800fa08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800fa02:	f10b 0202 	add.w	r2, fp, #2
 800fa06:	9209      	str	r2, [sp, #36]	@ 0x24
 800fa08:	b10d      	cbz	r5, 800fa0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800fa0a:	3501      	adds	r5, #1
 800fa0c:	9508      	str	r5, [sp, #32]
 800fa0e:	3301      	adds	r3, #1
 800fa10:	930d      	str	r3, [sp, #52]	@ 0x34
 800fa12:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800fa16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fa18:	f1bb 0f00 	cmp.w	fp, #0
 800fa1c:	d0d6      	beq.n	800f9cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800fa1e:	f8bb 2000 	ldrh.w	r2, [fp]
 800fa22:	2a00      	cmp	r2, #0
 800fa24:	d1d6      	bne.n	800f9d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800fa26:	f8bb 2000 	ldrh.w	r2, [fp]
 800fa2a:	2a00      	cmp	r2, #0
 800fa2c:	d0bb      	beq.n	800f9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fa2e:	459a      	cmp	sl, r3
 800fa30:	ddb9      	ble.n	800f9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fa32:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 800fa36:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 800fa3a:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 800fa3e:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 800fa42:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 800fa46:	960e      	str	r6, [sp, #56]	@ 0x38
 800fa48:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 800fa4c:	960f      	str	r6, [sp, #60]	@ 0x3c
 800fa4e:	f1bb 0f00 	cmp.w	fp, #0
 800fa52:	d002      	beq.n	800fa5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800fa54:	f10b 0302 	add.w	r3, fp, #2
 800fa58:	9309      	str	r3, [sp, #36]	@ 0x24
 800fa5a:	b10d      	cbz	r5, 800fa60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800fa5c:	1c6b      	adds	r3, r5, #1
 800fa5e:	9308      	str	r3, [sp, #32]
 800fa60:	ab0f      	add	r3, sp, #60	@ 0x3c
 800fa62:	9305      	str	r3, [sp, #20]
 800fa64:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 800fa68:	9304      	str	r3, [sp, #16]
 800fa6a:	ab0e      	add	r3, sp, #56	@ 0x38
 800fa6c:	9303      	str	r3, [sp, #12]
 800fa6e:	ab0c      	add	r3, sp, #48	@ 0x30
 800fa70:	9302      	str	r3, [sp, #8]
 800fa72:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 800fa76:	9301      	str	r3, [sp, #4]
 800fa78:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 800fa7c:	9300      	str	r3, [sp, #0]
 800fa7e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 800fa82:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 800fa86:	a908      	add	r1, sp, #32
 800fa88:	a809      	add	r0, sp, #36	@ 0x24
 800fa8a:	f7ff fea8 	bl	800f7de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800fa8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fa90:	2b00      	cmp	r3, #0
 800fa92:	bfbe      	ittt	lt
 800fa94:	6823      	ldrlt	r3, [r4, #0]
 800fa96:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fa9a:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800fa9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fa9e:	bfb8      	it	lt
 800faa0:	3404      	addlt	r4, #4
 800faa2:	2b00      	cmp	r3, #0
 800faa4:	bfb8      	it	lt
 800faa6:	6823      	ldrlt	r3, [r4, #0]
 800faa8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800faac:	bfbe      	ittt	lt
 800faae:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800fab2:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 800fab4:	3404      	addlt	r4, #4
 800fab6:	b1d9      	cbz	r1, 800faf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800fab8:	880b      	ldrh	r3, [r1, #0]
 800faba:	2b69      	cmp	r3, #105	@ 0x69
 800fabc:	d01f      	beq.n	800fafe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fabe:	d82f      	bhi.n	800fb20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800fac0:	2b58      	cmp	r3, #88	@ 0x58
 800fac2:	d01c      	beq.n	800fafe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fac4:	d818      	bhi.n	800faf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800fac6:	2b25      	cmp	r3, #37	@ 0x25
 800fac8:	d034      	beq.n	800fb34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800faca:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800face:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fad0:	f1bb 0f00 	cmp.w	fp, #0
 800fad4:	f000 80b8 	beq.w	800fc48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800fad8:	f8bb 5000 	ldrh.w	r5, [fp]
 800fadc:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800fae0:	3301      	adds	r3, #1
 800fae2:	930d      	str	r3, [sp, #52]	@ 0x34
 800fae4:	e029      	b.n	800fb3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fae6:	b10d      	cbz	r5, 800faec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800fae8:	782a      	ldrb	r2, [r5, #0]
 800faea:	e785      	b.n	800f9f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800faec:	462a      	mov	r2, r5
 800faee:	e783      	b.n	800f9f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800faf0:	2a00      	cmp	r2, #0
 800faf2:	d0ea      	beq.n	800faca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800faf4:	7813      	ldrb	r3, [r2, #0]
 800faf6:	e7e0      	b.n	800faba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800faf8:	3b63      	subs	r3, #99	@ 0x63
 800fafa:	2b01      	cmp	r3, #1
 800fafc:	d8e5      	bhi.n	800faca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fafe:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 800fb02:	b329      	cbz	r1, 800fb50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800fb04:	880b      	ldrh	r3, [r1, #0]
 800fb06:	2b69      	cmp	r3, #105	@ 0x69
 800fb08:	d063      	beq.n	800fbd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fb0a:	d825      	bhi.n	800fb58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800fb0c:	2b63      	cmp	r3, #99	@ 0x63
 800fb0e:	d038      	beq.n	800fb82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800fb10:	2b64      	cmp	r3, #100	@ 0x64
 800fb12:	d05e      	beq.n	800fbd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800fb14:	2b58      	cmp	r3, #88	@ 0x58
 800fb16:	d07b      	beq.n	800fc10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800fb18:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 800fb1c:	4625      	mov	r5, r4
 800fb1e:	e036      	b.n	800fb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fb20:	2b73      	cmp	r3, #115	@ 0x73
 800fb22:	d0ec      	beq.n	800fafe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fb24:	d802      	bhi.n	800fb2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800fb26:	2b6f      	cmp	r3, #111	@ 0x6f
 800fb28:	d1cf      	bne.n	800faca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800fb2a:	e7e8      	b.n	800fafe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fb2c:	2b75      	cmp	r3, #117	@ 0x75
 800fb2e:	d0e6      	beq.n	800fafe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800fb30:	2b78      	cmp	r3, #120	@ 0x78
 800fb32:	e7f9      	b.n	800fb28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800fb34:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fb36:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800fb3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fb3c:	b10b      	cbz	r3, 800fb42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800fb3e:	3302      	adds	r3, #2
 800fb40:	9309      	str	r3, [sp, #36]	@ 0x24
 800fb42:	9b08      	ldr	r3, [sp, #32]
 800fb44:	2b00      	cmp	r3, #0
 800fb46:	f43f af2e 	beq.w	800f9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fb4a:	3301      	adds	r3, #1
 800fb4c:	9308      	str	r3, [sp, #32]
 800fb4e:	e72a      	b.n	800f9a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fb50:	2a00      	cmp	r2, #0
 800fb52:	d0e1      	beq.n	800fb18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fb54:	7813      	ldrb	r3, [r2, #0]
 800fb56:	e7d6      	b.n	800fb06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800fb58:	2b73      	cmp	r3, #115	@ 0x73
 800fb5a:	d036      	beq.n	800fbca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800fb5c:	d807      	bhi.n	800fb6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800fb5e:	2b6f      	cmp	r3, #111	@ 0x6f
 800fb60:	d1da      	bne.n	800fb18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fb62:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fb64:	1d25      	adds	r5, r4, #4
 800fb66:	eba8 0202 	sub.w	r2, r8, r2
 800fb6a:	2308      	movs	r3, #8
 800fb6c:	e04a      	b.n	800fc04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fb6e:	2b75      	cmp	r3, #117	@ 0x75
 800fb70:	d043      	beq.n	800fbfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800fb72:	2b78      	cmp	r3, #120	@ 0x78
 800fb74:	d1d0      	bne.n	800fb18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fb76:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fb78:	1d25      	adds	r5, r4, #4
 800fb7a:	eba8 0202 	sub.w	r2, r8, r2
 800fb7e:	2310      	movs	r3, #16
 800fb80:	e040      	b.n	800fc04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fb82:	6823      	ldr	r3, [r4, #0]
 800fb84:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 800fb88:	1d25      	adds	r5, r4, #4
 800fb8a:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 800fb8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fb90:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 800fb94:	2b00      	cmp	r3, #0
 800fb96:	d052      	beq.n	800fc3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800fb98:	881a      	ldrh	r2, [r3, #0]
 800fb9a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 800fb9e:	a80d      	add	r0, sp, #52	@ 0x34
 800fba0:	9005      	str	r0, [sp, #20]
 800fba2:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 800fba6:	9004      	str	r0, [sp, #16]
 800fba8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800fbaa:	9003      	str	r0, [sp, #12]
 800fbac:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 800fbb0:	9002      	str	r0, [sp, #8]
 800fbb2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800fbb4:	9001      	str	r0, [sp, #4]
 800fbb6:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 800fbba:	9000      	str	r0, [sp, #0]
 800fbbc:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800fbc0:	a810      	add	r0, sp, #64	@ 0x40
 800fbc2:	f7ff fd49 	bl	800f658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800fbc6:	462c      	mov	r4, r5
 800fbc8:	e7b7      	b.n	800fb3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fbca:	6823      	ldr	r3, [r4, #0]
 800fbcc:	1d25      	adds	r5, r4, #4
 800fbce:	9310      	str	r3, [sp, #64]	@ 0x40
 800fbd0:	e7dd      	b.n	800fb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fbd2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fbd4:	6820      	ldr	r0, [r4, #0]
 800fbd6:	eba8 0202 	sub.w	r2, r8, r2
 800fbda:	230a      	movs	r3, #10
 800fbdc:	b292      	uxth	r2, r2
 800fbde:	4649      	mov	r1, r9
 800fbe0:	f7ff fcf0 	bl	800f5c4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 800fbe4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800fbe8:	2b2d      	cmp	r3, #45	@ 0x2d
 800fbea:	f104 0504 	add.w	r5, r4, #4
 800fbee:	d1ce      	bne.n	800fb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fbf0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800fbf4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800fbf6:	3302      	adds	r3, #2
 800fbf8:	e7e9      	b.n	800fbce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800fbfa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fbfc:	1d25      	adds	r5, r4, #4
 800fbfe:	eba8 0202 	sub.w	r2, r8, r2
 800fc02:	230a      	movs	r3, #10
 800fc04:	b292      	uxth	r2, r2
 800fc06:	4649      	mov	r1, r9
 800fc08:	6820      	ldr	r0, [r4, #0]
 800fc0a:	f7ff fd07 	bl	800f61c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800fc0e:	e7be      	b.n	800fb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fc10:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800fc12:	6820      	ldr	r0, [r4, #0]
 800fc14:	eba8 0202 	sub.w	r2, r8, r2
 800fc18:	b292      	uxth	r2, r2
 800fc1a:	2310      	movs	r3, #16
 800fc1c:	4649      	mov	r1, r9
 800fc1e:	f7ff fcfd 	bl	800f61c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800fc22:	1d25      	adds	r5, r4, #4
 800fc24:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 800fc28:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800fc2c:	2b00      	cmp	r3, #0
 800fc2e:	d0ae      	beq.n	800fb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fc30:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 800fc34:	2919      	cmp	r1, #25
 800fc36:	d8f7      	bhi.n	800fc28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800fc38:	3b20      	subs	r3, #32
 800fc3a:	8013      	strh	r3, [r2, #0]
 800fc3c:	e7f4      	b.n	800fc28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800fc3e:	9a08      	ldr	r2, [sp, #32]
 800fc40:	2a00      	cmp	r2, #0
 800fc42:	d0aa      	beq.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fc44:	7812      	ldrb	r2, [r2, #0]
 800fc46:	e7a8      	b.n	800fb9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fc48:	2d00      	cmp	r5, #0
 800fc4a:	f43f af47 	beq.w	800fadc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800fc4e:	782d      	ldrb	r5, [r5, #0]
 800fc50:	e744      	b.n	800fadc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800fc52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800fc52:	b507      	push	{r0, r1, r2, lr}
 800fc54:	9300      	str	r3, [sp, #0]
 800fc56:	4613      	mov	r3, r2
 800fc58:	2200      	movs	r2, #0
 800fc5a:	f7ff fe90 	bl	800f97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800fc5e:	b003      	add	sp, #12
 800fc60:	f85d fb04 	ldr.w	pc, [sp], #4

0800fc64 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800fc64:	b40c      	push	{r2, r3}
 800fc66:	b507      	push	{r0, r1, r2, lr}
 800fc68:	ab04      	add	r3, sp, #16
 800fc6a:	f853 2b04 	ldr.w	r2, [r3], #4
 800fc6e:	9301      	str	r3, [sp, #4]
 800fc70:	f7ff ffef 	bl	800fc52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800fc74:	b003      	add	sp, #12
 800fc76:	f85d eb04 	ldr.w	lr, [sp], #4
 800fc7a:	b002      	add	sp, #8
 800fc7c:	4770      	bx	lr
	...

0800fc80 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fc80:	4b01      	ldr	r3, [pc, #4]	@ (800fc88 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fc82:	6018      	str	r0, [r3, #0]
 800fc84:	4770      	bx	lr
 800fc86:	bf00      	nop
 800fc88:	200132e8 	.word	0x200132e8

0800fc8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fc8c:	4b06      	ldr	r3, [pc, #24]	@ (800fca8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fc8e:	881a      	ldrh	r2, [r3, #0]
 800fc90:	4282      	cmp	r2, r0
 800fc92:	d807      	bhi.n	800fca4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fc94:	4b05      	ldr	r3, [pc, #20]	@ (800fcac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fc96:	881b      	ldrh	r3, [r3, #0]
 800fc98:	4413      	add	r3, r2
 800fc9a:	4298      	cmp	r0, r3
 800fc9c:	bfac      	ite	ge
 800fc9e:	2000      	movge	r0, #0
 800fca0:	2001      	movlt	r0, #1
 800fca2:	4770      	bx	lr
 800fca4:	2000      	movs	r0, #0
 800fca6:	4770      	bx	lr
 800fca8:	20013308 	.word	0x20013308
 800fcac:	2001330c 	.word	0x2001330c

0800fcb0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fcb0:	b508      	push	{r3, lr}
 800fcb2:	4601      	mov	r1, r0
 800fcb4:	f7ff ffea 	bl	800fc8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fcb8:	b118      	cbz	r0, 800fcc2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fcba:	4b02      	ldr	r3, [pc, #8]	@ (800fcc4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fcbc:	681b      	ldr	r3, [r3, #0]
 800fcbe:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800fcc2:	bd08      	pop	{r3, pc}
 800fcc4:	200132ec 	.word	0x200132ec

0800fcc8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fcc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fcca:	4c24      	ldr	r4, [pc, #144]	@ (800fd5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800fccc:	6823      	ldr	r3, [r4, #0]
 800fcce:	2b00      	cmp	r3, #0
 800fcd0:	d042      	beq.n	800fd58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fcd2:	4a23      	ldr	r2, [pc, #140]	@ (800fd60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fcd4:	4d23      	ldr	r5, [pc, #140]	@ (800fd64 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fcd6:	8811      	ldrh	r1, [r2, #0]
 800fcd8:	f8b5 c000 	ldrh.w	ip, [r5]
 800fcdc:	4822      	ldr	r0, [pc, #136]	@ (800fd68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fcde:	4461      	add	r1, ip
 800fce0:	1c4a      	adds	r2, r1, #1
 800fce2:	f022 0201 	bic.w	r2, r2, #1
 800fce6:	008f      	lsls	r7, r1, #2
 800fce8:	0412      	lsls	r2, r2, #16
 800fcea:	19de      	adds	r6, r3, r7
 800fcec:	0c12      	lsrs	r2, r2, #16
 800fcee:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fcf2:	6006      	str	r6, [r0, #0]
 800fcf4:	4e1d      	ldr	r6, [pc, #116]	@ (800fd6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fcf6:	19da      	adds	r2, r3, r7
 800fcf8:	6032      	str	r2, [r6, #0]
 800fcfa:	220e      	movs	r2, #14
 800fcfc:	fb02 f20c 	mul.w	r2, r2, ip
 800fd00:	3203      	adds	r2, #3
 800fd02:	f022 0203 	bic.w	r2, r2, #3
 800fd06:	443a      	add	r2, r7
 800fd08:	4f19      	ldr	r7, [pc, #100]	@ (800fd70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fd0a:	4413      	add	r3, r2
 800fd0c:	603b      	str	r3, [r7, #0]
 800fd0e:	4f19      	ldr	r7, [pc, #100]	@ (800fd74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fd10:	2300      	movs	r3, #0
 800fd12:	803b      	strh	r3, [r7, #0]
 800fd14:	4f18      	ldr	r7, [pc, #96]	@ (800fd78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800fd16:	683f      	ldr	r7, [r7, #0]
 800fd18:	1aba      	subs	r2, r7, r2
 800fd1a:	4f18      	ldr	r7, [pc, #96]	@ (800fd7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800fd1c:	603a      	str	r2, [r7, #0]
 800fd1e:	4a18      	ldr	r2, [pc, #96]	@ (800fd80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800fd20:	469c      	mov	ip, r3
 800fd22:	8013      	strh	r3, [r2, #0]
 800fd24:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 800fd28:	428b      	cmp	r3, r1
 800fd2a:	d10d      	bne.n	800fd48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800fd2c:	882d      	ldrh	r5, [r5, #0]
 800fd2e:	6830      	ldr	r0, [r6, #0]
 800fd30:	2300      	movs	r3, #0
 800fd32:	240e      	movs	r4, #14
 800fd34:	429d      	cmp	r5, r3
 800fd36:	d90f      	bls.n	800fd58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fd38:	fb04 0203 	mla	r2, r4, r3, r0
 800fd3c:	3301      	adds	r3, #1
 800fd3e:	7b11      	ldrb	r1, [r2, #12]
 800fd40:	f36f 1145 	bfc	r1, #5, #1
 800fd44:	7311      	strb	r1, [r2, #12]
 800fd46:	e7f5      	b.n	800fd34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800fd48:	6822      	ldr	r2, [r4, #0]
 800fd4a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800fd4e:	6802      	ldr	r2, [r0, #0]
 800fd50:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800fd54:	3301      	adds	r3, #1
 800fd56:	e7e7      	b.n	800fd28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800fd58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fd5a:	bf00      	nop
 800fd5c:	200132ec 	.word	0x200132ec
 800fd60:	20013308 	.word	0x20013308
 800fd64:	2001330c 	.word	0x2001330c
 800fd68:	20013300 	.word	0x20013300
 800fd6c:	200132f0 	.word	0x200132f0
 800fd70:	200132f8 	.word	0x200132f8
 800fd74:	2001330a 	.word	0x2001330a
 800fd78:	200132f4 	.word	0x200132f4
 800fd7c:	20013304 	.word	0x20013304
 800fd80:	200132fc 	.word	0x200132fc

0800fd84 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800fd84:	4b06      	ldr	r3, [pc, #24]	@ (800fda0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800fd86:	681b      	ldr	r3, [r3, #0]
 800fd88:	b943      	cbnz	r3, 800fd9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fd8a:	b139      	cbz	r1, 800fd9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fd8c:	4b05      	ldr	r3, [pc, #20]	@ (800fda4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800fd8e:	801a      	strh	r2, [r3, #0]
 800fd90:	4b05      	ldr	r3, [pc, #20]	@ (800fda8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800fd92:	6019      	str	r1, [r3, #0]
 800fd94:	4b05      	ldr	r3, [pc, #20]	@ (800fdac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800fd96:	6018      	str	r0, [r3, #0]
 800fd98:	f7ff bf96 	b.w	800fcc8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800fd9c:	4770      	bx	lr
 800fd9e:	bf00      	nop
 800fda0:	200132f8 	.word	0x200132f8
 800fda4:	2001330c 	.word	0x2001330c
 800fda8:	200132f4 	.word	0x200132f4
 800fdac:	200132ec 	.word	0x200132ec

0800fdb0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800fdb0:	b470      	push	{r4, r5, r6}
 800fdb2:	4c07      	ldr	r4, [pc, #28]	@ (800fdd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800fdb4:	6826      	ldr	r6, [r4, #0]
 800fdb6:	4605      	mov	r5, r0
 800fdb8:	4610      	mov	r0, r2
 800fdba:	9a03      	ldr	r2, [sp, #12]
 800fdbc:	b936      	cbnz	r6, 800fdcc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800fdbe:	6025      	str	r5, [r4, #0]
 800fdc0:	4c04      	ldr	r4, [pc, #16]	@ (800fdd4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800fdc2:	8021      	strh	r1, [r4, #0]
 800fdc4:	bc70      	pop	{r4, r5, r6}
 800fdc6:	4619      	mov	r1, r3
 800fdc8:	f7ff bfdc 	b.w	800fd84 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800fdcc:	bc70      	pop	{r4, r5, r6}
 800fdce:	4770      	bx	lr
 800fdd0:	20013310 	.word	0x20013310
 800fdd4:	20013308 	.word	0x20013308

0800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800fdd8:	4a12      	ldr	r2, [pc, #72]	@ (800fe24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800fdda:	8803      	ldrh	r3, [r0, #0]
 800fddc:	8812      	ldrh	r2, [r2, #0]
 800fdde:	4293      	cmp	r3, r2
 800fde0:	d207      	bcs.n	800fdf2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800fde2:	4a11      	ldr	r2, [pc, #68]	@ (800fe28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800fde4:	6812      	ldr	r2, [r2, #0]
 800fde6:	2114      	movs	r1, #20
 800fde8:	fb01 2303 	mla	r3, r1, r3, r2
 800fdec:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800fdf0:	4770      	bx	lr
 800fdf2:	490e      	ldr	r1, [pc, #56]	@ (800fe2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800fdf4:	8809      	ldrh	r1, [r1, #0]
 800fdf6:	4411      	add	r1, r2
 800fdf8:	428b      	cmp	r3, r1
 800fdfa:	da04      	bge.n	800fe06 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800fdfc:	1a9b      	subs	r3, r3, r2
 800fdfe:	4a0c      	ldr	r2, [pc, #48]	@ (800fe30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800fe00:	210e      	movs	r1, #14
 800fe02:	6812      	ldr	r2, [r2, #0]
 800fe04:	e7f0      	b.n	800fde8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800fe06:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800fe0a:	4293      	cmp	r3, r2
 800fe0c:	d108      	bne.n	800fe20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800fe0e:	4b09      	ldr	r3, [pc, #36]	@ (800fe34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800fe10:	781b      	ldrb	r3, [r3, #0]
 800fe12:	b91b      	cbnz	r3, 800fe1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800fe14:	4b08      	ldr	r3, [pc, #32]	@ (800fe38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800fe16:	f9b3 0000 	ldrsh.w	r0, [r3]
 800fe1a:	4770      	bx	lr
 800fe1c:	4b07      	ldr	r3, [pc, #28]	@ (800fe3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800fe1e:	e7fa      	b.n	800fe16 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800fe20:	2000      	movs	r0, #0
 800fe22:	4770      	bx	lr
 800fe24:	20013308 	.word	0x20013308
 800fe28:	20013310 	.word	0x20013310
 800fe2c:	2001330c 	.word	0x2001330c
 800fe30:	200132f0 	.word	0x200132f0
 800fe34:	20013280 	.word	0x20013280
 800fe38:	20013282 	.word	0x20013282
 800fe3c:	20013284 	.word	0x20013284

0800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fe40:	4a12      	ldr	r2, [pc, #72]	@ (800fe8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800fe42:	8803      	ldrh	r3, [r0, #0]
 800fe44:	8812      	ldrh	r2, [r2, #0]
 800fe46:	4293      	cmp	r3, r2
 800fe48:	d207      	bcs.n	800fe5a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800fe4a:	4a11      	ldr	r2, [pc, #68]	@ (800fe90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800fe4c:	6812      	ldr	r2, [r2, #0]
 800fe4e:	2114      	movs	r1, #20
 800fe50:	fb01 2303 	mla	r3, r1, r3, r2
 800fe54:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800fe58:	4770      	bx	lr
 800fe5a:	490e      	ldr	r1, [pc, #56]	@ (800fe94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800fe5c:	8809      	ldrh	r1, [r1, #0]
 800fe5e:	4411      	add	r1, r2
 800fe60:	428b      	cmp	r3, r1
 800fe62:	da04      	bge.n	800fe6e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 800fe64:	1a9b      	subs	r3, r3, r2
 800fe66:	4a0c      	ldr	r2, [pc, #48]	@ (800fe98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800fe68:	210e      	movs	r1, #14
 800fe6a:	6812      	ldr	r2, [r2, #0]
 800fe6c:	e7f0      	b.n	800fe50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 800fe6e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800fe72:	4293      	cmp	r3, r2
 800fe74:	d108      	bne.n	800fe88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 800fe76:	4b09      	ldr	r3, [pc, #36]	@ (800fe9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800fe78:	781b      	ldrb	r3, [r3, #0]
 800fe7a:	b91b      	cbnz	r3, 800fe84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800fe7c:	4b08      	ldr	r3, [pc, #32]	@ (800fea0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800fe7e:	f9b3 0000 	ldrsh.w	r0, [r3]
 800fe82:	4770      	bx	lr
 800fe84:	4b07      	ldr	r3, [pc, #28]	@ (800fea4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fe86:	e7fa      	b.n	800fe7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 800fe88:	2000      	movs	r0, #0
 800fe8a:	4770      	bx	lr
 800fe8c:	20013308 	.word	0x20013308
 800fe90:	20013310 	.word	0x20013310
 800fe94:	2001330c 	.word	0x2001330c
 800fe98:	200132f0 	.word	0x200132f0
 800fe9c:	20013280 	.word	0x20013280
 800fea0:	20013284 	.word	0x20013284
 800fea4:	20013282 	.word	0x20013282

0800fea8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fea8:	b510      	push	{r4, lr}
 800feaa:	4a1f      	ldr	r2, [pc, #124]	@ (800ff28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 800feac:	880b      	ldrh	r3, [r1, #0]
 800feae:	8812      	ldrh	r2, [r2, #0]
 800feb0:	4293      	cmp	r3, r2
 800feb2:	d213      	bcs.n	800fedc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 800feb4:	4a1d      	ldr	r2, [pc, #116]	@ (800ff2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 800feb6:	6812      	ldr	r2, [r2, #0]
 800feb8:	2114      	movs	r1, #20
 800feba:	fb01 2303 	mla	r3, r1, r3, r2
 800febe:	8a1a      	ldrh	r2, [r3, #16]
 800fec0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fec4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fec8:	8a5b      	ldrh	r3, [r3, #18]
 800feca:	8004      	strh	r4, [r0, #0]
 800fecc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fed0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fed4:	8041      	strh	r1, [r0, #2]
 800fed6:	8082      	strh	r2, [r0, #4]
 800fed8:	80c3      	strh	r3, [r0, #6]
 800feda:	e00e      	b.n	800fefa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 800fedc:	4914      	ldr	r1, [pc, #80]	@ (800ff30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 800fede:	8809      	ldrh	r1, [r1, #0]
 800fee0:	4411      	add	r1, r2
 800fee2:	428b      	cmp	r3, r1
 800fee4:	da0a      	bge.n	800fefc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 800fee6:	1a9b      	subs	r3, r3, r2
 800fee8:	4a12      	ldr	r2, [pc, #72]	@ (800ff34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 800feea:	6812      	ldr	r2, [r2, #0]
 800feec:	210e      	movs	r1, #14
 800feee:	fb01 2303 	mla	r3, r1, r3, r2
 800fef2:	681a      	ldr	r2, [r3, #0]
 800fef4:	6002      	str	r2, [r0, #0]
 800fef6:	685a      	ldr	r2, [r3, #4]
 800fef8:	6042      	str	r2, [r0, #4]
 800fefa:	bd10      	pop	{r4, pc}
 800fefc:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800ff00:	4293      	cmp	r3, r2
 800ff02:	d10b      	bne.n	800ff1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 800ff04:	4b0c      	ldr	r3, [pc, #48]	@ (800ff38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800ff06:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ff0a:	4b0c      	ldr	r3, [pc, #48]	@ (800ff3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800ff0c:	8081      	strh	r1, [r0, #4]
 800ff0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ff12:	80c2      	strh	r2, [r0, #6]
 800ff14:	2300      	movs	r3, #0
 800ff16:	8003      	strh	r3, [r0, #0]
 800ff18:	8043      	strh	r3, [r0, #2]
 800ff1a:	e7ee      	b.n	800fefa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 800ff1c:	2300      	movs	r3, #0
 800ff1e:	8003      	strh	r3, [r0, #0]
 800ff20:	8043      	strh	r3, [r0, #2]
 800ff22:	8083      	strh	r3, [r0, #4]
 800ff24:	e7d8      	b.n	800fed8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800ff26:	bf00      	nop
 800ff28:	20013308 	.word	0x20013308
 800ff2c:	20013310 	.word	0x20013310
 800ff30:	2001330c 	.word	0x2001330c
 800ff34:	200132f0 	.word	0x200132f0
 800ff38:	2001327c 	.word	0x2001327c
 800ff3c:	2001327e 	.word	0x2001327e

0800ff40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800ff40:	4a17      	ldr	r2, [pc, #92]	@ (800ffa0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 800ff42:	8803      	ldrh	r3, [r0, #0]
 800ff44:	8812      	ldrh	r2, [r2, #0]
 800ff46:	4293      	cmp	r3, r2
 800ff48:	d213      	bcs.n	800ff72 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800ff4a:	4a16      	ldr	r2, [pc, #88]	@ (800ffa4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800ff4c:	6812      	ldr	r2, [r2, #0]
 800ff4e:	2114      	movs	r1, #20
 800ff50:	fb01 2303 	mla	r3, r1, r3, r2
 800ff54:	8a1a      	ldrh	r2, [r3, #16]
 800ff56:	8919      	ldrh	r1, [r3, #8]
 800ff58:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800ff5c:	428a      	cmp	r2, r1
 800ff5e:	db1d      	blt.n	800ff9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800ff60:	8a58      	ldrh	r0, [r3, #18]
 800ff62:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800ff66:	895b      	ldrh	r3, [r3, #10]
 800ff68:	4298      	cmp	r0, r3
 800ff6a:	bfac      	ite	ge
 800ff6c:	2000      	movge	r0, #0
 800ff6e:	2001      	movlt	r0, #1
 800ff70:	4770      	bx	lr
 800ff72:	490d      	ldr	r1, [pc, #52]	@ (800ffa8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800ff74:	8809      	ldrh	r1, [r1, #0]
 800ff76:	4411      	add	r1, r2
 800ff78:	428b      	cmp	r3, r1
 800ff7a:	da0d      	bge.n	800ff98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 800ff7c:	1a9b      	subs	r3, r3, r2
 800ff7e:	4a0b      	ldr	r2, [pc, #44]	@ (800ffac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800ff80:	6812      	ldr	r2, [r2, #0]
 800ff82:	210e      	movs	r1, #14
 800ff84:	fb01 2303 	mla	r3, r1, r3, r2
 800ff88:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800ff8c:	891a      	ldrh	r2, [r3, #8]
 800ff8e:	4291      	cmp	r1, r2
 800ff90:	db04      	blt.n	800ff9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800ff92:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800ff96:	e7e6      	b.n	800ff66 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 800ff98:	2000      	movs	r0, #0
 800ff9a:	4770      	bx	lr
 800ff9c:	2001      	movs	r0, #1
 800ff9e:	4770      	bx	lr
 800ffa0:	20013308 	.word	0x20013308
 800ffa4:	20013310 	.word	0x20013310
 800ffa8:	2001330c 	.word	0x2001330c
 800ffac:	200132f0 	.word	0x200132f0

0800ffb0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800ffb0:	4a12      	ldr	r2, [pc, #72]	@ (800fffc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800ffb2:	8803      	ldrh	r3, [r0, #0]
 800ffb4:	8811      	ldrh	r1, [r2, #0]
 800ffb6:	428b      	cmp	r3, r1
 800ffb8:	d20b      	bcs.n	800ffd2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 800ffba:	4a11      	ldr	r2, [pc, #68]	@ (8010000 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800ffbc:	6812      	ldr	r2, [r2, #0]
 800ffbe:	b112      	cbz	r2, 800ffc6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800ffc0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800ffc4:	b9c0      	cbnz	r0, 800fff8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 800ffc6:	4a0f      	ldr	r2, [pc, #60]	@ (8010004 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800ffc8:	6811      	ldr	r1, [r2, #0]
 800ffca:	2214      	movs	r2, #20
 800ffcc:	4353      	muls	r3, r2
 800ffce:	58c8      	ldr	r0, [r1, r3]
 800ffd0:	4770      	bx	lr
 800ffd2:	4a0d      	ldr	r2, [pc, #52]	@ (8010008 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800ffd4:	8812      	ldrh	r2, [r2, #0]
 800ffd6:	440a      	add	r2, r1
 800ffd8:	4293      	cmp	r3, r2
 800ffda:	da04      	bge.n	800ffe6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 800ffdc:	4a08      	ldr	r2, [pc, #32]	@ (8010000 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800ffde:	6812      	ldr	r2, [r2, #0]
 800ffe0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800ffe4:	4770      	bx	lr
 800ffe6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 800ffea:	4293      	cmp	r3, r2
 800ffec:	d103      	bne.n	800fff6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800ffee:	4b07      	ldr	r3, [pc, #28]	@ (801000c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fff0:	681b      	ldr	r3, [r3, #0]
 800fff2:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 800fff4:	4770      	bx	lr
 800fff6:	2000      	movs	r0, #0
 800fff8:	4770      	bx	lr
 800fffa:	bf00      	nop
 800fffc:	20013308 	.word	0x20013308
 8010000:	200132ec 	.word	0x200132ec
 8010004:	20013310 	.word	0x20013310
 8010008:	2001330c 	.word	0x2001330c
 801000c:	20013288 	.word	0x20013288

08010010 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010010:	4b24      	ldr	r3, [pc, #144]	@ (80100a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8010012:	8802      	ldrh	r2, [r0, #0]
 8010014:	8818      	ldrh	r0, [r3, #0]
 8010016:	4282      	cmp	r2, r0
 8010018:	d221      	bcs.n	801005e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801001a:	4b23      	ldr	r3, [pc, #140]	@ (80100a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801001c:	6819      	ldr	r1, [r3, #0]
 801001e:	2314      	movs	r3, #20
 8010020:	fb03 1302 	mla	r3, r3, r2, r1
 8010024:	6858      	ldr	r0, [r3, #4]
 8010026:	2800      	cmp	r0, #0
 8010028:	d03a      	beq.n	80100a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801002a:	4920      	ldr	r1, [pc, #128]	@ (80100ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801002c:	6809      	ldr	r1, [r1, #0]
 801002e:	2900      	cmp	r1, #0
 8010030:	d036      	beq.n	80100a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8010032:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010036:	2900      	cmp	r1, #0
 8010038:	d032      	beq.n	80100a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801003a:	891a      	ldrh	r2, [r3, #8]
 801003c:	8958      	ldrh	r0, [r3, #10]
 801003e:	4350      	muls	r0, r2
 8010040:	7c5a      	ldrb	r2, [r3, #17]
 8010042:	7cdb      	ldrb	r3, [r3, #19]
 8010044:	0952      	lsrs	r2, r2, #5
 8010046:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801004a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801004e:	2b0b      	cmp	r3, #11
 8010050:	bf18      	it	ne
 8010052:	0040      	lslne	r0, r0, #1
 8010054:	3003      	adds	r0, #3
 8010056:	f020 0003 	bic.w	r0, r0, #3
 801005a:	4408      	add	r0, r1
 801005c:	4770      	bx	lr
 801005e:	4b14      	ldr	r3, [pc, #80]	@ (80100b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010060:	881b      	ldrh	r3, [r3, #0]
 8010062:	4403      	add	r3, r0
 8010064:	429a      	cmp	r2, r3
 8010066:	da1a      	bge.n	801009e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010068:	4b12      	ldr	r3, [pc, #72]	@ (80100b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801006a:	681b      	ldr	r3, [r3, #0]
 801006c:	1a10      	subs	r0, r2, r0
 801006e:	210e      	movs	r1, #14
 8010070:	fb01 3000 	mla	r0, r1, r0, r3
 8010074:	7b03      	ldrb	r3, [r0, #12]
 8010076:	f003 031f 	and.w	r3, r3, #31
 801007a:	2b0b      	cmp	r3, #11
 801007c:	d10b      	bne.n	8010096 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801007e:	8903      	ldrh	r3, [r0, #8]
 8010080:	8940      	ldrh	r0, [r0, #10]
 8010082:	4358      	muls	r0, r3
 8010084:	4b09      	ldr	r3, [pc, #36]	@ (80100ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010086:	6819      	ldr	r1, [r3, #0]
 8010088:	3003      	adds	r0, #3
 801008a:	f020 0303 	bic.w	r3, r0, #3
 801008e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010092:	4418      	add	r0, r3
 8010094:	4770      	bx	lr
 8010096:	2b0d      	cmp	r3, #13
 8010098:	d101      	bne.n	801009e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801009a:	300d      	adds	r0, #13
 801009c:	4770      	bx	lr
 801009e:	2000      	movs	r0, #0
 80100a0:	4770      	bx	lr
 80100a2:	bf00      	nop
 80100a4:	20013308 	.word	0x20013308
 80100a8:	20013310 	.word	0x20013310
 80100ac:	200132ec 	.word	0x200132ec
 80100b0:	2001330c 	.word	0x2001330c
 80100b4:	200132f0 	.word	0x200132f0

080100b8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80100b8:	b510      	push	{r4, lr}
 80100ba:	4a17      	ldr	r2, [pc, #92]	@ (8010118 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80100bc:	8803      	ldrh	r3, [r0, #0]
 80100be:	8812      	ldrh	r2, [r2, #0]
 80100c0:	4293      	cmp	r3, r2
 80100c2:	d20c      	bcs.n	80100de <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80100c4:	4a15      	ldr	r2, [pc, #84]	@ (801011c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80100c6:	6812      	ldr	r2, [r2, #0]
 80100c8:	2114      	movs	r1, #20
 80100ca:	fb01 2303 	mla	r3, r1, r3, r2
 80100ce:	7c58      	ldrb	r0, [r3, #17]
 80100d0:	0942      	lsrs	r2, r0, #5
 80100d2:	7cd8      	ldrb	r0, [r3, #19]
 80100d4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80100d8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80100dc:	bd10      	pop	{r4, pc}
 80100de:	4910      	ldr	r1, [pc, #64]	@ (8010120 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80100e0:	8809      	ldrh	r1, [r1, #0]
 80100e2:	4411      	add	r1, r2
 80100e4:	428b      	cmp	r3, r1
 80100e6:	da09      	bge.n	80100fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80100e8:	1a9b      	subs	r3, r3, r2
 80100ea:	4a0e      	ldr	r2, [pc, #56]	@ (8010124 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80100ec:	6812      	ldr	r2, [r2, #0]
 80100ee:	210e      	movs	r1, #14
 80100f0:	fb01 2303 	mla	r3, r1, r3, r2
 80100f4:	7b18      	ldrb	r0, [r3, #12]
 80100f6:	f000 001f 	and.w	r0, r0, #31
 80100fa:	e7ef      	b.n	80100dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80100fc:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8010100:	4293      	cmp	r3, r2
 8010102:	d106      	bne.n	8010112 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8010104:	f7f2 f9e8 	bl	80024d8 <_ZN8touchgfx3HAL3lcdEv>
 8010108:	6803      	ldr	r3, [r0, #0]
 801010a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801010e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010110:	4718      	bx	r3
 8010112:	2000      	movs	r0, #0
 8010114:	e7e2      	b.n	80100dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8010116:	bf00      	nop
 8010118:	20013308 	.word	0x20013308
 801011c:	20013310 	.word	0x20013310
 8010120:	2001330c 	.word	0x2001330c
 8010124:	200132f0 	.word	0x200132f0

08010128 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010128:	2010      	movs	r0, #16
 801012a:	4770      	bx	lr

0801012c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801012c:	2000      	movs	r0, #0
 801012e:	4770      	bx	lr

08010130 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010130:	4b02      	ldr	r3, [pc, #8]	@ (801013c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8010132:	8818      	ldrh	r0, [r3, #0]
 8010134:	0040      	lsls	r0, r0, #1
 8010136:	b280      	uxth	r0, r0
 8010138:	4770      	bx	lr
 801013a:	bf00      	nop
 801013c:	20013282 	.word	0x20013282

08010140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010140:	2bff      	cmp	r3, #255	@ 0xff
 8010142:	d050      	beq.n	80101e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8010144:	2a0b      	cmp	r2, #11
 8010146:	d04a      	beq.n	80101de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010148:	d80e      	bhi.n	8010168 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801014a:	2a03      	cmp	r2, #3
 801014c:	d03f      	beq.n	80101ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801014e:	d804      	bhi.n	801015a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010150:	2a01      	cmp	r2, #1
 8010152:	d03e      	beq.n	80101d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8010154:	d93f      	bls.n	80101d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8010156:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8010158:	4770      	bx	lr
 801015a:	2a09      	cmp	r2, #9
 801015c:	d03f      	beq.n	80101de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801015e:	d83c      	bhi.n	80101da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010160:	2a08      	cmp	r2, #8
 8010162:	d03a      	beq.n	80101da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010164:	2000      	movs	r0, #0
 8010166:	4770      	bx	lr
 8010168:	2a2f      	cmp	r2, #47	@ 0x2f
 801016a:	d024      	beq.n	80101b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801016c:	d80d      	bhi.n	801018a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801016e:	2a2d      	cmp	r2, #45	@ 0x2d
 8010170:	d014      	beq.n	801019c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8010172:	d826      	bhi.n	80101c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010174:	2a2c      	cmp	r2, #44	@ 0x2c
 8010176:	d1f5      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010178:	684b      	ldr	r3, [r1, #4]
 801017a:	781b      	ldrb	r3, [r3, #0]
 801017c:	2b01      	cmp	r3, #1
 801017e:	d018      	beq.n	80101b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010180:	d323      	bcc.n	80101ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8010182:	2b02      	cmp	r3, #2
 8010184:	d1ee      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010186:	6880      	ldr	r0, [r0, #8]
 8010188:	4770      	bx	lr
 801018a:	2a31      	cmp	r2, #49	@ 0x31
 801018c:	d004      	beq.n	8010198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801018e:	d328      	bcc.n	80101e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010190:	2a32      	cmp	r2, #50	@ 0x32
 8010192:	d026      	beq.n	80101e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010194:	2a33      	cmp	r2, #51	@ 0x33
 8010196:	d1e5      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010198:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 801019a:	4770      	bx	lr
 801019c:	684b      	ldr	r3, [r1, #4]
 801019e:	781b      	ldrb	r3, [r3, #0]
 80101a0:	2b01      	cmp	r3, #1
 80101a2:	d004      	beq.n	80101ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80101a4:	d30b      	bcc.n	80101be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80101a6:	2b02      	cmp	r3, #2
 80101a8:	d1dc      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80101aa:	6900      	ldr	r0, [r0, #16]
 80101ac:	4770      	bx	lr
 80101ae:	6a00      	ldr	r0, [r0, #32]
 80101b0:	4770      	bx	lr
 80101b2:	6980      	ldr	r0, [r0, #24]
 80101b4:	4770      	bx	lr
 80101b6:	684b      	ldr	r3, [r1, #4]
 80101b8:	781b      	ldrb	r3, [r3, #0]
 80101ba:	2b00      	cmp	r3, #0
 80101bc:	d1d2      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80101be:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 80101c0:	4770      	bx	lr
 80101c2:	684b      	ldr	r3, [r1, #4]
 80101c4:	781b      	ldrb	r3, [r3, #0]
 80101c6:	2b00      	cmp	r3, #0
 80101c8:	d1cc      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80101ca:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80101cc:	4770      	bx	lr
 80101ce:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80101d0:	4770      	bx	lr
 80101d2:	6d00      	ldr	r0, [r0, #80]	@ 0x50
 80101d4:	4770      	bx	lr
 80101d6:	6c00      	ldr	r0, [r0, #64]	@ 0x40
 80101d8:	4770      	bx	lr
 80101da:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 80101dc:	4770      	bx	lr
 80101de:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 80101e0:	4770      	bx	lr
 80101e2:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 80101e4:	4770      	bx	lr
 80101e6:	2a0b      	cmp	r2, #11
 80101e8:	d049      	beq.n	801027e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80101ea:	d80e      	bhi.n	801020a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80101ec:	2a03      	cmp	r2, #3
 80101ee:	d040      	beq.n	8010272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80101f0:	d804      	bhi.n	80101fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80101f2:	2a01      	cmp	r2, #1
 80101f4:	d03f      	beq.n	8010276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80101f6:	d940      	bls.n	801027a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80101f8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 80101fa:	4770      	bx	lr
 80101fc:	2a09      	cmp	r2, #9
 80101fe:	d03e      	beq.n	801027e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010200:	d801      	bhi.n	8010206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8010202:	2a08      	cmp	r2, #8
 8010204:	d1ae      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010206:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
 8010208:	4770      	bx	lr
 801020a:	2a2f      	cmp	r2, #47	@ 0x2f
 801020c:	d024      	beq.n	8010258 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801020e:	d80d      	bhi.n	801022c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8010210:	2a2d      	cmp	r2, #45	@ 0x2d
 8010212:	d014      	beq.n	801023e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010214:	d826      	bhi.n	8010264 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010216:	2a2c      	cmp	r2, #44	@ 0x2c
 8010218:	d1a4      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801021a:	684b      	ldr	r3, [r1, #4]
 801021c:	781b      	ldrb	r3, [r3, #0]
 801021e:	2b01      	cmp	r3, #1
 8010220:	d018      	beq.n	8010254 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8010222:	d324      	bcc.n	801026e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010224:	2b02      	cmp	r3, #2
 8010226:	d19d      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010228:	68c0      	ldr	r0, [r0, #12]
 801022a:	4770      	bx	lr
 801022c:	2a31      	cmp	r2, #49	@ 0x31
 801022e:	d004      	beq.n	801023a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8010230:	d327      	bcc.n	8010282 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010232:	2a32      	cmp	r2, #50	@ 0x32
 8010234:	d025      	beq.n	8010282 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010236:	2a33      	cmp	r2, #51	@ 0x33
 8010238:	d194      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801023a:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 801023c:	4770      	bx	lr
 801023e:	684b      	ldr	r3, [r1, #4]
 8010240:	781b      	ldrb	r3, [r3, #0]
 8010242:	2b01      	cmp	r3, #1
 8010244:	d004      	beq.n	8010250 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8010246:	d30b      	bcc.n	8010260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8010248:	2b02      	cmp	r3, #2
 801024a:	d18b      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801024c:	6940      	ldr	r0, [r0, #20]
 801024e:	4770      	bx	lr
 8010250:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8010252:	4770      	bx	lr
 8010254:	69c0      	ldr	r0, [r0, #28]
 8010256:	4770      	bx	lr
 8010258:	684b      	ldr	r3, [r1, #4]
 801025a:	781b      	ldrb	r3, [r3, #0]
 801025c:	2b00      	cmp	r3, #0
 801025e:	d181      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010260:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8010262:	4770      	bx	lr
 8010264:	684b      	ldr	r3, [r1, #4]
 8010266:	781b      	ldrb	r3, [r3, #0]
 8010268:	2b00      	cmp	r3, #0
 801026a:	f47f af7b 	bne.w	8010164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801026e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
 8010270:	4770      	bx	lr
 8010272:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8010274:	4770      	bx	lr
 8010276:	6d40      	ldr	r0, [r0, #84]	@ 0x54
 8010278:	4770      	bx	lr
 801027a:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 801027c:	4770      	bx	lr
 801027e:	6e40      	ldr	r0, [r0, #100]	@ 0x64
 8010280:	4770      	bx	lr
 8010282:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
 8010284:	4770      	bx	lr

08010286 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010286:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801028a:	b087      	sub	sp, #28
 801028c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801028e:	9205      	str	r2, [sp, #20]
 8010290:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010294:	9202      	str	r2, [sp, #8]
 8010296:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801029a:	9101      	str	r1, [sp, #4]
 801029c:	6841      	ldr	r1, [r0, #4]
 801029e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80102a2:	fb01 2404 	mla	r4, r1, r4, r2
 80102a6:	6802      	ldr	r2, [r0, #0]
 80102a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80102ac:	f8de 2000 	ldr.w	r2, [lr]
 80102b0:	9203      	str	r2, [sp, #12]
 80102b2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80102b6:	3204      	adds	r2, #4
 80102b8:	9204      	str	r2, [sp, #16]
 80102ba:	9a02      	ldr	r2, [sp, #8]
 80102bc:	43d6      	mvns	r6, r2
 80102be:	b2f6      	uxtb	r6, r6
 80102c0:	9a01      	ldr	r2, [sp, #4]
 80102c2:	2a00      	cmp	r2, #0
 80102c4:	dc03      	bgt.n	80102ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80102c6:	9a05      	ldr	r2, [sp, #20]
 80102c8:	2a00      	cmp	r2, #0
 80102ca:	f340 8129 	ble.w	8010520 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80102ce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80102d0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80102d4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80102d8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80102dc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80102de:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80102e2:	2b00      	cmp	r3, #0
 80102e4:	dd0e      	ble.n	8010304 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80102e6:	1408      	asrs	r0, r1, #16
 80102e8:	d405      	bmi.n	80102f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80102ea:	4560      	cmp	r0, ip
 80102ec:	da03      	bge.n	80102f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80102ee:	1410      	asrs	r0, r2, #16
 80102f0:	d401      	bmi.n	80102f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80102f2:	42b8      	cmp	r0, r7
 80102f4:	db07      	blt.n	8010306 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80102f6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80102f8:	4401      	add	r1, r0
 80102fa:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80102fc:	3b01      	subs	r3, #1
 80102fe:	4402      	add	r2, r0
 8010300:	3402      	adds	r4, #2
 8010302:	e7ee      	b.n	80102e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8010304:	d071      	beq.n	80103ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010306:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8010308:	1e58      	subs	r0, r3, #1
 801030a:	fb05 1500 	mla	r5, r5, r0, r1
 801030e:	142d      	asrs	r5, r5, #16
 8010310:	d45f      	bmi.n	80103d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010312:	4565      	cmp	r5, ip
 8010314:	da5d      	bge.n	80103d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010316:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8010318:	fb05 2000 	mla	r0, r5, r0, r2
 801031c:	1400      	asrs	r0, r0, #16
 801031e:	d458      	bmi.n	80103d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010320:	42b8      	cmp	r0, r7
 8010322:	da56      	bge.n	80103d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8010324:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8010328:	4699      	mov	r9, r3
 801032a:	46a2      	mov	sl, r4
 801032c:	f1b9 0f00 	cmp.w	r9, #0
 8010330:	dd57      	ble.n	80103e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8010332:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010336:	9803      	ldr	r0, [sp, #12]
 8010338:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801033c:	140d      	asrs	r5, r1, #16
 801033e:	fb07 000c 	mla	r0, r7, ip, r0
 8010342:	f109 39ff 	add.w	r9, r9, #4294967295
 8010346:	5d40      	ldrb	r0, [r0, r5]
 8010348:	9d04      	ldr	r5, [sp, #16]
 801034a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801034e:	f8ba 5000 	ldrh.w	r5, [sl]
 8010352:	122f      	asrs	r7, r5, #8
 8010354:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010358:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801035c:	fb17 f706 	smulbb	r7, r7, r6
 8010360:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010364:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010368:	00ed      	lsls	r5, r5, #3
 801036a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801036e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8010372:	10c7      	asrs	r7, r0, #3
 8010374:	b2ed      	uxtb	r5, r5
 8010376:	00c0      	lsls	r0, r0, #3
 8010378:	fb18 f806 	smulbb	r8, r8, r6
 801037c:	fb15 f506 	smulbb	r5, r5, r6
 8010380:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8010384:	b2c0      	uxtb	r0, r0
 8010386:	fa1f fc8c 	uxth.w	ip, ip
 801038a:	fb07 870b 	mla	r7, r7, fp, r8
 801038e:	fb00 500b 	mla	r0, r0, fp, r5
 8010392:	b280      	uxth	r0, r0
 8010394:	b2bf      	uxth	r7, r7
 8010396:	f10c 0501 	add.w	r5, ip, #1
 801039a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801039e:	f107 0801 	add.w	r8, r7, #1
 80103a2:	1c45      	adds	r5, r0, #1
 80103a4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80103a8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80103ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80103ae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80103b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80103b6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80103ba:	ea45 0c0c 	orr.w	ip, r5, ip
 80103be:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80103c2:	4401      	add	r1, r0
 80103c4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80103c6:	ea4c 0c08 	orr.w	ip, ip, r8
 80103ca:	f82a cb02 	strh.w	ip, [sl], #2
 80103ce:	4402      	add	r2, r0
 80103d0:	e7ac      	b.n	801032c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80103d2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80103d6:	f04f 0800 	mov.w	r8, #0
 80103da:	eb03 0008 	add.w	r0, r3, r8
 80103de:	2800      	cmp	r0, #0
 80103e0:	dc41      	bgt.n	8010466 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80103e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80103e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80103ea:	9b01      	ldr	r3, [sp, #4]
 80103ec:	2b00      	cmp	r3, #0
 80103ee:	f340 8097 	ble.w	8010520 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80103f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80103f6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80103fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80103fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010400:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010404:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010408:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801040c:	eef0 6a62 	vmov.f32	s13, s5
 8010410:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010414:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010418:	ee77 2a62 	vsub.f32	s5, s14, s5
 801041c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8010420:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010424:	eef0 6a43 	vmov.f32	s13, s6
 8010428:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801042c:	ee12 2a90 	vmov	r2, s5
 8010430:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010434:	fb92 f3f3 	sdiv	r3, r2, r3
 8010438:	ee13 2a10 	vmov	r2, s6
 801043c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801043e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010440:	fb92 f3f3 	sdiv	r3, r2, r3
 8010444:	9314      	str	r3, [sp, #80]	@ 0x50
 8010446:	9b01      	ldr	r3, [sp, #4]
 8010448:	9a05      	ldr	r2, [sp, #20]
 801044a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801044e:	3b01      	subs	r3, #1
 8010450:	9301      	str	r3, [sp, #4]
 8010452:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8010456:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010458:	eeb0 3a67 	vmov.f32	s6, s15
 801045c:	bf08      	it	eq
 801045e:	4613      	moveq	r3, r2
 8010460:	eef0 2a47 	vmov.f32	s5, s14
 8010464:	e72c      	b.n	80102c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010466:	140f      	asrs	r7, r1, #16
 8010468:	d453      	bmi.n	8010512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801046a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801046e:	42bd      	cmp	r5, r7
 8010470:	dd4f      	ble.n	8010512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010472:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010476:	d44c      	bmi.n	8010512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010478:	f8de 000c 	ldr.w	r0, [lr, #12]
 801047c:	4560      	cmp	r0, ip
 801047e:	dd48      	ble.n	8010512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010480:	9803      	ldr	r0, [sp, #12]
 8010482:	b22d      	sxth	r5, r5
 8010484:	fb0c 0505 	mla	r5, ip, r5, r0
 8010488:	5de8      	ldrb	r0, [r5, r7]
 801048a:	9d04      	ldr	r5, [sp, #16]
 801048c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010490:	f06f 0501 	mvn.w	r5, #1
 8010494:	fb05 fb08 	mul.w	fp, r5, r8
 8010498:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801049c:	f834 500b 	ldrh.w	r5, [r4, fp]
 80104a0:	122f      	asrs	r7, r5, #8
 80104a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80104a6:	fb17 f706 	smulbb	r7, r7, r6
 80104aa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80104ae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80104b2:	00ed      	lsls	r5, r5, #3
 80104b4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80104b8:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80104bc:	10c7      	asrs	r7, r0, #3
 80104be:	b2ed      	uxtb	r5, r5
 80104c0:	00c0      	lsls	r0, r0, #3
 80104c2:	fb19 f906 	smulbb	r9, r9, r6
 80104c6:	fb15 f506 	smulbb	r5, r5, r6
 80104ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80104ce:	b2c0      	uxtb	r0, r0
 80104d0:	fa1f fc8c 	uxth.w	ip, ip
 80104d4:	fb07 970a 	mla	r7, r7, sl, r9
 80104d8:	fb00 500a 	mla	r0, r0, sl, r5
 80104dc:	b2bf      	uxth	r7, r7
 80104de:	b280      	uxth	r0, r0
 80104e0:	f10c 0501 	add.w	r5, ip, #1
 80104e4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80104e8:	f107 0901 	add.w	r9, r7, #1
 80104ec:	1c45      	adds	r5, r0, #1
 80104ee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80104f2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80104f6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80104fa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80104fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010502:	ea45 0c0c 	orr.w	ip, r5, ip
 8010506:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801050a:	ea4c 0c09 	orr.w	ip, ip, r9
 801050e:	f824 c00b 	strh.w	ip, [r4, fp]
 8010512:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010514:	4401      	add	r1, r0
 8010516:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010518:	f108 38ff 	add.w	r8, r8, #4294967295
 801051c:	4402      	add	r2, r0
 801051e:	e75c      	b.n	80103da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8010520:	b007      	add	sp, #28
 8010522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010526 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010526:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801052a:	b085      	sub	sp, #20
 801052c:	4693      	mov	fp, r2
 801052e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010530:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8010532:	6870      	ldr	r0, [r6, #4]
 8010534:	9100      	str	r1, [sp, #0]
 8010536:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801053a:	fb00 2404 	mla	r4, r0, r4, r2
 801053e:	6832      	ldr	r2, [r6, #0]
 8010540:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010544:	682a      	ldr	r2, [r5, #0]
 8010546:	9201      	str	r2, [sp, #4]
 8010548:	686a      	ldr	r2, [r5, #4]
 801054a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801054e:	3204      	adds	r2, #4
 8010550:	9202      	str	r2, [sp, #8]
 8010552:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8010556:	9a00      	ldr	r2, [sp, #0]
 8010558:	2a00      	cmp	r2, #0
 801055a:	dc03      	bgt.n	8010564 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801055c:	f1bb 0f00 	cmp.w	fp, #0
 8010560:	f340 80a0 	ble.w	80106a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010564:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010566:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801056a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801056e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010572:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010574:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010578:	2b00      	cmp	r3, #0
 801057a:	dd0c      	ble.n	8010596 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801057c:	1406      	asrs	r6, r0, #16
 801057e:	d405      	bmi.n	801058c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010580:	454e      	cmp	r6, r9
 8010582:	da03      	bge.n	801058c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010584:	1416      	asrs	r6, r2, #16
 8010586:	d401      	bmi.n	801058c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010588:	4546      	cmp	r6, r8
 801058a:	db05      	blt.n	8010598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801058c:	4470      	add	r0, lr
 801058e:	4462      	add	r2, ip
 8010590:	3b01      	subs	r3, #1
 8010592:	3402      	adds	r4, #2
 8010594:	e7f0      	b.n	8010578 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010596:	d00f      	beq.n	80105b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010598:	1e5e      	subs	r6, r3, #1
 801059a:	fb0e 0706 	mla	r7, lr, r6, r0
 801059e:	143f      	asrs	r7, r7, #16
 80105a0:	d541      	bpl.n	8010626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80105a2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80105a6:	4698      	mov	r8, r3
 80105a8:	9603      	str	r6, [sp, #12]
 80105aa:	f1b8 0f00 	cmp.w	r8, #0
 80105ae:	dc59      	bgt.n	8010664 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80105b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80105b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80105b8:	9b00      	ldr	r3, [sp, #0]
 80105ba:	2b00      	cmp	r3, #0
 80105bc:	dd72      	ble.n	80106a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80105be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80105c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80105c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80105ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80105cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80105d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80105d4:	eeb0 6a62 	vmov.f32	s12, s5
 80105d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80105dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80105e4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80105e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80105ec:	eeb0 6a43 	vmov.f32	s12, s6
 80105f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80105f4:	ee12 2a90 	vmov	r2, s5
 80105f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80105fc:	fb92 fef3 	sdiv	lr, r2, r3
 8010600:	ee13 2a10 	vmov	r2, s6
 8010604:	fb92 fcf3 	sdiv	ip, r2, r3
 8010608:	9b00      	ldr	r3, [sp, #0]
 801060a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801060e:	3b01      	subs	r3, #1
 8010610:	9300      	str	r3, [sp, #0]
 8010612:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010616:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010618:	eeb0 3a67 	vmov.f32	s6, s15
 801061c:	bf08      	it	eq
 801061e:	465b      	moveq	r3, fp
 8010620:	eef0 2a47 	vmov.f32	s5, s14
 8010624:	e797      	b.n	8010556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010626:	454f      	cmp	r7, r9
 8010628:	dabb      	bge.n	80105a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801062a:	fb0c 2606 	mla	r6, ip, r6, r2
 801062e:	1436      	asrs	r6, r6, #16
 8010630:	d4b7      	bmi.n	80105a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010632:	4546      	cmp	r6, r8
 8010634:	dab5      	bge.n	80105a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010636:	461e      	mov	r6, r3
 8010638:	46a0      	mov	r8, r4
 801063a:	2e00      	cmp	r6, #0
 801063c:	ddb8      	ble.n	80105b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801063e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8010642:	9901      	ldr	r1, [sp, #4]
 8010644:	1417      	asrs	r7, r2, #16
 8010646:	ea4f 4920 	mov.w	r9, r0, asr #16
 801064a:	fb0a 1707 	mla	r7, sl, r7, r1
 801064e:	9902      	ldr	r1, [sp, #8]
 8010650:	f817 7009 	ldrb.w	r7, [r7, r9]
 8010654:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8010658:	f828 7b02 	strh.w	r7, [r8], #2
 801065c:	4470      	add	r0, lr
 801065e:	4462      	add	r2, ip
 8010660:	3e01      	subs	r6, #1
 8010662:	e7ea      	b.n	801063a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010664:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010668:	d417      	bmi.n	801069a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801066a:	68ae      	ldr	r6, [r5, #8]
 801066c:	454e      	cmp	r6, r9
 801066e:	dd14      	ble.n	801069a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010670:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010674:	d411      	bmi.n	801069a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010676:	68ef      	ldr	r7, [r5, #12]
 8010678:	4557      	cmp	r7, sl
 801067a:	dd0e      	ble.n	801069a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801067c:	9f01      	ldr	r7, [sp, #4]
 801067e:	b236      	sxth	r6, r6
 8010680:	fb0a 7606 	mla	r6, sl, r6, r7
 8010684:	9f02      	ldr	r7, [sp, #8]
 8010686:	f816 6009 	ldrb.w	r6, [r6, r9]
 801068a:	f06f 0101 	mvn.w	r1, #1
 801068e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8010692:	fb01 f608 	mul.w	r6, r1, r8
 8010696:	9903      	ldr	r1, [sp, #12]
 8010698:	538f      	strh	r7, [r1, r6]
 801069a:	4470      	add	r0, lr
 801069c:	4462      	add	r2, ip
 801069e:	f108 38ff 	add.w	r8, r8, #4294967295
 80106a2:	e782      	b.n	80105aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80106a4:	b005      	add	sp, #20
 80106a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080106aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80106aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106ae:	b087      	sub	sp, #28
 80106b0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80106b2:	9205      	str	r2, [sp, #20]
 80106b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80106b8:	9203      	str	r2, [sp, #12]
 80106ba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80106be:	9102      	str	r1, [sp, #8]
 80106c0:	6861      	ldr	r1, [r4, #4]
 80106c2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80106c6:	fb01 2000 	mla	r0, r1, r0, r2
 80106ca:	6822      	ldr	r2, [r4, #0]
 80106cc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80106d0:	9200      	str	r2, [sp, #0]
 80106d2:	f8dc 2000 	ldr.w	r2, [ip]
 80106d6:	9204      	str	r2, [sp, #16]
 80106d8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80106dc:	3204      	adds	r2, #4
 80106de:	9201      	str	r2, [sp, #4]
 80106e0:	9a03      	ldr	r2, [sp, #12]
 80106e2:	43d5      	mvns	r5, r2
 80106e4:	b2ed      	uxtb	r5, r5
 80106e6:	9a02      	ldr	r2, [sp, #8]
 80106e8:	2a00      	cmp	r2, #0
 80106ea:	dc03      	bgt.n	80106f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80106ec:	9a05      	ldr	r2, [sp, #20]
 80106ee:	2a00      	cmp	r2, #0
 80106f0:	f340 812c 	ble.w	801094c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80106f4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80106f6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80106fa:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80106fe:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010702:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010704:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010708:	2b00      	cmp	r3, #0
 801070a:	dd10      	ble.n	801072e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801070c:	140c      	asrs	r4, r1, #16
 801070e:	d405      	bmi.n	801071c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010710:	4574      	cmp	r4, lr
 8010712:	da03      	bge.n	801071c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010714:	1414      	asrs	r4, r2, #16
 8010716:	d401      	bmi.n	801071c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010718:	42bc      	cmp	r4, r7
 801071a:	db09      	blt.n	8010730 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801071c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801071e:	9800      	ldr	r0, [sp, #0]
 8010720:	4421      	add	r1, r4
 8010722:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8010724:	3002      	adds	r0, #2
 8010726:	4422      	add	r2, r4
 8010728:	3b01      	subs	r3, #1
 801072a:	9000      	str	r0, [sp, #0]
 801072c:	e7ec      	b.n	8010708 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801072e:	d071      	beq.n	8010814 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010730:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010732:	1e5c      	subs	r4, r3, #1
 8010734:	fb06 1604 	mla	r6, r6, r4, r1
 8010738:	1436      	asrs	r6, r6, #16
 801073a:	d45d      	bmi.n	80107f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801073c:	4576      	cmp	r6, lr
 801073e:	da5b      	bge.n	80107f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010740:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8010742:	fb06 2404 	mla	r4, r6, r4, r2
 8010746:	1424      	asrs	r4, r4, #16
 8010748:	d456      	bmi.n	80107f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801074a:	42bc      	cmp	r4, r7
 801074c:	da54      	bge.n	80107f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801074e:	f8dd 9000 	ldr.w	r9, [sp]
 8010752:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8010756:	4698      	mov	r8, r3
 8010758:	f1b8 0f00 	cmp.w	r8, #0
 801075c:	dd54      	ble.n	8010808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801075e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010762:	9804      	ldr	r0, [sp, #16]
 8010764:	1414      	asrs	r4, r2, #16
 8010766:	fb07 0404 	mla	r4, r7, r4, r0
 801076a:	140e      	asrs	r6, r1, #16
 801076c:	9801      	ldr	r0, [sp, #4]
 801076e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010772:	f8b9 4000 	ldrh.w	r4, [r9]
 8010776:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801077a:	eb00 0b0e 	add.w	fp, r0, lr
 801077e:	1227      	asrs	r7, r4, #8
 8010780:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010784:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010788:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801078c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801078e:	fb16 f60a 	smulbb	r6, r6, sl
 8010792:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010796:	fb07 6705 	mla	r7, r7, r5, r6
 801079a:	10e6      	asrs	r6, r4, #3
 801079c:	00e4      	lsls	r4, r4, #3
 801079e:	b2e4      	uxtb	r4, r4
 80107a0:	fb1b fb0a 	smulbb	fp, fp, sl
 80107a4:	fb14 f405 	smulbb	r4, r4, r5
 80107a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80107ac:	b2bf      	uxth	r7, r7
 80107ae:	fb06 b605 	mla	r6, r6, r5, fp
 80107b2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80107b6:	b2b6      	uxth	r6, r6
 80107b8:	fa1f fe8e 	uxth.w	lr, lr
 80107bc:	1c7c      	adds	r4, r7, #1
 80107be:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80107c2:	f106 0b01 	add.w	fp, r6, #1
 80107c6:	f10e 0401 	add.w	r4, lr, #1
 80107ca:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80107ce:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80107d2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80107d6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80107da:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80107de:	4327      	orrs	r7, r4
 80107e0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80107e4:	4401      	add	r1, r0
 80107e6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80107e8:	ea47 070b 	orr.w	r7, r7, fp
 80107ec:	f829 7b02 	strh.w	r7, [r9], #2
 80107f0:	4402      	add	r2, r0
 80107f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80107f6:	e7af      	b.n	8010758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80107f8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80107fc:	f04f 0e00 	mov.w	lr, #0
 8010800:	eb03 040e 	add.w	r4, r3, lr
 8010804:	2c00      	cmp	r4, #0
 8010806:	dc43      	bgt.n	8010890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010808:	9a00      	ldr	r2, [sp, #0]
 801080a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801080e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010812:	9300      	str	r3, [sp, #0]
 8010814:	9b02      	ldr	r3, [sp, #8]
 8010816:	2b00      	cmp	r3, #0
 8010818:	f340 8098 	ble.w	801094c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801081c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010820:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8010824:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010828:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801082a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801082e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010832:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010836:	eef0 6a62 	vmov.f32	s13, s5
 801083a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801083e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010842:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010846:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801084a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801084e:	eef0 6a43 	vmov.f32	s13, s6
 8010852:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010856:	ee12 2a90 	vmov	r2, s5
 801085a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801085e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010862:	ee13 2a10 	vmov	r2, s6
 8010866:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010868:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801086a:	fb92 f3f3 	sdiv	r3, r2, r3
 801086e:	9314      	str	r3, [sp, #80]	@ 0x50
 8010870:	9b02      	ldr	r3, [sp, #8]
 8010872:	9a05      	ldr	r2, [sp, #20]
 8010874:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010878:	3b01      	subs	r3, #1
 801087a:	9302      	str	r3, [sp, #8]
 801087c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8010880:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010882:	eeb0 3a67 	vmov.f32	s6, s15
 8010886:	bf08      	it	eq
 8010888:	4613      	moveq	r3, r2
 801088a:	eef0 2a47 	vmov.f32	s5, s14
 801088e:	e72a      	b.n	80106e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010890:	140f      	asrs	r7, r1, #16
 8010892:	d454      	bmi.n	801093e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010894:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010898:	42be      	cmp	r6, r7
 801089a:	dd50      	ble.n	801093e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801089c:	ea5f 4822 	movs.w	r8, r2, asr #16
 80108a0:	d44d      	bmi.n	801093e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80108a2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80108a6:	4544      	cmp	r4, r8
 80108a8:	dd49      	ble.n	801093e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80108aa:	9c04      	ldr	r4, [sp, #16]
 80108ac:	b236      	sxth	r6, r6
 80108ae:	fb08 4606 	mla	r6, r8, r6, r4
 80108b2:	f06f 0001 	mvn.w	r0, #1
 80108b6:	f816 8007 	ldrb.w	r8, [r6, r7]
 80108ba:	9c01      	ldr	r4, [sp, #4]
 80108bc:	fb00 fa0e 	mul.w	sl, r0, lr
 80108c0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80108c4:	9800      	ldr	r0, [sp, #0]
 80108c6:	eb04 0b08 	add.w	fp, r4, r8
 80108ca:	f830 400a 	ldrh.w	r4, [r0, sl]
 80108ce:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80108d2:	9801      	ldr	r0, [sp, #4]
 80108d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80108d8:	f810 8008 	ldrb.w	r8, [r0, r8]
 80108dc:	9800      	ldr	r0, [sp, #0]
 80108de:	1227      	asrs	r7, r4, #8
 80108e0:	fb16 f609 	smulbb	r6, r6, r9
 80108e4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80108e8:	fb07 6705 	mla	r7, r7, r5, r6
 80108ec:	10e6      	asrs	r6, r4, #3
 80108ee:	00e4      	lsls	r4, r4, #3
 80108f0:	b2e4      	uxtb	r4, r4
 80108f2:	fb1b fb09 	smulbb	fp, fp, r9
 80108f6:	fb14 f405 	smulbb	r4, r4, r5
 80108fa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80108fe:	b2bf      	uxth	r7, r7
 8010900:	fb06 b605 	mla	r6, r6, r5, fp
 8010904:	fb08 4809 	mla	r8, r8, r9, r4
 8010908:	b2b6      	uxth	r6, r6
 801090a:	fa1f f888 	uxth.w	r8, r8
 801090e:	1c7c      	adds	r4, r7, #1
 8010910:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010914:	f106 0b01 	add.w	fp, r6, #1
 8010918:	f108 0401 	add.w	r4, r8, #1
 801091c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010920:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010924:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010928:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801092c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010930:	4327      	orrs	r7, r4
 8010932:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8010936:	ea47 070b 	orr.w	r7, r7, fp
 801093a:	f820 700a 	strh.w	r7, [r0, sl]
 801093e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010940:	4401      	add	r1, r0
 8010942:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8010944:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010948:	4402      	add	r2, r0
 801094a:	e759      	b.n	8010800 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801094c:	b007      	add	sp, #28
 801094e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010954 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010958:	b085      	sub	sp, #20
 801095a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801095e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8010960:	9203      	str	r2, [sp, #12]
 8010962:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8010966:	6870      	ldr	r0, [r6, #4]
 8010968:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801096a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801096e:	686f      	ldr	r7, [r5, #4]
 8010970:	9101      	str	r1, [sp, #4]
 8010972:	fb00 2404 	mla	r4, r0, r4, r2
 8010976:	6832      	ldr	r2, [r6, #0]
 8010978:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801097c:	682a      	ldr	r2, [r5, #0]
 801097e:	9202      	str	r2, [sp, #8]
 8010980:	3704      	adds	r7, #4
 8010982:	9a01      	ldr	r2, [sp, #4]
 8010984:	2a00      	cmp	r2, #0
 8010986:	dc03      	bgt.n	8010990 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010988:	9a03      	ldr	r2, [sp, #12]
 801098a:	2a00      	cmp	r2, #0
 801098c:	f340 80cc 	ble.w	8010b28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010990:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010992:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010996:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801099a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801099e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80109a0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80109a4:	2b00      	cmp	r3, #0
 80109a6:	dd0d      	ble.n	80109c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80109a8:	1406      	asrs	r6, r0, #16
 80109aa:	d405      	bmi.n	80109b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80109ac:	454e      	cmp	r6, r9
 80109ae:	da03      	bge.n	80109b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80109b0:	1416      	asrs	r6, r2, #16
 80109b2:	d401      	bmi.n	80109b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80109b4:	4546      	cmp	r6, r8
 80109b6:	db06      	blt.n	80109c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80109b8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80109ba:	4460      	add	r0, ip
 80109bc:	4432      	add	r2, r6
 80109be:	3b01      	subs	r3, #1
 80109c0:	3402      	adds	r4, #2
 80109c2:	e7ef      	b.n	80109a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80109c4:	d00f      	beq.n	80109e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80109c6:	1e5e      	subs	r6, r3, #1
 80109c8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80109cc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80109d0:	d543      	bpl.n	8010a5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80109d2:	4698      	mov	r8, r3
 80109d4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80109d8:	f1b8 0f00 	cmp.w	r8, #0
 80109dc:	dc71      	bgt.n	8010ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80109de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80109e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80109e6:	9b01      	ldr	r3, [sp, #4]
 80109e8:	2b00      	cmp	r3, #0
 80109ea:	f340 809d 	ble.w	8010b28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80109ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80109f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80109f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80109fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80109fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010a04:	eeb0 6a62 	vmov.f32	s12, s5
 8010a08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010a0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a14:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010a18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a1c:	eeb0 6a43 	vmov.f32	s12, s6
 8010a20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a24:	ee12 2a90 	vmov	r2, s5
 8010a28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a2c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010a30:	ee13 2a10 	vmov	r2, s6
 8010a34:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a38:	9312      	str	r3, [sp, #72]	@ 0x48
 8010a3a:	9b01      	ldr	r3, [sp, #4]
 8010a3c:	9a03      	ldr	r2, [sp, #12]
 8010a3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a42:	3b01      	subs	r3, #1
 8010a44:	9301      	str	r3, [sp, #4]
 8010a46:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010a4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010a4c:	eeb0 3a67 	vmov.f32	s6, s15
 8010a50:	bf08      	it	eq
 8010a52:	4613      	moveq	r3, r2
 8010a54:	eef0 2a47 	vmov.f32	s5, s14
 8010a58:	e793      	b.n	8010982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010a5a:	45ce      	cmp	lr, r9
 8010a5c:	dab9      	bge.n	80109d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010a5e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010a60:	fb01 2606 	mla	r6, r1, r6, r2
 8010a64:	1436      	asrs	r6, r6, #16
 8010a66:	d4b4      	bmi.n	80109d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010a68:	4546      	cmp	r6, r8
 8010a6a:	dab2      	bge.n	80109d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010a6c:	4698      	mov	r8, r3
 8010a6e:	46a2      	mov	sl, r4
 8010a70:	f1b8 0f00 	cmp.w	r8, #0
 8010a74:	ddb3      	ble.n	80109de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010a76:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010a7a:	9902      	ldr	r1, [sp, #8]
 8010a7c:	1416      	asrs	r6, r2, #16
 8010a7e:	fb09 1606 	mla	r6, r9, r6, r1
 8010a82:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010a86:	492a      	ldr	r1, [pc, #168]	@ (8010b30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010a88:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010a8c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010a90:	eb07 0b0e 	add.w	fp, r7, lr
 8010a94:	4460      	add	r0, ip
 8010a96:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010a9a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010a9e:	00f6      	lsls	r6, r6, #3
 8010aa0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010aa4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8010aa8:	ea49 0606 	orr.w	r6, r9, r6
 8010aac:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010ab0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010ab2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010ab6:	f82a 6b02 	strh.w	r6, [sl], #2
 8010aba:	440a      	add	r2, r1
 8010abc:	f108 38ff 	add.w	r8, r8, #4294967295
 8010ac0:	e7d6      	b.n	8010a70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010ac2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010ac6:	d429      	bmi.n	8010b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010ac8:	68ae      	ldr	r6, [r5, #8]
 8010aca:	454e      	cmp	r6, r9
 8010acc:	dd26      	ble.n	8010b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010ace:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010ad2:	d423      	bmi.n	8010b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010ad4:	68e9      	ldr	r1, [r5, #12]
 8010ad6:	4559      	cmp	r1, fp
 8010ad8:	dd20      	ble.n	8010b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010ada:	9902      	ldr	r1, [sp, #8]
 8010adc:	fa0f fe86 	sxth.w	lr, r6
 8010ae0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010ae4:	f06f 0101 	mvn.w	r1, #1
 8010ae8:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010aec:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010af0:	eb07 060e 	add.w	r6, r7, lr
 8010af4:	fb01 f908 	mul.w	r9, r1, r8
 8010af8:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010afc:	7876      	ldrb	r6, [r6, #1]
 8010afe:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8010b02:	00f6      	lsls	r6, r6, #3
 8010b04:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010b08:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8010b0c:	ea4b 0606 	orr.w	r6, fp, r6
 8010b10:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010b14:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010b18:	f82a 6009 	strh.w	r6, [sl, r9]
 8010b1c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8010b1e:	4460      	add	r0, ip
 8010b20:	440a      	add	r2, r1
 8010b22:	f108 38ff 	add.w	r8, r8, #4294967295
 8010b26:	e757      	b.n	80109d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010b28:	b005      	add	sp, #20
 8010b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b2e:	bf00      	nop
 8010b30:	fffff800 	.word	0xfffff800

08010b34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b38:	b087      	sub	sp, #28
 8010b3a:	468b      	mov	fp, r1
 8010b3c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8010b3e:	9204      	str	r2, [sp, #16]
 8010b40:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010b44:	9205      	str	r2, [sp, #20]
 8010b46:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8010b4a:	6841      	ldr	r1, [r0, #4]
 8010b4c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8010b50:	fb01 2404 	mla	r4, r1, r4, r2
 8010b54:	6802      	ldr	r2, [r0, #0]
 8010b56:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010b5a:	f8dc 2000 	ldr.w	r2, [ip]
 8010b5e:	9201      	str	r2, [sp, #4]
 8010b60:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010b64:	3204      	adds	r2, #4
 8010b66:	9202      	str	r2, [sp, #8]
 8010b68:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8010b6c:	f1bb 0f00 	cmp.w	fp, #0
 8010b70:	dc03      	bgt.n	8010b7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010b72:	9a04      	ldr	r2, [sp, #16]
 8010b74:	2a00      	cmp	r2, #0
 8010b76:	f340 8138 	ble.w	8010dea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010b7a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8010b7c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010b80:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010b84:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8010b88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8010b8a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010b8e:	2b00      	cmp	r3, #0
 8010b90:	dd0e      	ble.n	8010bb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010b92:	1402      	asrs	r2, r0, #16
 8010b94:	d405      	bmi.n	8010ba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010b96:	42ba      	cmp	r2, r7
 8010b98:	da03      	bge.n	8010ba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010b9a:	140a      	asrs	r2, r1, #16
 8010b9c:	d401      	bmi.n	8010ba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010b9e:	42b2      	cmp	r2, r6
 8010ba0:	db07      	blt.n	8010bb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010ba2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010ba4:	4410      	add	r0, r2
 8010ba6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010ba8:	3b01      	subs	r3, #1
 8010baa:	4411      	add	r1, r2
 8010bac:	3402      	adds	r4, #2
 8010bae:	e7ee      	b.n	8010b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010bb0:	d019      	beq.n	8010be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010bb2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8010bb4:	1e5a      	subs	r2, r3, #1
 8010bb6:	fb05 0502 	mla	r5, r5, r2, r0
 8010bba:	142d      	asrs	r5, r5, #16
 8010bbc:	d409      	bmi.n	8010bd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010bbe:	42bd      	cmp	r5, r7
 8010bc0:	da07      	bge.n	8010bd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010bc2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8010bc4:	fb05 1202 	mla	r2, r5, r2, r1
 8010bc8:	1412      	asrs	r2, r2, #16
 8010bca:	d402      	bmi.n	8010bd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010bcc:	42b2      	cmp	r2, r6
 8010bce:	f2c0 80ac 	blt.w	8010d2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010bd2:	f04f 0e00 	mov.w	lr, #0
 8010bd6:	eb03 020e 	add.w	r2, r3, lr
 8010bda:	2a00      	cmp	r2, #0
 8010bdc:	dc3e      	bgt.n	8010c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010bde:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010be2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010be6:	f1bb 0f00 	cmp.w	fp, #0
 8010bea:	f340 80fe 	ble.w	8010dea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010bee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010bf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010bf6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010bfa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010bfc:	f1bb 0b01 	subs.w	fp, fp, #1
 8010c00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010c04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010c08:	eeb0 6a62 	vmov.f32	s12, s5
 8010c0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010c10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c18:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8010c1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c20:	eeb0 6a43 	vmov.f32	s12, s6
 8010c24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c28:	ee12 2a90 	vmov	r2, s5
 8010c2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c30:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c34:	ee13 2a10 	vmov	r2, s6
 8010c38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c3c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8010c3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010c40:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c44:	9a04      	ldr	r2, [sp, #16]
 8010c46:	9314      	str	r3, [sp, #80]	@ 0x50
 8010c48:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8010c4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8010c4e:	eeb0 3a67 	vmov.f32	s6, s15
 8010c52:	bf08      	it	eq
 8010c54:	4613      	moveq	r3, r2
 8010c56:	eef0 2a47 	vmov.f32	s5, s14
 8010c5a:	e787      	b.n	8010b6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010c5c:	1406      	asrs	r6, r0, #16
 8010c5e:	d45d      	bmi.n	8010d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010c60:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010c64:	42b5      	cmp	r5, r6
 8010c66:	dd59      	ble.n	8010d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010c68:	140f      	asrs	r7, r1, #16
 8010c6a:	d457      	bmi.n	8010d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010c6c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010c70:	42ba      	cmp	r2, r7
 8010c72:	dd53      	ble.n	8010d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010c74:	9a01      	ldr	r2, [sp, #4]
 8010c76:	b22d      	sxth	r5, r5
 8010c78:	fb07 2505 	mla	r5, r7, r5, r2
 8010c7c:	5daa      	ldrb	r2, [r5, r6]
 8010c7e:	9d02      	ldr	r5, [sp, #8]
 8010c80:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010c84:	0e2e      	lsrs	r6, r5, #24
 8010c86:	d049      	beq.n	8010d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010c88:	f06f 0201 	mvn.w	r2, #1
 8010c8c:	fb02 f20e 	mul.w	r2, r2, lr
 8010c90:	9203      	str	r2, [sp, #12]
 8010c92:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010c96:	9a05      	ldr	r2, [sp, #20]
 8010c98:	4356      	muls	r6, r2
 8010c9a:	1c72      	adds	r2, r6, #1
 8010c9c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010ca0:	1212      	asrs	r2, r2, #8
 8010ca2:	fa1f f982 	uxth.w	r9, r2
 8010ca6:	ea4f 2728 	mov.w	r7, r8, asr #8
 8010caa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010cae:	43d2      	mvns	r2, r2
 8010cb0:	b2d2      	uxtb	r2, r2
 8010cb2:	fb16 f609 	smulbb	r6, r6, r9
 8010cb6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010cba:	fb07 6702 	mla	r7, r7, r2, r6
 8010cbe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010cc2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010cc6:	b2ed      	uxtb	r5, r5
 8010cc8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010ccc:	fa5f f888 	uxtb.w	r8, r8
 8010cd0:	fb15 f509 	smulbb	r5, r5, r9
 8010cd4:	fb08 5502 	mla	r5, r8, r2, r5
 8010cd8:	b2bf      	uxth	r7, r7
 8010cda:	fb1a fa09 	smulbb	sl, sl, r9
 8010cde:	b2ad      	uxth	r5, r5
 8010ce0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010ce4:	fb06 a602 	mla	r6, r6, r2, sl
 8010ce8:	1c7a      	adds	r2, r7, #1
 8010cea:	f105 0a01 	add.w	sl, r5, #1
 8010cee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010cf2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010cf6:	b2b6      	uxth	r6, r6
 8010cf8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010cfc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010d00:	ea4a 0707 	orr.w	r7, sl, r7
 8010d04:	f106 0a01 	add.w	sl, r6, #1
 8010d08:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010d0c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010d10:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010d14:	9a03      	ldr	r2, [sp, #12]
 8010d16:	ea47 070a 	orr.w	r7, r7, sl
 8010d1a:	52a7      	strh	r7, [r4, r2]
 8010d1c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010d1e:	4410      	add	r0, r2
 8010d20:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010d22:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010d26:	4411      	add	r1, r2
 8010d28:	e755      	b.n	8010bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010d2a:	f04f 0800 	mov.w	r8, #0
 8010d2e:	eba3 0208 	sub.w	r2, r3, r8
 8010d32:	2a00      	cmp	r2, #0
 8010d34:	f77f af53 	ble.w	8010bde <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010d38:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010d3c:	9f01      	ldr	r7, [sp, #4]
 8010d3e:	140a      	asrs	r2, r1, #16
 8010d40:	1405      	asrs	r5, r0, #16
 8010d42:	fb06 7202 	mla	r2, r6, r2, r7
 8010d46:	5d52      	ldrb	r2, [r2, r5]
 8010d48:	9d02      	ldr	r5, [sp, #8]
 8010d4a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010d4e:	0e2e      	lsrs	r6, r5, #24
 8010d50:	d044      	beq.n	8010ddc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010d52:	9a05      	ldr	r2, [sp, #20]
 8010d54:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010d58:	4356      	muls	r6, r2
 8010d5a:	1c72      	adds	r2, r6, #1
 8010d5c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010d60:	1212      	asrs	r2, r2, #8
 8010d62:	fa1f f982 	uxth.w	r9, r2
 8010d66:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010d6a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010d6e:	43d2      	mvns	r2, r2
 8010d70:	b2d2      	uxtb	r2, r2
 8010d72:	fb16 f609 	smulbb	r6, r6, r9
 8010d76:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8010d7a:	fb07 6702 	mla	r7, r7, r2, r6
 8010d7e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010d82:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010d86:	b2ed      	uxtb	r5, r5
 8010d88:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010d8c:	fa5f fe8e 	uxtb.w	lr, lr
 8010d90:	fb15 f509 	smulbb	r5, r5, r9
 8010d94:	fb0e 5502 	mla	r5, lr, r2, r5
 8010d98:	b2bf      	uxth	r7, r7
 8010d9a:	fb1a fa09 	smulbb	sl, sl, r9
 8010d9e:	b2ad      	uxth	r5, r5
 8010da0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8010da4:	fb06 a602 	mla	r6, r6, r2, sl
 8010da8:	1c7a      	adds	r2, r7, #1
 8010daa:	f105 0a01 	add.w	sl, r5, #1
 8010dae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010db2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010db6:	b2b6      	uxth	r6, r6
 8010db8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010dbc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8010dc0:	ea4a 0707 	orr.w	r7, sl, r7
 8010dc4:	f106 0a01 	add.w	sl, r6, #1
 8010dc8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010dcc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010dd0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010dd4:	ea47 070a 	orr.w	r7, r7, sl
 8010dd8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010ddc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010dde:	4410      	add	r0, r2
 8010de0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010de2:	f108 0801 	add.w	r8, r8, #1
 8010de6:	4411      	add	r1, r2
 8010de8:	e7a1      	b.n	8010d2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010dea:	b007      	add	sp, #28
 8010dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010df0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010df4:	b085      	sub	sp, #20
 8010df6:	468b      	mov	fp, r1
 8010df8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8010dfa:	9203      	str	r2, [sp, #12]
 8010dfc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8010e00:	6841      	ldr	r1, [r0, #4]
 8010e02:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8010e06:	fb01 2404 	mla	r4, r1, r4, r2
 8010e0a:	6802      	ldr	r2, [r0, #0]
 8010e0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010e10:	f8de 2000 	ldr.w	r2, [lr]
 8010e14:	9200      	str	r2, [sp, #0]
 8010e16:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010e1a:	3204      	adds	r2, #4
 8010e1c:	9201      	str	r2, [sp, #4]
 8010e1e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8010e22:	f1bb 0f00 	cmp.w	fp, #0
 8010e26:	dc03      	bgt.n	8010e30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010e28:	9a03      	ldr	r2, [sp, #12]
 8010e2a:	2a00      	cmp	r2, #0
 8010e2c:	f340 8153 	ble.w	80110d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010e30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8010e32:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010e36:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010e3a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8010e3e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010e40:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8010e44:	2b00      	cmp	r3, #0
 8010e46:	dd0e      	ble.n	8010e66 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010e48:	1408      	asrs	r0, r1, #16
 8010e4a:	d405      	bmi.n	8010e58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010e4c:	42b8      	cmp	r0, r7
 8010e4e:	da03      	bge.n	8010e58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010e50:	1410      	asrs	r0, r2, #16
 8010e52:	d401      	bmi.n	8010e58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010e54:	42b0      	cmp	r0, r6
 8010e56:	db07      	blt.n	8010e68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010e58:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8010e5a:	4401      	add	r1, r0
 8010e5c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8010e5e:	3b01      	subs	r3, #1
 8010e60:	4402      	add	r2, r0
 8010e62:	3402      	adds	r4, #2
 8010e64:	e7ee      	b.n	8010e44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010e66:	d017      	beq.n	8010e98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010e68:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8010e6a:	1e58      	subs	r0, r3, #1
 8010e6c:	fb05 1500 	mla	r5, r5, r0, r1
 8010e70:	142d      	asrs	r5, r5, #16
 8010e72:	d409      	bmi.n	8010e88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010e74:	42bd      	cmp	r5, r7
 8010e76:	da07      	bge.n	8010e88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010e78:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8010e7a:	fb05 2000 	mla	r0, r5, r0, r2
 8010e7e:	1400      	asrs	r0, r0, #16
 8010e80:	d402      	bmi.n	8010e88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010e82:	42b0      	cmp	r0, r6
 8010e84:	f2c0 80bc 	blt.w	8011000 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010e88:	2600      	movs	r6, #0
 8010e8a:	1998      	adds	r0, r3, r6
 8010e8c:	2800      	cmp	r0, #0
 8010e8e:	dc3e      	bgt.n	8010f0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010e90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010e98:	f1bb 0f00 	cmp.w	fp, #0
 8010e9c:	f340 811b 	ble.w	80110d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ea0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010ea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010ea8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010eac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010eae:	f1bb 0b01 	subs.w	fp, fp, #1
 8010eb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010eb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010eba:	eeb0 6a62 	vmov.f32	s12, s5
 8010ebe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010ec2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ec6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010eca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8010ece:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ed2:	eeb0 6a43 	vmov.f32	s12, s6
 8010ed6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010eda:	ee12 2a90 	vmov	r2, s5
 8010ede:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ee2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ee6:	ee13 2a10 	vmov	r2, s6
 8010eea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010eee:	9311      	str	r3, [sp, #68]	@ 0x44
 8010ef0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ef2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ef6:	9a03      	ldr	r2, [sp, #12]
 8010ef8:	9312      	str	r3, [sp, #72]	@ 0x48
 8010efa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8010efe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010f00:	eeb0 3a67 	vmov.f32	s6, s15
 8010f04:	bf08      	it	eq
 8010f06:	4613      	moveq	r3, r2
 8010f08:	eef0 2a47 	vmov.f32	s5, s14
 8010f0c:	e789      	b.n	8010e22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010f0e:	140f      	asrs	r7, r1, #16
 8010f10:	d426      	bmi.n	8010f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010f12:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010f16:	42bd      	cmp	r5, r7
 8010f18:	dd22      	ble.n	8010f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010f1a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010f1e:	d41f      	bmi.n	8010f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010f20:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010f24:	4560      	cmp	r0, ip
 8010f26:	dd1b      	ble.n	8010f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010f28:	9800      	ldr	r0, [sp, #0]
 8010f2a:	b22d      	sxth	r5, r5
 8010f2c:	fb0c 0505 	mla	r5, ip, r5, r0
 8010f30:	5de8      	ldrb	r0, [r5, r7]
 8010f32:	9d01      	ldr	r5, [sp, #4]
 8010f34:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010f38:	0e07      	lsrs	r7, r0, #24
 8010f3a:	2fff      	cmp	r7, #255	@ 0xff
 8010f3c:	d116      	bne.n	8010f6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010f3e:	f06f 0501 	mvn.w	r5, #1
 8010f42:	fb05 f706 	mul.w	r7, r5, r6
 8010f46:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8010f4a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010f4e:	0945      	lsrs	r5, r0, #5
 8010f50:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8010f54:	ea4c 0505 	orr.w	r5, ip, r5
 8010f58:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010f5c:	4305      	orrs	r5, r0
 8010f5e:	53e5      	strh	r5, [r4, r7]
 8010f60:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8010f62:	4401      	add	r1, r0
 8010f64:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8010f66:	3e01      	subs	r6, #1
 8010f68:	4402      	add	r2, r0
 8010f6a:	e78e      	b.n	8010e8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010f6c:	b2fd      	uxtb	r5, r7
 8010f6e:	2f00      	cmp	r7, #0
 8010f70:	d0f6      	beq.n	8010f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010f72:	f06f 0701 	mvn.w	r7, #1
 8010f76:	4377      	muls	r7, r6
 8010f78:	fa1f f985 	uxth.w	r9, r5
 8010f7c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010f80:	9702      	str	r7, [sp, #8]
 8010f82:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010f86:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010f8a:	43ed      	mvns	r5, r5
 8010f8c:	b2ed      	uxtb	r5, r5
 8010f8e:	fb17 f709 	smulbb	r7, r7, r9
 8010f92:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8010f96:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010f9a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010f9e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010fa2:	b2c0      	uxtb	r0, r0
 8010fa4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010fa8:	fa5f f888 	uxtb.w	r8, r8
 8010fac:	fb10 f009 	smulbb	r0, r0, r9
 8010fb0:	fb08 0005 	mla	r0, r8, r5, r0
 8010fb4:	b280      	uxth	r0, r0
 8010fb6:	fa1f fc8c 	uxth.w	ip, ip
 8010fba:	fb1a fa09 	smulbb	sl, sl, r9
 8010fbe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8010fc2:	fb07 a705 	mla	r7, r7, r5, sl
 8010fc6:	f100 0a01 	add.w	sl, r0, #1
 8010fca:	f10c 0501 	add.w	r5, ip, #1
 8010fce:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010fd2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010fd6:	b2bf      	uxth	r7, r7
 8010fd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fdc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8010fe0:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010fe4:	f107 0a01 	add.w	sl, r7, #1
 8010fe8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010fec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ff0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8010ff4:	9802      	ldr	r0, [sp, #8]
 8010ff6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010ffa:	f824 c000 	strh.w	ip, [r4, r0]
 8010ffe:	e7af      	b.n	8010f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011000:	f04f 0800 	mov.w	r8, #0
 8011004:	eba3 0008 	sub.w	r0, r3, r8
 8011008:	2800      	cmp	r0, #0
 801100a:	f77f af41 	ble.w	8010e90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801100e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011012:	9f00      	ldr	r7, [sp, #0]
 8011014:	1410      	asrs	r0, r2, #16
 8011016:	140d      	asrs	r5, r1, #16
 8011018:	fb06 7000 	mla	r0, r6, r0, r7
 801101c:	5d40      	ldrb	r0, [r0, r5]
 801101e:	9d01      	ldr	r5, [sp, #4]
 8011020:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011024:	0e2e      	lsrs	r6, r5, #24
 8011026:	2eff      	cmp	r6, #255	@ 0xff
 8011028:	d112      	bne.n	8011050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801102a:	482c      	ldr	r0, [pc, #176]	@ (80110dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801102c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011030:	0968      	lsrs	r0, r5, #5
 8011032:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011036:	4330      	orrs	r0, r6
 8011038:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801103c:	4328      	orrs	r0, r5
 801103e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8011042:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011044:	4401      	add	r1, r0
 8011046:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011048:	f108 0801 	add.w	r8, r8, #1
 801104c:	4402      	add	r2, r0
 801104e:	e7d9      	b.n	8011004 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011050:	b2f0      	uxtb	r0, r6
 8011052:	2e00      	cmp	r6, #0
 8011054:	d0f5      	beq.n	8011042 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8011056:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801105a:	fa1f f980 	uxth.w	r9, r0
 801105e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011062:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011066:	43c0      	mvns	r0, r0
 8011068:	b2c0      	uxtb	r0, r0
 801106a:	fb16 f609 	smulbb	r6, r6, r9
 801106e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011072:	fb07 6700 	mla	r7, r7, r0, r6
 8011076:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801107a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801107e:	b2ed      	uxtb	r5, r5
 8011080:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011084:	fa5f fc8c 	uxtb.w	ip, ip
 8011088:	fb15 f509 	smulbb	r5, r5, r9
 801108c:	fb0c 5500 	mla	r5, ip, r0, r5
 8011090:	b2bf      	uxth	r7, r7
 8011092:	fb1a fa09 	smulbb	sl, sl, r9
 8011096:	b2ad      	uxth	r5, r5
 8011098:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801109c:	fb06 a600 	mla	r6, r6, r0, sl
 80110a0:	1c78      	adds	r0, r7, #1
 80110a2:	f105 0a01 	add.w	sl, r5, #1
 80110a6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80110aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80110ae:	b2b6      	uxth	r6, r6
 80110b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80110b4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80110b8:	ea4a 0707 	orr.w	r7, sl, r7
 80110bc:	f106 0a01 	add.w	sl, r6, #1
 80110c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80110c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80110c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80110cc:	ea47 070a 	orr.w	r7, r7, sl
 80110d0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80110d4:	e7b5      	b.n	8011042 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80110d6:	b005      	add	sp, #20
 80110d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110dc:	fffff800 	.word	0xfffff800

080110e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80110e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110e4:	b087      	sub	sp, #28
 80110e6:	468b      	mov	fp, r1
 80110e8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80110ea:	9204      	str	r2, [sp, #16]
 80110ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80110f0:	9205      	str	r2, [sp, #20]
 80110f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80110f6:	6861      	ldr	r1, [r4, #4]
 80110f8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80110fc:	fb01 2000 	mla	r0, r1, r0, r2
 8011100:	6822      	ldr	r2, [r4, #0]
 8011102:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011106:	f8de 2000 	ldr.w	r2, [lr]
 801110a:	9201      	str	r2, [sp, #4]
 801110c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011110:	9202      	str	r2, [sp, #8]
 8011112:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011116:	f1bb 0f00 	cmp.w	fp, #0
 801111a:	dc03      	bgt.n	8011124 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801111c:	9a04      	ldr	r2, [sp, #16]
 801111e:	2a00      	cmp	r2, #0
 8011120:	f340 8142 	ble.w	80113a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011124:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011126:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801112a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801112e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011132:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011134:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011138:	2b00      	cmp	r3, #0
 801113a:	dd0e      	ble.n	801115a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801113c:	140c      	asrs	r4, r1, #16
 801113e:	d405      	bmi.n	801114c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011140:	42bc      	cmp	r4, r7
 8011142:	da03      	bge.n	801114c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011144:	1414      	asrs	r4, r2, #16
 8011146:	d401      	bmi.n	801114c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011148:	42b4      	cmp	r4, r6
 801114a:	db07      	blt.n	801115c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801114c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801114e:	4421      	add	r1, r4
 8011150:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011152:	3b01      	subs	r3, #1
 8011154:	4422      	add	r2, r4
 8011156:	3002      	adds	r0, #2
 8011158:	e7ee      	b.n	8011138 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801115a:	d019      	beq.n	8011190 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801115c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801115e:	1e5c      	subs	r4, r3, #1
 8011160:	fb05 1504 	mla	r5, r5, r4, r1
 8011164:	142d      	asrs	r5, r5, #16
 8011166:	d409      	bmi.n	801117c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011168:	42bd      	cmp	r5, r7
 801116a:	da07      	bge.n	801117c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801116c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801116e:	fb05 2404 	mla	r4, r5, r4, r2
 8011172:	1424      	asrs	r4, r4, #16
 8011174:	d402      	bmi.n	801117c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011176:	42b4      	cmp	r4, r6
 8011178:	f2c0 80b1 	blt.w	80112de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801117c:	f04f 0800 	mov.w	r8, #0
 8011180:	eb03 0408 	add.w	r4, r3, r8
 8011184:	2c00      	cmp	r4, #0
 8011186:	dc3e      	bgt.n	8011206 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011188:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801118c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011190:	f1bb 0f00 	cmp.w	fp, #0
 8011194:	f340 8108 	ble.w	80113a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011198:	ee30 0a04 	vadd.f32	s0, s0, s8
 801119c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80111a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80111a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80111a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80111aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80111ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80111b2:	eeb0 6a62 	vmov.f32	s12, s5
 80111b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80111ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80111be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80111c2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80111c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80111ca:	eeb0 6a43 	vmov.f32	s12, s6
 80111ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80111d2:	ee12 2a90 	vmov	r2, s5
 80111d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80111da:	fb92 f3f3 	sdiv	r3, r2, r3
 80111de:	ee13 2a10 	vmov	r2, s6
 80111e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80111e6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80111e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80111ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80111ee:	9a04      	ldr	r2, [sp, #16]
 80111f0:	9314      	str	r3, [sp, #80]	@ 0x50
 80111f2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80111f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80111f8:	eeb0 3a67 	vmov.f32	s6, s15
 80111fc:	bf08      	it	eq
 80111fe:	4613      	moveq	r3, r2
 8011200:	eef0 2a47 	vmov.f32	s5, s14
 8011204:	e787      	b.n	8011116 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011206:	140e      	asrs	r6, r1, #16
 8011208:	d462      	bmi.n	80112d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801120a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801120e:	42b5      	cmp	r5, r6
 8011210:	dd5e      	ble.n	80112d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011212:	1417      	asrs	r7, r2, #16
 8011214:	d45c      	bmi.n	80112d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011216:	f8de 400c 	ldr.w	r4, [lr, #12]
 801121a:	42bc      	cmp	r4, r7
 801121c:	dd58      	ble.n	80112d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801121e:	b22d      	sxth	r5, r5
 8011220:	fb07 6505 	mla	r5, r7, r5, r6
 8011224:	9c02      	ldr	r4, [sp, #8]
 8011226:	5d66      	ldrb	r6, [r4, r5]
 8011228:	2e00      	cmp	r6, #0
 801122a:	d051      	beq.n	80112d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801122c:	9c01      	ldr	r4, [sp, #4]
 801122e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8011232:	f06f 0401 	mvn.w	r4, #1
 8011236:	fb04 f408 	mul.w	r4, r4, r8
 801123a:	9403      	str	r4, [sp, #12]
 801123c:	5b05      	ldrh	r5, [r0, r4]
 801123e:	9c05      	ldr	r4, [sp, #20]
 8011240:	4366      	muls	r6, r4
 8011242:	1c74      	adds	r4, r6, #1
 8011244:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011248:	1224      	asrs	r4, r4, #8
 801124a:	b2a7      	uxth	r7, r4
 801124c:	122e      	asrs	r6, r5, #8
 801124e:	43e4      	mvns	r4, r4
 8011250:	b2e4      	uxtb	r4, r4
 8011252:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8011256:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801125a:	fb16 f604 	smulbb	r6, r6, r4
 801125e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011262:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011266:	00ed      	lsls	r5, r5, #3
 8011268:	fb0c 6c07 	mla	ip, ip, r7, r6
 801126c:	b2ed      	uxtb	r5, r5
 801126e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8011272:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011276:	fb15 f504 	smulbb	r5, r5, r4
 801127a:	fa5f f989 	uxtb.w	r9, r9
 801127e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8011282:	fb09 5507 	mla	r5, r9, r7, r5
 8011286:	fb1a fa04 	smulbb	sl, sl, r4
 801128a:	fa1f fc8c 	uxth.w	ip, ip
 801128e:	b2ad      	uxth	r5, r5
 8011290:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011294:	fb06 a607 	mla	r6, r6, r7, sl
 8011298:	f10c 0401 	add.w	r4, ip, #1
 801129c:	f105 0a01 	add.w	sl, r5, #1
 80112a0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80112a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80112a8:	b2b6      	uxth	r6, r6
 80112aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80112ae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80112b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80112b6:	f106 0a01 	add.w	sl, r6, #1
 80112ba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80112be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80112c2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80112c6:	9c03      	ldr	r4, [sp, #12]
 80112c8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80112cc:	f820 c004 	strh.w	ip, [r0, r4]
 80112d0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80112d2:	4421      	add	r1, r4
 80112d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80112d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80112da:	4422      	add	r2, r4
 80112dc:	e750      	b.n	8011180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80112de:	f04f 0900 	mov.w	r9, #0
 80112e2:	eba3 0409 	sub.w	r4, r3, r9
 80112e6:	2c00      	cmp	r4, #0
 80112e8:	f77f af4e 	ble.w	8011188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80112ec:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80112f0:	140d      	asrs	r5, r1, #16
 80112f2:	1414      	asrs	r4, r2, #16
 80112f4:	fb06 5404 	mla	r4, r6, r4, r5
 80112f8:	9d02      	ldr	r5, [sp, #8]
 80112fa:	5d2e      	ldrb	r6, [r5, r4]
 80112fc:	2e00      	cmp	r6, #0
 80112fe:	d04c      	beq.n	801139a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8011300:	9d01      	ldr	r5, [sp, #4]
 8011302:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8011306:	9c05      	ldr	r4, [sp, #20]
 8011308:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801130c:	4366      	muls	r6, r4
 801130e:	1c74      	adds	r4, r6, #1
 8011310:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011314:	1224      	asrs	r4, r4, #8
 8011316:	b2a7      	uxth	r7, r4
 8011318:	122e      	asrs	r6, r5, #8
 801131a:	43e4      	mvns	r4, r4
 801131c:	b2e4      	uxtb	r4, r4
 801131e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011322:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8011326:	fb16 f604 	smulbb	r6, r6, r4
 801132a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801132e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011332:	00ed      	lsls	r5, r5, #3
 8011334:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011338:	b2ed      	uxtb	r5, r5
 801133a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801133e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011342:	fb15 f504 	smulbb	r5, r5, r4
 8011346:	fa5f f888 	uxtb.w	r8, r8
 801134a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801134e:	fb08 5507 	mla	r5, r8, r7, r5
 8011352:	fb1a fa04 	smulbb	sl, sl, r4
 8011356:	fa1f fc8c 	uxth.w	ip, ip
 801135a:	b2ad      	uxth	r5, r5
 801135c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8011360:	fb06 a607 	mla	r6, r6, r7, sl
 8011364:	f10c 0401 	add.w	r4, ip, #1
 8011368:	f105 0a01 	add.w	sl, r5, #1
 801136c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011370:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011374:	b2b6      	uxth	r6, r6
 8011376:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801137a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801137e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011382:	f106 0a01 	add.w	sl, r6, #1
 8011386:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801138a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801138e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011392:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011396:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801139a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801139c:	4421      	add	r1, r4
 801139e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80113a0:	f109 0901 	add.w	r9, r9, #1
 80113a4:	4422      	add	r2, r4
 80113a6:	e79c      	b.n	80112e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80113a8:	b007      	add	sp, #28
 80113aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080113ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80113ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113b2:	b085      	sub	sp, #20
 80113b4:	468b      	mov	fp, r1
 80113b6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80113b8:	9203      	str	r2, [sp, #12]
 80113ba:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80113be:	6861      	ldr	r1, [r4, #4]
 80113c0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80113c4:	fb01 2000 	mla	r0, r1, r0, r2
 80113c8:	6822      	ldr	r2, [r4, #0]
 80113ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80113ce:	f8d8 2000 	ldr.w	r2, [r8]
 80113d2:	9200      	str	r2, [sp, #0]
 80113d4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80113d8:	9201      	str	r2, [sp, #4]
 80113da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80113de:	f1bb 0f00 	cmp.w	fp, #0
 80113e2:	dc03      	bgt.n	80113ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80113e4:	9a03      	ldr	r2, [sp, #12]
 80113e6:	2a00      	cmp	r2, #0
 80113e8:	f340 8146 	ble.w	8011678 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80113ec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80113ee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80113f2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80113f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80113fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80113fc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011400:	2b00      	cmp	r3, #0
 8011402:	dd0e      	ble.n	8011422 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011404:	140c      	asrs	r4, r1, #16
 8011406:	d405      	bmi.n	8011414 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011408:	42bc      	cmp	r4, r7
 801140a:	da03      	bge.n	8011414 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801140c:	1414      	asrs	r4, r2, #16
 801140e:	d401      	bmi.n	8011414 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011410:	42b4      	cmp	r4, r6
 8011412:	db07      	blt.n	8011424 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011414:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8011416:	4421      	add	r1, r4
 8011418:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801141a:	3b01      	subs	r3, #1
 801141c:	4422      	add	r2, r4
 801141e:	3002      	adds	r0, #2
 8011420:	e7ee      	b.n	8011400 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011422:	d017      	beq.n	8011454 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011424:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8011426:	1e5c      	subs	r4, r3, #1
 8011428:	fb05 1504 	mla	r5, r5, r4, r1
 801142c:	142d      	asrs	r5, r5, #16
 801142e:	d409      	bmi.n	8011444 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011430:	42bd      	cmp	r5, r7
 8011432:	da07      	bge.n	8011444 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011434:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011436:	fb05 2404 	mla	r4, r5, r4, r2
 801143a:	1424      	asrs	r4, r4, #16
 801143c:	d402      	bmi.n	8011444 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801143e:	42b4      	cmp	r4, r6
 8011440:	f2c0 80b3 	blt.w	80115aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011444:	2600      	movs	r6, #0
 8011446:	199c      	adds	r4, r3, r6
 8011448:	2c00      	cmp	r4, #0
 801144a:	dc3e      	bgt.n	80114ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801144c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011450:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011454:	f1bb 0f00 	cmp.w	fp, #0
 8011458:	f340 810e 	ble.w	8011678 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801145c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011460:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011464:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011468:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801146a:	f1bb 0b01 	subs.w	fp, fp, #1
 801146e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011472:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011476:	eeb0 6a62 	vmov.f32	s12, s5
 801147a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801147e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011482:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011486:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801148a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801148e:	eeb0 6a43 	vmov.f32	s12, s6
 8011492:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011496:	ee12 2a90 	vmov	r2, s5
 801149a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801149e:	fb92 f3f3 	sdiv	r3, r2, r3
 80114a2:	ee13 2a10 	vmov	r2, s6
 80114a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114aa:	9311      	str	r3, [sp, #68]	@ 0x44
 80114ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80114ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80114b2:	9a03      	ldr	r2, [sp, #12]
 80114b4:	9312      	str	r3, [sp, #72]	@ 0x48
 80114b6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80114ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80114bc:	eeb0 3a67 	vmov.f32	s6, s15
 80114c0:	bf08      	it	eq
 80114c2:	4613      	moveq	r3, r2
 80114c4:	eef0 2a47 	vmov.f32	s5, s14
 80114c8:	e789      	b.n	80113de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80114ca:	140f      	asrs	r7, r1, #16
 80114cc:	d418      	bmi.n	8011500 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80114ce:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80114d2:	42bd      	cmp	r5, r7
 80114d4:	dd14      	ble.n	8011500 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80114d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80114da:	d411      	bmi.n	8011500 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80114dc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80114e0:	4564      	cmp	r4, ip
 80114e2:	dd0d      	ble.n	8011500 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80114e4:	b22d      	sxth	r5, r5
 80114e6:	fb0c 7505 	mla	r5, ip, r5, r7
 80114ea:	9c01      	ldr	r4, [sp, #4]
 80114ec:	5d64      	ldrb	r4, [r4, r5]
 80114ee:	2cff      	cmp	r4, #255	@ 0xff
 80114f0:	d10c      	bne.n	801150c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80114f2:	9c00      	ldr	r4, [sp, #0]
 80114f4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80114f8:	f06f 0401 	mvn.w	r4, #1
 80114fc:	4374      	muls	r4, r6
 80114fe:	5305      	strh	r5, [r0, r4]
 8011500:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8011502:	4421      	add	r1, r4
 8011504:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8011506:	3e01      	subs	r6, #1
 8011508:	4422      	add	r2, r4
 801150a:	e79c      	b.n	8011446 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801150c:	2c00      	cmp	r4, #0
 801150e:	d0f7      	beq.n	8011500 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011510:	9f00      	ldr	r7, [sp, #0]
 8011512:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8011516:	f06f 0501 	mvn.w	r5, #1
 801151a:	4375      	muls	r5, r6
 801151c:	9502      	str	r5, [sp, #8]
 801151e:	5b45      	ldrh	r5, [r0, r5]
 8011520:	fa1f fc84 	uxth.w	ip, r4
 8011524:	122f      	asrs	r7, r5, #8
 8011526:	43e4      	mvns	r4, r4
 8011528:	b2e4      	uxtb	r4, r4
 801152a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801152e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011532:	fb17 f704 	smulbb	r7, r7, r4
 8011536:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801153a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801153e:	00ed      	lsls	r5, r5, #3
 8011540:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8011544:	b2ed      	uxtb	r5, r5
 8011546:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801154a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801154e:	fb15 f504 	smulbb	r5, r5, r4
 8011552:	fa5f f989 	uxtb.w	r9, r9
 8011556:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801155a:	fb09 550c 	mla	r5, r9, ip, r5
 801155e:	fb1a fa04 	smulbb	sl, sl, r4
 8011562:	fa1f fe8e 	uxth.w	lr, lr
 8011566:	b2ad      	uxth	r5, r5
 8011568:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801156c:	fb07 a70c 	mla	r7, r7, ip, sl
 8011570:	f10e 0401 	add.w	r4, lr, #1
 8011574:	f105 0a01 	add.w	sl, r5, #1
 8011578:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801157c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011580:	b2bf      	uxth	r7, r7
 8011582:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011586:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801158a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801158e:	f107 0a01 	add.w	sl, r7, #1
 8011592:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011596:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801159a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801159e:	9c02      	ldr	r4, [sp, #8]
 80115a0:	ea4e 0e0a 	orr.w	lr, lr, sl
 80115a4:	f820 e004 	strh.w	lr, [r0, r4]
 80115a8:	e7aa      	b.n	8011500 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80115aa:	f04f 0900 	mov.w	r9, #0
 80115ae:	eba3 0409 	sub.w	r4, r3, r9
 80115b2:	2c00      	cmp	r4, #0
 80115b4:	f77f af4a 	ble.w	801144c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80115b8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80115bc:	1414      	asrs	r4, r2, #16
 80115be:	140d      	asrs	r5, r1, #16
 80115c0:	fb06 5504 	mla	r5, r6, r4, r5
 80115c4:	9c01      	ldr	r4, [sp, #4]
 80115c6:	5d64      	ldrb	r4, [r4, r5]
 80115c8:	2cff      	cmp	r4, #255	@ 0xff
 80115ca:	d10b      	bne.n	80115e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80115cc:	9c00      	ldr	r4, [sp, #0]
 80115ce:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80115d2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80115d6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80115d8:	4421      	add	r1, r4
 80115da:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80115dc:	f109 0901 	add.w	r9, r9, #1
 80115e0:	4422      	add	r2, r4
 80115e2:	e7e4      	b.n	80115ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80115e4:	2c00      	cmp	r4, #0
 80115e6:	d0f6      	beq.n	80115d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80115e8:	9e00      	ldr	r6, [sp, #0]
 80115ea:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80115ee:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80115f2:	b2a7      	uxth	r7, r4
 80115f4:	122e      	asrs	r6, r5, #8
 80115f6:	43e4      	mvns	r4, r4
 80115f8:	b2e4      	uxtb	r4, r4
 80115fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80115fe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8011602:	fb16 f604 	smulbb	r6, r6, r4
 8011606:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801160a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801160e:	00ed      	lsls	r5, r5, #3
 8011610:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011614:	b2ed      	uxtb	r5, r5
 8011616:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801161a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801161e:	fb15 f504 	smulbb	r5, r5, r4
 8011622:	fa5f fe8e 	uxtb.w	lr, lr
 8011626:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801162a:	fb0e 5507 	mla	r5, lr, r7, r5
 801162e:	fb1a fa04 	smulbb	sl, sl, r4
 8011632:	fa1f fc8c 	uxth.w	ip, ip
 8011636:	b2ad      	uxth	r5, r5
 8011638:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801163c:	fb06 a607 	mla	r6, r6, r7, sl
 8011640:	f10c 0401 	add.w	r4, ip, #1
 8011644:	f105 0a01 	add.w	sl, r5, #1
 8011648:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801164c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011650:	b2b6      	uxth	r6, r6
 8011652:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011656:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801165a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801165e:	f106 0a01 	add.w	sl, r6, #1
 8011662:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011666:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801166a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801166e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011672:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011676:	e7ae      	b.n	80115d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011678:	b005      	add	sp, #20
 801167a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801167e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801167e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011682:	b085      	sub	sp, #20
 8011684:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011686:	9203      	str	r2, [sp, #12]
 8011688:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801168c:	9201      	str	r2, [sp, #4]
 801168e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011692:	9100      	str	r1, [sp, #0]
 8011694:	6841      	ldr	r1, [r0, #4]
 8011696:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801169a:	fb01 2404 	mla	r4, r1, r4, r2
 801169e:	6802      	ldr	r2, [r0, #0]
 80116a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80116a4:	f8de 2000 	ldr.w	r2, [lr]
 80116a8:	9202      	str	r2, [sp, #8]
 80116aa:	9a01      	ldr	r2, [sp, #4]
 80116ac:	43d6      	mvns	r6, r2
 80116ae:	b2f6      	uxtb	r6, r6
 80116b0:	9a00      	ldr	r2, [sp, #0]
 80116b2:	2a00      	cmp	r2, #0
 80116b4:	dc03      	bgt.n	80116be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80116b6:	9a03      	ldr	r2, [sp, #12]
 80116b8:	2a00      	cmp	r2, #0
 80116ba:	f340 8124 	ble.w	8011906 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80116be:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80116c0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80116c4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80116c8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80116cc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80116ce:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80116d2:	2b00      	cmp	r3, #0
 80116d4:	dd0e      	ble.n	80116f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116d6:	1408      	asrs	r0, r1, #16
 80116d8:	d405      	bmi.n	80116e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80116da:	4560      	cmp	r0, ip
 80116dc:	da03      	bge.n	80116e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80116de:	1410      	asrs	r0, r2, #16
 80116e0:	d401      	bmi.n	80116e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80116e2:	42b8      	cmp	r0, r7
 80116e4:	db07      	blt.n	80116f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80116e6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80116e8:	4401      	add	r1, r0
 80116ea:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80116ec:	3b01      	subs	r3, #1
 80116ee:	4402      	add	r2, r0
 80116f0:	3402      	adds	r4, #2
 80116f2:	e7ee      	b.n	80116d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80116f4:	d06e      	beq.n	80117d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80116f6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80116f8:	1e58      	subs	r0, r3, #1
 80116fa:	fb05 1500 	mla	r5, r5, r0, r1
 80116fe:	142d      	asrs	r5, r5, #16
 8011700:	d45c      	bmi.n	80117bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011702:	4565      	cmp	r5, ip
 8011704:	da5a      	bge.n	80117bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011706:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011708:	fb05 2000 	mla	r0, r5, r0, r2
 801170c:	1400      	asrs	r0, r0, #16
 801170e:	d455      	bmi.n	80117bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011710:	42b8      	cmp	r0, r7
 8011712:	da53      	bge.n	80117bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011714:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011718:	4699      	mov	r9, r3
 801171a:	46a2      	mov	sl, r4
 801171c:	f1b9 0f00 	cmp.w	r9, #0
 8011720:	dd54      	ble.n	80117cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011722:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011726:	140d      	asrs	r5, r1, #16
 8011728:	1410      	asrs	r0, r2, #16
 801172a:	fb07 5000 	mla	r0, r7, r0, r5
 801172e:	9d02      	ldr	r5, [sp, #8]
 8011730:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011734:	f8ba 5000 	ldrh.w	r5, [sl]
 8011738:	122f      	asrs	r7, r5, #8
 801173a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801173e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011742:	fb17 f706 	smulbb	r7, r7, r6
 8011746:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801174a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801174e:	00ed      	lsls	r5, r5, #3
 8011750:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011754:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8011758:	10c7      	asrs	r7, r0, #3
 801175a:	b2ed      	uxtb	r5, r5
 801175c:	00c0      	lsls	r0, r0, #3
 801175e:	fb18 f806 	smulbb	r8, r8, r6
 8011762:	fb15 f506 	smulbb	r5, r5, r6
 8011766:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801176a:	b2c0      	uxtb	r0, r0
 801176c:	fa1f fc8c 	uxth.w	ip, ip
 8011770:	fb07 870b 	mla	r7, r7, fp, r8
 8011774:	fb00 500b 	mla	r0, r0, fp, r5
 8011778:	b280      	uxth	r0, r0
 801177a:	b2bf      	uxth	r7, r7
 801177c:	f10c 0501 	add.w	r5, ip, #1
 8011780:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011784:	f107 0801 	add.w	r8, r7, #1
 8011788:	1c45      	adds	r5, r0, #1
 801178a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801178e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011792:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011794:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011798:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801179c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80117a0:	ea45 0c0c 	orr.w	ip, r5, ip
 80117a4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80117a8:	4401      	add	r1, r0
 80117aa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80117ac:	ea4c 0c08 	orr.w	ip, ip, r8
 80117b0:	f82a cb02 	strh.w	ip, [sl], #2
 80117b4:	4402      	add	r2, r0
 80117b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80117ba:	e7af      	b.n	801171c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80117bc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80117c0:	f04f 0800 	mov.w	r8, #0
 80117c4:	eb03 0008 	add.w	r0, r3, r8
 80117c8:	2800      	cmp	r0, #0
 80117ca:	dc41      	bgt.n	8011850 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80117cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80117d4:	9b00      	ldr	r3, [sp, #0]
 80117d6:	2b00      	cmp	r3, #0
 80117d8:	f340 8095 	ble.w	8011906 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80117dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80117e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80117e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80117ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117f6:	eef0 6a62 	vmov.f32	s13, s5
 80117fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011802:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011806:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801180a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801180e:	eef0 6a43 	vmov.f32	s13, s6
 8011812:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011816:	ee12 2a90 	vmov	r2, s5
 801181a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801181e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011822:	ee13 2a10 	vmov	r2, s6
 8011826:	9311      	str	r3, [sp, #68]	@ 0x44
 8011828:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801182a:	fb92 f3f3 	sdiv	r3, r2, r3
 801182e:	9312      	str	r3, [sp, #72]	@ 0x48
 8011830:	9b00      	ldr	r3, [sp, #0]
 8011832:	9a03      	ldr	r2, [sp, #12]
 8011834:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011838:	3b01      	subs	r3, #1
 801183a:	9300      	str	r3, [sp, #0]
 801183c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8011840:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011842:	eeb0 3a67 	vmov.f32	s6, s15
 8011846:	bf08      	it	eq
 8011848:	4613      	moveq	r3, r2
 801184a:	eef0 2a47 	vmov.f32	s5, s14
 801184e:	e72f      	b.n	80116b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011850:	140f      	asrs	r7, r1, #16
 8011852:	d451      	bmi.n	80118f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011854:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011858:	42bd      	cmp	r5, r7
 801185a:	dd4d      	ble.n	80118f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801185c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011860:	d44a      	bmi.n	80118f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011862:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011866:	4560      	cmp	r0, ip
 8011868:	dd46      	ble.n	80118f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801186a:	b22d      	sxth	r5, r5
 801186c:	fb0c 7505 	mla	r5, ip, r5, r7
 8011870:	9802      	ldr	r0, [sp, #8]
 8011872:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011876:	f06f 0501 	mvn.w	r5, #1
 801187a:	fb05 fb08 	mul.w	fp, r5, r8
 801187e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011882:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011886:	122f      	asrs	r7, r5, #8
 8011888:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801188c:	fb17 f706 	smulbb	r7, r7, r6
 8011890:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011894:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011898:	00ed      	lsls	r5, r5, #3
 801189a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801189e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80118a2:	10c7      	asrs	r7, r0, #3
 80118a4:	b2ed      	uxtb	r5, r5
 80118a6:	00c0      	lsls	r0, r0, #3
 80118a8:	fb19 f906 	smulbb	r9, r9, r6
 80118ac:	fb15 f506 	smulbb	r5, r5, r6
 80118b0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80118b4:	b2c0      	uxtb	r0, r0
 80118b6:	fa1f fc8c 	uxth.w	ip, ip
 80118ba:	fb07 970a 	mla	r7, r7, sl, r9
 80118be:	fb00 500a 	mla	r0, r0, sl, r5
 80118c2:	b2bf      	uxth	r7, r7
 80118c4:	b280      	uxth	r0, r0
 80118c6:	f10c 0501 	add.w	r5, ip, #1
 80118ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80118ce:	f107 0901 	add.w	r9, r7, #1
 80118d2:	1c45      	adds	r5, r0, #1
 80118d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80118d8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80118dc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80118e0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80118e4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80118e8:	ea45 0c0c 	orr.w	ip, r5, ip
 80118ec:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80118f0:	ea4c 0c09 	orr.w	ip, ip, r9
 80118f4:	f824 c00b 	strh.w	ip, [r4, fp]
 80118f8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80118fa:	4401      	add	r1, r0
 80118fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80118fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8011902:	4402      	add	r2, r0
 8011904:	e75e      	b.n	80117c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8011906:	b005      	add	sp, #20
 8011908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801190c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801190c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011910:	b085      	sub	sp, #20
 8011912:	4693      	mov	fp, r2
 8011914:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011916:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011918:	6870      	ldr	r0, [r6, #4]
 801191a:	9101      	str	r1, [sp, #4]
 801191c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011920:	fb00 2404 	mla	r4, r0, r4, r2
 8011924:	6832      	ldr	r2, [r6, #0]
 8011926:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801192a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801192e:	682a      	ldr	r2, [r5, #0]
 8011930:	9202      	str	r2, [sp, #8]
 8011932:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011936:	9a01      	ldr	r2, [sp, #4]
 8011938:	2a00      	cmp	r2, #0
 801193a:	dc03      	bgt.n	8011944 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801193c:	f1bb 0f00 	cmp.w	fp, #0
 8011940:	f340 809a 	ble.w	8011a78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011944:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011946:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801194a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801194e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011952:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011954:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011958:	2b00      	cmp	r3, #0
 801195a:	dd0c      	ble.n	8011976 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801195c:	1406      	asrs	r6, r0, #16
 801195e:	d405      	bmi.n	801196c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011960:	454e      	cmp	r6, r9
 8011962:	da03      	bge.n	801196c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011964:	1416      	asrs	r6, r2, #16
 8011966:	d401      	bmi.n	801196c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011968:	4546      	cmp	r6, r8
 801196a:	db05      	blt.n	8011978 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801196c:	4470      	add	r0, lr
 801196e:	4462      	add	r2, ip
 8011970:	3b01      	subs	r3, #1
 8011972:	3402      	adds	r4, #2
 8011974:	e7f0      	b.n	8011958 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011976:	d00f      	beq.n	8011998 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011978:	1e5e      	subs	r6, r3, #1
 801197a:	fb0e 0706 	mla	r7, lr, r6, r0
 801197e:	143f      	asrs	r7, r7, #16
 8011980:	d541      	bpl.n	8011a06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011982:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011986:	4698      	mov	r8, r3
 8011988:	9603      	str	r6, [sp, #12]
 801198a:	f1b8 0f00 	cmp.w	r8, #0
 801198e:	dc56      	bgt.n	8011a3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011990:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011994:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011998:	9b01      	ldr	r3, [sp, #4]
 801199a:	2b00      	cmp	r3, #0
 801199c:	dd6c      	ble.n	8011a78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801199e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80119aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80119ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119b4:	eeb0 6a62 	vmov.f32	s12, s5
 80119b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80119bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80119c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80119c4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80119c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80119cc:	eeb0 6a43 	vmov.f32	s12, s6
 80119d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80119d4:	ee12 2a90 	vmov	r2, s5
 80119d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80119dc:	fb92 fef3 	sdiv	lr, r2, r3
 80119e0:	ee13 2a10 	vmov	r2, s6
 80119e4:	fb92 fcf3 	sdiv	ip, r2, r3
 80119e8:	9b01      	ldr	r3, [sp, #4]
 80119ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80119ee:	3b01      	subs	r3, #1
 80119f0:	9301      	str	r3, [sp, #4]
 80119f2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80119f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80119f8:	eeb0 3a67 	vmov.f32	s6, s15
 80119fc:	bf08      	it	eq
 80119fe:	465b      	moveq	r3, fp
 8011a00:	eef0 2a47 	vmov.f32	s5, s14
 8011a04:	e797      	b.n	8011936 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011a06:	454f      	cmp	r7, r9
 8011a08:	dabb      	bge.n	8011982 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011a0a:	fb0c 2606 	mla	r6, ip, r6, r2
 8011a0e:	1436      	asrs	r6, r6, #16
 8011a10:	d4b7      	bmi.n	8011982 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011a12:	4546      	cmp	r6, r8
 8011a14:	dab5      	bge.n	8011982 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011a16:	461e      	mov	r6, r3
 8011a18:	46a0      	mov	r8, r4
 8011a1a:	2e00      	cmp	r6, #0
 8011a1c:	ddb8      	ble.n	8011990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011a1e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011a22:	9902      	ldr	r1, [sp, #8]
 8011a24:	1417      	asrs	r7, r2, #16
 8011a26:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011a2a:	fb0a 9707 	mla	r7, sl, r7, r9
 8011a2e:	4470      	add	r0, lr
 8011a30:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011a34:	f828 7b02 	strh.w	r7, [r8], #2
 8011a38:	4462      	add	r2, ip
 8011a3a:	3e01      	subs	r6, #1
 8011a3c:	e7ed      	b.n	8011a1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011a3e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011a42:	d414      	bmi.n	8011a6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011a44:	68ae      	ldr	r6, [r5, #8]
 8011a46:	454e      	cmp	r6, r9
 8011a48:	dd11      	ble.n	8011a6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011a4a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011a4e:	d40e      	bmi.n	8011a6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011a50:	68ef      	ldr	r7, [r5, #12]
 8011a52:	4557      	cmp	r7, sl
 8011a54:	dd0b      	ble.n	8011a6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011a56:	b236      	sxth	r6, r6
 8011a58:	fb0a 9606 	mla	r6, sl, r6, r9
 8011a5c:	9f02      	ldr	r7, [sp, #8]
 8011a5e:	f06f 0101 	mvn.w	r1, #1
 8011a62:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011a66:	fb01 f608 	mul.w	r6, r1, r8
 8011a6a:	9903      	ldr	r1, [sp, #12]
 8011a6c:	538f      	strh	r7, [r1, r6]
 8011a6e:	4470      	add	r0, lr
 8011a70:	4462      	add	r2, ip
 8011a72:	f108 38ff 	add.w	r8, r8, #4294967295
 8011a76:	e788      	b.n	801198a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011a78:	b005      	add	sp, #20
 8011a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a82:	b087      	sub	sp, #28
 8011a84:	468b      	mov	fp, r1
 8011a86:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011a88:	9203      	str	r2, [sp, #12]
 8011a8a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011a8e:	9204      	str	r2, [sp, #16]
 8011a90:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8011a94:	6841      	ldr	r1, [r0, #4]
 8011a96:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8011a9a:	fb01 2505 	mla	r5, r1, r5, r2
 8011a9e:	6802      	ldr	r2, [r0, #0]
 8011aa0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011aa4:	f8d9 2000 	ldr.w	r2, [r9]
 8011aa8:	9201      	str	r2, [sp, #4]
 8011aaa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011aae:	f1bb 0f00 	cmp.w	fp, #0
 8011ab2:	dc03      	bgt.n	8011abc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011ab4:	9a03      	ldr	r2, [sp, #12]
 8011ab6:	2a00      	cmp	r2, #0
 8011ab8:	f340 8159 	ble.w	8011d6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011abc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011abe:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011ac2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011ac6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011aca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011acc:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011ad0:	2b00      	cmp	r3, #0
 8011ad2:	dd0e      	ble.n	8011af2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011ad4:	1402      	asrs	r2, r0, #16
 8011ad6:	d405      	bmi.n	8011ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011ad8:	42ba      	cmp	r2, r7
 8011ada:	da03      	bge.n	8011ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011adc:	140a      	asrs	r2, r1, #16
 8011ade:	d401      	bmi.n	8011ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011ae0:	42b2      	cmp	r2, r6
 8011ae2:	db07      	blt.n	8011af4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011ae4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011ae6:	4410      	add	r0, r2
 8011ae8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011aea:	3b01      	subs	r3, #1
 8011aec:	4411      	add	r1, r2
 8011aee:	3502      	adds	r5, #2
 8011af0:	e7ee      	b.n	8011ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011af2:	d017      	beq.n	8011b24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011af4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8011af6:	1e5a      	subs	r2, r3, #1
 8011af8:	fb04 0402 	mla	r4, r4, r2, r0
 8011afc:	1424      	asrs	r4, r4, #16
 8011afe:	d409      	bmi.n	8011b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011b00:	42bc      	cmp	r4, r7
 8011b02:	da07      	bge.n	8011b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011b04:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8011b06:	fb04 1202 	mla	r2, r4, r2, r1
 8011b0a:	1412      	asrs	r2, r2, #16
 8011b0c:	d402      	bmi.n	8011b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011b0e:	42b2      	cmp	r2, r6
 8011b10:	f2c0 80bf 	blt.w	8011c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011b14:	2700      	movs	r7, #0
 8011b16:	19da      	adds	r2, r3, r7
 8011b18:	2a00      	cmp	r2, #0
 8011b1a:	dc3e      	bgt.n	8011b9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011b1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b20:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011b24:	f1bb 0f00 	cmp.w	fp, #0
 8011b28:	f340 8121 	ble.w	8011d6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011b2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b34:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011b38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b3a:	f1bb 0b01 	subs.w	fp, fp, #1
 8011b3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b46:	eeb0 6a62 	vmov.f32	s12, s5
 8011b4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b56:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8011b5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b5e:	eeb0 6a43 	vmov.f32	s12, s6
 8011b62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b66:	ee12 2a90 	vmov	r2, s5
 8011b6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b72:	ee13 2a10 	vmov	r2, s6
 8011b76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b7a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011b7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b82:	9a03      	ldr	r2, [sp, #12]
 8011b84:	9314      	str	r3, [sp, #80]	@ 0x50
 8011b86:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8011b8a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011b8c:	eeb0 3a67 	vmov.f32	s6, s15
 8011b90:	bf08      	it	eq
 8011b92:	4613      	moveq	r3, r2
 8011b94:	eef0 2a47 	vmov.f32	s5, s14
 8011b98:	e789      	b.n	8011aae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011b9a:	1406      	asrs	r6, r0, #16
 8011b9c:	d42d      	bmi.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011b9e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011ba2:	42b4      	cmp	r4, r6
 8011ba4:	dd29      	ble.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011ba6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8011baa:	d426      	bmi.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011bac:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011bb0:	4562      	cmp	r2, ip
 8011bb2:	dd22      	ble.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011bb4:	b224      	sxth	r4, r4
 8011bb6:	9a01      	ldr	r2, [sp, #4]
 8011bb8:	fb0c 6404 	mla	r4, ip, r4, r6
 8011bbc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011bc0:	0e22      	lsrs	r2, r4, #24
 8011bc2:	d01a      	beq.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011bc4:	9e04      	ldr	r6, [sp, #16]
 8011bc6:	4372      	muls	r2, r6
 8011bc8:	1c56      	adds	r6, r2, #1
 8011bca:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011bce:	1212      	asrs	r2, r2, #8
 8011bd0:	0a26      	lsrs	r6, r4, #8
 8011bd2:	2aff      	cmp	r2, #255	@ 0xff
 8011bd4:	9605      	str	r6, [sp, #20]
 8011bd6:	d116      	bne.n	8011c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011bd8:	f06f 0201 	mvn.w	r2, #1
 8011bdc:	fb02 fc07 	mul.w	ip, r2, r7
 8011be0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8011be4:	0962      	lsrs	r2, r4, #5
 8011be6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011bea:	f026 0607 	bic.w	r6, r6, #7
 8011bee:	4316      	orrs	r6, r2
 8011bf0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011bf4:	4326      	orrs	r6, r4
 8011bf6:	f825 600c 	strh.w	r6, [r5, ip]
 8011bfa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011bfc:	4410      	add	r0, r2
 8011bfe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011c00:	3f01      	subs	r7, #1
 8011c02:	4411      	add	r1, r2
 8011c04:	e787      	b.n	8011b16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011c06:	f06f 0601 	mvn.w	r6, #1
 8011c0a:	437e      	muls	r6, r7
 8011c0c:	fa1f fa82 	uxth.w	sl, r2
 8011c10:	f835 8006 	ldrh.w	r8, [r5, r6]
 8011c14:	9602      	str	r6, [sp, #8]
 8011c16:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011c1a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011c1e:	43d2      	mvns	r2, r2
 8011c20:	b2d2      	uxtb	r2, r2
 8011c22:	fb1c fc0a 	smulbb	ip, ip, sl
 8011c26:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8011c2a:	fb0e ce02 	mla	lr, lr, r2, ip
 8011c2e:	b2e4      	uxtb	r4, r4
 8011c30:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011c34:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011c38:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011c3c:	fa5f f888 	uxtb.w	r8, r8
 8011c40:	fb14 f40a 	smulbb	r4, r4, sl
 8011c44:	fb08 4402 	mla	r4, r8, r2, r4
 8011c48:	fa1f fe8e 	uxth.w	lr, lr
 8011c4c:	fb16 f60a 	smulbb	r6, r6, sl
 8011c50:	b2a4      	uxth	r4, r4
 8011c52:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8011c56:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011c5a:	f10e 0201 	add.w	r2, lr, #1
 8011c5e:	1c66      	adds	r6, r4, #1
 8011c60:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011c64:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011c68:	fa1f fc8c 	uxth.w	ip, ip
 8011c6c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011c70:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8011c74:	ea46 0e0e 	orr.w	lr, r6, lr
 8011c78:	f10c 0601 	add.w	r6, ip, #1
 8011c7c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011c80:	0976      	lsrs	r6, r6, #5
 8011c82:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011c86:	9a02      	ldr	r2, [sp, #8]
 8011c88:	ea4e 0e06 	orr.w	lr, lr, r6
 8011c8c:	f825 e002 	strh.w	lr, [r5, r2]
 8011c90:	e7b3      	b.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011c92:	f04f 0800 	mov.w	r8, #0
 8011c96:	eba3 0208 	sub.w	r2, r3, r8
 8011c9a:	2a00      	cmp	r2, #0
 8011c9c:	f77f af3e 	ble.w	8011b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011ca0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011ca4:	1404      	asrs	r4, r0, #16
 8011ca6:	140a      	asrs	r2, r1, #16
 8011ca8:	fb06 4202 	mla	r2, r6, r2, r4
 8011cac:	9c01      	ldr	r4, [sp, #4]
 8011cae:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011cb2:	0e22      	lsrs	r2, r4, #24
 8011cb4:	d016      	beq.n	8011ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011cb6:	9e04      	ldr	r6, [sp, #16]
 8011cb8:	4372      	muls	r2, r6
 8011cba:	1c56      	adds	r6, r2, #1
 8011cbc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011cc0:	1212      	asrs	r2, r2, #8
 8011cc2:	2aff      	cmp	r2, #255	@ 0xff
 8011cc4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011cc8:	d113      	bne.n	8011cf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8011cca:	0962      	lsrs	r2, r4, #5
 8011ccc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8011cd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011cd4:	f026 0607 	bic.w	r6, r6, #7
 8011cd8:	4316      	orrs	r6, r2
 8011cda:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011cde:	4326      	orrs	r6, r4
 8011ce0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011ce4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8011ce6:	4410      	add	r0, r2
 8011ce8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011cea:	f108 0801 	add.w	r8, r8, #1
 8011cee:	4411      	add	r1, r2
 8011cf0:	e7d1      	b.n	8011c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011cf2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011cf6:	fa1f fa82 	uxth.w	sl, r2
 8011cfa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011cfe:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8011d02:	43d2      	mvns	r2, r2
 8011d04:	b2d2      	uxtb	r2, r2
 8011d06:	fb17 f70a 	smulbb	r7, r7, sl
 8011d0a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011d0e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011d12:	b2e4      	uxtb	r4, r4
 8011d14:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011d18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011d1c:	fa5f fe8e 	uxtb.w	lr, lr
 8011d20:	fb14 f40a 	smulbb	r4, r4, sl
 8011d24:	fb0e 4402 	mla	r4, lr, r2, r4
 8011d28:	b2f6      	uxtb	r6, r6
 8011d2a:	fa1f fc8c 	uxth.w	ip, ip
 8011d2e:	fb16 f60a 	smulbb	r6, r6, sl
 8011d32:	b2a4      	uxth	r4, r4
 8011d34:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011d38:	fb07 6702 	mla	r7, r7, r2, r6
 8011d3c:	f10c 0201 	add.w	r2, ip, #1
 8011d40:	1c66      	adds	r6, r4, #1
 8011d42:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011d46:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011d4a:	b2bf      	uxth	r7, r7
 8011d4c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011d50:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011d54:	ea46 0c0c 	orr.w	ip, r6, ip
 8011d58:	1c7e      	adds	r6, r7, #1
 8011d5a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011d5e:	0976      	lsrs	r6, r6, #5
 8011d60:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8011d64:	ea4c 0c06 	orr.w	ip, ip, r6
 8011d68:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011d6c:	e7ba      	b.n	8011ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011d6e:	b007      	add	sp, #28
 8011d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011d74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d78:	b085      	sub	sp, #20
 8011d7a:	468b      	mov	fp, r1
 8011d7c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011d7e:	9203      	str	r2, [sp, #12]
 8011d80:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011d84:	6841      	ldr	r1, [r0, #4]
 8011d86:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8011d8a:	fb01 2404 	mla	r4, r1, r4, r2
 8011d8e:	6802      	ldr	r2, [r0, #0]
 8011d90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d94:	f8d8 2000 	ldr.w	r2, [r8]
 8011d98:	9201      	str	r2, [sp, #4]
 8011d9a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011d9e:	f1bb 0f00 	cmp.w	fp, #0
 8011da2:	dc03      	bgt.n	8011dac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011da4:	9a03      	ldr	r2, [sp, #12]
 8011da6:	2a00      	cmp	r2, #0
 8011da8:	f340 814f 	ble.w	801204a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011dac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011dae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011db2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011db6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011dba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011dbc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011dc0:	2b00      	cmp	r3, #0
 8011dc2:	dd0e      	ble.n	8011de2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011dc4:	1408      	asrs	r0, r1, #16
 8011dc6:	d405      	bmi.n	8011dd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011dc8:	42b8      	cmp	r0, r7
 8011dca:	da03      	bge.n	8011dd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011dcc:	1410      	asrs	r0, r2, #16
 8011dce:	d401      	bmi.n	8011dd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011dd0:	42b0      	cmp	r0, r6
 8011dd2:	db07      	blt.n	8011de4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011dd4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011dd6:	4401      	add	r1, r0
 8011dd8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011dda:	3b01      	subs	r3, #1
 8011ddc:	4402      	add	r2, r0
 8011dde:	3402      	adds	r4, #2
 8011de0:	e7ee      	b.n	8011dc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011de2:	d017      	beq.n	8011e14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011de4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8011de6:	1e58      	subs	r0, r3, #1
 8011de8:	fb05 1500 	mla	r5, r5, r0, r1
 8011dec:	142d      	asrs	r5, r5, #16
 8011dee:	d409      	bmi.n	8011e04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011df0:	42bd      	cmp	r5, r7
 8011df2:	da07      	bge.n	8011e04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011df4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011df6:	fb05 2000 	mla	r0, r5, r0, r2
 8011dfa:	1400      	asrs	r0, r0, #16
 8011dfc:	d402      	bmi.n	8011e04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011dfe:	42b0      	cmp	r0, r6
 8011e00:	f2c0 80ba 	blt.w	8011f78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011e04:	2600      	movs	r6, #0
 8011e06:	1998      	adds	r0, r3, r6
 8011e08:	2800      	cmp	r0, #0
 8011e0a:	dc3e      	bgt.n	8011e8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011e0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011e10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011e14:	f1bb 0f00 	cmp.w	fp, #0
 8011e18:	f340 8117 	ble.w	801204a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011e1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011e20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011e24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011e28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e2a:	f1bb 0b01 	subs.w	fp, fp, #1
 8011e2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011e32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011e36:	eeb0 6a62 	vmov.f32	s12, s5
 8011e3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011e3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011e46:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8011e4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e4e:	eeb0 6a43 	vmov.f32	s12, s6
 8011e52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e56:	ee12 2a90 	vmov	r2, s5
 8011e5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e62:	ee13 2a10 	vmov	r2, s6
 8011e66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e6a:	9311      	str	r3, [sp, #68]	@ 0x44
 8011e6c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e72:	9a03      	ldr	r2, [sp, #12]
 8011e74:	9312      	str	r3, [sp, #72]	@ 0x48
 8011e76:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8011e7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8011e7c:	eeb0 3a67 	vmov.f32	s6, s15
 8011e80:	bf08      	it	eq
 8011e82:	4613      	moveq	r3, r2
 8011e84:	eef0 2a47 	vmov.f32	s5, s14
 8011e88:	e789      	b.n	8011d9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011e8a:	140f      	asrs	r7, r1, #16
 8011e8c:	d424      	bmi.n	8011ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011e8e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011e92:	42bd      	cmp	r5, r7
 8011e94:	dd20      	ble.n	8011ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011e96:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011e9a:	d41d      	bmi.n	8011ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011e9c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011ea0:	4560      	cmp	r0, ip
 8011ea2:	dd19      	ble.n	8011ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011ea4:	b22d      	sxth	r5, r5
 8011ea6:	fb0c 7505 	mla	r5, ip, r5, r7
 8011eaa:	9801      	ldr	r0, [sp, #4]
 8011eac:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011eb0:	0e07      	lsrs	r7, r0, #24
 8011eb2:	2fff      	cmp	r7, #255	@ 0xff
 8011eb4:	d116      	bne.n	8011ee4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011eb6:	f06f 0501 	mvn.w	r5, #1
 8011eba:	fb05 f706 	mul.w	r7, r5, r6
 8011ebe:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8011ec2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011ec6:	0945      	lsrs	r5, r0, #5
 8011ec8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8011ecc:	ea4c 0505 	orr.w	r5, ip, r5
 8011ed0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011ed4:	4305      	orrs	r5, r0
 8011ed6:	53e5      	strh	r5, [r4, r7]
 8011ed8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011eda:	4401      	add	r1, r0
 8011edc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011ede:	3e01      	subs	r6, #1
 8011ee0:	4402      	add	r2, r0
 8011ee2:	e790      	b.n	8011e06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011ee4:	b2fd      	uxtb	r5, r7
 8011ee6:	2f00      	cmp	r7, #0
 8011ee8:	d0f6      	beq.n	8011ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011eea:	f06f 0701 	mvn.w	r7, #1
 8011eee:	4377      	muls	r7, r6
 8011ef0:	fa1f f985 	uxth.w	r9, r5
 8011ef4:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011ef8:	9702      	str	r7, [sp, #8]
 8011efa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011efe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011f02:	43ed      	mvns	r5, r5
 8011f04:	b2ed      	uxtb	r5, r5
 8011f06:	fb17 f709 	smulbb	r7, r7, r9
 8011f0a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011f0e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011f12:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011f16:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011f1a:	b2c0      	uxtb	r0, r0
 8011f1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f20:	fa5f fe8e 	uxtb.w	lr, lr
 8011f24:	fb10 f009 	smulbb	r0, r0, r9
 8011f28:	fb0e 0005 	mla	r0, lr, r5, r0
 8011f2c:	b280      	uxth	r0, r0
 8011f2e:	fa1f fc8c 	uxth.w	ip, ip
 8011f32:	fb1a fa09 	smulbb	sl, sl, r9
 8011f36:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011f3a:	fb07 a705 	mla	r7, r7, r5, sl
 8011f3e:	f100 0a01 	add.w	sl, r0, #1
 8011f42:	f10c 0501 	add.w	r5, ip, #1
 8011f46:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011f4a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011f4e:	b2bf      	uxth	r7, r7
 8011f50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011f54:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011f58:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011f5c:	f107 0a01 	add.w	sl, r7, #1
 8011f60:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011f64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011f68:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8011f6c:	9802      	ldr	r0, [sp, #8]
 8011f6e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011f72:	f824 c000 	strh.w	ip, [r4, r0]
 8011f76:	e7af      	b.n	8011ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011f78:	f04f 0e00 	mov.w	lr, #0
 8011f7c:	eba3 000e 	sub.w	r0, r3, lr
 8011f80:	2800      	cmp	r0, #0
 8011f82:	f77f af43 	ble.w	8011e0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011f86:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011f8a:	140d      	asrs	r5, r1, #16
 8011f8c:	1410      	asrs	r0, r2, #16
 8011f8e:	fb06 5000 	mla	r0, r6, r0, r5
 8011f92:	9d01      	ldr	r5, [sp, #4]
 8011f94:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011f98:	0e2e      	lsrs	r6, r5, #24
 8011f9a:	2eff      	cmp	r6, #255	@ 0xff
 8011f9c:	d112      	bne.n	8011fc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011f9e:	482c      	ldr	r0, [pc, #176]	@ (8012050 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011fa0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011fa4:	0968      	lsrs	r0, r5, #5
 8011fa6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011faa:	4330      	orrs	r0, r6
 8011fac:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011fb0:	4328      	orrs	r0, r5
 8011fb2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011fb6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011fb8:	4401      	add	r1, r0
 8011fba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011fbc:	f10e 0e01 	add.w	lr, lr, #1
 8011fc0:	4402      	add	r2, r0
 8011fc2:	e7db      	b.n	8011f7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011fc4:	b2f0      	uxtb	r0, r6
 8011fc6:	2e00      	cmp	r6, #0
 8011fc8:	d0f5      	beq.n	8011fb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011fca:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011fce:	fa1f f980 	uxth.w	r9, r0
 8011fd2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011fd6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011fda:	43c0      	mvns	r0, r0
 8011fdc:	b2c0      	uxtb	r0, r0
 8011fde:	fb16 f609 	smulbb	r6, r6, r9
 8011fe2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011fe6:	fb07 6700 	mla	r7, r7, r0, r6
 8011fea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011fee:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011ff2:	b2ed      	uxtb	r5, r5
 8011ff4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011ff8:	fa5f fc8c 	uxtb.w	ip, ip
 8011ffc:	fb15 f509 	smulbb	r5, r5, r9
 8012000:	fb0c 5500 	mla	r5, ip, r0, r5
 8012004:	b2bf      	uxth	r7, r7
 8012006:	fb1a fa09 	smulbb	sl, sl, r9
 801200a:	b2ad      	uxth	r5, r5
 801200c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012010:	fb06 a600 	mla	r6, r6, r0, sl
 8012014:	1c78      	adds	r0, r7, #1
 8012016:	f105 0a01 	add.w	sl, r5, #1
 801201a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801201e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012022:	b2b6      	uxth	r6, r6
 8012024:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012028:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801202c:	ea4a 0707 	orr.w	r7, sl, r7
 8012030:	f106 0a01 	add.w	sl, r6, #1
 8012034:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012038:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801203c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012040:	ea47 070a 	orr.w	r7, r7, sl
 8012044:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8012048:	e7b5      	b.n	8011fb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801204a:	b005      	add	sp, #20
 801204c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012050:	fffff800 	.word	0xfffff800

08012054 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012058:	b087      	sub	sp, #28
 801205a:	468b      	mov	fp, r1
 801205c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801205e:	9203      	str	r2, [sp, #12]
 8012060:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012064:	9204      	str	r2, [sp, #16]
 8012066:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801206a:	6841      	ldr	r1, [r0, #4]
 801206c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8012070:	fb01 2404 	mla	r4, r1, r4, r2
 8012074:	6802      	ldr	r2, [r0, #0]
 8012076:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801207a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801207e:	3201      	adds	r2, #1
 8012080:	f022 0201 	bic.w	r2, r2, #1
 8012084:	9200      	str	r2, [sp, #0]
 8012086:	f8d9 2000 	ldr.w	r2, [r9]
 801208a:	9201      	str	r2, [sp, #4]
 801208c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012090:	f1bb 0f00 	cmp.w	fp, #0
 8012094:	dc03      	bgt.n	801209e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012096:	9a03      	ldr	r2, [sp, #12]
 8012098:	2a00      	cmp	r2, #0
 801209a:	f340 8169 	ble.w	8012370 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801209e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80120a0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80120a4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80120a8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80120ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80120ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80120b2:	2b00      	cmp	r3, #0
 80120b4:	dd0e      	ble.n	80120d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80120b6:	1402      	asrs	r2, r0, #16
 80120b8:	d405      	bmi.n	80120c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80120ba:	42ba      	cmp	r2, r7
 80120bc:	da03      	bge.n	80120c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80120be:	140a      	asrs	r2, r1, #16
 80120c0:	d401      	bmi.n	80120c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80120c2:	42b2      	cmp	r2, r6
 80120c4:	db07      	blt.n	80120d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80120c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80120c8:	4410      	add	r0, r2
 80120ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80120cc:	3b01      	subs	r3, #1
 80120ce:	4411      	add	r1, r2
 80120d0:	3402      	adds	r4, #2
 80120d2:	e7ee      	b.n	80120b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80120d4:	d017      	beq.n	8012106 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80120d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80120d8:	1e5a      	subs	r2, r3, #1
 80120da:	fb05 0502 	mla	r5, r5, r2, r0
 80120de:	142d      	asrs	r5, r5, #16
 80120e0:	d409      	bmi.n	80120f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80120e2:	42bd      	cmp	r5, r7
 80120e4:	da07      	bge.n	80120f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80120e6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80120e8:	fb05 1202 	mla	r2, r5, r2, r1
 80120ec:	1412      	asrs	r2, r2, #16
 80120ee:	d402      	bmi.n	80120f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80120f0:	42b2      	cmp	r2, r6
 80120f2:	f2c0 80c7 	blt.w	8012284 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80120f6:	2700      	movs	r7, #0
 80120f8:	19da      	adds	r2, r3, r7
 80120fa:	2a00      	cmp	r2, #0
 80120fc:	dc3e      	bgt.n	801217c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80120fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012102:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012106:	f1bb 0f00 	cmp.w	fp, #0
 801210a:	f340 8131 	ble.w	8012370 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801210e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012112:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012116:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801211a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801211c:	f1bb 0b01 	subs.w	fp, fp, #1
 8012120:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012124:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012128:	eeb0 6a62 	vmov.f32	s12, s5
 801212c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012130:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012134:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012138:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801213c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012140:	eeb0 6a43 	vmov.f32	s12, s6
 8012144:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012148:	ee12 2a90 	vmov	r2, s5
 801214c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012150:	fb92 f3f3 	sdiv	r3, r2, r3
 8012154:	ee13 2a10 	vmov	r2, s6
 8012158:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801215c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801215e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012160:	fb92 f3f3 	sdiv	r3, r2, r3
 8012164:	9a03      	ldr	r2, [sp, #12]
 8012166:	9314      	str	r3, [sp, #80]	@ 0x50
 8012168:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801216c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801216e:	eeb0 3a67 	vmov.f32	s6, s15
 8012172:	bf08      	it	eq
 8012174:	4613      	moveq	r3, r2
 8012176:	eef0 2a47 	vmov.f32	s5, s14
 801217a:	e789      	b.n	8012090 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801217c:	1405      	asrs	r5, r0, #16
 801217e:	d435      	bmi.n	80121ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012180:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8012184:	42aa      	cmp	r2, r5
 8012186:	dd31      	ble.n	80121ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012188:	140e      	asrs	r6, r1, #16
 801218a:	d42f      	bmi.n	80121ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801218c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012190:	42b2      	cmp	r2, r6
 8012192:	dd2b      	ble.n	80121ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012194:	9a00      	ldr	r2, [sp, #0]
 8012196:	fb06 5502 	mla	r5, r6, r2, r5
 801219a:	086a      	lsrs	r2, r5, #1
 801219c:	9e01      	ldr	r6, [sp, #4]
 801219e:	5cb2      	ldrb	r2, [r6, r2]
 80121a0:	07ee      	lsls	r6, r5, #31
 80121a2:	bf54      	ite	pl
 80121a4:	f002 020f 	andpl.w	r2, r2, #15
 80121a8:	1112      	asrmi	r2, r2, #4
 80121aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80121ae:	b2d2      	uxtb	r2, r2
 80121b0:	b1e2      	cbz	r2, 80121ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80121b2:	9d04      	ldr	r5, [sp, #16]
 80121b4:	436a      	muls	r2, r5
 80121b6:	1c55      	adds	r5, r2, #1
 80121b8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80121bc:	4d6e      	ldr	r5, [pc, #440]	@ (8012378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80121be:	682d      	ldr	r5, [r5, #0]
 80121c0:	1212      	asrs	r2, r2, #8
 80121c2:	0a2e      	lsrs	r6, r5, #8
 80121c4:	2aff      	cmp	r2, #255	@ 0xff
 80121c6:	9605      	str	r6, [sp, #20]
 80121c8:	d116      	bne.n	80121f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80121ca:	f06f 0201 	mvn.w	r2, #1
 80121ce:	fb02 fc07 	mul.w	ip, r2, r7
 80121d2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80121d6:	096a      	lsrs	r2, r5, #5
 80121d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80121dc:	f026 0607 	bic.w	r6, r6, #7
 80121e0:	4316      	orrs	r6, r2
 80121e2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80121e6:	432e      	orrs	r6, r5
 80121e8:	f824 600c 	strh.w	r6, [r4, ip]
 80121ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80121ee:	4410      	add	r0, r2
 80121f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80121f2:	3f01      	subs	r7, #1
 80121f4:	4411      	add	r1, r2
 80121f6:	e77f      	b.n	80120f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80121f8:	f06f 0601 	mvn.w	r6, #1
 80121fc:	437e      	muls	r6, r7
 80121fe:	fa1f fa82 	uxth.w	sl, r2
 8012202:	f834 8006 	ldrh.w	r8, [r4, r6]
 8012206:	9602      	str	r6, [sp, #8]
 8012208:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801220c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8012210:	43d2      	mvns	r2, r2
 8012212:	b2d2      	uxtb	r2, r2
 8012214:	fb1c fc0a 	smulbb	ip, ip, sl
 8012218:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801221c:	fb0e ce02 	mla	lr, lr, r2, ip
 8012220:	b2ed      	uxtb	r5, r5
 8012222:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012226:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801222a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801222e:	fa5f f888 	uxtb.w	r8, r8
 8012232:	fb15 f50a 	smulbb	r5, r5, sl
 8012236:	fb08 5502 	mla	r5, r8, r2, r5
 801223a:	fa1f fe8e 	uxth.w	lr, lr
 801223e:	fb16 f60a 	smulbb	r6, r6, sl
 8012242:	b2ad      	uxth	r5, r5
 8012244:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8012248:	fb0c 6c02 	mla	ip, ip, r2, r6
 801224c:	f10e 0201 	add.w	r2, lr, #1
 8012250:	1c6e      	adds	r6, r5, #1
 8012252:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012256:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801225a:	fa1f fc8c 	uxth.w	ip, ip
 801225e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012262:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8012266:	ea46 0e0e 	orr.w	lr, r6, lr
 801226a:	f10c 0601 	add.w	r6, ip, #1
 801226e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012272:	0976      	lsrs	r6, r6, #5
 8012274:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012278:	9a02      	ldr	r2, [sp, #8]
 801227a:	ea4e 0e06 	orr.w	lr, lr, r6
 801227e:	f824 e002 	strh.w	lr, [r4, r2]
 8012282:	e7b3      	b.n	80121ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012284:	f04f 0800 	mov.w	r8, #0
 8012288:	eba3 0208 	sub.w	r2, r3, r8
 801228c:	2a00      	cmp	r2, #0
 801228e:	f77f af36 	ble.w	80120fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012292:	9e00      	ldr	r6, [sp, #0]
 8012294:	1402      	asrs	r2, r0, #16
 8012296:	140d      	asrs	r5, r1, #16
 8012298:	fb06 2505 	mla	r5, r6, r5, r2
 801229c:	086a      	lsrs	r2, r5, #1
 801229e:	9e01      	ldr	r6, [sp, #4]
 80122a0:	5cb2      	ldrb	r2, [r6, r2]
 80122a2:	07ed      	lsls	r5, r5, #31
 80122a4:	bf54      	ite	pl
 80122a6:	f002 020f 	andpl.w	r2, r2, #15
 80122aa:	1112      	asrmi	r2, r2, #4
 80122ac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80122b0:	b2d2      	uxtb	r2, r2
 80122b2:	b1c2      	cbz	r2, 80122e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80122b4:	9d04      	ldr	r5, [sp, #16]
 80122b6:	436a      	muls	r2, r5
 80122b8:	1c55      	adds	r5, r2, #1
 80122ba:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80122be:	4d2e      	ldr	r5, [pc, #184]	@ (8012378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80122c0:	1212      	asrs	r2, r2, #8
 80122c2:	682e      	ldr	r6, [r5, #0]
 80122c4:	2aff      	cmp	r2, #255	@ 0xff
 80122c6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80122ca:	d113      	bne.n	80122f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80122cc:	0972      	lsrs	r2, r6, #5
 80122ce:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80122d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80122d6:	f025 0507 	bic.w	r5, r5, #7
 80122da:	4315      	orrs	r5, r2
 80122dc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80122e0:	4335      	orrs	r5, r6
 80122e2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80122e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80122e8:	4410      	add	r0, r2
 80122ea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80122ec:	f108 0801 	add.w	r8, r8, #1
 80122f0:	4411      	add	r1, r2
 80122f2:	e7c9      	b.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80122f4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80122f8:	fa1f fa82 	uxth.w	sl, r2
 80122fc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012300:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8012304:	43d2      	mvns	r2, r2
 8012306:	b2d2      	uxtb	r2, r2
 8012308:	fb17 f70a 	smulbb	r7, r7, sl
 801230c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012310:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012314:	b2f6      	uxtb	r6, r6
 8012316:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801231a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801231e:	fa5f fe8e 	uxtb.w	lr, lr
 8012322:	fb16 f60a 	smulbb	r6, r6, sl
 8012326:	fb0e 6602 	mla	r6, lr, r2, r6
 801232a:	b2ed      	uxtb	r5, r5
 801232c:	fa1f fc8c 	uxth.w	ip, ip
 8012330:	fb15 f50a 	smulbb	r5, r5, sl
 8012334:	b2b6      	uxth	r6, r6
 8012336:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801233a:	fb07 5702 	mla	r7, r7, r2, r5
 801233e:	f10c 0201 	add.w	r2, ip, #1
 8012342:	1c75      	adds	r5, r6, #1
 8012344:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012348:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801234c:	b2bf      	uxth	r7, r7
 801234e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012352:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012356:	ea45 0c0c 	orr.w	ip, r5, ip
 801235a:	1c7d      	adds	r5, r7, #1
 801235c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012360:	096d      	lsrs	r5, r5, #5
 8012362:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012366:	ea4c 0c05 	orr.w	ip, ip, r5
 801236a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801236e:	e7ba      	b.n	80122e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012370:	b007      	add	sp, #28
 8012372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012376:	bf00      	nop
 8012378:	20013290 	.word	0x20013290

0801237c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801237c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012380:	b087      	sub	sp, #28
 8012382:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8012690 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8012386:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012388:	9205      	str	r2, [sp, #20]
 801238a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801238e:	9101      	str	r1, [sp, #4]
 8012390:	6841      	ldr	r1, [r0, #4]
 8012392:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8012396:	fb01 2404 	mla	r4, r1, r4, r2
 801239a:	6802      	ldr	r2, [r0, #0]
 801239c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80123a0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80123a4:	3201      	adds	r2, #1
 80123a6:	f022 0201 	bic.w	r2, r2, #1
 80123aa:	9202      	str	r2, [sp, #8]
 80123ac:	f8db 2000 	ldr.w	r2, [fp]
 80123b0:	9203      	str	r2, [sp, #12]
 80123b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80123b6:	9a01      	ldr	r2, [sp, #4]
 80123b8:	2a00      	cmp	r2, #0
 80123ba:	dc03      	bgt.n	80123c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80123bc:	9a05      	ldr	r2, [sp, #20]
 80123be:	2a00      	cmp	r2, #0
 80123c0:	f340 8162 	ble.w	8012688 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80123c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80123c6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80123ca:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80123ce:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80123d2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80123d4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80123d8:	2b00      	cmp	r3, #0
 80123da:	dd0e      	ble.n	80123fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80123dc:	1402      	asrs	r2, r0, #16
 80123de:	d405      	bmi.n	80123ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80123e0:	42ba      	cmp	r2, r7
 80123e2:	da03      	bge.n	80123ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80123e4:	140a      	asrs	r2, r1, #16
 80123e6:	d401      	bmi.n	80123ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80123e8:	42b2      	cmp	r2, r6
 80123ea:	db07      	blt.n	80123fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80123ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80123ee:	4410      	add	r0, r2
 80123f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80123f2:	3b01      	subs	r3, #1
 80123f4:	4411      	add	r1, r2
 80123f6:	3402      	adds	r4, #2
 80123f8:	e7ee      	b.n	80123d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80123fa:	d017      	beq.n	801242c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80123fc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80123fe:	1e5a      	subs	r2, r3, #1
 8012400:	fb05 0502 	mla	r5, r5, r2, r0
 8012404:	142d      	asrs	r5, r5, #16
 8012406:	d409      	bmi.n	801241c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012408:	42bd      	cmp	r5, r7
 801240a:	da07      	bge.n	801241c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801240c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801240e:	fb05 1202 	mla	r2, r5, r2, r1
 8012412:	1412      	asrs	r2, r2, #16
 8012414:	d402      	bmi.n	801241c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012416:	42b2      	cmp	r2, r6
 8012418:	f2c0 80c3 	blt.w	80125a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801241c:	2500      	movs	r5, #0
 801241e:	195a      	adds	r2, r3, r5
 8012420:	2a00      	cmp	r2, #0
 8012422:	dc3f      	bgt.n	80124a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012424:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012428:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801242c:	9b01      	ldr	r3, [sp, #4]
 801242e:	2b00      	cmp	r3, #0
 8012430:	f340 812a 	ble.w	8012688 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012434:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012438:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801243c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012440:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012442:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012446:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801244a:	eeb0 6a62 	vmov.f32	s12, s5
 801244e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012452:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012456:	ee77 2a62 	vsub.f32	s5, s14, s5
 801245a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801245e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012462:	eeb0 6a43 	vmov.f32	s12, s6
 8012466:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801246a:	ee12 2a90 	vmov	r2, s5
 801246e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012472:	fb92 f3f3 	sdiv	r3, r2, r3
 8012476:	ee13 2a10 	vmov	r2, s6
 801247a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801247c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801247e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012482:	9314      	str	r3, [sp, #80]	@ 0x50
 8012484:	9b01      	ldr	r3, [sp, #4]
 8012486:	9a05      	ldr	r2, [sp, #20]
 8012488:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801248c:	3b01      	subs	r3, #1
 801248e:	9301      	str	r3, [sp, #4]
 8012490:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8012494:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012496:	eeb0 3a67 	vmov.f32	s6, s15
 801249a:	bf08      	it	eq
 801249c:	4613      	moveq	r3, r2
 801249e:	eef0 2a47 	vmov.f32	s5, s14
 80124a2:	e788      	b.n	80123b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80124a4:	1406      	asrs	r6, r0, #16
 80124a6:	d42c      	bmi.n	8012502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80124a8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80124ac:	42b2      	cmp	r2, r6
 80124ae:	dd28      	ble.n	8012502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80124b0:	140f      	asrs	r7, r1, #16
 80124b2:	d426      	bmi.n	8012502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80124b4:	f8db 200c 	ldr.w	r2, [fp, #12]
 80124b8:	42ba      	cmp	r2, r7
 80124ba:	dd22      	ble.n	8012502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80124bc:	9a02      	ldr	r2, [sp, #8]
 80124be:	fb07 6602 	mla	r6, r7, r2, r6
 80124c2:	0872      	lsrs	r2, r6, #1
 80124c4:	9f03      	ldr	r7, [sp, #12]
 80124c6:	5cba      	ldrb	r2, [r7, r2]
 80124c8:	07f6      	lsls	r6, r6, #31
 80124ca:	bf54      	ite	pl
 80124cc:	f002 020f 	andpl.w	r2, r2, #15
 80124d0:	1112      	asrmi	r2, r2, #4
 80124d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80124d6:	b2d2      	uxtb	r2, r2
 80124d8:	2aff      	cmp	r2, #255	@ 0xff
 80124da:	d118      	bne.n	801250e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80124dc:	f8d8 2000 	ldr.w	r2, [r8]
 80124e0:	f06f 0601 	mvn.w	r6, #1
 80124e4:	fb06 f705 	mul.w	r7, r6, r5
 80124e8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80124ec:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80124f0:	0956      	lsrs	r6, r2, #5
 80124f2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80124f6:	ea4c 0606 	orr.w	r6, ip, r6
 80124fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80124fe:	4316      	orrs	r6, r2
 8012500:	53e6      	strh	r6, [r4, r7]
 8012502:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012504:	4410      	add	r0, r2
 8012506:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012508:	3d01      	subs	r5, #1
 801250a:	4411      	add	r1, r2
 801250c:	e787      	b.n	801241e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801250e:	2a00      	cmp	r2, #0
 8012510:	d0f7      	beq.n	8012502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012512:	f06f 0601 	mvn.w	r6, #1
 8012516:	436e      	muls	r6, r5
 8012518:	f8d8 c000 	ldr.w	ip, [r8]
 801251c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8012520:	9604      	str	r6, [sp, #16]
 8012522:	fa1f f982 	uxth.w	r9, r2
 8012526:	ea4f 272e 	mov.w	r7, lr, asr #8
 801252a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801252e:	43d2      	mvns	r2, r2
 8012530:	b2d2      	uxtb	r2, r2
 8012532:	fb16 f609 	smulbb	r6, r6, r9
 8012536:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801253a:	fb07 6702 	mla	r7, r7, r2, r6
 801253e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8012542:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012546:	fa5f fc8c 	uxtb.w	ip, ip
 801254a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801254e:	fa5f fe8e 	uxtb.w	lr, lr
 8012552:	fb1c fc09 	smulbb	ip, ip, r9
 8012556:	fb0e cc02 	mla	ip, lr, r2, ip
 801255a:	b2bf      	uxth	r7, r7
 801255c:	fb1a fa09 	smulbb	sl, sl, r9
 8012560:	fa1f fc8c 	uxth.w	ip, ip
 8012564:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012568:	fb06 a602 	mla	r6, r6, r2, sl
 801256c:	1c7a      	adds	r2, r7, #1
 801256e:	f10c 0a01 	add.w	sl, ip, #1
 8012572:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012576:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801257a:	b2b6      	uxth	r6, r6
 801257c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012580:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012584:	ea4a 0707 	orr.w	r7, sl, r7
 8012588:	f106 0a01 	add.w	sl, r6, #1
 801258c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012590:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012594:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012598:	9a04      	ldr	r2, [sp, #16]
 801259a:	ea47 070a 	orr.w	r7, r7, sl
 801259e:	52a7      	strh	r7, [r4, r2]
 80125a0:	e7af      	b.n	8012502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80125a2:	f04f 0e00 	mov.w	lr, #0
 80125a6:	eba3 020e 	sub.w	r2, r3, lr
 80125aa:	2a00      	cmp	r2, #0
 80125ac:	f77f af3a 	ble.w	8012424 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80125b0:	9e02      	ldr	r6, [sp, #8]
 80125b2:	1402      	asrs	r2, r0, #16
 80125b4:	140d      	asrs	r5, r1, #16
 80125b6:	fb06 2505 	mla	r5, r6, r5, r2
 80125ba:	086a      	lsrs	r2, r5, #1
 80125bc:	9e03      	ldr	r6, [sp, #12]
 80125be:	5cb2      	ldrb	r2, [r6, r2]
 80125c0:	07ed      	lsls	r5, r5, #31
 80125c2:	bf54      	ite	pl
 80125c4:	f002 020f 	andpl.w	r2, r2, #15
 80125c8:	1112      	asrmi	r2, r2, #4
 80125ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80125ce:	b2d2      	uxtb	r2, r2
 80125d0:	2aff      	cmp	r2, #255	@ 0xff
 80125d2:	d115      	bne.n	8012600 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80125d4:	f8d8 5000 	ldr.w	r5, [r8]
 80125d8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 80125dc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80125e0:	096a      	lsrs	r2, r5, #5
 80125e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80125e6:	4332      	orrs	r2, r6
 80125e8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80125ec:	432a      	orrs	r2, r5
 80125ee:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80125f2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80125f4:	4410      	add	r0, r2
 80125f6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80125f8:	f10e 0e01 	add.w	lr, lr, #1
 80125fc:	4411      	add	r1, r2
 80125fe:	e7d2      	b.n	80125a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8012600:	2a00      	cmp	r2, #0
 8012602:	d0f6      	beq.n	80125f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012604:	f8d8 7000 	ldr.w	r7, [r8]
 8012608:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801260c:	fa1f f982 	uxth.w	r9, r2
 8012610:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012614:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8012618:	43d2      	mvns	r2, r2
 801261a:	b2d2      	uxtb	r2, r2
 801261c:	fb15 f509 	smulbb	r5, r5, r9
 8012620:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012624:	fb06 5602 	mla	r6, r6, r2, r5
 8012628:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801262c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012630:	b2ff      	uxtb	r7, r7
 8012632:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012636:	fa5f fc8c 	uxtb.w	ip, ip
 801263a:	fb17 f709 	smulbb	r7, r7, r9
 801263e:	fb0c 7702 	mla	r7, ip, r2, r7
 8012642:	b2b6      	uxth	r6, r6
 8012644:	fb1a fa09 	smulbb	sl, sl, r9
 8012648:	b2bf      	uxth	r7, r7
 801264a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801264e:	fb05 a502 	mla	r5, r5, r2, sl
 8012652:	1c72      	adds	r2, r6, #1
 8012654:	f107 0a01 	add.w	sl, r7, #1
 8012658:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801265c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012660:	b2ad      	uxth	r5, r5
 8012662:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012666:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801266a:	ea4a 0606 	orr.w	r6, sl, r6
 801266e:	f105 0a01 	add.w	sl, r5, #1
 8012672:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012676:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801267a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801267e:	ea46 060a 	orr.w	r6, r6, sl
 8012682:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8012686:	e7b4      	b.n	80125f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012688:	b007      	add	sp, #28
 801268a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801268e:	bf00      	nop
 8012690:	20013290 	.word	0x20013290

08012694 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012694:	4770      	bx	lr

08012696 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8012696:	4770      	bx	lr

08012698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8012698:	4770      	bx	lr

0801269a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801269a:	4770      	bx	lr

0801269c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801269c:	4770      	bx	lr

0801269e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801269e:	4770      	bx	lr

080126a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80126a0:	4770      	bx	lr

080126a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80126a2:	4770      	bx	lr

080126a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80126a4:	4770      	bx	lr

080126a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80126a6:	4770      	bx	lr

080126a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80126a8:	4770      	bx	lr

080126aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80126aa:	4770      	bx	lr

080126ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80126ac:	4770      	bx	lr

080126ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80126ae:	4770      	bx	lr

080126b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80126b0:	4770      	bx	lr

080126b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80126b2:	4770      	bx	lr

080126b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80126b4:	4770      	bx	lr

080126b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80126b6:	4770      	bx	lr

080126b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80126b8:	4770      	bx	lr

080126ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80126ba:	4770      	bx	lr

080126bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80126bc:	4770      	bx	lr

080126be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80126be:	4770      	bx	lr

080126c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80126c0:	4770      	bx	lr

080126c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80126c2:	4770      	bx	lr

080126c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80126c4:	4770      	bx	lr

080126c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80126c6:	4770      	bx	lr

080126c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80126c8:	4770      	bx	lr

080126ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80126ca:	4770      	bx	lr

080126cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80126cc:	4770      	bx	lr

080126ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80126ce:	4770      	bx	lr

080126d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80126d0:	4770      	bx	lr

080126d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80126d2:	4770      	bx	lr

080126d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80126d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80126d8:	b088      	sub	sp, #32
 80126da:	ac08      	add	r4, sp, #32
 80126dc:	4606      	mov	r6, r0
 80126de:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80126e2:	4620      	mov	r0, r4
 80126e4:	4688      	mov	r8, r1
 80126e6:	4691      	mov	r9, r2
 80126e8:	f7fd fc62 	bl	800ffb0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80126ec:	6833      	ldr	r3, [r6, #0]
 80126ee:	4605      	mov	r5, r0
 80126f0:	4620      	mov	r0, r4
 80126f2:	699f      	ldr	r7, [r3, #24]
 80126f4:	f7fd fb70 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80126f8:	4682      	mov	sl, r0
 80126fa:	4620      	mov	r0, r4
 80126fc:	f7fd fba0 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012700:	9500      	str	r5, [sp, #0]
 8012702:	e9cd a001 	strd	sl, r0, [sp, #4]
 8012706:	464b      	mov	r3, r9
 8012708:	a806      	add	r0, sp, #24
 801270a:	4642      	mov	r2, r8
 801270c:	4631      	mov	r1, r6
 801270e:	47b8      	blx	r7
 8012710:	4628      	mov	r0, r5
 8012712:	b008      	add	sp, #32
 8012714:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012718 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8012718:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801271c:	2300      	movs	r3, #0
 801271e:	9300      	str	r3, [sp, #0]
 8012720:	4b3d      	ldr	r3, [pc, #244]	@ (8012818 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8012722:	781b      	ldrb	r3, [r3, #0]
 8012724:	2b00      	cmp	r3, #0
 8012726:	d137      	bne.n	8012798 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8012728:	4a3c      	ldr	r2, [pc, #240]	@ (801281c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801272a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801272e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012732:	2b00      	cmp	r3, #0
 8012734:	d132      	bne.n	801279c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8012736:	4b3a      	ldr	r3, [pc, #232]	@ (8012820 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012738:	f9b3 3000 	ldrsh.w	r3, [r3]
 801273c:	6808      	ldr	r0, [r1, #0]
 801273e:	6849      	ldr	r1, [r1, #4]
 8012740:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012744:	ac02      	add	r4, sp, #8
 8012746:	ab02      	add	r3, sp, #8
 8012748:	c303      	stmia	r3!, {r0, r1}
 801274a:	4669      	mov	r1, sp
 801274c:	4620      	mov	r0, r4
 801274e:	f7fa f913 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012752:	4668      	mov	r0, sp
 8012754:	f7fa f8e8 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012758:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801275c:	f8bd 2000 	ldrh.w	r2, [sp]
 8012760:	4d30      	ldr	r5, [pc, #192]	@ (8012824 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8012762:	4413      	add	r3, r2
 8012764:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012768:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801276c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012770:	6828      	ldr	r0, [r5, #0]
 8012772:	4413      	add	r3, r2
 8012774:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012778:	6803      	ldr	r3, [r0, #0]
 801277a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801277c:	4798      	blx	r3
 801277e:	f010 0f01 	tst.w	r0, #1
 8012782:	462f      	mov	r7, r5
 8012784:	d00c      	beq.n	80127a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8012786:	6828      	ldr	r0, [r5, #0]
 8012788:	6803      	ldr	r3, [r0, #0]
 801278a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801278e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8012790:	4798      	blx	r3
 8012792:	b004      	add	sp, #16
 8012794:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012798:	4a21      	ldr	r2, [pc, #132]	@ (8012820 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801279a:	e7c6      	b.n	801272a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801279c:	4b1f      	ldr	r3, [pc, #124]	@ (801281c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801279e:	e7cb      	b.n	8012738 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80127a0:	6838      	ldr	r0, [r7, #0]
 80127a2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80127a6:	6803      	ldr	r3, [r0, #0]
 80127a8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80127ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80127ae:	4798      	blx	r3
 80127b0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80127b4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80127b8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80127bc:	fb16 3602 	smlabb	r6, r6, r2, r3
 80127c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80127c4:	6838      	ldr	r0, [r7, #0]
 80127c6:	6803      	ldr	r3, [r0, #0]
 80127c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80127ca:	4798      	blx	r3
 80127cc:	4a13      	ldr	r2, [pc, #76]	@ (801281c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80127ce:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80127d2:	8813      	ldrh	r3, [r2, #0]
 80127d4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80127d8:	fb03 1404 	mla	r4, r3, r4, r1
 80127dc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80127e0:	435d      	muls	r5, r3
 80127e2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80127e6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80127ea:	4691      	mov	r9, r2
 80127ec:	6838      	ldr	r0, [r7, #0]
 80127ee:	42ac      	cmp	r4, r5
 80127f0:	6803      	ldr	r3, [r0, #0]
 80127f2:	d20e      	bcs.n	8012812 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80127f4:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 80127f8:	4632      	mov	r2, r6
 80127fa:	4643      	mov	r3, r8
 80127fc:	4621      	mov	r1, r4
 80127fe:	47d0      	blx	sl
 8012800:	f8b9 3000 	ldrh.w	r3, [r9]
 8012804:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012808:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801280c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012810:	e7ec      	b.n	80127ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8012812:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012814:	4798      	blx	r3
 8012816:	e7bc      	b.n	8012792 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8012818:	20013280 	.word	0x20013280
 801281c:	20013282 	.word	0x20013282
 8012820:	20013284 	.word	0x20013284
 8012824:	20013288 	.word	0x20013288

08012828 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801282c:	b08b      	sub	sp, #44	@ 0x2c
 801282e:	460f      	mov	r7, r1
 8012830:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8012834:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8012838:	4616      	mov	r6, r2
 801283a:	f1bb 0f00 	cmp.w	fp, #0
 801283e:	d04a      	beq.n	80128d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8012840:	6810      	ldr	r0, [r2, #0]
 8012842:	6851      	ldr	r1, [r2, #4]
 8012844:	ad06      	add	r5, sp, #24
 8012846:	c503      	stmia	r5!, {r0, r1}
 8012848:	6818      	ldr	r0, [r3, #0]
 801284a:	6859      	ldr	r1, [r3, #4]
 801284c:	ad08      	add	r5, sp, #32
 801284e:	c503      	stmia	r5!, {r0, r1}
 8012850:	a806      	add	r0, sp, #24
 8012852:	f7fa f869 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012856:	4631      	mov	r1, r6
 8012858:	a808      	add	r0, sp, #32
 801285a:	f7fa f88d 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801285e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012862:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8012866:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801286a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801286e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8012872:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012876:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801287a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801287e:	4f5f      	ldr	r7, [pc, #380]	@ (80129fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012880:	440a      	add	r2, r1
 8012882:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012886:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801288a:	6838      	ldr	r0, [r7, #0]
 801288c:	4413      	add	r3, r2
 801288e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8012892:	6803      	ldr	r3, [r0, #0]
 8012894:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012896:	4798      	blx	r3
 8012898:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801289c:	46b9      	mov	r9, r7
 801289e:	d11d      	bne.n	80128dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80128a0:	b9fc      	cbnz	r4, 80128e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80128a2:	f010 0f01 	tst.w	r0, #1
 80128a6:	d01c      	beq.n	80128e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80128a8:	f8d9 0000 	ldr.w	r0, [r9]
 80128ac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80128b0:	6801      	ldr	r1, [r0, #0]
 80128b2:	f8cd b00c 	str.w	fp, [sp, #12]
 80128b6:	2700      	movs	r7, #0
 80128b8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80128bc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80128c0:	9402      	str	r4, [sp, #8]
 80128c2:	b2ad      	uxth	r5, r5
 80128c4:	fa1f f488 	uxth.w	r4, r8
 80128c8:	9501      	str	r5, [sp, #4]
 80128ca:	9400      	str	r4, [sp, #0]
 80128cc:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 80128ce:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80128d2:	4631      	mov	r1, r6
 80128d4:	47a0      	blx	r4
 80128d6:	b00b      	add	sp, #44	@ 0x2c
 80128d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128dc:	f010 0f04 	tst.w	r0, #4
 80128e0:	e7e1      	b.n	80128a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80128e2:	f8d9 0000 	ldr.w	r0, [r9]
 80128e6:	6803      	ldr	r3, [r0, #0]
 80128e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80128ea:	4798      	blx	r3
 80128ec:	4b44      	ldr	r3, [pc, #272]	@ (8012a00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80128ee:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80128f2:	881a      	ldrh	r2, [r3, #0]
 80128f4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80128f8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80128fc:	fb02 1404 	mla	r4, r2, r4, r1
 8012900:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012904:	469a      	mov	sl, r3
 8012906:	fb05 f502 	mul.w	r5, r5, r2
 801290a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801290e:	d059      	beq.n	80129c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012910:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8012914:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012918:	fa1f f28b 	uxth.w	r2, fp
 801291c:	fa1f f989 	uxth.w	r9, r9
 8012920:	469e      	mov	lr, r3
 8012922:	42ac      	cmp	r4, r5
 8012924:	d264      	bcs.n	80129f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012926:	eb04 0a07 	add.w	sl, r4, r7
 801292a:	4554      	cmp	r4, sl
 801292c:	d23d      	bcs.n	80129aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801292e:	8821      	ldrh	r1, [r4, #0]
 8012930:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012934:	1208      	asrs	r0, r1, #8
 8012936:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801293a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801293e:	fb10 f009 	smulbb	r0, r0, r9
 8012942:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012946:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801294a:	00c9      	lsls	r1, r1, #3
 801294c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8012950:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8012954:	10d8      	asrs	r0, r3, #3
 8012956:	b2c9      	uxtb	r1, r1
 8012958:	00db      	lsls	r3, r3, #3
 801295a:	fa1f fc8c 	uxth.w	ip, ip
 801295e:	fb1b fb09 	smulbb	fp, fp, r9
 8012962:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8012966:	b2db      	uxtb	r3, r3
 8012968:	fb11 f109 	smulbb	r1, r1, r9
 801296c:	fb00 b002 	mla	r0, r0, r2, fp
 8012970:	fb03 1302 	mla	r3, r3, r2, r1
 8012974:	f10c 0b01 	add.w	fp, ip, #1
 8012978:	b29b      	uxth	r3, r3
 801297a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801297e:	b280      	uxth	r0, r0
 8012980:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8012984:	f103 0c01 	add.w	ip, r3, #1
 8012988:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801298c:	1c43      	adds	r3, r0, #1
 801298e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012992:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012996:	0940      	lsrs	r0, r0, #5
 8012998:	ea4c 0c0b 	orr.w	ip, ip, fp
 801299c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80129a0:	ea4c 0c00 	orr.w	ip, ip, r0
 80129a4:	f824 cb02 	strh.w	ip, [r4], #2
 80129a8:	e7bf      	b.n	801292a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80129aa:	f8be 3000 	ldrh.w	r3, [lr]
 80129ae:	eba3 0308 	sub.w	r3, r3, r8
 80129b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80129b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80129ba:	eba3 0308 	sub.w	r3, r3, r8
 80129be:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80129c2:	e7ae      	b.n	8012922 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80129c4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80129c8:	f8d9 0000 	ldr.w	r0, [r9]
 80129cc:	42ac      	cmp	r4, r5
 80129ce:	6803      	ldr	r3, [r0, #0]
 80129d0:	d20e      	bcs.n	80129f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80129d2:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 80129d6:	4632      	mov	r2, r6
 80129d8:	463b      	mov	r3, r7
 80129da:	4621      	mov	r1, r4
 80129dc:	47c0      	blx	r8
 80129de:	f8ba 3000 	ldrh.w	r3, [sl]
 80129e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80129e6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80129ea:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80129ee:	e7eb      	b.n	80129c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80129f0:	4b02      	ldr	r3, [pc, #8]	@ (80129fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80129f2:	6818      	ldr	r0, [r3, #0]
 80129f4:	6803      	ldr	r3, [r0, #0]
 80129f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80129f8:	4798      	blx	r3
 80129fa:	e76c      	b.n	80128d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80129fc:	20013288 	.word	0x20013288
 8012a00:	20013282 	.word	0x20013282

08012a04 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012a04:	b510      	push	{r4, lr}
 8012a06:	2184      	movs	r1, #132	@ 0x84
 8012a08:	4604      	mov	r4, r0
 8012a0a:	f00a fe3d 	bl	801d688 <_ZdlPvj>
 8012a0e:	4620      	mov	r0, r4
 8012a10:	bd10      	pop	{r4, pc}

08012a12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8012a12:	b510      	push	{r4, lr}
 8012a14:	2104      	movs	r1, #4
 8012a16:	4604      	mov	r4, r0
 8012a18:	f00a fe36 	bl	801d688 <_ZdlPvj>
 8012a1c:	4620      	mov	r0, r4
 8012a1e:	bd10      	pop	{r4, pc}

08012a20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8012a20:	b510      	push	{r4, lr}
 8012a22:	2104      	movs	r1, #4
 8012a24:	4604      	mov	r4, r0
 8012a26:	f00a fe2f 	bl	801d688 <_ZdlPvj>
 8012a2a:	4620      	mov	r0, r4
 8012a2c:	bd10      	pop	{r4, pc}

08012a2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8012a2e:	b510      	push	{r4, lr}
 8012a30:	f640 0144 	movw	r1, #2116	@ 0x844
 8012a34:	4604      	mov	r4, r0
 8012a36:	f00a fe27 	bl	801d688 <_ZdlPvj>
 8012a3a:	4620      	mov	r0, r4
 8012a3c:	bd10      	pop	{r4, pc}

08012a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012a3e:	b510      	push	{r4, lr}
 8012a40:	2104      	movs	r1, #4
 8012a42:	4604      	mov	r4, r0
 8012a44:	f00a fe20 	bl	801d688 <_ZdlPvj>
 8012a48:	4620      	mov	r0, r4
 8012a4a:	bd10      	pop	{r4, pc}

08012a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012a4c:	b510      	push	{r4, lr}
 8012a4e:	2104      	movs	r1, #4
 8012a50:	4604      	mov	r4, r0
 8012a52:	f00a fe19 	bl	801d688 <_ZdlPvj>
 8012a56:	4620      	mov	r0, r4
 8012a58:	bd10      	pop	{r4, pc}

08012a5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012a5a:	b510      	push	{r4, lr}
 8012a5c:	2104      	movs	r1, #4
 8012a5e:	4604      	mov	r4, r0
 8012a60:	f00a fe12 	bl	801d688 <_ZdlPvj>
 8012a64:	4620      	mov	r0, r4
 8012a66:	bd10      	pop	{r4, pc}

08012a68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012a68:	b510      	push	{r4, lr}
 8012a6a:	2104      	movs	r1, #4
 8012a6c:	4604      	mov	r4, r0
 8012a6e:	f00a fe0b 	bl	801d688 <_ZdlPvj>
 8012a72:	4620      	mov	r0, r4
 8012a74:	bd10      	pop	{r4, pc}

08012a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012a76:	b510      	push	{r4, lr}
 8012a78:	2104      	movs	r1, #4
 8012a7a:	4604      	mov	r4, r0
 8012a7c:	f00a fe04 	bl	801d688 <_ZdlPvj>
 8012a80:	4620      	mov	r0, r4
 8012a82:	bd10      	pop	{r4, pc}

08012a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012a84:	b510      	push	{r4, lr}
 8012a86:	2104      	movs	r1, #4
 8012a88:	4604      	mov	r4, r0
 8012a8a:	f00a fdfd 	bl	801d688 <_ZdlPvj>
 8012a8e:	4620      	mov	r0, r4
 8012a90:	bd10      	pop	{r4, pc}

08012a92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012a92:	b510      	push	{r4, lr}
 8012a94:	2104      	movs	r1, #4
 8012a96:	4604      	mov	r4, r0
 8012a98:	f00a fdf6 	bl	801d688 <_ZdlPvj>
 8012a9c:	4620      	mov	r0, r4
 8012a9e:	bd10      	pop	{r4, pc}

08012aa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012aa0:	b510      	push	{r4, lr}
 8012aa2:	2104      	movs	r1, #4
 8012aa4:	4604      	mov	r4, r0
 8012aa6:	f00a fdef 	bl	801d688 <_ZdlPvj>
 8012aaa:	4620      	mov	r0, r4
 8012aac:	bd10      	pop	{r4, pc}

08012aae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012aae:	b510      	push	{r4, lr}
 8012ab0:	2104      	movs	r1, #4
 8012ab2:	4604      	mov	r4, r0
 8012ab4:	f00a fde8 	bl	801d688 <_ZdlPvj>
 8012ab8:	4620      	mov	r0, r4
 8012aba:	bd10      	pop	{r4, pc}

08012abc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012abc:	b510      	push	{r4, lr}
 8012abe:	2104      	movs	r1, #4
 8012ac0:	4604      	mov	r4, r0
 8012ac2:	f00a fde1 	bl	801d688 <_ZdlPvj>
 8012ac6:	4620      	mov	r0, r4
 8012ac8:	bd10      	pop	{r4, pc}

08012aca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012aca:	b510      	push	{r4, lr}
 8012acc:	2104      	movs	r1, #4
 8012ace:	4604      	mov	r4, r0
 8012ad0:	f00a fdda 	bl	801d688 <_ZdlPvj>
 8012ad4:	4620      	mov	r0, r4
 8012ad6:	bd10      	pop	{r4, pc}

08012ad8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012ad8:	b510      	push	{r4, lr}
 8012ada:	2104      	movs	r1, #4
 8012adc:	4604      	mov	r4, r0
 8012ade:	f00a fdd3 	bl	801d688 <_ZdlPvj>
 8012ae2:	4620      	mov	r0, r4
 8012ae4:	bd10      	pop	{r4, pc}

08012ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012ae6:	b510      	push	{r4, lr}
 8012ae8:	2104      	movs	r1, #4
 8012aea:	4604      	mov	r4, r0
 8012aec:	f00a fdcc 	bl	801d688 <_ZdlPvj>
 8012af0:	4620      	mov	r0, r4
 8012af2:	bd10      	pop	{r4, pc}

08012af4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012af4:	b510      	push	{r4, lr}
 8012af6:	2104      	movs	r1, #4
 8012af8:	4604      	mov	r4, r0
 8012afa:	f00a fdc5 	bl	801d688 <_ZdlPvj>
 8012afe:	4620      	mov	r0, r4
 8012b00:	bd10      	pop	{r4, pc}

08012b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b02:	b510      	push	{r4, lr}
 8012b04:	2104      	movs	r1, #4
 8012b06:	4604      	mov	r4, r0
 8012b08:	f00a fdbe 	bl	801d688 <_ZdlPvj>
 8012b0c:	4620      	mov	r0, r4
 8012b0e:	bd10      	pop	{r4, pc}

08012b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b10:	b510      	push	{r4, lr}
 8012b12:	2104      	movs	r1, #4
 8012b14:	4604      	mov	r4, r0
 8012b16:	f00a fdb7 	bl	801d688 <_ZdlPvj>
 8012b1a:	4620      	mov	r0, r4
 8012b1c:	bd10      	pop	{r4, pc}

08012b1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012b1e:	b510      	push	{r4, lr}
 8012b20:	2104      	movs	r1, #4
 8012b22:	4604      	mov	r4, r0
 8012b24:	f00a fdb0 	bl	801d688 <_ZdlPvj>
 8012b28:	4620      	mov	r0, r4
 8012b2a:	bd10      	pop	{r4, pc}

08012b2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012b2c:	b510      	push	{r4, lr}
 8012b2e:	2104      	movs	r1, #4
 8012b30:	4604      	mov	r4, r0
 8012b32:	f00a fda9 	bl	801d688 <_ZdlPvj>
 8012b36:	4620      	mov	r0, r4
 8012b38:	bd10      	pop	{r4, pc}

08012b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b3a:	b510      	push	{r4, lr}
 8012b3c:	2104      	movs	r1, #4
 8012b3e:	4604      	mov	r4, r0
 8012b40:	f00a fda2 	bl	801d688 <_ZdlPvj>
 8012b44:	4620      	mov	r0, r4
 8012b46:	bd10      	pop	{r4, pc}

08012b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012b48:	b510      	push	{r4, lr}
 8012b4a:	2104      	movs	r1, #4
 8012b4c:	4604      	mov	r4, r0
 8012b4e:	f00a fd9b 	bl	801d688 <_ZdlPvj>
 8012b52:	4620      	mov	r0, r4
 8012b54:	bd10      	pop	{r4, pc}

08012b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b56:	b510      	push	{r4, lr}
 8012b58:	2104      	movs	r1, #4
 8012b5a:	4604      	mov	r4, r0
 8012b5c:	f00a fd94 	bl	801d688 <_ZdlPvj>
 8012b60:	4620      	mov	r0, r4
 8012b62:	bd10      	pop	{r4, pc}

08012b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b64:	b510      	push	{r4, lr}
 8012b66:	2104      	movs	r1, #4
 8012b68:	4604      	mov	r4, r0
 8012b6a:	f00a fd8d 	bl	801d688 <_ZdlPvj>
 8012b6e:	4620      	mov	r0, r4
 8012b70:	bd10      	pop	{r4, pc}

08012b72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b72:	b510      	push	{r4, lr}
 8012b74:	2104      	movs	r1, #4
 8012b76:	4604      	mov	r4, r0
 8012b78:	f00a fd86 	bl	801d688 <_ZdlPvj>
 8012b7c:	4620      	mov	r0, r4
 8012b7e:	bd10      	pop	{r4, pc}

08012b80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012b80:	b510      	push	{r4, lr}
 8012b82:	2104      	movs	r1, #4
 8012b84:	4604      	mov	r4, r0
 8012b86:	f00a fd7f 	bl	801d688 <_ZdlPvj>
 8012b8a:	4620      	mov	r0, r4
 8012b8c:	bd10      	pop	{r4, pc}

08012b8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012b8e:	b510      	push	{r4, lr}
 8012b90:	2104      	movs	r1, #4
 8012b92:	4604      	mov	r4, r0
 8012b94:	f00a fd78 	bl	801d688 <_ZdlPvj>
 8012b98:	4620      	mov	r0, r4
 8012b9a:	bd10      	pop	{r4, pc}

08012b9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012b9c:	b510      	push	{r4, lr}
 8012b9e:	2104      	movs	r1, #4
 8012ba0:	4604      	mov	r4, r0
 8012ba2:	f00a fd71 	bl	801d688 <_ZdlPvj>
 8012ba6:	4620      	mov	r0, r4
 8012ba8:	bd10      	pop	{r4, pc}

08012baa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012baa:	b510      	push	{r4, lr}
 8012bac:	2104      	movs	r1, #4
 8012bae:	4604      	mov	r4, r0
 8012bb0:	f00a fd6a 	bl	801d688 <_ZdlPvj>
 8012bb4:	4620      	mov	r0, r4
 8012bb6:	bd10      	pop	{r4, pc}

08012bb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012bb8:	b510      	push	{r4, lr}
 8012bba:	2104      	movs	r1, #4
 8012bbc:	4604      	mov	r4, r0
 8012bbe:	f00a fd63 	bl	801d688 <_ZdlPvj>
 8012bc2:	4620      	mov	r0, r4
 8012bc4:	bd10      	pop	{r4, pc}
	...

08012bc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8012bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bcc:	b08f      	sub	sp, #60	@ 0x3c
 8012bce:	461c      	mov	r4, r3
 8012bd0:	9205      	str	r2, [sp, #20]
 8012bd2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012bd6:	9100      	str	r1, [sp, #0]
 8012bd8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8012bda:	9201      	str	r2, [sp, #4]
 8012bdc:	2a00      	cmp	r2, #0
 8012bde:	f000 8115 	beq.w	8012e0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8012be2:	6820      	ldr	r0, [r4, #0]
 8012be4:	6861      	ldr	r1, [r4, #4]
 8012be6:	aa0a      	add	r2, sp, #40	@ 0x28
 8012be8:	c203      	stmia	r2!, {r0, r1}
 8012bea:	6818      	ldr	r0, [r3, #0]
 8012bec:	6859      	ldr	r1, [r3, #4]
 8012bee:	aa0c      	add	r2, sp, #48	@ 0x30
 8012bf0:	c203      	stmia	r2!, {r0, r1}
 8012bf2:	a80a      	add	r0, sp, #40	@ 0x28
 8012bf4:	f7f9 fe98 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012bf8:	4621      	mov	r1, r4
 8012bfa:	a80c      	add	r0, sp, #48	@ 0x30
 8012bfc:	f7f9 febc 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012c00:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8012c04:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8012c08:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8012c0c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8012c10:	bfde      	ittt	le
 8012c12:	b2b3      	uxthle	r3, r6
 8012c14:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8012c18:	fb92 f3f3 	sdivle	r3, r2, r3
 8012c1c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012c20:	bfc8      	it	gt
 8012c22:	2301      	movgt	r3, #1
 8012c24:	fb92 f1f3 	sdiv	r1, r2, r3
 8012c28:	fa1f fc81 	uxth.w	ip, r1
 8012c2c:	fb0c 2413 	mls	r4, ip, r3, r2
 8012c30:	fb14 f406 	smulbb	r4, r4, r6
 8012c34:	441d      	add	r5, r3
 8012c36:	4404      	add	r4, r0
 8012c38:	4661      	mov	r1, ip
 8012c3a:	3d01      	subs	r5, #1
 8012c3c:	b2a4      	uxth	r4, r4
 8012c3e:	fb95 f5f3 	sdiv	r5, r5, r3
 8012c42:	b131      	cbz	r1, 8012c52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8012c44:	9b05      	ldr	r3, [sp, #20]
 8012c46:	9900      	ldr	r1, [sp, #0]
 8012c48:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8012c4c:	ba1b      	rev	r3, r3
 8012c4e:	4419      	add	r1, r3
 8012c50:	9100      	str	r1, [sp, #0]
 8012c52:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8012c56:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8012c5a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8012c5e:	4418      	add	r0, r3
 8012c60:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8012c64:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8012c68:	441a      	add	r2, r3
 8012c6a:	4b6a      	ldr	r3, [pc, #424]	@ (8012e14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8012c6c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8012c70:	6818      	ldr	r0, [r3, #0]
 8012c72:	6803      	ldr	r3, [r0, #0]
 8012c74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012c76:	4798      	blx	r3
 8012c78:	4967      	ldr	r1, [pc, #412]	@ (8012e18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8012c7a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8012c7e:	880b      	ldrh	r3, [r1, #0]
 8012c80:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8012c84:	9109      	str	r1, [sp, #36]	@ 0x24
 8012c86:	fb03 c202 	mla	r2, r3, r2, ip
 8012c8a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012c8e:	4373      	muls	r3, r6
 8012c90:	b2ad      	uxth	r5, r5
 8012c92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012c96:	00ad      	lsls	r5, r5, #2
 8012c98:	9306      	str	r3, [sp, #24]
 8012c9a:	1d2b      	adds	r3, r5, #4
 8012c9c:	9307      	str	r3, [sp, #28]
 8012c9e:	9b01      	ldr	r3, [sp, #4]
 8012ca0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012ca4:	9103      	str	r1, [sp, #12]
 8012ca6:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8012caa:	2c00      	cmp	r4, #0
 8012cac:	bf0c      	ite	eq
 8012cae:	46c6      	moveq	lr, r8
 8012cb0:	f04f 0e00 	movne.w	lr, #0
 8012cb4:	2300      	movs	r3, #0
 8012cb6:	b292      	uxth	r2, r2
 8012cb8:	fa1f fe8e 	uxth.w	lr, lr
 8012cbc:	9302      	str	r3, [sp, #8]
 8012cbe:	9204      	str	r2, [sp, #16]
 8012cc0:	9a06      	ldr	r2, [sp, #24]
 8012cc2:	4282      	cmp	r2, r0
 8012cc4:	f240 809d 	bls.w	8012e02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8012cc8:	b963      	cbnz	r3, 8012ce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8012cca:	9b00      	ldr	r3, [sp, #0]
 8012ccc:	781a      	ldrb	r2, [r3, #0]
 8012cce:	0993      	lsrs	r3, r2, #6
 8012cd0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8012cd4:	9202      	str	r2, [sp, #8]
 8012cd6:	1e5a      	subs	r2, r3, #1
 8012cd8:	2a02      	cmp	r2, #2
 8012cda:	d815      	bhi.n	8012d08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8012cdc:	9a00      	ldr	r2, [sp, #0]
 8012cde:	3201      	adds	r2, #1
 8012ce0:	9200      	str	r2, [sp, #0]
 8012ce2:	b29b      	uxth	r3, r3
 8012ce4:	b1b4      	cbz	r4, 8012d14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8012ce6:	429c      	cmp	r4, r3
 8012ce8:	bf95      	itete	ls
 8012cea:	1b1c      	subls	r4, r3, r4
 8012cec:	1ae4      	subhi	r4, r4, r3
 8012cee:	fa1f fa84 	uxthls.w	sl, r4
 8012cf2:	b2a4      	uxthhi	r4, r4
 8012cf4:	bf87      	ittee	hi
 8012cf6:	4671      	movhi	r1, lr
 8012cf8:	f04f 0a00 	movhi.w	sl, #0
 8012cfc:	fa1f f188 	uxthls.w	r1, r8
 8012d00:	2400      	movls	r4, #0
 8012d02:	4653      	mov	r3, sl
 8012d04:	468e      	mov	lr, r1
 8012d06:	e7db      	b.n	8012cc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8012d08:	9a00      	ldr	r2, [sp, #0]
 8012d0a:	9b00      	ldr	r3, [sp, #0]
 8012d0c:	3202      	adds	r2, #2
 8012d0e:	785b      	ldrb	r3, [r3, #1]
 8012d10:	9200      	str	r2, [sp, #0]
 8012d12:	e7e7      	b.n	8012ce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8012d14:	2202      	movs	r2, #2
 8012d16:	4615      	mov	r5, r2
 8012d18:	9907      	ldr	r1, [sp, #28]
 8012d1a:	9a02      	ldr	r2, [sp, #8]
 8012d1c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8012d20:	9905      	ldr	r1, [sp, #20]
 8012d22:	4573      	cmp	r3, lr
 8012d24:	f831 c002 	ldrh.w	ip, [r1, r2]
 8012d28:	9a01      	ldr	r2, [sp, #4]
 8012d2a:	bf2b      	itete	cs
 8012d2c:	eba3 0a0e 	subcs.w	sl, r3, lr
 8012d30:	ebae 0103 	subcc.w	r1, lr, r3
 8012d34:	46f1      	movcs	r9, lr
 8012d36:	4699      	movcc	r9, r3
 8012d38:	bf27      	ittee	cs
 8012d3a:	fa1f fa8a 	uxthcs.w	sl, sl
 8012d3e:	4621      	movcs	r1, r4
 8012d40:	b289      	uxthcc	r1, r1
 8012d42:	46a2      	movcc	sl, r4
 8012d44:	2aff      	cmp	r2, #255	@ 0xff
 8012d46:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8012d4a:	d105      	bne.n	8012d58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8012d4c:	4481      	add	r9, r0
 8012d4e:	4581      	cmp	r9, r0
 8012d50:	d045      	beq.n	8012dde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8012d52:	f820 cb02 	strh.w	ip, [r0], #2
 8012d56:	e7fa      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8012d58:	9d03      	ldr	r5, [sp, #12]
 8012d5a:	ea4f 222c 	mov.w	r2, ip, asr #8
 8012d5e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8012d62:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8012d66:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012d6a:	436a      	muls	r2, r5
 8012d6c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8012d70:	fa5f fc8c 	uxtb.w	ip, ip
 8012d74:	9208      	str	r2, [sp, #32]
 8012d76:	fb0b fb05 	mul.w	fp, fp, r5
 8012d7a:	fb0c fc05 	mul.w	ip, ip, r5
 8012d7e:	4481      	add	r9, r0
 8012d80:	4581      	cmp	r9, r0
 8012d82:	d02c      	beq.n	8012dde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8012d84:	8802      	ldrh	r2, [r0, #0]
 8012d86:	9d04      	ldr	r5, [sp, #16]
 8012d88:	9f04      	ldr	r7, [sp, #16]
 8012d8a:	1216      	asrs	r6, r2, #8
 8012d8c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012d90:	fb16 f605 	smulbb	r6, r6, r5
 8012d94:	9d08      	ldr	r5, [sp, #32]
 8012d96:	442e      	add	r6, r5
 8012d98:	10d5      	asrs	r5, r2, #3
 8012d9a:	00d2      	lsls	r2, r2, #3
 8012d9c:	b2d2      	uxtb	r2, r2
 8012d9e:	fb12 f207 	smulbb	r2, r2, r7
 8012da2:	b2b6      	uxth	r6, r6
 8012da4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8012da8:	4462      	add	r2, ip
 8012daa:	fb15 f507 	smulbb	r5, r5, r7
 8012dae:	b292      	uxth	r2, r2
 8012db0:	1c77      	adds	r7, r6, #1
 8012db2:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8012db6:	1c57      	adds	r7, r2, #1
 8012db8:	445d      	add	r5, fp
 8012dba:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8012dbe:	b2ad      	uxth	r5, r5
 8012dc0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012dc4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8012dc8:	4316      	orrs	r6, r2
 8012dca:	1c6a      	adds	r2, r5, #1
 8012dcc:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8012dd0:	096d      	lsrs	r5, r5, #5
 8012dd2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8012dd6:	432e      	orrs	r6, r5
 8012dd8:	f820 6b02 	strh.w	r6, [r0], #2
 8012ddc:	e7d0      	b.n	8012d80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8012dde:	4573      	cmp	r3, lr
 8012de0:	d38f      	bcc.n	8012d02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8012de2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8012de6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012de8:	fa1f f188 	uxth.w	r1, r8
 8012dec:	1a64      	subs	r4, r4, r1
 8012dee:	881b      	ldrh	r3, [r3, #0]
 8012df0:	b2a4      	uxth	r4, r4
 8012df2:	2c00      	cmp	r4, #0
 8012df4:	eba3 0308 	sub.w	r3, r3, r8
 8012df8:	bf18      	it	ne
 8012dfa:	2100      	movne	r1, #0
 8012dfc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012e00:	e77f      	b.n	8012d02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8012e02:	4b04      	ldr	r3, [pc, #16]	@ (8012e14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8012e04:	6818      	ldr	r0, [r3, #0]
 8012e06:	6803      	ldr	r3, [r0, #0]
 8012e08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012e0a:	4798      	blx	r3
 8012e0c:	b00f      	add	sp, #60	@ 0x3c
 8012e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e12:	bf00      	nop
 8012e14:	20013288 	.word	0x20013288
 8012e18:	20013282 	.word	0x20013282

08012e1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8012e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e20:	b09f      	sub	sp, #124	@ 0x7c
 8012e22:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8012e26:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8012e2a:	9209      	str	r2, [sp, #36]	@ 0x24
 8012e2c:	461d      	mov	r5, r3
 8012e2e:	4604      	mov	r4, r0
 8012e30:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8012e32:	2a00      	cmp	r2, #0
 8012e34:	f000 81eb 	beq.w	801320e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8012e38:	6828      	ldr	r0, [r5, #0]
 8012e3a:	6869      	ldr	r1, [r5, #4]
 8012e3c:	aa1a      	add	r2, sp, #104	@ 0x68
 8012e3e:	c203      	stmia	r2!, {r0, r1}
 8012e40:	6818      	ldr	r0, [r3, #0]
 8012e42:	6859      	ldr	r1, [r3, #4]
 8012e44:	aa1c      	add	r2, sp, #112	@ 0x70
 8012e46:	c203      	stmia	r2!, {r0, r1}
 8012e48:	a81a      	add	r0, sp, #104	@ 0x68
 8012e4a:	f7f9 fd6d 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e4e:	4629      	mov	r1, r5
 8012e50:	a81c      	add	r0, sp, #112	@ 0x70
 8012e52:	f7f9 fd91 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012e56:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8012e5a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8012e5e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8012e62:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8012e66:	bfd7      	itett	le
 8012e68:	b29a      	uxthle	r2, r3
 8012e6a:	2201      	movgt	r2, #1
 8012e6c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8012e70:	fb91 f2f2 	sdivle	r2, r1, r2
 8012e74:	9202      	str	r2, [sp, #8]
 8012e76:	9802      	ldr	r0, [sp, #8]
 8012e78:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8012e7c:	fb92 f0f0 	sdiv	r0, r2, r0
 8012e80:	b280      	uxth	r0, r0
 8012e82:	9010      	str	r0, [sp, #64]	@ 0x40
 8012e84:	9902      	ldr	r1, [sp, #8]
 8012e86:	9802      	ldr	r0, [sp, #8]
 8012e88:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8012e8a:	4488      	add	r8, r1
 8012e8c:	fb05 2510 	mls	r5, r5, r0, r2
 8012e90:	fb15 f503 	smulbb	r5, r5, r3
 8012e94:	f108 38ff 	add.w	r8, r8, #4294967295
 8012e98:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8012e9c:	fb98 f8f1 	sdiv	r8, r8, r1
 8012ea0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8012ea4:	440d      	add	r5, r1
 8012ea6:	4419      	add	r1, r3
 8012ea8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8012eac:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8012eb0:	441a      	add	r2, r3
 8012eb2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8012eb6:	9304      	str	r3, [sp, #16]
 8012eb8:	4b95      	ldr	r3, [pc, #596]	@ (8013110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8012eba:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8012ebe:	6818      	ldr	r0, [r3, #0]
 8012ec0:	6803      	ldr	r3, [r0, #0]
 8012ec2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012ec4:	4798      	blx	r3
 8012ec6:	4b93      	ldr	r3, [pc, #588]	@ (8013114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8012ec8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8012ecc:	881a      	ldrh	r2, [r3, #0]
 8012ece:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8012ed2:	9318      	str	r3, [sp, #96]	@ 0x60
 8012ed4:	fb02 7101 	mla	r1, r2, r1, r7
 8012ed8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8012edc:	4356      	muls	r6, r2
 8012ede:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8012ee2:	f108 0801 	add.w	r8, r8, #1
 8012ee6:	920a      	str	r2, [sp, #40]	@ 0x28
 8012ee8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012eea:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8012eee:	930f      	str	r3, [sp, #60]	@ 0x3c
 8012ef0:	fa1f f888 	uxth.w	r8, r8
 8012ef4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8012ef8:	f108 0204 	add.w	r2, r8, #4
 8012efc:	9211      	str	r2, [sp, #68]	@ 0x44
 8012efe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012f00:	4b85      	ldr	r3, [pc, #532]	@ (8013118 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8012f02:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8012f06:	b2ad      	uxth	r5, r5
 8012f08:	9215      	str	r2, [sp, #84]	@ 0x54
 8012f0a:	2d00      	cmp	r5, #0
 8012f0c:	9a04      	ldr	r2, [sp, #16]
 8012f0e:	f04f 0100 	mov.w	r1, #0
 8012f12:	bf18      	it	ne
 8012f14:	2200      	movne	r2, #0
 8012f16:	1b1b      	subs	r3, r3, r4
 8012f18:	b292      	uxth	r2, r2
 8012f1a:	910d      	str	r1, [sp, #52]	@ 0x34
 8012f1c:	9319      	str	r3, [sp, #100]	@ 0x64
 8012f1e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8012f20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012f22:	fa11 f383 	uxtah	r3, r1, r3
 8012f26:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8012f28:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012f2c:	3304      	adds	r3, #4
 8012f2e:	9306      	str	r3, [sp, #24]
 8012f30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012f32:	4283      	cmp	r3, r0
 8012f34:	f240 8166 	bls.w	8013204 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8012f38:	9902      	ldr	r1, [sp, #8]
 8012f3a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8012f3e:	fbb5 f3f3 	udiv	r3, r5, r3
 8012f42:	1acb      	subs	r3, r1, r3
 8012f44:	b29b      	uxth	r3, r3
 8012f46:	9316      	str	r3, [sp, #88]	@ 0x58
 8012f48:	9b06      	ldr	r3, [sp, #24]
 8012f4a:	9e06      	ldr	r6, [sp, #24]
 8012f4c:	7859      	ldrb	r1, [r3, #1]
 8012f4e:	789b      	ldrb	r3, [r3, #2]
 8012f50:	7836      	ldrb	r6, [r6, #0]
 8012f52:	9612      	str	r6, [sp, #72]	@ 0x48
 8012f54:	021b      	lsls	r3, r3, #8
 8012f56:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8012f5a:	9906      	ldr	r1, [sp, #24]
 8012f5c:	78c9      	ldrb	r1, [r1, #3]
 8012f5e:	430b      	orrs	r3, r1
 8012f60:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8012f62:	3601      	adds	r6, #1
 8012f64:	4419      	add	r1, r3
 8012f66:	9605      	str	r6, [sp, #20]
 8012f68:	1c4e      	adds	r6, r1, #1
 8012f6a:	9603      	str	r6, [sp, #12]
 8012f6c:	7849      	ldrb	r1, [r1, #1]
 8012f6e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012f70:	0209      	lsls	r1, r1, #8
 8012f72:	5cf3      	ldrb	r3, [r6, r3]
 8012f74:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8012f78:	4319      	orrs	r1, r3
 8012f7a:	b28b      	uxth	r3, r1
 8012f7c:	930c      	str	r3, [sp, #48]	@ 0x30
 8012f7e:	2300      	movs	r3, #0
 8012f80:	f04f 0a01 	mov.w	sl, #1
 8012f84:	9307      	str	r3, [sp, #28]
 8012f86:	469c      	mov	ip, r3
 8012f88:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8012f8c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8012f90:	46d3      	mov	fp, sl
 8012f92:	4657      	mov	r7, sl
 8012f94:	930e      	str	r3, [sp, #56]	@ 0x38
 8012f96:	2d00      	cmp	r5, #0
 8012f98:	d07e      	beq.n	8013098 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8012f9a:	42af      	cmp	r7, r5
 8012f9c:	d26e      	bcs.n	801307c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8012f9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012fa0:	9201      	str	r2, [sp, #4]
 8012fa2:	1bed      	subs	r5, r5, r7
 8012fa4:	4283      	cmp	r3, r0
 8012fa6:	b2ad      	uxth	r5, r5
 8012fa8:	d802      	bhi.n	8012fb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8012faa:	e073      	b.n	8013094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8012fac:	2b00      	cmp	r3, #0
 8012fae:	d15f      	bne.n	8013070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8012fb0:	9b03      	ldr	r3, [sp, #12]
 8012fb2:	785b      	ldrb	r3, [r3, #1]
 8012fb4:	f1cb 0207 	rsb	r2, fp, #7
 8012fb8:	4093      	lsls	r3, r2
 8012fba:	005b      	lsls	r3, r3, #1
 8012fbc:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8012fc0:	9b03      	ldr	r3, [sp, #12]
 8012fc2:	781b      	ldrb	r3, [r3, #0]
 8012fc4:	fa43 f30b 	asr.w	r3, r3, fp
 8012fc8:	b2db      	uxtb	r3, r3
 8012fca:	4313      	orrs	r3, r2
 8012fcc:	f10b 0201 	add.w	r2, fp, #1
 8012fd0:	fa5f fb82 	uxtb.w	fp, r2
 8012fd4:	9a03      	ldr	r2, [sp, #12]
 8012fd6:	f1bb 0f08 	cmp.w	fp, #8
 8012fda:	bf15      	itete	ne
 8012fdc:	3201      	addne	r2, #1
 8012fde:	3202      	addeq	r2, #2
 8012fe0:	9203      	strne	r2, [sp, #12]
 8012fe2:	9203      	streq	r2, [sp, #12]
 8012fe4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012fe6:	b29f      	uxth	r7, r3
 8012fe8:	bf08      	it	eq
 8012fea:	f04f 0b00 	moveq.w	fp, #0
 8012fee:	42ba      	cmp	r2, r7
 8012ff0:	d309      	bcc.n	8013006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8012ff2:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8012ff6:	2301      	movs	r3, #1
 8012ff8:	9a05      	ldr	r2, [sp, #20]
 8012ffa:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8012ffe:	d30e      	bcc.n	801301e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8013000:	469a      	mov	sl, r3
 8013002:	2600      	movs	r6, #0
 8013004:	e035      	b.n	8013072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8013006:	9b05      	ldr	r3, [sp, #20]
 8013008:	429f      	cmp	r7, r3
 801300a:	d318      	bcc.n	801303e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801300c:	eb04 030a 	add.w	r3, r4, sl
 8013010:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8013014:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8013018:	f10a 0301 	add.w	r3, sl, #1
 801301c:	b29b      	uxth	r3, r3
 801301e:	9a05      	ldr	r2, [sp, #20]
 8013020:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8013024:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013026:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801302a:	7116      	strb	r6, [r2, #4]
 801302c:	f10a 0601 	add.w	r6, sl, #1
 8013030:	80d1      	strh	r1, [r2, #6]
 8013032:	7156      	strb	r6, [r2, #5]
 8013034:	9a05      	ldr	r2, [sp, #20]
 8013036:	3201      	adds	r2, #1
 8013038:	b292      	uxth	r2, r2
 801303a:	9205      	str	r2, [sp, #20]
 801303c:	e7e0      	b.n	8013000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801303e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8013042:	463a      	mov	r2, r7
 8013044:	795b      	ldrb	r3, [r3, #5]
 8013046:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801304a:	4426      	add	r6, r4
 801304c:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801304e:	eb01 0c06 	add.w	ip, r1, r6
 8013052:	f1bc 0f00 	cmp.w	ip, #0
 8013056:	dd07      	ble.n	8013068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8013058:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801305c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8013060:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8013064:	88d2      	ldrh	r2, [r2, #6]
 8013066:	e7f1      	b.n	801304c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8013068:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801306c:	b29b      	uxth	r3, r3
 801306e:	e7c3      	b.n	8012ff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8013070:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8013072:	970c      	str	r7, [sp, #48]	@ 0x30
 8013074:	9a01      	ldr	r2, [sp, #4]
 8013076:	46b4      	mov	ip, r6
 8013078:	461f      	mov	r7, r3
 801307a:	e78c      	b.n	8012f96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801307c:	1b7b      	subs	r3, r7, r5
 801307e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013082:	9201      	str	r2, [sp, #4]
 8013084:	eb0c 0605 	add.w	r6, ip, r5
 8013088:	b29b      	uxth	r3, r3
 801308a:	b2b6      	uxth	r6, r6
 801308c:	2500      	movs	r5, #0
 801308e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013090:	4282      	cmp	r2, r0
 8013092:	d88b      	bhi.n	8012fac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8013094:	9a01      	ldr	r2, [sp, #4]
 8013096:	e74b      	b.n	8012f30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8013098:	4297      	cmp	r7, r2
 801309a:	d332      	bcc.n	8013102 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801309c:	1abb      	subs	r3, r7, r2
 801309e:	b29b      	uxth	r3, r3
 80130a0:	9208      	str	r2, [sp, #32]
 80130a2:	9501      	str	r5, [sp, #4]
 80130a4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80130a6:	29ff      	cmp	r1, #255	@ 0xff
 80130a8:	9908      	ldr	r1, [sp, #32]
 80130aa:	eb0c 0601 	add.w	r6, ip, r1
 80130ae:	d135      	bne.n	801311c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80130b0:	f1a0 0e02 	sub.w	lr, r0, #2
 80130b4:	b2b6      	uxth	r6, r6
 80130b6:	45b4      	cmp	ip, r6
 80130b8:	f040 808c 	bne.w	80131d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80130bc:	9908      	ldr	r1, [sp, #32]
 80130be:	4297      	cmp	r7, r2
 80130c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80130c4:	d3e2      	bcc.n	801308c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 80130c6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80130c8:	9904      	ldr	r1, [sp, #16]
 80130ca:	8812      	ldrh	r2, [r2, #0]
 80130cc:	1a52      	subs	r2, r2, r1
 80130ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80130d2:	9a07      	ldr	r2, [sp, #28]
 80130d4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80130d6:	3201      	adds	r2, #1
 80130d8:	428a      	cmp	r2, r1
 80130da:	9207      	str	r2, [sp, #28]
 80130dc:	f040 8087 	bne.w	80131ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80130e0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80130e4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80130e8:	9b04      	ldr	r3, [sp, #16]
 80130ea:	1bed      	subs	r5, r5, r7
 80130ec:	b2ad      	uxth	r5, r5
 80130ee:	2d00      	cmp	r5, #0
 80130f0:	bf08      	it	eq
 80130f2:	461a      	moveq	r2, r3
 80130f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80130f6:	bf18      	it	ne
 80130f8:	2200      	movne	r2, #0
 80130fa:	3301      	adds	r3, #1
 80130fc:	930d      	str	r3, [sp, #52]	@ 0x34
 80130fe:	b292      	uxth	r2, r2
 8013100:	e70d      	b.n	8012f1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8013102:	1bd1      	subs	r1, r2, r7
 8013104:	b28b      	uxth	r3, r1
 8013106:	9301      	str	r3, [sp, #4]
 8013108:	9708      	str	r7, [sp, #32]
 801310a:	462b      	mov	r3, r5
 801310c:	e7ca      	b.n	80130a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801310e:	bf00      	nop
 8013110:	20013288 	.word	0x20013288
 8013114:	20013282 	.word	0x20013282
 8013118:	fffff7fb 	.word	0xfffff7fb
 801311c:	b2b6      	uxth	r6, r6
 801311e:	900b      	str	r0, [sp, #44]	@ 0x2c
 8013120:	45b4      	cmp	ip, r6
 8013122:	d0cb      	beq.n	80130bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8013124:	f10c 0101 	add.w	r1, ip, #1
 8013128:	44a4      	add	ip, r4
 801312a:	9117      	str	r1, [sp, #92]	@ 0x5c
 801312c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8013130:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8013132:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8013136:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013138:	f8b1 c000 	ldrh.w	ip, [r1]
 801313c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801313e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8013142:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8013146:	fb1e fe01 	smulbb	lr, lr, r1
 801314a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801314e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013150:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8013154:	fb08 e801 	mla	r8, r8, r1, lr
 8013158:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801315c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801315e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013162:	fb19 f901 	smulbb	r9, r9, r1
 8013166:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801316a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801316c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8013170:	fb0e 9e01 	mla	lr, lr, r1, r9
 8013174:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013178:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801317a:	fa5f fc8c 	uxtb.w	ip, ip
 801317e:	fb1c fc01 	smulbb	ip, ip, r1
 8013182:	00ed      	lsls	r5, r5, #3
 8013184:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013186:	b2ed      	uxtb	r5, r5
 8013188:	fb05 c501 	mla	r5, r5, r1, ip
 801318c:	fa1f f888 	uxth.w	r8, r8
 8013190:	fa1f fe8e 	uxth.w	lr, lr
 8013194:	b2ad      	uxth	r5, r5
 8013196:	f108 0c01 	add.w	ip, r8, #1
 801319a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801319e:	f10e 0901 	add.w	r9, lr, #1
 80131a2:	f105 0c01 	add.w	ip, r5, #1
 80131a6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80131aa:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80131ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80131b2:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80131b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80131ba:	ea4c 0808 	orr.w	r8, ip, r8
 80131be:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80131c0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80131c4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80131c8:	ea48 0809 	orr.w	r8, r8, r9
 80131cc:	f821 8b02 	strh.w	r8, [r1], #2
 80131d0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80131d2:	e7a5      	b.n	8013120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80131d4:	f10c 0801 	add.w	r8, ip, #1
 80131d8:	44a4      	add	ip, r4
 80131da:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80131dc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80131e0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80131e4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80131e8:	fa1f fc88 	uxth.w	ip, r8
 80131ec:	e763      	b.n	80130b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 80131ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80131f2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80131f6:	1aad      	subs	r5, r5, r2
 80131f8:	b2ad      	uxth	r5, r5
 80131fa:	2d00      	cmp	r5, #0
 80131fc:	bf18      	it	ne
 80131fe:	2200      	movne	r2, #0
 8013200:	9201      	str	r2, [sp, #4]
 8013202:	e744      	b.n	801308e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8013204:	4b03      	ldr	r3, [pc, #12]	@ (8013214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8013206:	6818      	ldr	r0, [r3, #0]
 8013208:	6803      	ldr	r3, [r0, #0]
 801320a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801320c:	4798      	blx	r3
 801320e:	b01f      	add	sp, #124	@ 0x7c
 8013210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013214:	20013288 	.word	0x20013288

08013218 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8013218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801321c:	b08f      	sub	sp, #60	@ 0x3c
 801321e:	461c      	mov	r4, r3
 8013220:	9203      	str	r2, [sp, #12]
 8013222:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013226:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013228:	9202      	str	r2, [sp, #8]
 801322a:	460f      	mov	r7, r1
 801322c:	2a00      	cmp	r2, #0
 801322e:	f000 8128 	beq.w	8013482 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8013232:	6820      	ldr	r0, [r4, #0]
 8013234:	6861      	ldr	r1, [r4, #4]
 8013236:	aa0a      	add	r2, sp, #40	@ 0x28
 8013238:	c203      	stmia	r2!, {r0, r1}
 801323a:	6818      	ldr	r0, [r3, #0]
 801323c:	6859      	ldr	r1, [r3, #4]
 801323e:	aa0c      	add	r2, sp, #48	@ 0x30
 8013240:	c203      	stmia	r2!, {r0, r1}
 8013242:	a80a      	add	r0, sp, #40	@ 0x28
 8013244:	f7f9 fb70 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013248:	4621      	mov	r1, r4
 801324a:	a80c      	add	r0, sp, #48	@ 0x30
 801324c:	f7f9 fb94 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013250:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8013254:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8013258:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801325c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8013260:	bfde      	ittt	le
 8013262:	b2b3      	uxthle	r3, r6
 8013264:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8013268:	fb92 f3f3 	sdivle	r3, r2, r3
 801326c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8013270:	bfc8      	it	gt
 8013272:	2301      	movgt	r3, #1
 8013274:	fb92 f1f3 	sdiv	r1, r2, r3
 8013278:	fa1f fc81 	uxth.w	ip, r1
 801327c:	fb0c 2413 	mls	r4, ip, r3, r2
 8013280:	fb14 f406 	smulbb	r4, r4, r6
 8013284:	441d      	add	r5, r3
 8013286:	4404      	add	r4, r0
 8013288:	4661      	mov	r1, ip
 801328a:	3d01      	subs	r5, #1
 801328c:	b2a4      	uxth	r4, r4
 801328e:	fb95 f5f3 	sdiv	r5, r5, r3
 8013292:	b121      	cbz	r1, 801329e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8013294:	9b03      	ldr	r3, [sp, #12]
 8013296:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801329a:	ba1b      	rev	r3, r3
 801329c:	441f      	add	r7, r3
 801329e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80132a2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80132a6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80132aa:	4418      	add	r0, r3
 80132ac:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80132b0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80132b4:	441a      	add	r2, r3
 80132b6:	4b74      	ldr	r3, [pc, #464]	@ (8013488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80132b8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80132bc:	6818      	ldr	r0, [r3, #0]
 80132be:	6803      	ldr	r3, [r0, #0]
 80132c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80132c2:	4798      	blx	r3
 80132c4:	4a71      	ldr	r2, [pc, #452]	@ (801348c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80132c6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80132ca:	8813      	ldrh	r3, [r2, #0]
 80132cc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80132d0:	9209      	str	r2, [sp, #36]	@ 0x24
 80132d2:	fb03 c101 	mla	r1, r3, r1, ip
 80132d6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80132da:	4373      	muls	r3, r6
 80132dc:	b2ad      	uxth	r5, r5
 80132de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80132e2:	00ad      	lsls	r5, r5, #2
 80132e4:	2c00      	cmp	r4, #0
 80132e6:	9304      	str	r3, [sp, #16]
 80132e8:	f105 0304 	add.w	r3, r5, #4
 80132ec:	9305      	str	r3, [sp, #20]
 80132ee:	bf0c      	ite	eq
 80132f0:	46c8      	moveq	r8, r9
 80132f2:	f04f 0800 	movne.w	r8, #0
 80132f6:	2300      	movs	r3, #0
 80132f8:	fa1f f888 	uxth.w	r8, r8
 80132fc:	9301      	str	r3, [sp, #4]
 80132fe:	9a04      	ldr	r2, [sp, #16]
 8013300:	4282      	cmp	r2, r0
 8013302:	f240 80b9 	bls.w	8013478 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8013306:	b95b      	cbnz	r3, 8013320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8013308:	783a      	ldrb	r2, [r7, #0]
 801330a:	0993      	lsrs	r3, r2, #6
 801330c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8013310:	9201      	str	r2, [sp, #4]
 8013312:	1e5a      	subs	r2, r3, #1
 8013314:	2a02      	cmp	r2, #2
 8013316:	bf8d      	iteet	hi
 8013318:	787b      	ldrbhi	r3, [r7, #1]
 801331a:	3701      	addls	r7, #1
 801331c:	b29b      	uxthls	r3, r3
 801331e:	3702      	addhi	r7, #2
 8013320:	b184      	cbz	r4, 8013344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8013322:	429c      	cmp	r4, r3
 8013324:	bf95      	itete	ls
 8013326:	1b1c      	subls	r4, r3, r4
 8013328:	1ae4      	subhi	r4, r4, r3
 801332a:	fa1f fa84 	uxthls.w	sl, r4
 801332e:	b2a4      	uxthhi	r4, r4
 8013330:	bf87      	ittee	hi
 8013332:	46c4      	movhi	ip, r8
 8013334:	f04f 0a00 	movhi.w	sl, #0
 8013338:	fa1f fc89 	uxthls.w	ip, r9
 801333c:	2400      	movls	r4, #0
 801333e:	4653      	mov	r3, sl
 8013340:	46e0      	mov	r8, ip
 8013342:	e7dc      	b.n	80132fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8013344:	2204      	movs	r2, #4
 8013346:	4615      	mov	r5, r2
 8013348:	9905      	ldr	r1, [sp, #20]
 801334a:	9a01      	ldr	r2, [sp, #4]
 801334c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8013350:	9903      	ldr	r1, [sp, #12]
 8013352:	588a      	ldr	r2, [r1, r2]
 8013354:	4543      	cmp	r3, r8
 8013356:	bf27      	ittee	cs
 8013358:	eba3 0a08 	subcs.w	sl, r3, r8
 801335c:	46c6      	movcs	lr, r8
 801335e:	eba8 0c03 	subcc.w	ip, r8, r3
 8013362:	469e      	movcc	lr, r3
 8013364:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8013368:	bf27      	ittee	cs
 801336a:	fa1f fa8a 	uxthcs.w	sl, sl
 801336e:	46a4      	movcs	ip, r4
 8013370:	fa1f fc8c 	uxthcc.w	ip, ip
 8013374:	46a2      	movcc	sl, r4
 8013376:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801337a:	2900      	cmp	r1, #0
 801337c:	d066      	beq.n	801344c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801337e:	29ff      	cmp	r1, #255	@ 0xff
 8013380:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8013384:	d114      	bne.n	80133b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8013386:	9d02      	ldr	r5, [sp, #8]
 8013388:	2dff      	cmp	r5, #255	@ 0xff
 801338a:	d111      	bne.n	80133b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801338c:	0951      	lsrs	r1, r2, #5
 801338e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8013392:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8013396:	f026 0607 	bic.w	r6, r6, #7
 801339a:	430e      	orrs	r6, r1
 801339c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80133a0:	4316      	orrs	r6, r2
 80133a2:	b2b6      	uxth	r6, r6
 80133a4:	4486      	add	lr, r0
 80133a6:	4586      	cmp	lr, r0
 80133a8:	d051      	beq.n	801344e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80133aa:	f820 6b02 	strh.w	r6, [r0], #2
 80133ae:	e7fa      	b.n	80133a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80133b0:	9d02      	ldr	r5, [sp, #8]
 80133b2:	4369      	muls	r1, r5
 80133b4:	1c4d      	adds	r5, r1, #1
 80133b6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80133ba:	122d      	asrs	r5, r5, #8
 80133bc:	ea6f 0b05 	mvn.w	fp, r5
 80133c0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80133c4:	b2ad      	uxth	r5, r5
 80133c6:	b2f6      	uxtb	r6, r6
 80133c8:	b2d2      	uxtb	r2, r2
 80133ca:	fb11 f105 	smulbb	r1, r1, r5
 80133ce:	fb16 f605 	smulbb	r6, r6, r5
 80133d2:	fb12 f205 	smulbb	r2, r2, r5
 80133d6:	b289      	uxth	r1, r1
 80133d8:	b2b6      	uxth	r6, r6
 80133da:	b292      	uxth	r2, r2
 80133dc:	9106      	str	r1, [sp, #24]
 80133de:	9607      	str	r6, [sp, #28]
 80133e0:	9208      	str	r2, [sp, #32]
 80133e2:	4486      	add	lr, r0
 80133e4:	fa5f fb8b 	uxtb.w	fp, fp
 80133e8:	4586      	cmp	lr, r0
 80133ea:	d030      	beq.n	801344e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80133ec:	8802      	ldrh	r2, [r0, #0]
 80133ee:	9906      	ldr	r1, [sp, #24]
 80133f0:	1216      	asrs	r6, r2, #8
 80133f2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80133f6:	10d5      	asrs	r5, r2, #3
 80133f8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80133fc:	fb06 160b 	mla	r6, r6, fp, r1
 8013400:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013404:	9907      	ldr	r1, [sp, #28]
 8013406:	00d2      	lsls	r2, r2, #3
 8013408:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801340c:	fb05 150b 	mla	r5, r5, fp, r1
 8013410:	b2d2      	uxtb	r2, r2
 8013412:	9908      	ldr	r1, [sp, #32]
 8013414:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013418:	b2b6      	uxth	r6, r6
 801341a:	fb02 120b 	mla	r2, r2, fp, r1
 801341e:	b292      	uxth	r2, r2
 8013420:	1c71      	adds	r1, r6, #1
 8013422:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8013426:	1c51      	adds	r1, r2, #1
 8013428:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801342c:	b2ad      	uxth	r5, r5
 801342e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013432:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013436:	4316      	orrs	r6, r2
 8013438:	1c6a      	adds	r2, r5, #1
 801343a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801343e:	096d      	lsrs	r5, r5, #5
 8013440:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013444:	432e      	orrs	r6, r5
 8013446:	f820 6b02 	strh.w	r6, [r0], #2
 801344a:	e7cd      	b.n	80133e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801344c:	4470      	add	r0, lr
 801344e:	4543      	cmp	r3, r8
 8013450:	f4ff af75 	bcc.w	801333e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8013454:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8013458:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801345a:	fa1f fc89 	uxth.w	ip, r9
 801345e:	eba4 040c 	sub.w	r4, r4, ip
 8013462:	881b      	ldrh	r3, [r3, #0]
 8013464:	b2a4      	uxth	r4, r4
 8013466:	2c00      	cmp	r4, #0
 8013468:	eba3 0309 	sub.w	r3, r3, r9
 801346c:	bf18      	it	ne
 801346e:	f04f 0c00 	movne.w	ip, #0
 8013472:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013476:	e762      	b.n	801333e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8013478:	4b03      	ldr	r3, [pc, #12]	@ (8013488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801347a:	6818      	ldr	r0, [r3, #0]
 801347c:	6803      	ldr	r3, [r0, #0]
 801347e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013480:	4798      	blx	r3
 8013482:	b00f      	add	sp, #60	@ 0x3c
 8013484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013488:	20013288 	.word	0x20013288
 801348c:	20013282 	.word	0x20013282

08013490 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013494:	b093      	sub	sp, #76	@ 0x4c
 8013496:	461c      	mov	r4, r3
 8013498:	9205      	str	r2, [sp, #20]
 801349a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801349e:	9101      	str	r1, [sp, #4]
 80134a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80134a2:	9202      	str	r2, [sp, #8]
 80134a4:	2a00      	cmp	r2, #0
 80134a6:	f000 812c 	beq.w	8013702 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80134aa:	6820      	ldr	r0, [r4, #0]
 80134ac:	6861      	ldr	r1, [r4, #4]
 80134ae:	aa0e      	add	r2, sp, #56	@ 0x38
 80134b0:	c203      	stmia	r2!, {r0, r1}
 80134b2:	6818      	ldr	r0, [r3, #0]
 80134b4:	6859      	ldr	r1, [r3, #4]
 80134b6:	aa10      	add	r2, sp, #64	@ 0x40
 80134b8:	c203      	stmia	r2!, {r0, r1}
 80134ba:	a80e      	add	r0, sp, #56	@ 0x38
 80134bc:	f7f9 fa34 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80134c0:	4621      	mov	r1, r4
 80134c2:	a810      	add	r0, sp, #64	@ 0x40
 80134c4:	f7f9 fa58 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80134c8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80134cc:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80134d0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80134d4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80134d8:	bfde      	ittt	le
 80134da:	b2b3      	uxthle	r3, r6
 80134dc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80134e0:	fb92 f3f3 	sdivle	r3, r2, r3
 80134e4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80134e8:	bfc8      	it	gt
 80134ea:	2301      	movgt	r3, #1
 80134ec:	fb92 f1f3 	sdiv	r1, r2, r3
 80134f0:	fa1f fc81 	uxth.w	ip, r1
 80134f4:	fb0c 2413 	mls	r4, ip, r3, r2
 80134f8:	fb14 f406 	smulbb	r4, r4, r6
 80134fc:	441d      	add	r5, r3
 80134fe:	4404      	add	r4, r0
 8013500:	4661      	mov	r1, ip
 8013502:	3d01      	subs	r5, #1
 8013504:	b2a4      	uxth	r4, r4
 8013506:	fb95 f5f3 	sdiv	r5, r5, r3
 801350a:	b131      	cbz	r1, 801351a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801350c:	9b05      	ldr	r3, [sp, #20]
 801350e:	9901      	ldr	r1, [sp, #4]
 8013510:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8013514:	ba1b      	rev	r3, r3
 8013516:	4419      	add	r1, r3
 8013518:	9101      	str	r1, [sp, #4]
 801351a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801351e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8013522:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8013526:	4418      	add	r0, r3
 8013528:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801352c:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8013530:	441a      	add	r2, r3
 8013532:	4b75      	ldr	r3, [pc, #468]	@ (8013708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8013534:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8013538:	6818      	ldr	r0, [r3, #0]
 801353a:	6803      	ldr	r3, [r0, #0]
 801353c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801353e:	4798      	blx	r3
 8013540:	4972      	ldr	r1, [pc, #456]	@ (801370c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8013542:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8013546:	880b      	ldrh	r3, [r1, #0]
 8013548:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801354c:	910d      	str	r1, [sp, #52]	@ 0x34
 801354e:	fb03 c202 	mla	r2, r3, r2, ip
 8013552:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013556:	4373      	muls	r3, r6
 8013558:	b2ad      	uxth	r5, r5
 801355a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801355e:	00ad      	lsls	r5, r5, #2
 8013560:	9308      	str	r3, [sp, #32]
 8013562:	1d2b      	adds	r3, r5, #4
 8013564:	9309      	str	r3, [sp, #36]	@ 0x24
 8013566:	9b02      	ldr	r3, [sp, #8]
 8013568:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801356c:	9106      	str	r1, [sp, #24]
 801356e:	43da      	mvns	r2, r3
 8013570:	2c00      	cmp	r4, #0
 8013572:	bf0c      	ite	eq
 8013574:	46dc      	moveq	ip, fp
 8013576:	f04f 0c00 	movne.w	ip, #0
 801357a:	2300      	movs	r3, #0
 801357c:	b2d2      	uxtb	r2, r2
 801357e:	fa1f fc8c 	uxth.w	ip, ip
 8013582:	9303      	str	r3, [sp, #12]
 8013584:	9207      	str	r2, [sp, #28]
 8013586:	9a08      	ldr	r2, [sp, #32]
 8013588:	4282      	cmp	r2, r0
 801358a:	f240 80b5 	bls.w	80136f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801358e:	b963      	cbnz	r3, 80135aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8013590:	9b01      	ldr	r3, [sp, #4]
 8013592:	781a      	ldrb	r2, [r3, #0]
 8013594:	0993      	lsrs	r3, r2, #6
 8013596:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801359a:	9203      	str	r2, [sp, #12]
 801359c:	1e5a      	subs	r2, r3, #1
 801359e:	2a02      	cmp	r2, #2
 80135a0:	d815      	bhi.n	80135ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80135a2:	9a01      	ldr	r2, [sp, #4]
 80135a4:	3201      	adds	r2, #1
 80135a6:	9201      	str	r2, [sp, #4]
 80135a8:	b29b      	uxth	r3, r3
 80135aa:	b1b4      	cbz	r4, 80135da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80135ac:	429c      	cmp	r4, r3
 80135ae:	bf95      	itete	ls
 80135b0:	1b1c      	subls	r4, r3, r4
 80135b2:	1ae4      	subhi	r4, r4, r3
 80135b4:	fa1f f884 	uxthls.w	r8, r4
 80135b8:	b2a4      	uxthhi	r4, r4
 80135ba:	bf87      	ittee	hi
 80135bc:	4666      	movhi	r6, ip
 80135be:	f04f 0800 	movhi.w	r8, #0
 80135c2:	fa1f f68b 	uxthls.w	r6, fp
 80135c6:	2400      	movls	r4, #0
 80135c8:	4643      	mov	r3, r8
 80135ca:	46b4      	mov	ip, r6
 80135cc:	e7db      	b.n	8013586 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80135ce:	9a01      	ldr	r2, [sp, #4]
 80135d0:	9b01      	ldr	r3, [sp, #4]
 80135d2:	3202      	adds	r2, #2
 80135d4:	785b      	ldrb	r3, [r3, #1]
 80135d6:	9201      	str	r2, [sp, #4]
 80135d8:	e7e7      	b.n	80135aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80135da:	2203      	movs	r2, #3
 80135dc:	4615      	mov	r5, r2
 80135de:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80135e0:	9a03      	ldr	r2, [sp, #12]
 80135e2:	fb15 1202 	smlabb	r2, r5, r2, r1
 80135e6:	9905      	ldr	r1, [sp, #20]
 80135e8:	4563      	cmp	r3, ip
 80135ea:	eb01 0502 	add.w	r5, r1, r2
 80135ee:	9902      	ldr	r1, [sp, #8]
 80135f0:	bf29      	itett	cs
 80135f2:	eba3 080c 	subcs.w	r8, r3, ip
 80135f6:	ebac 0603 	subcc.w	r6, ip, r3
 80135fa:	fa1f f888 	uxthcs.w	r8, r8
 80135fe:	46e1      	movcs	r9, ip
 8013600:	bf2f      	iteee	cs
 8013602:	4626      	movcs	r6, r4
 8013604:	b2b6      	uxthcc	r6, r6
 8013606:	4699      	movcc	r9, r3
 8013608:	46a0      	movcc	r8, r4
 801360a:	29ff      	cmp	r1, #255	@ 0xff
 801360c:	d04a      	beq.n	80136a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801360e:	9f06      	ldr	r7, [sp, #24]
 8013610:	78a9      	ldrb	r1, [r5, #2]
 8013612:	9004      	str	r0, [sp, #16]
 8013614:	4379      	muls	r1, r7
 8013616:	910a      	str	r1, [sp, #40]	@ 0x28
 8013618:	7869      	ldrb	r1, [r5, #1]
 801361a:	4379      	muls	r1, r7
 801361c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801361e:	9905      	ldr	r1, [sp, #20]
 8013620:	5c8a      	ldrb	r2, [r1, r2]
 8013622:	437a      	muls	r2, r7
 8013624:	920c      	str	r2, [sp, #48]	@ 0x30
 8013626:	46ca      	mov	sl, r9
 8013628:	f1ba 0f00 	cmp.w	sl, #0
 801362c:	d03d      	beq.n	80136aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801362e:	9a04      	ldr	r2, [sp, #16]
 8013630:	9f07      	ldr	r7, [sp, #28]
 8013632:	8812      	ldrh	r2, [r2, #0]
 8013634:	1215      	asrs	r5, r2, #8
 8013636:	46be      	mov	lr, r7
 8013638:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801363c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801363e:	10d1      	asrs	r1, r2, #3
 8013640:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013644:	fb05 750e 	mla	r5, r5, lr, r7
 8013648:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801364c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801364e:	00d2      	lsls	r2, r2, #3
 8013650:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013654:	fb01 710e 	mla	r1, r1, lr, r7
 8013658:	b2d2      	uxtb	r2, r2
 801365a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801365c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013660:	b2ad      	uxth	r5, r5
 8013662:	fb02 720e 	mla	r2, r2, lr, r7
 8013666:	b292      	uxth	r2, r2
 8013668:	f105 0e01 	add.w	lr, r5, #1
 801366c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013670:	f102 0e01 	add.w	lr, r2, #1
 8013674:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8013678:	b289      	uxth	r1, r1
 801367a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801367e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8013682:	4315      	orrs	r5, r2
 8013684:	1c4a      	adds	r2, r1, #1
 8013686:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801368a:	0949      	lsrs	r1, r1, #5
 801368c:	9a04      	ldr	r2, [sp, #16]
 801368e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8013692:	430d      	orrs	r5, r1
 8013694:	f822 5b02 	strh.w	r5, [r2], #2
 8013698:	f10a 3aff 	add.w	sl, sl, #4294967295
 801369c:	9204      	str	r2, [sp, #16]
 801369e:	fa1f fa8a 	uxth.w	sl, sl
 80136a2:	e7c1      	b.n	8013628 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80136a4:	4649      	mov	r1, r9
 80136a6:	4686      	mov	lr, r0
 80136a8:	b999      	cbnz	r1, 80136d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80136aa:	4563      	cmp	r3, ip
 80136ac:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80136b0:	d38a      	bcc.n	80135c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80136b2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80136b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80136b8:	fa1f f68b 	uxth.w	r6, fp
 80136bc:	1ba4      	subs	r4, r4, r6
 80136be:	881b      	ldrh	r3, [r3, #0]
 80136c0:	b2a4      	uxth	r4, r4
 80136c2:	2c00      	cmp	r4, #0
 80136c4:	eba3 030b 	sub.w	r3, r3, fp
 80136c8:	bf18      	it	ne
 80136ca:	2600      	movne	r6, #0
 80136cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80136d0:	e77a      	b.n	80135c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80136d2:	78aa      	ldrb	r2, [r5, #2]
 80136d4:	4f0e      	ldr	r7, [pc, #56]	@ (8013710 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80136d6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80136da:	786a      	ldrb	r2, [r5, #1]
 80136dc:	00d2      	lsls	r2, r2, #3
 80136de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80136e2:	ea4a 0202 	orr.w	r2, sl, r2
 80136e6:	f895 a000 	ldrb.w	sl, [r5]
 80136ea:	3901      	subs	r1, #1
 80136ec:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80136f0:	f82e 2b02 	strh.w	r2, [lr], #2
 80136f4:	b289      	uxth	r1, r1
 80136f6:	e7d7      	b.n	80136a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80136f8:	4b03      	ldr	r3, [pc, #12]	@ (8013708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80136fa:	6818      	ldr	r0, [r3, #0]
 80136fc:	6803      	ldr	r3, [r0, #0]
 80136fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013700:	4798      	blx	r3
 8013702:	b013      	add	sp, #76	@ 0x4c
 8013704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013708:	20013288 	.word	0x20013288
 801370c:	20013282 	.word	0x20013282
 8013710:	fffff800 	.word	0xfffff800

08013714 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8013714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013718:	b09d      	sub	sp, #116	@ 0x74
 801371a:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801371e:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8013722:	920e      	str	r2, [sp, #56]	@ 0x38
 8013724:	461c      	mov	r4, r3
 8013726:	4683      	mov	fp, r0
 8013728:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801372a:	2a00      	cmp	r2, #0
 801372c:	f000 81e0 	beq.w	8013af0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8013730:	6820      	ldr	r0, [r4, #0]
 8013732:	6861      	ldr	r1, [r4, #4]
 8013734:	aa18      	add	r2, sp, #96	@ 0x60
 8013736:	c203      	stmia	r2!, {r0, r1}
 8013738:	6818      	ldr	r0, [r3, #0]
 801373a:	6859      	ldr	r1, [r3, #4]
 801373c:	aa1a      	add	r2, sp, #104	@ 0x68
 801373e:	c203      	stmia	r2!, {r0, r1}
 8013740:	a818      	add	r0, sp, #96	@ 0x60
 8013742:	f7f9 f8f1 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013746:	4621      	mov	r1, r4
 8013748:	a81a      	add	r0, sp, #104	@ 0x68
 801374a:	f7f9 f915 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801374e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8013752:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8013756:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801375a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801375e:	bfd7      	itett	le
 8013760:	b29a      	uxthle	r2, r3
 8013762:	2201      	movgt	r2, #1
 8013764:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8013768:	fb91 f2f2 	sdivle	r2, r1, r2
 801376c:	9202      	str	r2, [sp, #8]
 801376e:	9802      	ldr	r0, [sp, #8]
 8013770:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8013774:	fb92 f0f0 	sdiv	r0, r2, r0
 8013778:	b280      	uxth	r0, r0
 801377a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801377c:	9902      	ldr	r1, [sp, #8]
 801377e:	9802      	ldr	r0, [sp, #8]
 8013780:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8013782:	440c      	add	r4, r1
 8013784:	fb05 2510 	mls	r5, r5, r0, r2
 8013788:	fb15 f503 	smulbb	r5, r5, r3
 801378c:	3c01      	subs	r4, #1
 801378e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8013792:	fb94 f4f1 	sdiv	r4, r4, r1
 8013796:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801379a:	440d      	add	r5, r1
 801379c:	4419      	add	r1, r3
 801379e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 80137a2:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80137a6:	441a      	add	r2, r3
 80137a8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80137ac:	9306      	str	r3, [sp, #24]
 80137ae:	4bb3      	ldr	r3, [pc, #716]	@ (8013a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80137b0:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 80137b4:	6818      	ldr	r0, [r3, #0]
 80137b6:	6803      	ldr	r3, [r0, #0]
 80137b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80137ba:	4798      	blx	r3
 80137bc:	4bb0      	ldr	r3, [pc, #704]	@ (8013a80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80137be:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 80137c2:	881a      	ldrh	r2, [r3, #0]
 80137c4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80137c8:	9316      	str	r3, [sp, #88]	@ 0x58
 80137ca:	fb02 7101 	mla	r1, r2, r1, r7
 80137ce:	3401      	adds	r4, #1
 80137d0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80137d4:	b2a4      	uxth	r4, r4
 80137d6:	4356      	muls	r6, r2
 80137d8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80137dc:	00a4      	lsls	r4, r4, #2
 80137de:	920a      	str	r2, [sp, #40]	@ 0x28
 80137e0:	1d22      	adds	r2, r4, #4
 80137e2:	b2ad      	uxth	r5, r5
 80137e4:	9213      	str	r2, [sp, #76]	@ 0x4c
 80137e6:	4ba7      	ldr	r3, [pc, #668]	@ (8013a84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80137e8:	9a06      	ldr	r2, [sp, #24]
 80137ea:	2d00      	cmp	r5, #0
 80137ec:	bf0c      	ite	eq
 80137ee:	4611      	moveq	r1, r2
 80137f0:	2100      	movne	r1, #0
 80137f2:	2200      	movs	r2, #0
 80137f4:	eba3 030b 	sub.w	r3, r3, fp
 80137f8:	b289      	uxth	r1, r1
 80137fa:	920d      	str	r2, [sp, #52]	@ 0x34
 80137fc:	9317      	str	r3, [sp, #92]	@ 0x5c
 80137fe:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013800:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013802:	fa12 f383 	uxtah	r3, r2, r3
 8013806:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013808:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801380c:	3304      	adds	r3, #4
 801380e:	9308      	str	r3, [sp, #32]
 8013810:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8013812:	4543      	cmp	r3, r8
 8013814:	f240 8167 	bls.w	8013ae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8013818:	9a02      	ldr	r2, [sp, #8]
 801381a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801381e:	fbb5 f3f3 	udiv	r3, r5, r3
 8013822:	1ad3      	subs	r3, r2, r3
 8013824:	b29b      	uxth	r3, r3
 8013826:	9314      	str	r3, [sp, #80]	@ 0x50
 8013828:	9b08      	ldr	r3, [sp, #32]
 801382a:	9808      	ldr	r0, [sp, #32]
 801382c:	785a      	ldrb	r2, [r3, #1]
 801382e:	789b      	ldrb	r3, [r3, #2]
 8013830:	7800      	ldrb	r0, [r0, #0]
 8013832:	9010      	str	r0, [sp, #64]	@ 0x40
 8013834:	021b      	lsls	r3, r3, #8
 8013836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801383a:	9a08      	ldr	r2, [sp, #32]
 801383c:	78d2      	ldrb	r2, [r2, #3]
 801383e:	4313      	orrs	r3, r2
 8013840:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013842:	3001      	adds	r0, #1
 8013844:	441a      	add	r2, r3
 8013846:	9007      	str	r0, [sp, #28]
 8013848:	1c50      	adds	r0, r2, #1
 801384a:	9005      	str	r0, [sp, #20]
 801384c:	7852      	ldrb	r2, [r2, #1]
 801384e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013850:	0212      	lsls	r2, r2, #8
 8013852:	5cc3      	ldrb	r3, [r0, r3]
 8013854:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8013858:	431a      	orrs	r2, r3
 801385a:	b293      	uxth	r3, r2
 801385c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801385e:	2300      	movs	r3, #0
 8013860:	9309      	str	r3, [sp, #36]	@ 0x24
 8013862:	2301      	movs	r3, #1
 8013864:	9301      	str	r3, [sp, #4]
 8013866:	9304      	str	r3, [sp, #16]
 8013868:	2300      	movs	r3, #0
 801386a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801386e:	9303      	str	r3, [sp, #12]
 8013870:	f04f 0e01 	mov.w	lr, #1
 8013874:	2d00      	cmp	r5, #0
 8013876:	d07c      	beq.n	8013972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8013878:	45ae      	cmp	lr, r5
 801387a:	d26b      	bcs.n	8013954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801387c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801387e:	eba5 050e 	sub.w	r5, r5, lr
 8013882:	4543      	cmp	r3, r8
 8013884:	b2ad      	uxth	r5, r5
 8013886:	460c      	mov	r4, r1
 8013888:	d802      	bhi.n	8013890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801388a:	e070      	b.n	801396e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801388c:	2b00      	cmp	r3, #0
 801388e:	d15c      	bne.n	801394a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8013890:	9b05      	ldr	r3, [sp, #20]
 8013892:	9a04      	ldr	r2, [sp, #16]
 8013894:	785b      	ldrb	r3, [r3, #1]
 8013896:	9904      	ldr	r1, [sp, #16]
 8013898:	f1c2 0207 	rsb	r2, r2, #7
 801389c:	4093      	lsls	r3, r2
 801389e:	005b      	lsls	r3, r3, #1
 80138a0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80138a4:	9b05      	ldr	r3, [sp, #20]
 80138a6:	781b      	ldrb	r3, [r3, #0]
 80138a8:	410b      	asrs	r3, r1
 80138aa:	3101      	adds	r1, #1
 80138ac:	b2c9      	uxtb	r1, r1
 80138ae:	2908      	cmp	r1, #8
 80138b0:	9104      	str	r1, [sp, #16]
 80138b2:	9905      	ldr	r1, [sp, #20]
 80138b4:	bf0a      	itet	eq
 80138b6:	3102      	addeq	r1, #2
 80138b8:	3101      	addne	r1, #1
 80138ba:	9105      	streq	r1, [sp, #20]
 80138bc:	b2db      	uxtb	r3, r3
 80138be:	bf0a      	itet	eq
 80138c0:	2100      	moveq	r1, #0
 80138c2:	9105      	strne	r1, [sp, #20]
 80138c4:	9104      	streq	r1, [sp, #16]
 80138c6:	4313      	orrs	r3, r2
 80138c8:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80138ca:	b29a      	uxth	r2, r3
 80138cc:	4291      	cmp	r1, r2
 80138ce:	d30a      	bcc.n	80138e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 80138d0:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 80138d4:	2301      	movs	r3, #1
 80138d6:	9907      	ldr	r1, [sp, #28]
 80138d8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80138dc:	d30f      	bcc.n	80138fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80138de:	2100      	movs	r1, #0
 80138e0:	9301      	str	r3, [sp, #4]
 80138e2:	9103      	str	r1, [sp, #12]
 80138e4:	e032      	b.n	801394c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80138e6:	9b07      	ldr	r3, [sp, #28]
 80138e8:	429a      	cmp	r2, r3
 80138ea:	d318      	bcc.n	801391e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 80138ec:	9b01      	ldr	r3, [sp, #4]
 80138ee:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 80138f2:	445b      	add	r3, fp
 80138f4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80138f8:	9b01      	ldr	r3, [sp, #4]
 80138fa:	3301      	adds	r3, #1
 80138fc:	b29b      	uxth	r3, r3
 80138fe:	9907      	ldr	r1, [sp, #28]
 8013900:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8013904:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013908:	7108      	strb	r0, [r1, #4]
 801390a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801390c:	80c8      	strh	r0, [r1, #6]
 801390e:	9801      	ldr	r0, [sp, #4]
 8013910:	3001      	adds	r0, #1
 8013912:	7148      	strb	r0, [r1, #5]
 8013914:	9907      	ldr	r1, [sp, #28]
 8013916:	3101      	adds	r1, #1
 8013918:	b289      	uxth	r1, r1
 801391a:	9107      	str	r1, [sp, #28]
 801391c:	e7df      	b.n	80138de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801391e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8013922:	4611      	mov	r1, r2
 8013924:	795b      	ldrb	r3, [r3, #5]
 8013926:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801392a:	4458      	add	r0, fp
 801392c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801392e:	4406      	add	r6, r0
 8013930:	2e00      	cmp	r6, #0
 8013932:	dd06      	ble.n	8013942 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8013934:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8013938:	790e      	ldrb	r6, [r1, #4]
 801393a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801393e:	88c9      	ldrh	r1, [r1, #6]
 8013940:	e7f4      	b.n	801392c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8013942:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8013946:	b29b      	uxth	r3, r3
 8013948:	e7c5      	b.n	80138d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801394a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801394c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801394e:	4621      	mov	r1, r4
 8013950:	469e      	mov	lr, r3
 8013952:	e78f      	b.n	8013874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8013954:	9a03      	ldr	r2, [sp, #12]
 8013956:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801395a:	442a      	add	r2, r5
 801395c:	ebae 0305 	sub.w	r3, lr, r5
 8013960:	b292      	uxth	r2, r2
 8013962:	b29b      	uxth	r3, r3
 8013964:	9203      	str	r2, [sp, #12]
 8013966:	2500      	movs	r5, #0
 8013968:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801396a:	4542      	cmp	r2, r8
 801396c:	d88e      	bhi.n	801388c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801396e:	4621      	mov	r1, r4
 8013970:	e74e      	b.n	8013810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8013972:	458e      	cmp	lr, r1
 8013974:	bf29      	itett	cs
 8013976:	ebae 0301 	subcs.w	r3, lr, r1
 801397a:	eba1 040e 	subcc.w	r4, r1, lr
 801397e:	b29b      	uxthcs	r3, r3
 8013980:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8013982:	bf2f      	iteee	cs
 8013984:	462c      	movcs	r4, r5
 8013986:	b2a4      	uxthcc	r4, r4
 8013988:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801398c:	462b      	movcc	r3, r5
 801398e:	f04f 0900 	mov.w	r9, #0
 8013992:	9a03      	ldr	r2, [sp, #12]
 8013994:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8013996:	444a      	add	r2, r9
 8013998:	4548      	cmp	r0, r9
 801399a:	b292      	uxth	r2, r2
 801399c:	d074      	beq.n	8013a88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801399e:	445a      	add	r2, fp
 80139a0:	2004      	movs	r0, #4
 80139a2:	4605      	mov	r5, r0
 80139a4:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 80139a8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139aa:	fb15 0202 	smlabb	r2, r5, r2, r0
 80139ae:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80139b0:	5880      	ldr	r0, [r0, r2]
 80139b2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80139b6:	d014      	beq.n	80139e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80139b8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80139bc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 80139c0:	d112      	bne.n	80139e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80139c2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80139c4:	2aff      	cmp	r2, #255	@ 0xff
 80139c6:	d10f      	bne.n	80139e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80139c8:	0942      	lsrs	r2, r0, #5
 80139ca:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80139ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80139d2:	f025 0507 	bic.w	r5, r5, #7
 80139d6:	4315      	orrs	r5, r2
 80139d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80139dc:	4305      	orrs	r5, r0
 80139de:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80139e2:	f109 0901 	add.w	r9, r9, #1
 80139e6:	e7d4      	b.n	8013992 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 80139e8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80139ec:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80139f0:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80139f4:	9215      	str	r2, [sp, #84]	@ 0x54
 80139f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80139f8:	fb02 fa0a 	mul.w	sl, r2, sl
 80139fc:	f10a 0201 	add.w	r2, sl, #1
 8013a00:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8013a04:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013a08:	1212      	asrs	r2, r2, #8
 8013a0a:	fa1f fa82 	uxth.w	sl, r2
 8013a0e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8013a12:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013a16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013a1a:	43d2      	mvns	r2, r2
 8013a1c:	b2d2      	uxtb	r2, r2
 8013a1e:	fb16 f60a 	smulbb	r6, r6, sl
 8013a22:	fa5f fc8c 	uxtb.w	ip, ip
 8013a26:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013a2a:	b2c0      	uxtb	r0, r0
 8013a2c:	fb07 6702 	mla	r7, r7, r2, r6
 8013a30:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8013a34:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8013a36:	fb10 f00a 	smulbb	r0, r0, sl
 8013a3a:	fb0c 0002 	mla	r0, ip, r2, r0
 8013a3e:	b2ed      	uxtb	r5, r5
 8013a40:	b2bf      	uxth	r7, r7
 8013a42:	fb15 f50a 	smulbb	r5, r5, sl
 8013a46:	b280      	uxth	r0, r0
 8013a48:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013a4c:	fb06 5602 	mla	r6, r6, r2, r5
 8013a50:	1c7a      	adds	r2, r7, #1
 8013a52:	1c45      	adds	r5, r0, #1
 8013a54:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013a58:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013a5c:	b2b6      	uxth	r6, r6
 8013a5e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013a62:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013a66:	432f      	orrs	r7, r5
 8013a68:	1c75      	adds	r5, r6, #1
 8013a6a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013a6e:	096d      	lsrs	r5, r5, #5
 8013a70:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013a74:	432f      	orrs	r7, r5
 8013a76:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8013a7a:	e7b2      	b.n	80139e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8013a7c:	20013288 	.word	0x20013288
 8013a80:	20013282 	.word	0x20013282
 8013a84:	fffff7fb 	.word	0xfffff7fb
 8013a88:	9203      	str	r2, [sp, #12]
 8013a8a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013a8c:	458e      	cmp	lr, r1
 8013a8e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8013a92:	f4ff af68 	bcc.w	8013966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8013a96:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8013a98:	9906      	ldr	r1, [sp, #24]
 8013a9a:	8812      	ldrh	r2, [r2, #0]
 8013a9c:	1a52      	subs	r2, r2, r1
 8013a9e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8013aa2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013aa4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8013aa6:	3201      	adds	r2, #1
 8013aa8:	428a      	cmp	r2, r1
 8013aaa:	9209      	str	r2, [sp, #36]	@ 0x24
 8013aac:	d111      	bne.n	8013ad2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8013aae:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8013ab2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8013ab6:	9b06      	ldr	r3, [sp, #24]
 8013ab8:	eba5 0509 	sub.w	r5, r5, r9
 8013abc:	b2ad      	uxth	r5, r5
 8013abe:	2d00      	cmp	r5, #0
 8013ac0:	bf08      	it	eq
 8013ac2:	4619      	moveq	r1, r3
 8013ac4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013ac6:	bf18      	it	ne
 8013ac8:	2100      	movne	r1, #0
 8013aca:	3301      	adds	r3, #1
 8013acc:	930d      	str	r3, [sp, #52]	@ 0x34
 8013ace:	b289      	uxth	r1, r1
 8013ad0:	e695      	b.n	80137fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8013ad2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8013ad6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8013ada:	1b2d      	subs	r5, r5, r4
 8013adc:	b2ad      	uxth	r5, r5
 8013ade:	2d00      	cmp	r5, #0
 8013ae0:	bf18      	it	ne
 8013ae2:	2400      	movne	r4, #0
 8013ae4:	e740      	b.n	8013968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8013ae6:	4b04      	ldr	r3, [pc, #16]	@ (8013af8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8013ae8:	6818      	ldr	r0, [r3, #0]
 8013aea:	6803      	ldr	r3, [r0, #0]
 8013aec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013aee:	4798      	blx	r3
 8013af0:	b01d      	add	sp, #116	@ 0x74
 8013af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013af6:	bf00      	nop
 8013af8:	20013288 	.word	0x20013288

08013afc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8013afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b00:	b09f      	sub	sp, #124	@ 0x7c
 8013b02:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8013b06:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8013b0a:	920a      	str	r2, [sp, #40]	@ 0x28
 8013b0c:	461d      	mov	r5, r3
 8013b0e:	4604      	mov	r4, r0
 8013b10:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8013b12:	2a00      	cmp	r2, #0
 8013b14:	f000 81fa 	beq.w	8013f0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8013b18:	6828      	ldr	r0, [r5, #0]
 8013b1a:	6869      	ldr	r1, [r5, #4]
 8013b1c:	aa1a      	add	r2, sp, #104	@ 0x68
 8013b1e:	c203      	stmia	r2!, {r0, r1}
 8013b20:	6818      	ldr	r0, [r3, #0]
 8013b22:	6859      	ldr	r1, [r3, #4]
 8013b24:	aa1c      	add	r2, sp, #112	@ 0x70
 8013b26:	c203      	stmia	r2!, {r0, r1}
 8013b28:	a81a      	add	r0, sp, #104	@ 0x68
 8013b2a:	f7f8 fefd 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013b2e:	4629      	mov	r1, r5
 8013b30:	a81c      	add	r0, sp, #112	@ 0x70
 8013b32:	f7f8 ff21 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013b36:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8013b3a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8013b3e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8013b42:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013b46:	bfd7      	itett	le
 8013b48:	b29a      	uxthle	r2, r3
 8013b4a:	2201      	movgt	r2, #1
 8013b4c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8013b50:	fb91 f2f2 	sdivle	r2, r1, r2
 8013b54:	9201      	str	r2, [sp, #4]
 8013b56:	9801      	ldr	r0, [sp, #4]
 8013b58:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8013b5c:	fb92 f0f0 	sdiv	r0, r2, r0
 8013b60:	b280      	uxth	r0, r0
 8013b62:	9010      	str	r0, [sp, #64]	@ 0x40
 8013b64:	9901      	ldr	r1, [sp, #4]
 8013b66:	9801      	ldr	r0, [sp, #4]
 8013b68:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8013b6a:	440e      	add	r6, r1
 8013b6c:	fb05 2510 	mls	r5, r5, r0, r2
 8013b70:	fb15 f503 	smulbb	r5, r5, r3
 8013b74:	3e01      	subs	r6, #1
 8013b76:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8013b7a:	fb96 f6f1 	sdiv	r6, r6, r1
 8013b7e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8013b82:	440d      	add	r5, r1
 8013b84:	4419      	add	r1, r3
 8013b86:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8013b8a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8013b8e:	441a      	add	r2, r3
 8013b90:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8013b94:	9304      	str	r3, [sp, #16]
 8013b96:	4b96      	ldr	r3, [pc, #600]	@ (8013df0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8013b98:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8013b9c:	6818      	ldr	r0, [r3, #0]
 8013b9e:	6803      	ldr	r3, [r0, #0]
 8013ba0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013ba2:	4798      	blx	r3
 8013ba4:	4b93      	ldr	r3, [pc, #588]	@ (8013df4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8013ba6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8013baa:	881a      	ldrh	r2, [r3, #0]
 8013bac:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8013bb0:	9318      	str	r3, [sp, #96]	@ 0x60
 8013bb2:	fb02 c101 	mla	r1, r2, r1, ip
 8013bb6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8013bba:	4357      	muls	r7, r2
 8013bbc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8013bc0:	3601      	adds	r6, #1
 8013bc2:	920b      	str	r2, [sp, #44]	@ 0x2c
 8013bc4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013bc6:	4b8c      	ldr	r3, [pc, #560]	@ (8013df8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8013bc8:	b2b6      	uxth	r6, r6
 8013bca:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8013bce:	1d32      	adds	r2, r6, #4
 8013bd0:	9206      	str	r2, [sp, #24]
 8013bd2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013bd4:	43d2      	mvns	r2, r2
 8013bd6:	b2d2      	uxtb	r2, r2
 8013bd8:	b2ad      	uxth	r5, r5
 8013bda:	9215      	str	r2, [sp, #84]	@ 0x54
 8013bdc:	9a04      	ldr	r2, [sp, #16]
 8013bde:	2d00      	cmp	r5, #0
 8013be0:	bf0c      	ite	eq
 8013be2:	4611      	moveq	r1, r2
 8013be4:	2100      	movne	r1, #0
 8013be6:	2200      	movs	r2, #0
 8013be8:	1b1b      	subs	r3, r3, r4
 8013bea:	b289      	uxth	r1, r1
 8013bec:	920d      	str	r2, [sp, #52]	@ 0x34
 8013bee:	9319      	str	r3, [sp, #100]	@ 0x64
 8013bf0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013bf2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013bf4:	fa12 f383 	uxtah	r3, r2, r3
 8013bf8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013bfa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013bfe:	3304      	adds	r3, #4
 8013c00:	9307      	str	r3, [sp, #28]
 8013c02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013c04:	455b      	cmp	r3, fp
 8013c06:	f240 817c 	bls.w	8013f02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8013c0a:	9a01      	ldr	r2, [sp, #4]
 8013c0c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8013c10:	fbb5 f3f3 	udiv	r3, r5, r3
 8013c14:	1ad3      	subs	r3, r2, r3
 8013c16:	b29b      	uxth	r3, r3
 8013c18:	9316      	str	r3, [sp, #88]	@ 0x58
 8013c1a:	9b07      	ldr	r3, [sp, #28]
 8013c1c:	9807      	ldr	r0, [sp, #28]
 8013c1e:	785a      	ldrb	r2, [r3, #1]
 8013c20:	789b      	ldrb	r3, [r3, #2]
 8013c22:	7800      	ldrb	r0, [r0, #0]
 8013c24:	9011      	str	r0, [sp, #68]	@ 0x44
 8013c26:	021b      	lsls	r3, r3, #8
 8013c28:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8013c2c:	9a07      	ldr	r2, [sp, #28]
 8013c2e:	78d2      	ldrb	r2, [r2, #3]
 8013c30:	4313      	orrs	r3, r2
 8013c32:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013c34:	3001      	adds	r0, #1
 8013c36:	441a      	add	r2, r3
 8013c38:	9005      	str	r0, [sp, #20]
 8013c3a:	1c50      	adds	r0, r2, #1
 8013c3c:	9003      	str	r0, [sp, #12]
 8013c3e:	7852      	ldrb	r2, [r2, #1]
 8013c40:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013c42:	0212      	lsls	r2, r2, #8
 8013c44:	5cc3      	ldrb	r3, [r0, r3]
 8013c46:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8013c4a:	431a      	orrs	r2, r3
 8013c4c:	b293      	uxth	r3, r2
 8013c4e:	930c      	str	r3, [sp, #48]	@ 0x30
 8013c50:	2300      	movs	r3, #0
 8013c52:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8013c56:	9308      	str	r3, [sp, #32]
 8013c58:	461a      	mov	r2, r3
 8013c5a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8013c5e:	930e      	str	r3, [sp, #56]	@ 0x38
 8013c60:	f04f 0801 	mov.w	r8, #1
 8013c64:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8013c68:	f8cd 8008 	str.w	r8, [sp, #8]
 8013c6c:	46c4      	mov	ip, r8
 8013c6e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8013c70:	2d00      	cmp	r5, #0
 8013c72:	d07c      	beq.n	8013d6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8013c74:	45ac      	cmp	ip, r5
 8013c76:	d26c      	bcs.n	8013d52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8013c78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013c7a:	eba5 050c 	sub.w	r5, r5, ip
 8013c7e:	455b      	cmp	r3, fp
 8013c80:	b2ad      	uxth	r5, r5
 8013c82:	4608      	mov	r0, r1
 8013c84:	d802      	bhi.n	8013c8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8013c86:	e070      	b.n	8013d6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8013c88:	2b00      	cmp	r3, #0
 8013c8a:	d15c      	bne.n	8013d46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8013c8c:	9b03      	ldr	r3, [sp, #12]
 8013c8e:	9a02      	ldr	r2, [sp, #8]
 8013c90:	785b      	ldrb	r3, [r3, #1]
 8013c92:	9902      	ldr	r1, [sp, #8]
 8013c94:	f1c2 0207 	rsb	r2, r2, #7
 8013c98:	4093      	lsls	r3, r2
 8013c9a:	005b      	lsls	r3, r3, #1
 8013c9c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8013ca0:	9b03      	ldr	r3, [sp, #12]
 8013ca2:	781b      	ldrb	r3, [r3, #0]
 8013ca4:	410b      	asrs	r3, r1
 8013ca6:	3101      	adds	r1, #1
 8013ca8:	b2c9      	uxtb	r1, r1
 8013caa:	2908      	cmp	r1, #8
 8013cac:	9102      	str	r1, [sp, #8]
 8013cae:	9903      	ldr	r1, [sp, #12]
 8013cb0:	bf0a      	itet	eq
 8013cb2:	3102      	addeq	r1, #2
 8013cb4:	3101      	addne	r1, #1
 8013cb6:	9103      	streq	r1, [sp, #12]
 8013cb8:	b2db      	uxtb	r3, r3
 8013cba:	bf0a      	itet	eq
 8013cbc:	2100      	moveq	r1, #0
 8013cbe:	9103      	strne	r1, [sp, #12]
 8013cc0:	9102      	streq	r1, [sp, #8]
 8013cc2:	4313      	orrs	r3, r2
 8013cc4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8013cc6:	b29a      	uxth	r2, r3
 8013cc8:	4291      	cmp	r1, r2
 8013cca:	d30a      	bcc.n	8013ce2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8013ccc:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8013cd0:	2301      	movs	r3, #1
 8013cd2:	9905      	ldr	r1, [sp, #20]
 8013cd4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8013cd8:	d30f      	bcc.n	8013cfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8013cda:	2100      	movs	r1, #0
 8013cdc:	4698      	mov	r8, r3
 8013cde:	9100      	str	r1, [sp, #0]
 8013ce0:	e032      	b.n	8013d48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8013ce2:	9b05      	ldr	r3, [sp, #20]
 8013ce4:	429a      	cmp	r2, r3
 8013ce6:	d318      	bcc.n	8013d1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8013ce8:	eb04 0308 	add.w	r3, r4, r8
 8013cec:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8013cf0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8013cf4:	f108 0301 	add.w	r3, r8, #1
 8013cf8:	b29b      	uxth	r3, r3
 8013cfa:	9905      	ldr	r1, [sp, #20]
 8013cfc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8013d00:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013d04:	710e      	strb	r6, [r1, #4]
 8013d06:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8013d08:	80ce      	strh	r6, [r1, #6]
 8013d0a:	f108 0601 	add.w	r6, r8, #1
 8013d0e:	714e      	strb	r6, [r1, #5]
 8013d10:	9905      	ldr	r1, [sp, #20]
 8013d12:	3101      	adds	r1, #1
 8013d14:	b289      	uxth	r1, r1
 8013d16:	9105      	str	r1, [sp, #20]
 8013d18:	e7df      	b.n	8013cda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8013d1a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8013d1e:	4611      	mov	r1, r2
 8013d20:	795b      	ldrb	r3, [r3, #5]
 8013d22:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8013d26:	4426      	add	r6, r4
 8013d28:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8013d2a:	4437      	add	r7, r6
 8013d2c:	2f00      	cmp	r7, #0
 8013d2e:	dd06      	ble.n	8013d3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8013d30:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8013d34:	790f      	ldrb	r7, [r1, #4]
 8013d36:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8013d3a:	88c9      	ldrh	r1, [r1, #6]
 8013d3c:	e7f4      	b.n	8013d28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8013d3e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8013d42:	b29b      	uxth	r3, r3
 8013d44:	e7c5      	b.n	8013cd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8013d46:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013d48:	920c      	str	r2, [sp, #48]	@ 0x30
 8013d4a:	4601      	mov	r1, r0
 8013d4c:	9a00      	ldr	r2, [sp, #0]
 8013d4e:	469c      	mov	ip, r3
 8013d50:	e78e      	b.n	8013c70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8013d52:	1957      	adds	r7, r2, r5
 8013d54:	ebac 0305 	sub.w	r3, ip, r5
 8013d58:	b2ba      	uxth	r2, r7
 8013d5a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8013d5e:	9200      	str	r2, [sp, #0]
 8013d60:	b29b      	uxth	r3, r3
 8013d62:	2500      	movs	r5, #0
 8013d64:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013d66:	455a      	cmp	r2, fp
 8013d68:	d88e      	bhi.n	8013c88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8013d6a:	4601      	mov	r1, r0
 8013d6c:	e749      	b.n	8013c02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8013d6e:	458c      	cmp	ip, r1
 8013d70:	bf2c      	ite	cs
 8013d72:	4628      	movcs	r0, r5
 8013d74:	462b      	movcc	r3, r5
 8013d76:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8013d78:	bf27      	ittee	cs
 8013d7a:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8013d7c:	ebac 0301 	subcs.w	r3, ip, r1
 8013d80:	eba1 000c 	subcc.w	r0, r1, ip
 8013d84:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8013d88:	bf2c      	ite	cs
 8013d8a:	b29b      	uxthcs	r3, r3
 8013d8c:	b280      	uxthcc	r0, r0
 8013d8e:	2dff      	cmp	r5, #255	@ 0xff
 8013d90:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8013d92:	eb02 0705 	add.w	r7, r2, r5
 8013d96:	b2bd      	uxth	r5, r7
 8013d98:	9500      	str	r5, [sp, #0]
 8013d9a:	d12f      	bne.n	8013dfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8013d9c:	465e      	mov	r6, fp
 8013d9e:	9d00      	ldr	r5, [sp, #0]
 8013da0:	42aa      	cmp	r2, r5
 8013da2:	f040 8084 	bne.w	8013eae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8013da6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013da8:	458c      	cmp	ip, r1
 8013daa:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8013dae:	d3d8      	bcc.n	8013d62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8013db0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8013db2:	9904      	ldr	r1, [sp, #16]
 8013db4:	8812      	ldrh	r2, [r2, #0]
 8013db6:	1a52      	subs	r2, r2, r1
 8013db8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8013dbc:	9a08      	ldr	r2, [sp, #32]
 8013dbe:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8013dc0:	3201      	adds	r2, #1
 8013dc2:	428a      	cmp	r2, r1
 8013dc4:	9208      	str	r2, [sp, #32]
 8013dc6:	f040 8092 	bne.w	8013eee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8013dca:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8013dce:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8013dd2:	9b04      	ldr	r3, [sp, #16]
 8013dd4:	eba5 050c 	sub.w	r5, r5, ip
 8013dd8:	b2ad      	uxth	r5, r5
 8013dda:	2d00      	cmp	r5, #0
 8013ddc:	bf08      	it	eq
 8013dde:	4619      	moveq	r1, r3
 8013de0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013de2:	bf18      	it	ne
 8013de4:	2100      	movne	r1, #0
 8013de6:	3301      	adds	r3, #1
 8013de8:	930d      	str	r3, [sp, #52]	@ 0x34
 8013dea:	b289      	uxth	r1, r1
 8013dec:	e700      	b.n	8013bf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8013dee:	bf00      	nop
 8013df0:	20013288 	.word	0x20013288
 8013df4:	20013282 	.word	0x20013282
 8013df8:	fffff7fb 	.word	0xfffff7fb
 8013dfc:	46d9      	mov	r9, fp
 8013dfe:	9d00      	ldr	r5, [sp, #0]
 8013e00:	42aa      	cmp	r2, r5
 8013e02:	d0d0      	beq.n	8013da6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8013e04:	1c55      	adds	r5, r2, #1
 8013e06:	4422      	add	r2, r4
 8013e08:	9517      	str	r5, [sp, #92]	@ 0x5c
 8013e0a:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8013e0e:	9a06      	ldr	r2, [sp, #24]
 8013e10:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013e14:	4472      	add	r2, lr
 8013e16:	9212      	str	r2, [sp, #72]	@ 0x48
 8013e18:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013e1a:	f8b9 2000 	ldrh.w	r2, [r9]
 8013e1e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8013e22:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8013e24:	1216      	asrs	r6, r2, #8
 8013e26:	fb1a fa07 	smulbb	sl, sl, r7
 8013e2a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013e2e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8013e30:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013e34:	fb06 a607 	mla	r6, r6, r7, sl
 8013e38:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013e3a:	f897 a001 	ldrb.w	sl, [r7, #1]
 8013e3e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8013e40:	10d5      	asrs	r5, r2, #3
 8013e42:	fb1a fa07 	smulbb	sl, sl, r7
 8013e46:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8013e4a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8013e4c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013e50:	fb05 a507 	mla	r5, r5, r7, sl
 8013e54:	9f06      	ldr	r7, [sp, #24]
 8013e56:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8013e5a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8013e5c:	00d2      	lsls	r2, r2, #3
 8013e5e:	fb1e fe07 	smulbb	lr, lr, r7
 8013e62:	b2d2      	uxtb	r2, r2
 8013e64:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8013e66:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013e6a:	b2b6      	uxth	r6, r6
 8013e6c:	fb02 e207 	mla	r2, r2, r7, lr
 8013e70:	b292      	uxth	r2, r2
 8013e72:	b2ad      	uxth	r5, r5
 8013e74:	f106 0a01 	add.w	sl, r6, #1
 8013e78:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013e7c:	f102 0e01 	add.w	lr, r2, #1
 8013e80:	f105 0a01 	add.w	sl, r5, #1
 8013e84:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8013e88:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e8c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8013e90:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013e94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e98:	ea4e 0606 	orr.w	r6, lr, r6
 8013e9c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013ea0:	ea46 060a 	orr.w	r6, r6, sl
 8013ea4:	f829 6b02 	strh.w	r6, [r9], #2
 8013ea8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8013eac:	e7a7      	b.n	8013dfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8013eae:	f102 0e01 	add.w	lr, r2, #1
 8013eb2:	4422      	add	r2, r4
 8013eb4:	9f06      	ldr	r7, [sp, #24]
 8013eb6:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8013eba:	9a06      	ldr	r2, [sp, #24]
 8013ebc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013ec0:	eb02 0a05 	add.w	sl, r2, r5
 8013ec4:	4a13      	ldr	r2, [pc, #76]	@ (8013f14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8013ec6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8013eca:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8013ece:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013ed2:	00d2      	lsls	r2, r2, #3
 8013ed4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013ed8:	ea49 0202 	orr.w	r2, r9, r2
 8013edc:	f817 9005 	ldrb.w	r9, [r7, r5]
 8013ee0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8013ee4:	f826 2b02 	strh.w	r2, [r6], #2
 8013ee8:	fa1f f28e 	uxth.w	r2, lr
 8013eec:	e757      	b.n	8013d9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8013eee:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8013ef2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8013ef6:	1a2d      	subs	r5, r5, r0
 8013ef8:	b2ad      	uxth	r5, r5
 8013efa:	2d00      	cmp	r5, #0
 8013efc:	bf18      	it	ne
 8013efe:	2000      	movne	r0, #0
 8013f00:	e730      	b.n	8013d64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8013f02:	4b05      	ldr	r3, [pc, #20]	@ (8013f18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8013f04:	6818      	ldr	r0, [r3, #0]
 8013f06:	6803      	ldr	r3, [r0, #0]
 8013f08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013f0a:	4798      	blx	r3
 8013f0c:	b01f      	add	sp, #124	@ 0x7c
 8013f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f12:	bf00      	nop
 8013f14:	fffff800 	.word	0xfffff800
 8013f18:	20013288 	.word	0x20013288

08013f1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8013f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f20:	b091      	sub	sp, #68	@ 0x44
 8013f22:	469b      	mov	fp, r3
 8013f24:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8013f28:	4616      	mov	r6, r2
 8013f2a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8013f2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f32:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8013f36:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013f3a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8013f3e:	4604      	mov	r4, r0
 8013f40:	460d      	mov	r5, r1
 8013f42:	4640      	mov	r0, r8
 8013f44:	4659      	mov	r1, fp
 8013f46:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8013f4a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8013f4e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8013f52:	f7f5 fc2b 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8013f56:	4631      	mov	r1, r6
 8013f58:	4640      	mov	r0, r8
 8013f5a:	f7f5 fc27 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8013f5e:	4b74      	ldr	r3, [pc, #464]	@ (8014130 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8013f60:	8818      	ldrh	r0, [r3, #0]
 8013f62:	4b74      	ldr	r3, [pc, #464]	@ (8014134 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8013f64:	8819      	ldrh	r1, [r3, #0]
 8013f66:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8013f6a:	2b00      	cmp	r3, #0
 8013f6c:	b202      	sxth	r2, r0
 8013f6e:	b20e      	sxth	r6, r1
 8013f70:	da07      	bge.n	8013f82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8013f72:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8013f76:	4463      	add	r3, ip
 8013f78:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8013f7c:	2300      	movs	r3, #0
 8013f7e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8013f82:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8013f86:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8013f8a:	1ad2      	subs	r2, r2, r3
 8013f8c:	4594      	cmp	ip, r2
 8013f8e:	bfc4      	itt	gt
 8013f90:	1ac2      	subgt	r2, r0, r3
 8013f92:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8013f96:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8013f9a:	2a00      	cmp	r2, #0
 8013f9c:	da07      	bge.n	8013fae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8013f9e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8013fa2:	4462      	add	r2, ip
 8013fa4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8013fa8:	2200      	movs	r2, #0
 8013faa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8013fae:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8013fb2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8013fb6:	eba6 060a 	sub.w	r6, r6, sl
 8013fba:	42b2      	cmp	r2, r6
 8013fbc:	bfc4      	itt	gt
 8013fbe:	eba1 020a 	subgt.w	r2, r1, sl
 8013fc2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8013fc6:	4a5c      	ldr	r2, [pc, #368]	@ (8014138 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8013fc8:	7812      	ldrb	r2, [r2, #0]
 8013fca:	b9a2      	cbnz	r2, 8013ff6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8013fcc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8013fd0:	4286      	cmp	r6, r0
 8013fd2:	4640      	mov	r0, r8
 8013fd4:	9303      	str	r3, [sp, #12]
 8013fd6:	bf14      	ite	ne
 8013fd8:	2600      	movne	r6, #0
 8013fda:	2601      	moveq	r6, #1
 8013fdc:	f7f5 fc29 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013fe0:	9b03      	ldr	r3, [sp, #12]
 8013fe2:	b160      	cbz	r0, 8013ffe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8013fe4:	2300      	movs	r3, #0
 8013fe6:	8023      	strh	r3, [r4, #0]
 8013fe8:	8063      	strh	r3, [r4, #2]
 8013fea:	80a3      	strh	r3, [r4, #4]
 8013fec:	4620      	mov	r0, r4
 8013fee:	80e3      	strh	r3, [r4, #6]
 8013ff0:	b011      	add	sp, #68	@ 0x44
 8013ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ff6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8013ffa:	428e      	cmp	r6, r1
 8013ffc:	e7e9      	b.n	8013fd2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8013ffe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8014002:	9205      	str	r2, [sp, #20]
 8014004:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8014008:	9206      	str	r2, [sp, #24]
 801400a:	f8bb 2000 	ldrh.w	r2, [fp]
 801400e:	900e      	str	r0, [sp, #56]	@ 0x38
 8014010:	1a9b      	subs	r3, r3, r2
 8014012:	b21b      	sxth	r3, r3
 8014014:	9303      	str	r3, [sp, #12]
 8014016:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801401a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801401e:	ebaa 0a03 	sub.w	sl, sl, r3
 8014022:	fa0f f38a 	sxth.w	r3, sl
 8014026:	9304      	str	r3, [sp, #16]
 8014028:	9b03      	ldr	r3, [sp, #12]
 801402a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801402e:	9b04      	ldr	r3, [sp, #16]
 8014030:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8014034:	9b05      	ldr	r3, [sp, #20]
 8014036:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801403a:	a90e      	add	r1, sp, #56	@ 0x38
 801403c:	9b06      	ldr	r3, [sp, #24]
 801403e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8014042:	a80c      	add	r0, sp, #48	@ 0x30
 8014044:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8014048:	f7f8 fc96 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801404c:	4640      	mov	r0, r8
 801404e:	f7f8 fc6b 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014052:	a80e      	add	r0, sp, #56	@ 0x38
 8014054:	f7f8 fc68 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014058:	4b38      	ldr	r3, [pc, #224]	@ (801413c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801405a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801405e:	881b      	ldrh	r3, [r3, #0]
 8014060:	9307      	str	r3, [sp, #28]
 8014062:	682b      	ldr	r3, [r5, #0]
 8014064:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8014140 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8014068:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801406a:	4628      	mov	r0, r5
 801406c:	4798      	blx	r3
 801406e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8014072:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8014076:	4681      	mov	r9, r0
 8014078:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801407c:	f8db 0000 	ldr.w	r0, [fp]
 8014080:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8014082:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014086:	6803      	ldr	r3, [r0, #0]
 8014088:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801408a:	4798      	blx	r3
 801408c:	4607      	mov	r7, r0
 801408e:	f8db 0000 	ldr.w	r0, [fp]
 8014092:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8014096:	6803      	ldr	r3, [r0, #0]
 8014098:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801409c:	9109      	str	r1, [sp, #36]	@ 0x24
 801409e:	9208      	str	r2, [sp, #32]
 80140a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80140a2:	4798      	blx	r3
 80140a4:	f010 0f01 	tst.w	r0, #1
 80140a8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80140ac:	d012      	beq.n	80140d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80140ae:	f8db 0000 	ldr.w	r0, [fp]
 80140b2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80140b6:	6803      	ldr	r3, [r0, #0]
 80140b8:	9200      	str	r2, [sp, #0]
 80140ba:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80140bc:	e898 0006 	ldmia.w	r8, {r1, r2}
 80140c0:	462b      	mov	r3, r5
 80140c2:	47b0      	blx	r6
 80140c4:	9b03      	ldr	r3, [sp, #12]
 80140c6:	8023      	strh	r3, [r4, #0]
 80140c8:	9b04      	ldr	r3, [sp, #16]
 80140ca:	8063      	strh	r3, [r4, #2]
 80140cc:	9b05      	ldr	r3, [sp, #20]
 80140ce:	80a3      	strh	r3, [r4, #4]
 80140d0:	9b06      	ldr	r3, [sp, #24]
 80140d2:	e78b      	b.n	8013fec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80140d4:	fb09 f202 	mul.w	r2, r9, r2
 80140d8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80140dc:	440f      	add	r7, r1
 80140de:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80140e2:	b166      	cbz	r6, 80140fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80140e4:	9a07      	ldr	r2, [sp, #28]
 80140e6:	4592      	cmp	sl, r2
 80140e8:	d109      	bne.n	80140fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80140ea:	f8db 0000 	ldr.w	r0, [fp]
 80140ee:	6802      	ldr	r2, [r0, #0]
 80140f0:	fb09 f303 	mul.w	r3, r9, r3
 80140f4:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 80140f6:	4629      	mov	r1, r5
 80140f8:	463a      	mov	r2, r7
 80140fa:	47b0      	blx	r6
 80140fc:	e7e2      	b.n	80140c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80140fe:	fb0a f303 	mul.w	r3, sl, r3
 8014102:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8014140 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8014106:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801410a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801410e:	4545      	cmp	r5, r8
 8014110:	d2d8      	bcs.n	80140c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8014112:	f8db 0000 	ldr.w	r0, [fp]
 8014116:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801411a:	6802      	ldr	r2, [r0, #0]
 801411c:	4629      	mov	r1, r5
 801411e:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8014122:	005b      	lsls	r3, r3, #1
 8014124:	463a      	mov	r2, r7
 8014126:	47d0      	blx	sl
 8014128:	444f      	add	r7, r9
 801412a:	4435      	add	r5, r6
 801412c:	e7ef      	b.n	801410e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801412e:	bf00      	nop
 8014130:	2001327c 	.word	0x2001327c
 8014134:	2001327e 	.word	0x2001327e
 8014138:	20013280 	.word	0x20013280
 801413c:	20013282 	.word	0x20013282
 8014140:	20013288 	.word	0x20013288

08014144 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8014144:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014146:	4606      	mov	r6, r0
 8014148:	b087      	sub	sp, #28
 801414a:	460c      	mov	r4, r1
 801414c:	4617      	mov	r7, r2
 801414e:	461d      	mov	r5, r3
 8014150:	b333      	cbz	r3, 80141a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014152:	4608      	mov	r0, r1
 8014154:	f7f5 fb6d 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014158:	bb10      	cbnz	r0, 80141a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801415a:	6820      	ldr	r0, [r4, #0]
 801415c:	6861      	ldr	r1, [r4, #4]
 801415e:	4c1c      	ldr	r4, [pc, #112]	@ (80141d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8014160:	ab04      	add	r3, sp, #16
 8014162:	c303      	stmia	r3!, {r0, r1}
 8014164:	a804      	add	r0, sp, #16
 8014166:	f7f8 fbdf 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801416a:	6820      	ldr	r0, [r4, #0]
 801416c:	6803      	ldr	r3, [r0, #0]
 801416e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014170:	4798      	blx	r3
 8014172:	2dff      	cmp	r5, #255	@ 0xff
 8014174:	d016      	beq.n	80141a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8014176:	f010 0f08 	tst.w	r0, #8
 801417a:	6820      	ldr	r0, [r4, #0]
 801417c:	d015      	beq.n	80141aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801417e:	2400      	movs	r4, #0
 8014180:	6801      	ldr	r1, [r0, #0]
 8014182:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014186:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801418a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801418e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8014192:	9401      	str	r4, [sp, #4]
 8014194:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8014198:	9400      	str	r4, [sp, #0]
 801419a:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801419c:	4639      	mov	r1, r7
 801419e:	47a0      	blx	r4
 80141a0:	b007      	add	sp, #28
 80141a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80141a4:	f010 0f02 	tst.w	r0, #2
 80141a8:	e7e7      	b.n	801417a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80141aa:	6803      	ldr	r3, [r0, #0]
 80141ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80141ae:	4798      	blx	r3
 80141b0:	4b08      	ldr	r3, [pc, #32]	@ (80141d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80141b2:	881a      	ldrh	r2, [r3, #0]
 80141b4:	6833      	ldr	r3, [r6, #0]
 80141b6:	e9cd 7500 	strd	r7, r5, [sp]
 80141ba:	4601      	mov	r1, r0
 80141bc:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80141be:	4630      	mov	r0, r6
 80141c0:	ab04      	add	r3, sp, #16
 80141c2:	47a8      	blx	r5
 80141c4:	6820      	ldr	r0, [r4, #0]
 80141c6:	6803      	ldr	r3, [r0, #0]
 80141c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80141ca:	4798      	blx	r3
 80141cc:	e7e8      	b.n	80141a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80141ce:	bf00      	nop
 80141d0:	20013288 	.word	0x20013288
 80141d4:	20013282 	.word	0x20013282

080141d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80141d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80141dc:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80141e0:	9e08      	ldr	r6, [sp, #32]
 80141e2:	4688      	mov	r8, r1
 80141e4:	4614      	mov	r4, r2
 80141e6:	461d      	mov	r5, r3
 80141e8:	2f00      	cmp	r7, #0
 80141ea:	f000 80a9 	beq.w	8014340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80141ee:	4618      	mov	r0, r3
 80141f0:	f7f5 fb1f 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141f4:	2800      	cmp	r0, #0
 80141f6:	f040 80a3 	bne.w	8014340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80141fa:	f9b5 1000 	ldrsh.w	r1, [r5]
 80141fe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014202:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8014206:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801420a:	fb04 1303 	mla	r3, r4, r3, r1
 801420e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8014212:	4365      	muls	r5, r4
 8014214:	2fff      	cmp	r7, #255	@ 0xff
 8014216:	eba4 0200 	sub.w	r2, r4, r0
 801421a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801421e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8014222:	d04a      	beq.n	80142ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8014224:	b2bc      	uxth	r4, r7
 8014226:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801422a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801422e:	fa5f f788 	uxtb.w	r7, r8
 8014232:	b2f3      	uxtb	r3, r6
 8014234:	0040      	lsls	r0, r0, #1
 8014236:	fb0e fe04 	mul.w	lr, lr, r4
 801423a:	4367      	muls	r7, r4
 801423c:	4363      	muls	r3, r4
 801423e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8014242:	fa1f fc8c 	uxth.w	ip, ip
 8014246:	42a9      	cmp	r1, r5
 8014248:	d27a      	bcs.n	8014340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801424a:	eb01 0900 	add.w	r9, r1, r0
 801424e:	4549      	cmp	r1, r9
 8014250:	d231      	bcs.n	80142b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8014252:	880a      	ldrh	r2, [r1, #0]
 8014254:	1214      	asrs	r4, r2, #8
 8014256:	10d6      	asrs	r6, r2, #3
 8014258:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801425c:	00d2      	lsls	r2, r2, #3
 801425e:	b2d2      	uxtb	r2, r2
 8014260:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8014264:	fb14 f40c 	smulbb	r4, r4, ip
 8014268:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801426c:	4474      	add	r4, lr
 801426e:	fb12 f20c 	smulbb	r2, r2, ip
 8014272:	b2a4      	uxth	r4, r4
 8014274:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014278:	441a      	add	r2, r3
 801427a:	b292      	uxth	r2, r2
 801427c:	f104 0a01 	add.w	sl, r4, #1
 8014280:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8014284:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8014288:	fb16 f60c 	smulbb	r6, r6, ip
 801428c:	f102 0a01 	add.w	sl, r2, #1
 8014290:	443e      	add	r6, r7
 8014292:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8014296:	b2b6      	uxth	r6, r6
 8014298:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801429c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80142a0:	4322      	orrs	r2, r4
 80142a2:	1c74      	adds	r4, r6, #1
 80142a4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80142a8:	0976      	lsrs	r6, r6, #5
 80142aa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80142ae:	4332      	orrs	r2, r6
 80142b0:	f821 2b02 	strh.w	r2, [r1], #2
 80142b4:	e7cb      	b.n	801424e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80142b6:	4441      	add	r1, r8
 80142b8:	e7c5      	b.n	8014246 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80142ba:	4f22      	ldr	r7, [pc, #136]	@ (8014344 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80142bc:	0973      	lsrs	r3, r6, #5
 80142be:	ea08 0707 	and.w	r7, r8, r7
 80142c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80142c6:	433b      	orrs	r3, r7
 80142c8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80142cc:	4333      	orrs	r3, r6
 80142ce:	07e7      	lsls	r7, r4, #31
 80142d0:	b29b      	uxth	r3, r3
 80142d2:	d50b      	bpl.n	80142ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80142d4:	0040      	lsls	r0, r0, #1
 80142d6:	0052      	lsls	r2, r2, #1
 80142d8:	42a9      	cmp	r1, r5
 80142da:	d231      	bcs.n	8014340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80142dc:	180c      	adds	r4, r1, r0
 80142de:	42a1      	cmp	r1, r4
 80142e0:	d202      	bcs.n	80142e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80142e2:	f821 3b02 	strh.w	r3, [r1], #2
 80142e6:	e7fa      	b.n	80142de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80142e8:	4411      	add	r1, r2
 80142ea:	e7f5      	b.n	80142d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80142ec:	078e      	lsls	r6, r1, #30
 80142ee:	d008      	beq.n	8014302 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80142f0:	0066      	lsls	r6, r4, #1
 80142f2:	460a      	mov	r2, r1
 80142f4:	42aa      	cmp	r2, r5
 80142f6:	d202      	bcs.n	80142fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80142f8:	8013      	strh	r3, [r2, #0]
 80142fa:	4432      	add	r2, r6
 80142fc:	e7fa      	b.n	80142f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80142fe:	3102      	adds	r1, #2
 8014300:	3801      	subs	r0, #1
 8014302:	07c2      	lsls	r2, r0, #31
 8014304:	d50b      	bpl.n	801431e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8014306:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801430a:	3a01      	subs	r2, #1
 801430c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8014310:	0066      	lsls	r6, r4, #1
 8014312:	42aa      	cmp	r2, r5
 8014314:	d202      	bcs.n	801431c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8014316:	8013      	strh	r3, [r2, #0]
 8014318:	4432      	add	r2, r6
 801431a:	e7fa      	b.n	8014312 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801431c:	3801      	subs	r0, #1
 801431e:	b178      	cbz	r0, 8014340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014320:	1040      	asrs	r0, r0, #1
 8014322:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8014326:	0080      	lsls	r0, r0, #2
 8014328:	0064      	lsls	r4, r4, #1
 801432a:	42a9      	cmp	r1, r5
 801432c:	d208      	bcs.n	8014340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801432e:	180e      	adds	r6, r1, r0
 8014330:	460a      	mov	r2, r1
 8014332:	42b2      	cmp	r2, r6
 8014334:	d202      	bcs.n	801433c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8014336:	f842 3b04 	str.w	r3, [r2], #4
 801433a:	e7fa      	b.n	8014332 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801433c:	4421      	add	r1, r4
 801433e:	e7f4      	b.n	801432a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8014340:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014344:	00fff800 	.word	0x00fff800

08014348 <_ZN8touchgfx8LCD16bppC1Ev>:
 8014348:	2200      	movs	r2, #0
 801434a:	4912      	ldr	r1, [pc, #72]	@ (8014394 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801434c:	6042      	str	r2, [r0, #4]
 801434e:	6001      	str	r1, [r0, #0]
 8014350:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8014354:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8014358:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801435c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8014360:	e9c0 220a 	strd	r2, r2, [r0, #40]	@ 0x28
 8014364:	e9c0 220c 	strd	r2, r2, [r0, #48]	@ 0x30
 8014368:	e9c0 220e 	strd	r2, r2, [r0, #56]	@ 0x38
 801436c:	e9c0 2210 	strd	r2, r2, [r0, #64]	@ 0x40
 8014370:	e9c0 2212 	strd	r2, r2, [r0, #72]	@ 0x48
 8014374:	e9c0 2214 	strd	r2, r2, [r0, #80]	@ 0x50
 8014378:	e9c0 2216 	strd	r2, r2, [r0, #88]	@ 0x58
 801437c:	e9c0 2218 	strd	r2, r2, [r0, #96]	@ 0x60
 8014380:	e9c0 221a 	strd	r2, r2, [r0, #104]	@ 0x68
 8014384:	e9c0 221c 	strd	r2, r2, [r0, #112]	@ 0x70
 8014388:	e9c0 221e 	strd	r2, r2, [r0, #120]	@ 0x78
 801438c:	f8c0 2080 	str.w	r2, [r0, #128]	@ 0x80
 8014390:	4770      	bx	lr
 8014392:	bf00      	nop
 8014394:	08020984 	.word	0x08020984

08014398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8014398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801439c:	460d      	mov	r5, r1
 801439e:	b08d      	sub	sp, #52	@ 0x34
 80143a0:	4604      	mov	r4, r0
 80143a2:	6808      	ldr	r0, [r1, #0]
 80143a4:	6849      	ldr	r1, [r1, #4]
 80143a6:	4699      	mov	r9, r3
 80143a8:	ab08      	add	r3, sp, #32
 80143aa:	c303      	stmia	r3!, {r0, r1}
 80143ac:	6810      	ldr	r0, [r2, #0]
 80143ae:	6851      	ldr	r1, [r2, #4]
 80143b0:	ab0a      	add	r3, sp, #40	@ 0x28
 80143b2:	c303      	stmia	r3!, {r0, r1}
 80143b4:	a808      	add	r0, sp, #32
 80143b6:	f7f8 fab7 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80143ba:	4629      	mov	r1, r5
 80143bc:	a80a      	add	r0, sp, #40	@ 0x28
 80143be:	f7f8 fadb 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80143c2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80143c6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80143ca:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80143ce:	4d63      	ldr	r5, [pc, #396]	@ (801455c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80143d0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80143d4:	6828      	ldr	r0, [r5, #0]
 80143d6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80143da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80143de:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80143e2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80143e6:	440a      	add	r2, r1
 80143e8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80143ec:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80143f0:	4413      	add	r3, r2
 80143f2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80143f6:	6803      	ldr	r3, [r0, #0]
 80143f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80143fa:	4798      	blx	r3
 80143fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8014400:	d119      	bne.n	8014436 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8014402:	f010 0f20 	tst.w	r0, #32
 8014406:	6828      	ldr	r0, [r5, #0]
 8014408:	d018      	beq.n	801443c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801440a:	2500      	movs	r5, #0
 801440c:	6801      	ldr	r1, [r0, #0]
 801440e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8014412:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8014416:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801441a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801441e:	9502      	str	r5, [sp, #8]
 8014420:	b2b6      	uxth	r6, r6
 8014422:	fa1f f588 	uxth.w	r5, r8
 8014426:	9601      	str	r6, [sp, #4]
 8014428:	9500      	str	r5, [sp, #0]
 801442a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801442c:	4621      	mov	r1, r4
 801442e:	47a8      	blx	r5
 8014430:	b00d      	add	sp, #52	@ 0x34
 8014432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014436:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801443a:	e7e4      	b.n	8014406 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801443c:	6803      	ldr	r3, [r0, #0]
 801443e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014440:	4798      	blx	r3
 8014442:	4947      	ldr	r1, [pc, #284]	@ (8014560 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8014444:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014448:	880b      	ldrh	r3, [r1, #0]
 801444a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801444e:	fb03 5202 	mla	r2, r3, r2, r5
 8014452:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014456:	4373      	muls	r3, r6
 8014458:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801445c:	9307      	str	r3, [sp, #28]
 801445e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014462:	9306      	str	r3, [sp, #24]
 8014464:	468a      	mov	sl, r1
 8014466:	9b07      	ldr	r3, [sp, #28]
 8014468:	4298      	cmp	r0, r3
 801446a:	d270      	bcs.n	801454e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801446c:	9b06      	ldr	r3, [sp, #24]
 801446e:	4621      	mov	r1, r4
 8014470:	eb00 0b03 	add.w	fp, r0, r3
 8014474:	4558      	cmp	r0, fp
 8014476:	d25d      	bcs.n	8014534 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8014478:	f851 4b04 	ldr.w	r4, [r1], #4
 801447c:	0e23      	lsrs	r3, r4, #24
 801447e:	d014      	beq.n	80144aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014480:	2bff      	cmp	r3, #255	@ 0xff
 8014482:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8014486:	d112      	bne.n	80144ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8014488:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801448c:	d10f      	bne.n	80144ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801448e:	0963      	lsrs	r3, r4, #5
 8014490:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8014494:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014498:	f02c 0c07 	bic.w	ip, ip, #7
 801449c:	ea43 0c0c 	orr.w	ip, r3, ip
 80144a0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80144a4:	ea4c 0404 	orr.w	r4, ip, r4
 80144a8:	8004      	strh	r4, [r0, #0]
 80144aa:	3002      	adds	r0, #2
 80144ac:	e7e2      	b.n	8014474 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80144ae:	fb09 f303 	mul.w	r3, r9, r3
 80144b2:	8807      	ldrh	r7, [r0, #0]
 80144b4:	1c5a      	adds	r2, r3, #1
 80144b6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80144ba:	1212      	asrs	r2, r2, #8
 80144bc:	123e      	asrs	r6, r7, #8
 80144be:	b293      	uxth	r3, r2
 80144c0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80144c4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80144c8:	43d2      	mvns	r2, r2
 80144ca:	b2d2      	uxtb	r2, r2
 80144cc:	10fd      	asrs	r5, r7, #3
 80144ce:	fb1e fe03 	smulbb	lr, lr, r3
 80144d2:	00ff      	lsls	r7, r7, #3
 80144d4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80144d8:	fb06 e602 	mla	r6, r6, r2, lr
 80144dc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80144e0:	b2ff      	uxtb	r7, r7
 80144e2:	fa5f fc8c 	uxtb.w	ip, ip
 80144e6:	b2e4      	uxtb	r4, r4
 80144e8:	b2b6      	uxth	r6, r6
 80144ea:	fb1c fc03 	smulbb	ip, ip, r3
 80144ee:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80144f2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80144f6:	fb14 f403 	smulbb	r4, r4, r3
 80144fa:	fb05 c502 	mla	r5, r5, r2, ip
 80144fe:	f106 0e01 	add.w	lr, r6, #1
 8014502:	fb07 4702 	mla	r7, r7, r2, r4
 8014506:	b2ad      	uxth	r5, r5
 8014508:	b2bf      	uxth	r7, r7
 801450a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801450e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8014512:	f105 0c01 	add.w	ip, r5, #1
 8014516:	1c7e      	adds	r6, r7, #1
 8014518:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801451c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014520:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014524:	096d      	lsrs	r5, r5, #5
 8014526:	ea46 060e 	orr.w	r6, r6, lr
 801452a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801452e:	432e      	orrs	r6, r5
 8014530:	8006      	strh	r6, [r0, #0]
 8014532:	e7ba      	b.n	80144aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014534:	f8ba 3000 	ldrh.w	r3, [sl]
 8014538:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801453c:	eba3 0308 	sub.w	r3, r3, r8
 8014540:	eba4 0408 	sub.w	r4, r4, r8
 8014544:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014548:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801454c:	e78b      	b.n	8014466 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801454e:	4b03      	ldr	r3, [pc, #12]	@ (801455c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8014550:	6818      	ldr	r0, [r3, #0]
 8014552:	6803      	ldr	r3, [r0, #0]
 8014554:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014556:	4798      	blx	r3
 8014558:	e76a      	b.n	8014430 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801455a:	bf00      	nop
 801455c:	20013288 	.word	0x20013288
 8014560:	20013282 	.word	0x20013282

08014564 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8014564:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014568:	460c      	mov	r4, r1
 801456a:	b085      	sub	sp, #20
 801456c:	6810      	ldr	r0, [r2, #0]
 801456e:	6851      	ldr	r1, [r2, #4]
 8014570:	466d      	mov	r5, sp
 8014572:	c503      	stmia	r5!, {r0, r1}
 8014574:	6818      	ldr	r0, [r3, #0]
 8014576:	6859      	ldr	r1, [r3, #4]
 8014578:	4616      	mov	r6, r2
 801457a:	c503      	stmia	r5!, {r0, r1}
 801457c:	4668      	mov	r0, sp
 801457e:	f7f8 f9d3 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014582:	4631      	mov	r1, r6
 8014584:	a802      	add	r0, sp, #8
 8014586:	f7f8 f9f7 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801458a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801458e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8014592:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8014596:	4d28      	ldr	r5, [pc, #160]	@ (8014638 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8014598:	4e28      	ldr	r6, [pc, #160]	@ (801463c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801459a:	6828      	ldr	r0, [r5, #0]
 801459c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80145a0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80145a4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80145a8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80145ac:	f8bd 1000 	ldrh.w	r1, [sp]
 80145b0:	440a      	add	r2, r1
 80145b2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80145b6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80145ba:	4413      	add	r3, r2
 80145bc:	f8ad 300a 	strh.w	r3, [sp, #10]
 80145c0:	6803      	ldr	r3, [r0, #0]
 80145c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80145c4:	4798      	blx	r3
 80145c6:	8833      	ldrh	r3, [r6, #0]
 80145c8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80145cc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80145d0:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8014640 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80145d4:	fb03 1202 	mla	r2, r3, r2, r1
 80145d8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80145dc:	fb08 f303 	mul.w	r3, r8, r3
 80145e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80145e4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80145e8:	4298      	cmp	r0, r3
 80145ea:	d21d      	bcs.n	8014628 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80145ec:	eb00 080c 	add.w	r8, r0, ip
 80145f0:	4540      	cmp	r0, r8
 80145f2:	d20f      	bcs.n	8014614 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80145f4:	f854 1b04 	ldr.w	r1, [r4], #4
 80145f8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80145fc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8014600:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014604:	ea42 0209 	orr.w	r2, r2, r9
 8014608:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801460c:	430a      	orrs	r2, r1
 801460e:	f820 2b02 	strh.w	r2, [r0], #2
 8014612:	e7ed      	b.n	80145f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8014614:	8832      	ldrh	r2, [r6, #0]
 8014616:	1bd2      	subs	r2, r2, r7
 8014618:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801461c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8014620:	1bd2      	subs	r2, r2, r7
 8014622:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8014626:	e7df      	b.n	80145e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014628:	6828      	ldr	r0, [r5, #0]
 801462a:	6803      	ldr	r3, [r0, #0]
 801462c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801462e:	4798      	blx	r3
 8014630:	b005      	add	sp, #20
 8014632:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014636:	bf00      	nop
 8014638:	20013288 	.word	0x20013288
 801463c:	20013282 	.word	0x20013282
 8014640:	fffff800 	.word	0xfffff800

08014644 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8014644:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014648:	460e      	mov	r6, r1
 801464a:	b08e      	sub	sp, #56	@ 0x38
 801464c:	4604      	mov	r4, r0
 801464e:	6808      	ldr	r0, [r1, #0]
 8014650:	6849      	ldr	r1, [r1, #4]
 8014652:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801482c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8014656:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8014830 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801465a:	461d      	mov	r5, r3
 801465c:	ab0a      	add	r3, sp, #40	@ 0x28
 801465e:	c303      	stmia	r3!, {r0, r1}
 8014660:	6810      	ldr	r0, [r2, #0]
 8014662:	6851      	ldr	r1, [r2, #4]
 8014664:	ab0c      	add	r3, sp, #48	@ 0x30
 8014666:	c303      	stmia	r3!, {r0, r1}
 8014668:	a80a      	add	r0, sp, #40	@ 0x28
 801466a:	f7f8 f95d 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801466e:	4631      	mov	r1, r6
 8014670:	a80c      	add	r0, sp, #48	@ 0x30
 8014672:	f7f8 f981 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014676:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801467a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801467e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8014682:	f8d8 0000 	ldr.w	r0, [r8]
 8014686:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801468a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801468e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014692:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014696:	440c      	add	r4, r1
 8014698:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801469c:	440a      	add	r2, r1
 801469e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80146a2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80146a6:	4413      	add	r3, r2
 80146a8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80146ac:	6803      	ldr	r3, [r0, #0]
 80146ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80146b0:	4798      	blx	r3
 80146b2:	2dff      	cmp	r5, #255	@ 0xff
 80146b4:	d124      	bne.n	8014700 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80146b6:	f010 0f01 	tst.w	r0, #1
 80146ba:	f8d8 0000 	ldr.w	r0, [r8]
 80146be:	d022      	beq.n	8014706 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80146c0:	2100      	movs	r1, #0
 80146c2:	f8d0 c000 	ldr.w	ip, [r0]
 80146c6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80146ca:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80146ce:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80146d2:	f04f 0e01 	mov.w	lr, #1
 80146d6:	f8cd e018 	str.w	lr, [sp, #24]
 80146da:	f8b9 e000 	ldrh.w	lr, [r9]
 80146de:	9503      	str	r5, [sp, #12]
 80146e0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80146e4:	b2b6      	uxth	r6, r6
 80146e6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80146ea:	9102      	str	r1, [sp, #8]
 80146ec:	b2bf      	uxth	r7, r7
 80146ee:	9601      	str	r6, [sp, #4]
 80146f0:	9700      	str	r7, [sp, #0]
 80146f2:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 80146f6:	4621      	mov	r1, r4
 80146f8:	47a8      	blx	r5
 80146fa:	b00e      	add	sp, #56	@ 0x38
 80146fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014700:	f010 0f04 	tst.w	r0, #4
 8014704:	e7d9      	b.n	80146ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8014706:	6803      	ldr	r3, [r0, #0]
 8014708:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801470a:	4798      	blx	r3
 801470c:	f8b9 3000 	ldrh.w	r3, [r9]
 8014710:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8014714:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8014718:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801471c:	fb03 1202 	mla	r2, r3, r2, r1
 8014720:	ebac 0c07 	sub.w	ip, ip, r7
 8014724:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014728:	435e      	muls	r6, r3
 801472a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801472e:	2dff      	cmp	r5, #255	@ 0xff
 8014730:	eba3 0707 	sub.w	r7, r3, r7
 8014734:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014738:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801473c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014740:	d049      	beq.n	80147d6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8014742:	43eb      	mvns	r3, r5
 8014744:	fa1f f985 	uxth.w	r9, r5
 8014748:	b2db      	uxtb	r3, r3
 801474a:	42b0      	cmp	r0, r6
 801474c:	d266      	bcs.n	801481c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801474e:	eb00 0a0e 	add.w	sl, r0, lr
 8014752:	4550      	cmp	r0, sl
 8014754:	4621      	mov	r1, r4
 8014756:	f104 0403 	add.w	r4, r4, #3
 801475a:	d25b      	bcs.n	8014814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801475c:	8802      	ldrh	r2, [r0, #0]
 801475e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014762:	ea4f 2822 	mov.w	r8, r2, asr #8
 8014766:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801476a:	fb11 f109 	smulbb	r1, r1, r9
 801476e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8014772:	10d5      	asrs	r5, r2, #3
 8014774:	fb08 1803 	mla	r8, r8, r3, r1
 8014778:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801477c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014780:	fb11 f109 	smulbb	r1, r1, r9
 8014784:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014788:	fb05 1503 	mla	r5, r5, r3, r1
 801478c:	00d2      	lsls	r2, r2, #3
 801478e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014792:	b2d2      	uxtb	r2, r2
 8014794:	fb11 f109 	smulbb	r1, r1, r9
 8014798:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801479c:	fa1f f888 	uxth.w	r8, r8
 80147a0:	fb02 1203 	mla	r2, r2, r3, r1
 80147a4:	b292      	uxth	r2, r2
 80147a6:	f108 0101 	add.w	r1, r8, #1
 80147aa:	b2ad      	uxth	r5, r5
 80147ac:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80147b0:	1c51      	adds	r1, r2, #1
 80147b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80147b6:	1c69      	adds	r1, r5, #1
 80147b8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80147bc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80147c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80147c4:	096d      	lsrs	r5, r5, #5
 80147c6:	ea42 0208 	orr.w	r2, r2, r8
 80147ca:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80147ce:	432a      	orrs	r2, r5
 80147d0:	f820 2b02 	strh.w	r2, [r0], #2
 80147d4:	e7bd      	b.n	8014752 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80147d6:	4a14      	ldr	r2, [pc, #80]	@ (8014828 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80147d8:	42b0      	cmp	r0, r6
 80147da:	d21f      	bcs.n	801481c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80147dc:	eb00 050e 	add.w	r5, r0, lr
 80147e0:	42a8      	cmp	r0, r5
 80147e2:	4621      	mov	r1, r4
 80147e4:	f104 0403 	add.w	r4, r4, #3
 80147e8:	d210      	bcs.n	801480c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80147ea:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80147ee:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80147f2:	00db      	lsls	r3, r3, #3
 80147f4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80147f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80147fc:	430b      	orrs	r3, r1
 80147fe:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014802:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8014806:	f820 3b02 	strh.w	r3, [r0], #2
 801480a:	e7e9      	b.n	80147e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801480c:	4438      	add	r0, r7
 801480e:	eb01 040c 	add.w	r4, r1, ip
 8014812:	e7e1      	b.n	80147d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8014814:	4438      	add	r0, r7
 8014816:	eb01 040c 	add.w	r4, r1, ip
 801481a:	e796      	b.n	801474a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801481c:	4b03      	ldr	r3, [pc, #12]	@ (801482c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801481e:	6818      	ldr	r0, [r3, #0]
 8014820:	6803      	ldr	r3, [r0, #0]
 8014822:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014824:	4798      	blx	r3
 8014826:	e768      	b.n	80146fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014828:	fffff800 	.word	0xfffff800
 801482c:	20013288 	.word	0x20013288
 8014830:	20013282 	.word	0x20013282

08014834 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8014834:	b4f0      	push	{r4, r5, r6, r7}
 8014836:	4616      	mov	r6, r2
 8014838:	2e01      	cmp	r6, #1
 801483a:	461c      	mov	r4, r3
 801483c:	460d      	mov	r5, r1
 801483e:	9a04      	ldr	r2, [sp, #16]
 8014840:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014844:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8014848:	d012      	beq.n	8014870 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801484a:	d303      	bcc.n	8014854 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801484c:	2e02      	cmp	r6, #2
 801484e:	d00a      	beq.n	8014866 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8014850:	bcf0      	pop	{r4, r5, r6, r7}
 8014852:	4770      	bx	lr
 8014854:	6805      	ldr	r5, [r0, #0]
 8014856:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801485a:	68ed      	ldr	r5, [r5, #12]
 801485c:	4613      	mov	r3, r2
 801485e:	46ac      	mov	ip, r5
 8014860:	4622      	mov	r2, r4
 8014862:	bcf0      	pop	{r4, r5, r6, r7}
 8014864:	4760      	bx	ip
 8014866:	4621      	mov	r1, r4
 8014868:	4628      	mov	r0, r5
 801486a:	bcf0      	pop	{r4, r5, r6, r7}
 801486c:	f7ff bd94 	b.w	8014398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014870:	4621      	mov	r1, r4
 8014872:	4628      	mov	r0, r5
 8014874:	bcf0      	pop	{r4, r5, r6, r7}
 8014876:	f7ff bee5 	b.w	8014644 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801487c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801487c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014880:	4681      	mov	r9, r0
 8014882:	b093      	sub	sp, #76	@ 0x4c
 8014884:	6810      	ldr	r0, [r2, #0]
 8014886:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801488a:	4f6d      	ldr	r7, [pc, #436]	@ (8014a40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801488c:	4688      	mov	r8, r1
 801488e:	6851      	ldr	r1, [r2, #4]
 8014890:	ac0e      	add	r4, sp, #56	@ 0x38
 8014892:	c403      	stmia	r4!, {r0, r1}
 8014894:	6818      	ldr	r0, [r3, #0]
 8014896:	6859      	ldr	r1, [r3, #4]
 8014898:	ac10      	add	r4, sp, #64	@ 0x40
 801489a:	4616      	mov	r6, r2
 801489c:	c403      	stmia	r4!, {r0, r1}
 801489e:	a80e      	add	r0, sp, #56	@ 0x38
 80148a0:	f7f8 f842 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80148a4:	4631      	mov	r1, r6
 80148a6:	a810      	add	r0, sp, #64	@ 0x40
 80148a8:	f7f8 f866 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80148ac:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80148b0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80148b4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80148b8:	4e62      	ldr	r6, [pc, #392]	@ (8014a44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80148ba:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 80148be:	6830      	ldr	r0, [r6, #0]
 80148c0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80148c4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80148c8:	4489      	add	r9, r1
 80148ca:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 80148ce:	440a      	add	r2, r1
 80148d0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80148d4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80148d8:	4413      	add	r3, r2
 80148da:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80148de:	6803      	ldr	r3, [r0, #0]
 80148e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80148e2:	4798      	blx	r3
 80148e4:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80148e8:	6830      	ldr	r0, [r6, #0]
 80148ea:	d01d      	beq.n	8014928 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80148ec:	2200      	movs	r2, #0
 80148ee:	6801      	ldr	r1, [r0, #0]
 80148f0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80148f4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80148f8:	220b      	movs	r2, #11
 80148fa:	9207      	str	r2, [sp, #28]
 80148fc:	883a      	ldrh	r2, [r7, #0]
 80148fe:	9206      	str	r2, [sp, #24]
 8014900:	2201      	movs	r2, #1
 8014902:	e9cd a204 	strd	sl, r2, [sp, #16]
 8014906:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801490a:	9203      	str	r2, [sp, #12]
 801490c:	b2a4      	uxth	r4, r4
 801490e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8014912:	9200      	str	r2, [sp, #0]
 8014914:	b2ad      	uxth	r5, r5
 8014916:	9502      	str	r5, [sp, #8]
 8014918:	9401      	str	r4, [sp, #4]
 801491a:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801491c:	4642      	mov	r2, r8
 801491e:	4649      	mov	r1, r9
 8014920:	47a0      	blx	r4
 8014922:	b013      	add	sp, #76	@ 0x4c
 8014924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014928:	6803      	ldr	r3, [r0, #0]
 801492a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801492c:	4798      	blx	r3
 801492e:	883b      	ldrh	r3, [r7, #0]
 8014930:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8014934:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8014938:	fb03 1202 	mla	r2, r3, r2, r1
 801493c:	435d      	muls	r5, r3
 801493e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014942:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8014946:	920c      	str	r2, [sp, #48]	@ 0x30
 8014948:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801494c:	1b12      	subs	r2, r2, r4
 801494e:	920d      	str	r2, [sp, #52]	@ 0x34
 8014950:	0062      	lsls	r2, r4, #1
 8014952:	1b1c      	subs	r4, r3, r4
 8014954:	0063      	lsls	r3, r4, #1
 8014956:	920a      	str	r2, [sp, #40]	@ 0x28
 8014958:	930b      	str	r3, [sp, #44]	@ 0x2c
 801495a:	f04f 0e04 	mov.w	lr, #4
 801495e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014960:	4298      	cmp	r0, r3
 8014962:	d266      	bcs.n	8014a32 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8014964:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014966:	eb00 0b03 	add.w	fp, r0, r3
 801496a:	4558      	cmp	r0, fp
 801496c:	d25c      	bcs.n	8014a28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801496e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014972:	fb1e e303 	smlabb	r3, lr, r3, lr
 8014976:	f858 2003 	ldr.w	r2, [r8, r3]
 801497a:	0e11      	lsrs	r1, r2, #24
 801497c:	d012      	beq.n	80149a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801497e:	29ff      	cmp	r1, #255	@ 0xff
 8014980:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8014984:	d110      	bne.n	80149a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014986:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801498a:	d10d      	bne.n	80149a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801498c:	0953      	lsrs	r3, r2, #5
 801498e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8014992:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8014996:	f027 0707 	bic.w	r7, r7, #7
 801499a:	431f      	orrs	r7, r3
 801499c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80149a0:	433a      	orrs	r2, r7
 80149a2:	8002      	strh	r2, [r0, #0]
 80149a4:	3002      	adds	r0, #2
 80149a6:	e7e0      	b.n	801496a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80149a8:	fb0a f101 	mul.w	r1, sl, r1
 80149ac:	8806      	ldrh	r6, [r0, #0]
 80149ae:	1c4b      	adds	r3, r1, #1
 80149b0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80149b4:	1235      	asrs	r5, r6, #8
 80149b6:	10f4      	asrs	r4, r6, #3
 80149b8:	121b      	asrs	r3, r3, #8
 80149ba:	00f6      	lsls	r6, r6, #3
 80149bc:	b299      	uxth	r1, r3
 80149be:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80149c2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80149c6:	b2f6      	uxtb	r6, r6
 80149c8:	43db      	mvns	r3, r3
 80149ca:	b2d2      	uxtb	r2, r2
 80149cc:	b2db      	uxtb	r3, r3
 80149ce:	fb1c fc01 	smulbb	ip, ip, r1
 80149d2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80149d6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80149da:	fb12 f201 	smulbb	r2, r2, r1
 80149de:	fb05 c503 	mla	r5, r5, r3, ip
 80149e2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80149e6:	b2ff      	uxtb	r7, r7
 80149e8:	fb06 2203 	mla	r2, r6, r3, r2
 80149ec:	b2ad      	uxth	r5, r5
 80149ee:	fb17 f701 	smulbb	r7, r7, r1
 80149f2:	b292      	uxth	r2, r2
 80149f4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80149f8:	fb04 7403 	mla	r4, r4, r3, r7
 80149fc:	f105 0c01 	add.w	ip, r5, #1
 8014a00:	1c57      	adds	r7, r2, #1
 8014a02:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014a06:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014a0a:	b2a4      	uxth	r4, r4
 8014a0c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014a10:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8014a14:	433d      	orrs	r5, r7
 8014a16:	1c67      	adds	r7, r4, #1
 8014a18:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014a1c:	0964      	lsrs	r4, r4, #5
 8014a1e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8014a22:	4325      	orrs	r5, r4
 8014a24:	8005      	strh	r5, [r0, #0]
 8014a26:	e7bd      	b.n	80149a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014a28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014a2a:	4418      	add	r0, r3
 8014a2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014a2e:	4499      	add	r9, r3
 8014a30:	e795      	b.n	801495e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8014a32:	4b04      	ldr	r3, [pc, #16]	@ (8014a44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014a34:	6818      	ldr	r0, [r3, #0]
 8014a36:	6803      	ldr	r3, [r0, #0]
 8014a38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014a3a:	4798      	blx	r3
 8014a3c:	e771      	b.n	8014922 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8014a3e:	bf00      	nop
 8014a40:	20013282 	.word	0x20013282
 8014a44:	20013288 	.word	0x20013288

08014a48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8014a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a4c:	b087      	sub	sp, #28
 8014a4e:	4680      	mov	r8, r0
 8014a50:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8014a54:	460d      	mov	r5, r1
 8014a56:	4614      	mov	r4, r2
 8014a58:	2e00      	cmp	r6, #0
 8014a5a:	f000 80b9 	beq.w	8014bd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8014a5e:	6810      	ldr	r0, [r2, #0]
 8014a60:	6851      	ldr	r1, [r2, #4]
 8014a62:	af02      	add	r7, sp, #8
 8014a64:	c703      	stmia	r7!, {r0, r1}
 8014a66:	6818      	ldr	r0, [r3, #0]
 8014a68:	6859      	ldr	r1, [r3, #4]
 8014a6a:	af04      	add	r7, sp, #16
 8014a6c:	c703      	stmia	r7!, {r0, r1}
 8014a6e:	a802      	add	r0, sp, #8
 8014a70:	f7f7 ff5a 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014a74:	4621      	mov	r1, r4
 8014a76:	a804      	add	r0, sp, #16
 8014a78:	f7f7 ff7e 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014a7c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014a80:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014a84:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8014a88:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8014a8c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8014a90:	eb08 0401 	add.w	r4, r8, r1
 8014a94:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014a98:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014a9c:	440a      	add	r2, r1
 8014a9e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014aa2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014aa6:	4413      	add	r3, r2
 8014aa8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014aac:	4b4a      	ldr	r3, [pc, #296]	@ (8014bd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014aae:	6818      	ldr	r0, [r3, #0]
 8014ab0:	6803      	ldr	r3, [r0, #0]
 8014ab2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014ab4:	4798      	blx	r3
 8014ab6:	4b49      	ldr	r3, [pc, #292]	@ (8014bdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8014ab8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8014abc:	881a      	ldrh	r2, [r3, #0]
 8014abe:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8014ac2:	2eff      	cmp	r6, #255	@ 0xff
 8014ac4:	fb02 c101 	mla	r1, r2, r1, ip
 8014ac8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014acc:	fb02 f207 	mul.w	r2, r2, r7
 8014ad0:	f105 0104 	add.w	r1, r5, #4
 8014ad4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8014ad8:	461d      	mov	r5, r3
 8014ada:	d05a      	beq.n	8014b92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8014adc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8014ae0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014ae4:	b2b6      	uxth	r6, r6
 8014ae6:	fa1f fe8e 	uxth.w	lr, lr
 8014aea:	9301      	str	r3, [sp, #4]
 8014aec:	4282      	cmp	r2, r0
 8014aee:	d96a      	bls.n	8014bc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014af0:	eb00 0b0a 	add.w	fp, r0, sl
 8014af4:	4583      	cmp	fp, r0
 8014af6:	d940      	bls.n	8014b7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8014af8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014afc:	8805      	ldrh	r5, [r0, #0]
 8014afe:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014b02:	122f      	asrs	r7, r5, #8
 8014b04:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014b08:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014b0c:	fb17 f70e 	smulbb	r7, r7, lr
 8014b10:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014b14:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014b18:	00ed      	lsls	r5, r5, #3
 8014b1a:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014b1e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014b22:	10df      	asrs	r7, r3, #3
 8014b24:	b2ed      	uxtb	r5, r5
 8014b26:	00db      	lsls	r3, r3, #3
 8014b28:	fa1f fc8c 	uxth.w	ip, ip
 8014b2c:	fb19 f90e 	smulbb	r9, r9, lr
 8014b30:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b34:	b2db      	uxtb	r3, r3
 8014b36:	fb15 f50e 	smulbb	r5, r5, lr
 8014b3a:	fb07 9706 	mla	r7, r7, r6, r9
 8014b3e:	fb03 5306 	mla	r3, r3, r6, r5
 8014b42:	f10c 0901 	add.w	r9, ip, #1
 8014b46:	b29b      	uxth	r3, r3
 8014b48:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014b4c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8014b50:	f103 0c01 	add.w	ip, r3, #1
 8014b54:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014b58:	b2bf      	uxth	r7, r7
 8014b5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014b5e:	ea4c 0c09 	orr.w	ip, ip, r9
 8014b62:	f107 0901 	add.w	r9, r7, #1
 8014b66:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8014b6a:	097f      	lsrs	r7, r7, #5
 8014b6c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8014b70:	ea4c 0c07 	orr.w	ip, ip, r7
 8014b74:	f820 cb02 	strh.w	ip, [r0], #2
 8014b78:	e7bc      	b.n	8014af4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8014b7a:	9b01      	ldr	r3, [sp, #4]
 8014b7c:	881b      	ldrh	r3, [r3, #0]
 8014b7e:	eba3 0308 	sub.w	r3, r3, r8
 8014b82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014b86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014b8a:	eba3 0308 	sub.w	r3, r3, r8
 8014b8e:	441c      	add	r4, r3
 8014b90:	e7ac      	b.n	8014aec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8014b92:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014b96:	4282      	cmp	r2, r0
 8014b98:	d915      	bls.n	8014bc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8014b9a:	eb00 060a 	add.w	r6, r0, sl
 8014b9e:	4286      	cmp	r6, r0
 8014ba0:	d906      	bls.n	8014bb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8014ba2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014ba6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014baa:	f820 3b02 	strh.w	r3, [r0], #2
 8014bae:	e7f6      	b.n	8014b9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8014bb0:	882b      	ldrh	r3, [r5, #0]
 8014bb2:	eba3 0308 	sub.w	r3, r3, r8
 8014bb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014bba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014bbe:	eba3 0308 	sub.w	r3, r3, r8
 8014bc2:	441c      	add	r4, r3
 8014bc4:	e7e7      	b.n	8014b96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8014bc6:	4b04      	ldr	r3, [pc, #16]	@ (8014bd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8014bc8:	6818      	ldr	r0, [r3, #0]
 8014bca:	6803      	ldr	r3, [r0, #0]
 8014bcc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014bce:	4798      	blx	r3
 8014bd0:	b007      	add	sp, #28
 8014bd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bd6:	bf00      	nop
 8014bd8:	20013288 	.word	0x20013288
 8014bdc:	20013282 	.word	0x20013282

08014be0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014be4:	b091      	sub	sp, #68	@ 0x44
 8014be6:	4680      	mov	r8, r0
 8014be8:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8014bec:	460f      	mov	r7, r1
 8014bee:	4614      	mov	r4, r2
 8014bf0:	2d00      	cmp	r5, #0
 8014bf2:	d051      	beq.n	8014c98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014bf4:	6810      	ldr	r0, [r2, #0]
 8014bf6:	6851      	ldr	r1, [r2, #4]
 8014bf8:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8014dfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8014bfc:	ae0c      	add	r6, sp, #48	@ 0x30
 8014bfe:	c603      	stmia	r6!, {r0, r1}
 8014c00:	6818      	ldr	r0, [r3, #0]
 8014c02:	6859      	ldr	r1, [r3, #4]
 8014c04:	ae0e      	add	r6, sp, #56	@ 0x38
 8014c06:	c603      	stmia	r6!, {r0, r1}
 8014c08:	a80c      	add	r0, sp, #48	@ 0x30
 8014c0a:	f7f7 fe8d 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c0e:	4621      	mov	r1, r4
 8014c10:	a80e      	add	r0, sp, #56	@ 0x38
 8014c12:	f7f7 feb1 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c16:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8014c1a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8014c1e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8014c22:	f8d9 0000 	ldr.w	r0, [r9]
 8014c26:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8014c2a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8014c2e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014c32:	eb08 0401 	add.w	r4, r8, r1
 8014c36:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8014c3a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8014e00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8014c3e:	440a      	add	r2, r1
 8014c40:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8014c44:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8014c48:	4413      	add	r3, r2
 8014c4a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8014c4e:	6803      	ldr	r3, [r0, #0]
 8014c50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014c52:	4798      	blx	r3
 8014c54:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8014c58:	f8d9 0000 	ldr.w	r0, [r9]
 8014c5c:	d01f      	beq.n	8014c9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8014c5e:	2200      	movs	r2, #0
 8014c60:	6801      	ldr	r1, [r0, #0]
 8014c62:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8014c66:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014c6a:	220b      	movs	r2, #11
 8014c6c:	9207      	str	r2, [sp, #28]
 8014c6e:	f8b8 2000 	ldrh.w	r2, [r8]
 8014c72:	9206      	str	r2, [sp, #24]
 8014c74:	2201      	movs	r2, #1
 8014c76:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8014c7a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8014c7e:	9203      	str	r2, [sp, #12]
 8014c80:	fa1f f28a 	uxth.w	r2, sl
 8014c84:	9202      	str	r2, [sp, #8]
 8014c86:	b2b6      	uxth	r6, r6
 8014c88:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8014c8c:	9200      	str	r2, [sp, #0]
 8014c8e:	9601      	str	r6, [sp, #4]
 8014c90:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8014c92:	463a      	mov	r2, r7
 8014c94:	4621      	mov	r1, r4
 8014c96:	47a8      	blx	r5
 8014c98:	b011      	add	sp, #68	@ 0x44
 8014c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c9e:	6803      	ldr	r3, [r0, #0]
 8014ca0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014ca2:	4798      	blx	r3
 8014ca4:	f8b8 2000 	ldrh.w	r2, [r8]
 8014ca8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8014cac:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8014cb0:	2dff      	cmp	r5, #255	@ 0xff
 8014cb2:	fb02 1303 	mla	r3, r2, r3, r1
 8014cb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014cba:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014cbe:	fb0a fa02 	mul.w	sl, sl, r2
 8014cc2:	d062      	beq.n	8014d8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8014cc4:	ea6f 0c05 	mvn.w	ip, r5
 8014cc8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8014ccc:	930a      	str	r3, [sp, #40]	@ 0x28
 8014cce:	b2ad      	uxth	r5, r5
 8014cd0:	fa5f fc8c 	uxtb.w	ip, ip
 8014cd4:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8014cd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014cda:	4298      	cmp	r0, r3
 8014cdc:	f080 8085 	bcs.w	8014dea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014ce0:	eb00 0b09 	add.w	fp, r0, r9
 8014ce4:	4558      	cmp	r0, fp
 8014ce6:	d246      	bcs.n	8014d76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8014ce8:	f814 eb01 	ldrb.w	lr, [r4], #1
 8014cec:	2303      	movs	r3, #3
 8014cee:	2204      	movs	r2, #4
 8014cf0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8014cf4:	eb07 0a0e 	add.w	sl, r7, lr
 8014cf8:	8803      	ldrh	r3, [r0, #0]
 8014cfa:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8014cfe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014d02:	1219      	asrs	r1, r3, #8
 8014d04:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8014d08:	fb18 f805 	smulbb	r8, r8, r5
 8014d0c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8014d10:	10da      	asrs	r2, r3, #3
 8014d12:	fb01 810c 	mla	r1, r1, ip, r8
 8014d16:	00db      	lsls	r3, r3, #3
 8014d18:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014d1c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8014d20:	b2db      	uxtb	r3, r3
 8014d22:	fb18 f805 	smulbb	r8, r8, r5
 8014d26:	fb1e fe05 	smulbb	lr, lr, r5
 8014d2a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8014d2e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8014d32:	b289      	uxth	r1, r1
 8014d34:	fb02 820c 	mla	r2, r2, ip, r8
 8014d38:	fb03 e30c 	mla	r3, r3, ip, lr
 8014d3c:	b292      	uxth	r2, r2
 8014d3e:	b29b      	uxth	r3, r3
 8014d40:	f101 0801 	add.w	r8, r1, #1
 8014d44:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014d48:	f103 0e01 	add.w	lr, r3, #1
 8014d4c:	f102 0801 	add.w	r8, r2, #1
 8014d50:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8014d54:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8014d58:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8014d5c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014d60:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014d64:	ea4e 0101 	orr.w	r1, lr, r1
 8014d68:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014d6c:	ea41 0108 	orr.w	r1, r1, r8
 8014d70:	f820 1b02 	strh.w	r1, [r0], #2
 8014d74:	e7b6      	b.n	8014ce4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8014d76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014d78:	881b      	ldrh	r3, [r3, #0]
 8014d7a:	1b9b      	subs	r3, r3, r6
 8014d7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014d80:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8014d84:	1b9b      	subs	r3, r3, r6
 8014d86:	441c      	add	r4, r3
 8014d88:	e7a6      	b.n	8014cd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8014d8a:	491b      	ldr	r1, [pc, #108]	@ (8014df8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8014d8c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8014d90:	2203      	movs	r2, #3
 8014d92:	2504      	movs	r5, #4
 8014d94:	4550      	cmp	r0, sl
 8014d96:	d228      	bcs.n	8014dea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014d98:	eb00 0c09 	add.w	ip, r0, r9
 8014d9c:	4560      	cmp	r0, ip
 8014d9e:	4623      	mov	r3, r4
 8014da0:	d219      	bcs.n	8014dd6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8014da2:	f893 e000 	ldrb.w	lr, [r3]
 8014da6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8014daa:	eb07 0b0e 	add.w	fp, r7, lr
 8014dae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014db2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8014db6:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014dba:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014dbe:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014dc2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8014dc6:	ea43 030b 	orr.w	r3, r3, fp
 8014dca:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014dce:	3401      	adds	r4, #1
 8014dd0:	f820 3b02 	strh.w	r3, [r0], #2
 8014dd4:	e7e2      	b.n	8014d9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8014dd6:	f8b8 3000 	ldrh.w	r3, [r8]
 8014dda:	1b9b      	subs	r3, r3, r6
 8014ddc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014de0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8014de4:	1b9b      	subs	r3, r3, r6
 8014de6:	441c      	add	r4, r3
 8014de8:	e7d4      	b.n	8014d94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8014dea:	4b04      	ldr	r3, [pc, #16]	@ (8014dfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8014dec:	6818      	ldr	r0, [r3, #0]
 8014dee:	6803      	ldr	r3, [r0, #0]
 8014df0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014df2:	4798      	blx	r3
 8014df4:	e750      	b.n	8014c98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014df6:	bf00      	nop
 8014df8:	fffff800 	.word	0xfffff800
 8014dfc:	20013288 	.word	0x20013288
 8014e00:	20013282 	.word	0x20013282

08014e04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014e04:	b4f0      	push	{r4, r5, r6, r7}
 8014e06:	460c      	mov	r4, r1
 8014e08:	4611      	mov	r1, r2
 8014e0a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8014e0e:	780f      	ldrb	r7, [r1, #0]
 8014e10:	784e      	ldrb	r6, [r1, #1]
 8014e12:	2f01      	cmp	r7, #1
 8014e14:	461a      	mov	r2, r3
 8014e16:	9b04      	ldr	r3, [sp, #16]
 8014e18:	d036      	beq.n	8014e88 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8014e1a:	d31e      	bcc.n	8014e5a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8014e1c:	2f02      	cmp	r7, #2
 8014e1e:	d14a      	bne.n	8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014e20:	2e03      	cmp	r6, #3
 8014e22:	d848      	bhi.n	8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014e24:	e8df f006 	tbb	[pc, r6]
 8014e28:	16140702 	.word	0x16140702
 8014e2c:	9504      	str	r5, [sp, #16]
 8014e2e:	4620      	mov	r0, r4
 8014e30:	bcf0      	pop	{r4, r5, r6, r7}
 8014e32:	f7ff be09 	b.w	8014a48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8014e36:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8014e38:	2800      	cmp	r0, #0
 8014e3a:	d03c      	beq.n	8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014e3c:	6806      	ldr	r6, [r0, #0]
 8014e3e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8014e42:	68b5      	ldr	r5, [r6, #8]
 8014e44:	4613      	mov	r3, r2
 8014e46:	46ac      	mov	ip, r5
 8014e48:	460a      	mov	r2, r1
 8014e4a:	4621      	mov	r1, r4
 8014e4c:	bcf0      	pop	{r4, r5, r6, r7}
 8014e4e:	4760      	bx	ip
 8014e50:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8014e52:	e7f1      	b.n	8014e38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8014e54:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8014e58:	e7ee      	b.n	8014e38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8014e5a:	2e03      	cmp	r6, #3
 8014e5c:	d82b      	bhi.n	8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014e5e:	e8df f006 	tbb	[pc, r6]
 8014e62:	0702      	.short	0x0702
 8014e64:	100e      	.short	0x100e
 8014e66:	9504      	str	r5, [sp, #16]
 8014e68:	4620      	mov	r0, r4
 8014e6a:	bcf0      	pop	{r4, r5, r6, r7}
 8014e6c:	f7ff bd06 	b.w	801487c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8014e70:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8014e72:	b300      	cbz	r0, 8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014e74:	6806      	ldr	r6, [r0, #0]
 8014e76:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8014e7a:	68f5      	ldr	r5, [r6, #12]
 8014e7c:	e7e2      	b.n	8014e44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8014e7e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8014e80:	e7f7      	b.n	8014e72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8014e82:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8014e86:	e7f4      	b.n	8014e72 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8014e88:	2e03      	cmp	r6, #3
 8014e8a:	d814      	bhi.n	8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014e8c:	e8df f006 	tbb	[pc, r6]
 8014e90:	100e0702 	.word	0x100e0702
 8014e94:	9504      	str	r5, [sp, #16]
 8014e96:	4620      	mov	r0, r4
 8014e98:	bcf0      	pop	{r4, r5, r6, r7}
 8014e9a:	f7ff bea1 	b.w	8014be0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8014e9e:	6f80      	ldr	r0, [r0, #120]	@ 0x78
 8014ea0:	b148      	cbz	r0, 8014eb6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8014ea2:	6806      	ldr	r6, [r0, #0]
 8014ea4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8014ea8:	6935      	ldr	r5, [r6, #16]
 8014eaa:	e7cb      	b.n	8014e44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8014eac:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8014eae:	e7f7      	b.n	8014ea0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8014eb0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8014eb4:	e7f4      	b.n	8014ea0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8014eb6:	bcf0      	pop	{r4, r5, r6, r7}
 8014eb8:	4770      	bx	lr
	...

08014ebc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8014ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec0:	4604      	mov	r4, r0
 8014ec2:	b087      	sub	sp, #28
 8014ec4:	6810      	ldr	r0, [r2, #0]
 8014ec6:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8014eca:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8015104 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8014ece:	460e      	mov	r6, r1
 8014ed0:	6851      	ldr	r1, [r2, #4]
 8014ed2:	ad02      	add	r5, sp, #8
 8014ed4:	c503      	stmia	r5!, {r0, r1}
 8014ed6:	6818      	ldr	r0, [r3, #0]
 8014ed8:	6859      	ldr	r1, [r3, #4]
 8014eda:	ad04      	add	r5, sp, #16
 8014edc:	4617      	mov	r7, r2
 8014ede:	c503      	stmia	r5!, {r0, r1}
 8014ee0:	a802      	add	r0, sp, #8
 8014ee2:	f7f7 fd21 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014ee6:	4639      	mov	r1, r7
 8014ee8:	a804      	add	r0, sp, #16
 8014eea:	f7f7 fd45 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014eee:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014ef2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014ef6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8014efa:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014efe:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8014f02:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014f06:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8014f0a:	440e      	add	r6, r1
 8014f0c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014f10:	440a      	add	r2, r1
 8014f12:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014f16:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014f1a:	4413      	add	r3, r2
 8014f1c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014f20:	4b77      	ldr	r3, [pc, #476]	@ (8015100 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8014f22:	6818      	ldr	r0, [r3, #0]
 8014f24:	6803      	ldr	r3, [r0, #0]
 8014f26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014f28:	4798      	blx	r3
 8014f2a:	f8b9 b000 	ldrh.w	fp, [r9]
 8014f2e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014f32:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014f36:	fb0b 2303 	mla	r3, fp, r3, r2
 8014f3a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014f3e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8014f42:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014f46:	fb05 f50b 	mul.w	r5, r5, fp
 8014f4a:	9300      	str	r3, [sp, #0]
 8014f4c:	d069      	beq.n	8015022 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8014f4e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8014f52:	4558      	cmp	r0, fp
 8014f54:	f080 80cc 	bcs.w	80150f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014f58:	9b00      	ldr	r3, [sp, #0]
 8014f5a:	18c3      	adds	r3, r0, r3
 8014f5c:	9301      	str	r3, [sp, #4]
 8014f5e:	4631      	mov	r1, r6
 8014f60:	9b01      	ldr	r3, [sp, #4]
 8014f62:	4298      	cmp	r0, r3
 8014f64:	d24f      	bcs.n	8015006 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8014f66:	f811 2b01 	ldrb.w	r2, [r1], #1
 8014f6a:	2a00      	cmp	r2, #0
 8014f6c:	d048      	beq.n	8015000 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014f6e:	fb0a f202 	mul.w	r2, sl, r2
 8014f72:	1c53      	adds	r3, r2, #1
 8014f74:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014f78:	121b      	asrs	r3, r3, #8
 8014f7a:	d041      	beq.n	8015000 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014f7c:	8802      	ldrh	r2, [r0, #0]
 8014f7e:	f8b4 c000 	ldrh.w	ip, [r4]
 8014f82:	b29e      	uxth	r6, r3
 8014f84:	1215      	asrs	r5, r2, #8
 8014f86:	43db      	mvns	r3, r3
 8014f88:	b2db      	uxtb	r3, r3
 8014f8a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014f8e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8014f92:	fb15 f503 	smulbb	r5, r5, r3
 8014f96:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8014f9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014f9e:	00d2      	lsls	r2, r2, #3
 8014fa0:	fb07 5706 	mla	r7, r7, r6, r5
 8014fa4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8014fa8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014fac:	b2d2      	uxtb	r2, r2
 8014fae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014fb2:	b2bf      	uxth	r7, r7
 8014fb4:	fb1e fe03 	smulbb	lr, lr, r3
 8014fb8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014fbc:	fa5f fc8c 	uxtb.w	ip, ip
 8014fc0:	fb12 f203 	smulbb	r2, r2, r3
 8014fc4:	fb05 e506 	mla	r5, r5, r6, lr
 8014fc8:	fb0c 2c06 	mla	ip, ip, r6, r2
 8014fcc:	f107 0e01 	add.w	lr, r7, #1
 8014fd0:	fa1f fc8c 	uxth.w	ip, ip
 8014fd4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8014fd8:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8014fdc:	f10c 0701 	add.w	r7, ip, #1
 8014fe0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014fe4:	b2ad      	uxth	r5, r5
 8014fe6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014fea:	ea47 070e 	orr.w	r7, r7, lr
 8014fee:	f105 0e01 	add.w	lr, r5, #1
 8014ff2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8014ff6:	096d      	lsrs	r5, r5, #5
 8014ff8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014ffc:	432f      	orrs	r7, r5
 8014ffe:	8007      	strh	r7, [r0, #0]
 8015000:	3002      	adds	r0, #2
 8015002:	3402      	adds	r4, #2
 8015004:	e7ac      	b.n	8014f60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8015006:	f8b9 3000 	ldrh.w	r3, [r9]
 801500a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801500e:	eba3 0308 	sub.w	r3, r3, r8
 8015012:	eba6 0608 	sub.w	r6, r6, r8
 8015016:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801501a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801501e:	440e      	add	r6, r1
 8015020:	e797      	b.n	8014f52 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8015022:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015026:	42a8      	cmp	r0, r5
 8015028:	d262      	bcs.n	80150f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801502a:	9b00      	ldr	r3, [sp, #0]
 801502c:	4631      	mov	r1, r6
 801502e:	eb00 0b03 	add.w	fp, r0, r3
 8015032:	4558      	cmp	r0, fp
 8015034:	d24e      	bcs.n	80150d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8015036:	f811 3b01 	ldrb.w	r3, [r1], #1
 801503a:	b12b      	cbz	r3, 8015048 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801503c:	2bff      	cmp	r3, #255	@ 0xff
 801503e:	f8b4 e000 	ldrh.w	lr, [r4]
 8015042:	d104      	bne.n	801504e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8015044:	f8a0 e000 	strh.w	lr, [r0]
 8015048:	3002      	adds	r0, #2
 801504a:	3402      	adds	r4, #2
 801504c:	e7f1      	b.n	8015032 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801504e:	8802      	ldrh	r2, [r0, #0]
 8015050:	b29f      	uxth	r7, r3
 8015052:	1216      	asrs	r6, r2, #8
 8015054:	43db      	mvns	r3, r3
 8015056:	b2db      	uxtb	r3, r3
 8015058:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801505c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015060:	fb16 f603 	smulbb	r6, r6, r3
 8015064:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8015068:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801506c:	00d2      	lsls	r2, r2, #3
 801506e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015072:	b2d2      	uxtb	r2, r2
 8015074:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015078:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801507c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015080:	fb1a fa03 	smulbb	sl, sl, r3
 8015084:	fa1f fc8c 	uxth.w	ip, ip
 8015088:	fb12 f303 	smulbb	r3, r2, r3
 801508c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015090:	fa5f fe8e 	uxtb.w	lr, lr
 8015094:	fb06 a607 	mla	r6, r6, r7, sl
 8015098:	f10c 0201 	add.w	r2, ip, #1
 801509c:	fb0e 3307 	mla	r3, lr, r7, r3
 80150a0:	b2b6      	uxth	r6, r6
 80150a2:	b29b      	uxth	r3, r3
 80150a4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80150a8:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80150ac:	f106 0a01 	add.w	sl, r6, #1
 80150b0:	f103 0c01 	add.w	ip, r3, #1
 80150b4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80150b8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80150bc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80150c0:	0976      	lsrs	r6, r6, #5
 80150c2:	ea4c 0c02 	orr.w	ip, ip, r2
 80150c6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80150ca:	ea4c 0c06 	orr.w	ip, ip, r6
 80150ce:	f8a0 c000 	strh.w	ip, [r0]
 80150d2:	e7b9      	b.n	8015048 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80150d4:	f8b9 3000 	ldrh.w	r3, [r9]
 80150d8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80150dc:	eba3 0308 	sub.w	r3, r3, r8
 80150e0:	eba6 0608 	sub.w	r6, r6, r8
 80150e4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80150e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80150ec:	440e      	add	r6, r1
 80150ee:	e79a      	b.n	8015026 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80150f0:	4b03      	ldr	r3, [pc, #12]	@ (8015100 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80150f2:	6818      	ldr	r0, [r3, #0]
 80150f4:	6803      	ldr	r3, [r0, #0]
 80150f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80150f8:	4798      	blx	r3
 80150fa:	b007      	add	sp, #28
 80150fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015100:	20013288 	.word	0x20013288
 8015104:	20013282 	.word	0x20013282

08015108 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8015108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801510c:	b089      	sub	sp, #36	@ 0x24
 801510e:	4682      	mov	sl, r0
 8015110:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8015114:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015116:	460f      	mov	r7, r1
 8015118:	4691      	mov	r9, r2
 801511a:	4698      	mov	r8, r3
 801511c:	2e00      	cmp	r6, #0
 801511e:	d03d      	beq.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015120:	4608      	mov	r0, r1
 8015122:	f7fa fe59 	bl	800fdd8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015126:	4605      	mov	r5, r0
 8015128:	4638      	mov	r0, r7
 801512a:	f7fa fe89 	bl	800fe40 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801512e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8015132:	4638      	mov	r0, r7
 8015134:	f8ad 9008 	strh.w	r9, [sp, #8]
 8015138:	f8ad 500c 	strh.w	r5, [sp, #12]
 801513c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8015140:	f7fa ff36 	bl	800ffb0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015144:	4605      	mov	r5, r0
 8015146:	4638      	mov	r0, r7
 8015148:	f7fa ff62 	bl	8010010 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801514c:	4681      	mov	r9, r0
 801514e:	4638      	mov	r0, r7
 8015150:	f7fa ffb2 	bl	80100b8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015154:	280b      	cmp	r0, #11
 8015156:	d821      	bhi.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015158:	e8df f000 	tbb	[pc, r0]
 801515c:	2006aebe 	.word	0x2006aebe
 8015160:	20202020 	.word	0x20202020
 8015164:	b5202020 	.word	0xb5202020
 8015168:	4bb0      	ldr	r3, [pc, #704]	@ (801542c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801516a:	6818      	ldr	r0, [r3, #0]
 801516c:	6803      	ldr	r3, [r0, #0]
 801516e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015170:	4798      	blx	r3
 8015172:	2eff      	cmp	r6, #255	@ 0xff
 8015174:	d101      	bne.n	801517a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8015176:	0683      	lsls	r3, r0, #26
 8015178:	d506      	bpl.n	8015188 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801517a:	4633      	mov	r3, r6
 801517c:	4622      	mov	r2, r4
 801517e:	a902      	add	r1, sp, #8
 8015180:	4628      	mov	r0, r5
 8015182:	f7ff f909 	bl	8014398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015186:	e009      	b.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015188:	4638      	mov	r0, r7
 801518a:	f7fa fed9 	bl	800ff40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801518e:	b940      	cbnz	r0, 80151a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8015190:	4623      	mov	r3, r4
 8015192:	aa02      	add	r2, sp, #8
 8015194:	4629      	mov	r1, r5
 8015196:	4650      	mov	r0, sl
 8015198:	f7ff f9e4 	bl	8014564 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801519c:	b009      	add	sp, #36	@ 0x24
 801519e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151a2:	f10d 0818 	add.w	r8, sp, #24
 80151a6:	4639      	mov	r1, r7
 80151a8:	4640      	mov	r0, r8
 80151aa:	f7fa fe7d 	bl	800fea8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80151ae:	e898 0003 	ldmia.w	r8, {r0, r1}
 80151b2:	af04      	add	r7, sp, #16
 80151b4:	e887 0003 	stmia.w	r7, {r0, r1}
 80151b8:	4638      	mov	r0, r7
 80151ba:	4621      	mov	r1, r4
 80151bc:	f7f4 faf6 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 80151c0:	4638      	mov	r0, r7
 80151c2:	f7f4 fb36 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151c6:	2800      	cmp	r0, #0
 80151c8:	d1d7      	bne.n	801517a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80151ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80151ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80151d2:	4293      	cmp	r3, r2
 80151d4:	dd12      	ble.n	80151fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80151d6:	1a9b      	subs	r3, r3, r2
 80151d8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80151dc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80151e0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80151e4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80151e8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80151ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 80151f0:	4642      	mov	r2, r8
 80151f2:	4633      	mov	r3, r6
 80151f4:	a902      	add	r1, sp, #8
 80151f6:	4628      	mov	r0, r5
 80151f8:	f7ff f8ce 	bl	8014398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80151fc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8015200:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015204:	4293      	cmp	r3, r2
 8015206:	dd12      	ble.n	801522e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8015208:	1a9b      	subs	r3, r3, r2
 801520a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801520e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8015212:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015216:	f8ad 001a 	strh.w	r0, [sp, #26]
 801521a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801521e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015222:	23ff      	movs	r3, #255	@ 0xff
 8015224:	4642      	mov	r2, r8
 8015226:	a902      	add	r1, sp, #8
 8015228:	4628      	mov	r0, r5
 801522a:	f7ff f8b5 	bl	8014398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801522e:	463b      	mov	r3, r7
 8015230:	aa02      	add	r2, sp, #8
 8015232:	4629      	mov	r1, r5
 8015234:	4650      	mov	r0, sl
 8015236:	f7ff f995 	bl	8014564 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801523a:	88a2      	ldrh	r2, [r4, #4]
 801523c:	8823      	ldrh	r3, [r4, #0]
 801523e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8015242:	4413      	add	r3, r2
 8015244:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015248:	440a      	add	r2, r1
 801524a:	b29b      	uxth	r3, r3
 801524c:	b292      	uxth	r2, r2
 801524e:	b211      	sxth	r1, r2
 8015250:	b218      	sxth	r0, r3
 8015252:	4288      	cmp	r0, r1
 8015254:	dd12      	ble.n	801527c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8015256:	1a9b      	subs	r3, r3, r2
 8015258:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801525c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8015260:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015264:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015268:	f8ad 001e 	strh.w	r0, [sp, #30]
 801526c:	23ff      	movs	r3, #255	@ 0xff
 801526e:	4642      	mov	r2, r8
 8015270:	a902      	add	r1, sp, #8
 8015272:	4628      	mov	r0, r5
 8015274:	f8ad 601a 	strh.w	r6, [sp, #26]
 8015278:	f7ff f88e 	bl	8014398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801527c:	88e2      	ldrh	r2, [r4, #6]
 801527e:	8863      	ldrh	r3, [r4, #2]
 8015280:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015284:	4413      	add	r3, r2
 8015286:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801528a:	440a      	add	r2, r1
 801528c:	b29b      	uxth	r3, r3
 801528e:	b292      	uxth	r2, r2
 8015290:	b211      	sxth	r1, r2
 8015292:	b218      	sxth	r0, r3
 8015294:	4288      	cmp	r0, r1
 8015296:	dd81      	ble.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015298:	1a9b      	subs	r3, r3, r2
 801529a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801529e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80152a2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80152a6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80152aa:	f8ad 101a 	strh.w	r1, [sp, #26]
 80152ae:	f8ad 001c 	strh.w	r0, [sp, #28]
 80152b2:	23ff      	movs	r3, #255	@ 0xff
 80152b4:	4642      	mov	r2, r8
 80152b6:	e762      	b.n	801517e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80152b8:	4633      	mov	r3, r6
 80152ba:	4622      	mov	r2, r4
 80152bc:	a902      	add	r1, sp, #8
 80152be:	4628      	mov	r0, r5
 80152c0:	f7ff f9c0 	bl	8014644 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80152c4:	e76a      	b.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80152c6:	e9cd 4600 	strd	r4, r6, [sp]
 80152ca:	ab02      	add	r3, sp, #8
 80152cc:	464a      	mov	r2, r9
 80152ce:	4629      	mov	r1, r5
 80152d0:	4650      	mov	r0, sl
 80152d2:	f7ff fd97 	bl	8014e04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80152d6:	e761      	b.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80152d8:	4638      	mov	r0, r7
 80152da:	f7fa fe31 	bl	800ff40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80152de:	b950      	cbnz	r0, 80152f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80152e0:	e9cd 6000 	strd	r6, r0, [sp]
 80152e4:	f8da 3000 	ldr.w	r3, [sl]
 80152e8:	aa02      	add	r2, sp, #8
 80152ea:	68de      	ldr	r6, [r3, #12]
 80152ec:	4629      	mov	r1, r5
 80152ee:	4623      	mov	r3, r4
 80152f0:	4650      	mov	r0, sl
 80152f2:	47b0      	blx	r6
 80152f4:	e752      	b.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80152f6:	f10d 0818 	add.w	r8, sp, #24
 80152fa:	4639      	mov	r1, r7
 80152fc:	4640      	mov	r0, r8
 80152fe:	f7fa fdd3 	bl	800fea8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015302:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015306:	af04      	add	r7, sp, #16
 8015308:	e887 0003 	stmia.w	r7, {r0, r1}
 801530c:	4638      	mov	r0, r7
 801530e:	4621      	mov	r1, r4
 8015310:	f7f4 fa4c 	bl	80097ac <_ZN8touchgfx4RectaNERKS0_>
 8015314:	4638      	mov	r0, r7
 8015316:	f7f4 fa8c 	bl	8009832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801531a:	b138      	cbz	r0, 801532c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801531c:	9600      	str	r6, [sp, #0]
 801531e:	4623      	mov	r3, r4
 8015320:	aa02      	add	r2, sp, #8
 8015322:	4649      	mov	r1, r9
 8015324:	4628      	mov	r0, r5
 8015326:	f7ff fdc9 	bl	8014ebc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801532a:	e737      	b.n	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801532c:	e9cd 6000 	strd	r6, r0, [sp]
 8015330:	f8da 3000 	ldr.w	r3, [sl]
 8015334:	aa02      	add	r2, sp, #8
 8015336:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801533a:	4629      	mov	r1, r5
 801533c:	463b      	mov	r3, r7
 801533e:	4650      	mov	r0, sl
 8015340:	47d8      	blx	fp
 8015342:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015346:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801534a:	4293      	cmp	r3, r2
 801534c:	dd13      	ble.n	8015376 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801534e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015352:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015356:	f8ad 0018 	strh.w	r0, [sp, #24]
 801535a:	1a9b      	subs	r3, r3, r2
 801535c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015360:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015364:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015368:	9600      	str	r6, [sp, #0]
 801536a:	4643      	mov	r3, r8
 801536c:	aa02      	add	r2, sp, #8
 801536e:	4649      	mov	r1, r9
 8015370:	4628      	mov	r0, r5
 8015372:	f7ff fda3 	bl	8014ebc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015376:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801537a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801537e:	4293      	cmp	r3, r2
 8015380:	dd13      	ble.n	80153aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8015382:	1a9b      	subs	r3, r3, r2
 8015384:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8015388:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801538c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015390:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015394:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015398:	f8ad 101e 	strh.w	r1, [sp, #30]
 801539c:	9600      	str	r6, [sp, #0]
 801539e:	4643      	mov	r3, r8
 80153a0:	aa02      	add	r2, sp, #8
 80153a2:	4649      	mov	r1, r9
 80153a4:	4628      	mov	r0, r5
 80153a6:	f7ff fd89 	bl	8014ebc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80153aa:	88a2      	ldrh	r2, [r4, #4]
 80153ac:	8823      	ldrh	r3, [r4, #0]
 80153ae:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80153b2:	4413      	add	r3, r2
 80153b4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80153b8:	440a      	add	r2, r1
 80153ba:	b29b      	uxth	r3, r3
 80153bc:	b292      	uxth	r2, r2
 80153be:	b211      	sxth	r1, r2
 80153c0:	b218      	sxth	r0, r3
 80153c2:	4288      	cmp	r0, r1
 80153c4:	dd13      	ble.n	80153ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80153c6:	1a9b      	subs	r3, r3, r2
 80153c8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80153cc:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80153d0:	f8ad 1018 	strh.w	r1, [sp, #24]
 80153d4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80153d8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80153dc:	9600      	str	r6, [sp, #0]
 80153de:	4643      	mov	r3, r8
 80153e0:	aa02      	add	r2, sp, #8
 80153e2:	4649      	mov	r1, r9
 80153e4:	4628      	mov	r0, r5
 80153e6:	f8ad 701a 	strh.w	r7, [sp, #26]
 80153ea:	f7ff fd67 	bl	8014ebc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80153ee:	88e2      	ldrh	r2, [r4, #6]
 80153f0:	8863      	ldrh	r3, [r4, #2]
 80153f2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80153f6:	4413      	add	r3, r2
 80153f8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80153fc:	440a      	add	r2, r1
 80153fe:	b29b      	uxth	r3, r3
 8015400:	b292      	uxth	r2, r2
 8015402:	b211      	sxth	r1, r2
 8015404:	b218      	sxth	r0, r3
 8015406:	4288      	cmp	r0, r1
 8015408:	f77f aec8 	ble.w	801519c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801540c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8015410:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015414:	f8ad 7018 	strh.w	r7, [sp, #24]
 8015418:	1a9b      	subs	r3, r3, r2
 801541a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801541e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015422:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015426:	9600      	str	r6, [sp, #0]
 8015428:	4643      	mov	r3, r8
 801542a:	e779      	b.n	8015320 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801542c:	20013288 	.word	0x20013288

08015430 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8015430:	b180      	cbz	r0, 8015454 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8015432:	2903      	cmp	r1, #3
 8015434:	d81c      	bhi.n	8015470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015436:	e8df f001 	tbb	[pc, r1]
 801543a:	1d02      	.short	0x1d02
 801543c:	1f08      	.short	0x1f08
 801543e:	4b10      	ldr	r3, [pc, #64]	@ (8015480 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8015440:	8818      	ldrh	r0, [r3, #0]
 8015442:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015446:	4240      	negs	r0, r0
 8015448:	4770      	bx	lr
 801544a:	4b0d      	ldr	r3, [pc, #52]	@ (8015480 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801544c:	8818      	ldrh	r0, [r3, #0]
 801544e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015452:	4770      	bx	lr
 8015454:	2903      	cmp	r1, #3
 8015456:	d80b      	bhi.n	8015470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015458:	a301      	add	r3, pc, #4	@ (adr r3, 8015460 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801545a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801545e:	bf00      	nop
 8015460:	08015475 	.word	0x08015475
 8015464:	0801544b 	.word	0x0801544b
 8015468:	08015479 	.word	0x08015479
 801546c:	0801543f 	.word	0x0801543f
 8015470:	2000      	movs	r0, #0
 8015472:	4770      	bx	lr
 8015474:	2001      	movs	r0, #1
 8015476:	4770      	bx	lr
 8015478:	f04f 30ff 	mov.w	r0, #4294967295
 801547c:	4770      	bx	lr
 801547e:	bf00      	nop
 8015480:	20013282 	.word	0x20013282

08015484 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8015484:	b180      	cbz	r0, 80154a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8015486:	2903      	cmp	r1, #3
 8015488:	d81c      	bhi.n	80154c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801548a:	e8df f001 	tbb	[pc, r1]
 801548e:	021d      	.short	0x021d
 8015490:	071f      	.short	0x071f
 8015492:	4b10      	ldr	r3, [pc, #64]	@ (80154d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015494:	8818      	ldrh	r0, [r3, #0]
 8015496:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801549a:	4770      	bx	lr
 801549c:	4b0d      	ldr	r3, [pc, #52]	@ (80154d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801549e:	8818      	ldrh	r0, [r3, #0]
 80154a0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80154a4:	4240      	negs	r0, r0
 80154a6:	4770      	bx	lr
 80154a8:	2903      	cmp	r1, #3
 80154aa:	d80b      	bhi.n	80154c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80154ac:	a301      	add	r3, pc, #4	@ (adr r3, 80154b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80154ae:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80154b2:	bf00      	nop
 80154b4:	08015493 	.word	0x08015493
 80154b8:	080154cd 	.word	0x080154cd
 80154bc:	0801549d 	.word	0x0801549d
 80154c0:	080154c9 	.word	0x080154c9
 80154c4:	2000      	movs	r0, #0
 80154c6:	4770      	bx	lr
 80154c8:	2001      	movs	r0, #1
 80154ca:	4770      	bx	lr
 80154cc:	f04f 30ff 	mov.w	r0, #4294967295
 80154d0:	4770      	bx	lr
 80154d2:	bf00      	nop
 80154d4:	20013282 	.word	0x20013282

080154d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80154d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154dc:	b099      	sub	sp, #100	@ 0x64
 80154de:	910b      	str	r1, [sp, #44]	@ 0x2c
 80154e0:	a914      	add	r1, sp, #80	@ 0x50
 80154e2:	e881 000c 	stmia.w	r1, {r2, r3}
 80154e6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 80154ea:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 80154ee:	f891 900d 	ldrb.w	r9, [r1, #13]
 80154f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80154f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80154f8:	9310      	str	r3, [sp, #64]	@ 0x40
 80154fa:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80154fe:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8015502:	930c      	str	r3, [sp, #48]	@ 0x30
 8015504:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8015508:	798f      	ldrb	r7, [r1, #6]
 801550a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801550e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8015512:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8015516:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801551a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801551e:	431f      	orrs	r7, r3
 8015520:	f000 8195 	beq.w	801584e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015524:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8015528:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801552c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8015530:	ea59 0903 	orrs.w	r9, r9, r3
 8015534:	f000 818b 	beq.w	801584e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015538:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801553c:	b29b      	uxth	r3, r3
 801553e:	2d00      	cmp	r5, #0
 8015540:	f000 812e 	beq.w	80157a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8015544:	1aed      	subs	r5, r5, r3
 8015546:	b2ad      	uxth	r5, r5
 8015548:	042b      	lsls	r3, r5, #16
 801554a:	d502      	bpl.n	8015552 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801554c:	1b64      	subs	r4, r4, r5
 801554e:	b224      	sxth	r4, r4
 8015550:	2500      	movs	r5, #0
 8015552:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015556:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801555a:	428c      	cmp	r4, r1
 801555c:	b28b      	uxth	r3, r1
 801555e:	bfbf      	itttt	lt
 8015560:	18ed      	addlt	r5, r5, r3
 8015562:	1b2c      	sublt	r4, r5, r4
 8015564:	b2a5      	uxthlt	r5, r4
 8015566:	460c      	movlt	r4, r1
 8015568:	8891      	ldrh	r1, [r2, #4]
 801556a:	440b      	add	r3, r1
 801556c:	b21b      	sxth	r3, r3
 801556e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8015570:	88d3      	ldrh	r3, [r2, #6]
 8015572:	8852      	ldrh	r2, [r2, #2]
 8015574:	4413      	add	r3, r2
 8015576:	b21b      	sxth	r3, r3
 8015578:	930d      	str	r3, [sp, #52]	@ 0x34
 801557a:	4bbe      	ldr	r3, [pc, #760]	@ (8015874 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801557c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801557e:	f893 b000 	ldrb.w	fp, [r3]
 8015582:	f10b 3cff 	add.w	ip, fp, #4294967295
 8015586:	f1dc 0300 	rsbs	r3, ip, #0
 801558a:	eb43 030c 	adc.w	r3, r3, ip
 801558e:	930e      	str	r3, [sp, #56]	@ 0x38
 8015590:	4621      	mov	r1, r4
 8015592:	4653      	mov	r3, sl
 8015594:	a814      	add	r0, sp, #80	@ 0x50
 8015596:	f7f7 f83c 	bl	800c612 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801559a:	4621      	mov	r1, r4
 801559c:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80155a0:	4653      	mov	r3, sl
 80155a2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80155a4:	a814      	add	r0, sp, #80	@ 0x50
 80155a6:	f7f7 f851 	bl	800c64c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80155aa:	a918      	add	r1, sp, #96	@ 0x60
 80155ac:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80155b0:	a817      	add	r0, sp, #92	@ 0x5c
 80155b2:	f7f7 f977 	bl	800c8a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80155b6:	f1ba 0f00 	cmp.w	sl, #0
 80155ba:	f040 80f4 	bne.w	80157a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80155be:	f1bb 0f01 	cmp.w	fp, #1
 80155c2:	f040 80f8 	bne.w	80157b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80155c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80155c8:	2b00      	cmp	r3, #0
 80155ca:	f040 8145 	bne.w	8015858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80155ce:	b2ba      	uxth	r2, r7
 80155d0:	b905      	cbnz	r5, 80155d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80155d2:	b16e      	cbz	r6, 80155f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80155d4:	fb06 5302 	mla	r3, r6, r2, r5
 80155d8:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 80155da:	fb08 f303 	mul.w	r3, r8, r3
 80155de:	4631      	mov	r1, r6
 80155e0:	f003 0607 	and.w	r6, r3, #7
 80155e4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80155e8:	9328      	str	r3, [sp, #160]	@ 0xa0
 80155ea:	eba9 0301 	sub.w	r3, r9, r1
 80155ee:	930a      	str	r3, [sp, #40]	@ 0x28
 80155f0:	4651      	mov	r1, sl
 80155f2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80155f4:	f7ff ff1c 	bl	8015430 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80155f8:	4681      	mov	r9, r0
 80155fa:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80155fc:	f7ff ff42 	bl	8015484 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8015600:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015602:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015604:	eba3 0a01 	sub.w	sl, r3, r1
 8015608:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801560a:	459a      	cmp	sl, r3
 801560c:	bfa8      	it	ge
 801560e:	469a      	movge	sl, r3
 8015610:	f1ba 0f00 	cmp.w	sl, #0
 8015614:	4683      	mov	fp, r0
 8015616:	f340 811a 	ble.w	801584e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801561a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801561c:	1b64      	subs	r4, r4, r5
 801561e:	1b1c      	subs	r4, r3, r4
 8015620:	42bc      	cmp	r4, r7
 8015622:	bfd4      	ite	le
 8015624:	ebc5 0504 	rsble	r5, r5, r4
 8015628:	ebc5 0507 	rsbgt	r5, r5, r7
 801562c:	2d00      	cmp	r5, #0
 801562e:	f340 810e 	ble.w	801584e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015632:	1b52      	subs	r2, r2, r5
 8015634:	fb08 f302 	mul.w	r3, r8, r2
 8015638:	930f      	str	r3, [sp, #60]	@ 0x3c
 801563a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801563c:	2b00      	cmp	r3, #0
 801563e:	f040 8116 	bne.w	801586e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8015642:	4b8d      	ldr	r3, [pc, #564]	@ (8015878 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8015644:	6818      	ldr	r0, [r3, #0]
 8015646:	6803      	ldr	r3, [r0, #0]
 8015648:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801564a:	4798      	blx	r3
 801564c:	2301      	movs	r3, #1
 801564e:	fa03 f308 	lsl.w	r3, r3, r8
 8015652:	4a8a      	ldr	r2, [pc, #552]	@ (801587c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8015654:	3b01      	subs	r3, #1
 8015656:	b2db      	uxtb	r3, r3
 8015658:	8811      	ldrh	r1, [r2, #0]
 801565a:	930e      	str	r3, [sp, #56]	@ 0x38
 801565c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 8015660:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 8015664:	fb01 2303 	mla	r3, r1, r3, r2
 8015668:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801566c:	930a      	str	r3, [sp, #40]	@ 0x28
 801566e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015670:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8015674:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015676:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015678:	0a19      	lsrs	r1, r3, #8
 801567a:	b2cb      	uxtb	r3, r1
 801567c:	9312      	str	r3, [sp, #72]	@ 0x48
 801567e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015680:	b2db      	uxtb	r3, r3
 8015682:	9311      	str	r3, [sp, #68]	@ 0x44
 8015684:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8015686:	095a      	lsrs	r2, r3, #5
 8015688:	4b7d      	ldr	r3, [pc, #500]	@ (8015880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801568a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801568e:	400b      	ands	r3, r1
 8015690:	4313      	orrs	r3, r2
 8015692:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8015694:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015698:	4313      	orrs	r3, r2
 801569a:	b29b      	uxth	r3, r3
 801569c:	9310      	str	r3, [sp, #64]	@ 0x40
 801569e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80156a0:	781a      	ldrb	r2, [r3, #0]
 80156a2:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80156a6:	4132      	asrs	r2, r6
 80156a8:	fb05 b919 	mls	r9, r5, r9, fp
 80156ac:	fb03 fb05 	mul.w	fp, r3, r5
 80156b0:	b2d2      	uxtb	r2, r2
 80156b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80156b4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80156b8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80156bc:	f0c0 80f5 	bcc.w	80158aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80156c0:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 80156c4:	46ae      	mov	lr, r5
 80156c6:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80156ca:	f0c0 80dd 	bcc.w	8015888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80156ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156d0:	4013      	ands	r3, r2
 80156d2:	d055      	beq.n	8015780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80156d4:	20ff      	movs	r0, #255	@ 0xff
 80156d6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80156d8:	fb90 f1f1 	sdiv	r1, r0, r1
 80156dc:	434b      	muls	r3, r1
 80156de:	2bfe      	cmp	r3, #254	@ 0xfe
 80156e0:	dd03      	ble.n	80156ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80156e2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80156e4:	4281      	cmp	r1, r0
 80156e6:	f000 80cd 	beq.w	8015884 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80156ea:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80156ec:	f8bc 4000 	ldrh.w	r4, [ip]
 80156f0:	fb11 f303 	smulbb	r3, r1, r3
 80156f4:	b29b      	uxth	r3, r3
 80156f6:	1c59      	adds	r1, r3, #1
 80156f8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80156fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015700:	b29f      	uxth	r7, r3
 8015702:	43db      	mvns	r3, r3
 8015704:	b2db      	uxtb	r3, r3
 8015706:	9309      	str	r3, [sp, #36]	@ 0x24
 8015708:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801570a:	1220      	asrs	r0, r4, #8
 801570c:	fb13 f907 	smulbb	r9, r3, r7
 8015710:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015714:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015716:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801571a:	fb00 9003 	mla	r0, r0, r3, r9
 801571e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8015720:	10e1      	asrs	r1, r4, #3
 8015722:	fb13 f907 	smulbb	r9, r3, r7
 8015726:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801572a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801572c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015730:	fb01 9103 	mla	r1, r1, r3, r9
 8015734:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015736:	00e4      	lsls	r4, r4, #3
 8015738:	fb13 f707 	smulbb	r7, r3, r7
 801573c:	b2e4      	uxtb	r4, r4
 801573e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015740:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015744:	fb04 7403 	mla	r4, r4, r3, r7
 8015748:	b280      	uxth	r0, r0
 801574a:	b2a4      	uxth	r4, r4
 801574c:	1c43      	adds	r3, r0, #1
 801574e:	f104 0901 	add.w	r9, r4, #1
 8015752:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015756:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801575a:	b289      	uxth	r1, r1
 801575c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8015760:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8015764:	ea49 0000 	orr.w	r0, r9, r0
 8015768:	f101 0901 	add.w	r9, r1, #1
 801576c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8015770:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015774:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015778:	ea40 0009 	orr.w	r0, r0, r9
 801577c:	f8ac 0000 	strh.w	r0, [ip]
 8015780:	4446      	add	r6, r8
 8015782:	b2b6      	uxth	r6, r6
 8015784:	2e07      	cmp	r6, #7
 8015786:	bf81      	itttt	hi
 8015788:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801578a:	785a      	ldrbhi	r2, [r3, #1]
 801578c:	3301      	addhi	r3, #1
 801578e:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8015790:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015792:	bf9a      	itte	ls
 8015794:	fa42 f208 	asrls.w	r2, r2, r8
 8015798:	b2d2      	uxtbls	r2, r2
 801579a:	2600      	movhi	r6, #0
 801579c:	449c      	add	ip, r3
 801579e:	e792      	b.n	80156c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80157a0:	441c      	add	r4, r3
 80157a2:	b224      	sxth	r4, r4
 80157a4:	e6d5      	b.n	8015552 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80157a6:	f1ba 0f01 	cmp.w	sl, #1
 80157aa:	f47f af0c 	bne.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80157ae:	f1bb 0f01 	cmp.w	fp, #1
 80157b2:	f47f af08 	bne.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80157b6:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 8015878 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80157ba:	f8db 0000 	ldr.w	r0, [fp]
 80157be:	6803      	ldr	r3, [r0, #0]
 80157c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80157c2:	4798      	blx	r3
 80157c4:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 80157c8:	465a      	mov	r2, fp
 80157ca:	d006      	beq.n	80157da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80157cc:	f1b8 0f04 	cmp.w	r8, #4
 80157d0:	d140      	bne.n	8015854 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80157d2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80157d4:	3300      	adds	r3, #0
 80157d6:	bf18      	it	ne
 80157d8:	2301      	movne	r3, #1
 80157da:	0580      	lsls	r0, r0, #22
 80157dc:	d56e      	bpl.n	80158bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80157de:	f1b8 0f08 	cmp.w	r8, #8
 80157e2:	d16b      	bne.n	80158bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80157e4:	2b00      	cmp	r3, #0
 80157e6:	bf0c      	ite	eq
 80157e8:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 80157ec:	f44f 7180 	movne.w	r1, #256	@ 0x100
 80157f0:	2d00      	cmp	r5, #0
 80157f2:	f47f aee8 	bne.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80157f6:	2e00      	cmp	r6, #0
 80157f8:	f47f aee5 	bne.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80157fc:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80157fe:	19e3      	adds	r3, r4, r7
 8015800:	4283      	cmp	r3, r0
 8015802:	f73f aee0 	bgt.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015806:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015808:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801580a:	444b      	add	r3, r9
 801580c:	4283      	cmp	r3, r0
 801580e:	f73f aeda 	bgt.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015812:	6810      	ldr	r0, [r2, #0]
 8015814:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8015818:	6804      	ldr	r4, [r0, #0]
 801581a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801581e:	b2bf      	uxth	r7, r7
 8015820:	f1b8 0f08 	cmp.w	r8, #8
 8015824:	f04f 0500 	mov.w	r5, #0
 8015828:	bf18      	it	ne
 801582a:	3701      	addne	r7, #1
 801582c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015830:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015832:	9104      	str	r1, [sp, #16]
 8015834:	bf18      	it	ne
 8015836:	f027 0701 	bicne.w	r7, r7, #1
 801583a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801583c:	bf18      	it	ne
 801583e:	b2bf      	uxthne	r7, r7
 8015840:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8015844:	e9cd 7900 	strd	r7, r9, [sp]
 8015848:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801584a:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801584c:	47a0      	blx	r4
 801584e:	b019      	add	sp, #100	@ 0x64
 8015850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015854:	2300      	movs	r3, #0
 8015856:	e7c0      	b.n	80157da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015858:	2208      	movs	r2, #8
 801585a:	fb92 f3f8 	sdiv	r3, r2, r8
 801585e:	1e5a      	subs	r2, r3, #1
 8015860:	443a      	add	r2, r7
 8015862:	fb92 f2f3 	sdiv	r2, r2, r3
 8015866:	fb12 f203 	smulbb	r2, r2, r3
 801586a:	b292      	uxth	r2, r2
 801586c:	e6b0      	b.n	80155d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801586e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015870:	e6ec      	b.n	801564c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8015872:	bf00      	nop
 8015874:	20013280 	.word	0x20013280
 8015878:	20013288 	.word	0x20013288
 801587c:	20013282 	.word	0x20013282
 8015880:	00fff800 	.word	0x00fff800
 8015884:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8015886:	e779      	b.n	801577c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8015888:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801588a:	b153      	cbz	r3, 80158a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801588c:	441e      	add	r6, r3
 801588e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015890:	b2b6      	uxth	r6, r6
 8015892:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8015896:	f006 0607 	and.w	r6, r6, #7
 801589a:	781a      	ldrb	r2, [r3, #0]
 801589c:	9328      	str	r3, [sp, #160]	@ 0xa0
 801589e:	4132      	asrs	r2, r6
 80158a0:	b2d2      	uxtb	r2, r2
 80158a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80158a4:	445b      	add	r3, fp
 80158a6:	930a      	str	r3, [sp, #40]	@ 0x28
 80158a8:	e706      	b.n	80156b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80158aa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80158ac:	2b00      	cmp	r3, #0
 80158ae:	d1ce      	bne.n	801584e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80158b0:	4b05      	ldr	r3, [pc, #20]	@ (80158c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80158b2:	6818      	ldr	r0, [r3, #0]
 80158b4:	6803      	ldr	r3, [r0, #0]
 80158b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158b8:	4798      	blx	r3
 80158ba:	e7c8      	b.n	801584e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80158bc:	2b00      	cmp	r3, #0
 80158be:	f43f ae82 	beq.w	80155c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80158c2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80158c6:	e793      	b.n	80157f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80158c8:	20013288 	.word	0x20013288

080158cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80158cc:	b538      	push	{r3, r4, r5, lr}
 80158ce:	4c15      	ldr	r4, [pc, #84]	@ (8015924 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80158d0:	7823      	ldrb	r3, [r4, #0]
 80158d2:	f3bf 8f5b 	dmb	ish
 80158d6:	07da      	lsls	r2, r3, #31
 80158d8:	4605      	mov	r5, r0
 80158da:	d40b      	bmi.n	80158f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80158dc:	4620      	mov	r0, r4
 80158de:	f007 fed5 	bl	801d68c <__cxa_guard_acquire>
 80158e2:	b138      	cbz	r0, 80158f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80158e4:	4620      	mov	r0, r4
 80158e6:	f007 fedd 	bl	801d6a4 <__cxa_guard_release>
 80158ea:	4a0f      	ldr	r2, [pc, #60]	@ (8015928 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80158ec:	490f      	ldr	r1, [pc, #60]	@ (801592c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80158ee:	4810      	ldr	r0, [pc, #64]	@ (8015930 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80158f0:	f007 fec5 	bl	801d67e <__aeabi_atexit>
 80158f4:	4c0f      	ldr	r4, [pc, #60]	@ (8015934 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80158f6:	7823      	ldrb	r3, [r4, #0]
 80158f8:	f3bf 8f5b 	dmb	ish
 80158fc:	07db      	lsls	r3, r3, #31
 80158fe:	d40b      	bmi.n	8015918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015900:	4620      	mov	r0, r4
 8015902:	f007 fec3 	bl	801d68c <__cxa_guard_acquire>
 8015906:	b138      	cbz	r0, 8015918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015908:	4620      	mov	r0, r4
 801590a:	f007 fecb 	bl	801d6a4 <__cxa_guard_release>
 801590e:	4a06      	ldr	r2, [pc, #24]	@ (8015928 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015910:	4909      	ldr	r1, [pc, #36]	@ (8015938 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8015912:	480a      	ldr	r0, [pc, #40]	@ (801593c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015914:	f007 feb3 	bl	801d67e <__aeabi_atexit>
 8015918:	4b05      	ldr	r3, [pc, #20]	@ (8015930 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801591a:	612b      	str	r3, [r5, #16]
 801591c:	4b07      	ldr	r3, [pc, #28]	@ (801593c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801591e:	616b      	str	r3, [r5, #20]
 8015920:	bd38      	pop	{r3, r4, r5, pc}
 8015922:	bf00      	nop
 8015924:	20013360 	.word	0x20013360
 8015928:	20000000 	.word	0x20000000
 801592c:	080126cf 	.word	0x080126cf
 8015930:	200000d8 	.word	0x200000d8
 8015934:	20013364 	.word	0x20013364
 8015938:	080126cd 	.word	0x080126cd
 801593c:	200000dc 	.word	0x200000dc

08015940 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8015940:	b538      	push	{r3, r4, r5, lr}
 8015942:	4c15      	ldr	r4, [pc, #84]	@ (8015998 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8015944:	7823      	ldrb	r3, [r4, #0]
 8015946:	f3bf 8f5b 	dmb	ish
 801594a:	07da      	lsls	r2, r3, #31
 801594c:	4605      	mov	r5, r0
 801594e:	d40b      	bmi.n	8015968 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015950:	4620      	mov	r0, r4
 8015952:	f007 fe9b 	bl	801d68c <__cxa_guard_acquire>
 8015956:	b138      	cbz	r0, 8015968 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015958:	4620      	mov	r0, r4
 801595a:	f007 fea3 	bl	801d6a4 <__cxa_guard_release>
 801595e:	4a0f      	ldr	r2, [pc, #60]	@ (801599c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015960:	490f      	ldr	r1, [pc, #60]	@ (80159a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8015962:	4810      	ldr	r0, [pc, #64]	@ (80159a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015964:	f007 fe8b 	bl	801d67e <__aeabi_atexit>
 8015968:	4c0f      	ldr	r4, [pc, #60]	@ (80159a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801596a:	7823      	ldrb	r3, [r4, #0]
 801596c:	f3bf 8f5b 	dmb	ish
 8015970:	07db      	lsls	r3, r3, #31
 8015972:	d40b      	bmi.n	801598c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015974:	4620      	mov	r0, r4
 8015976:	f007 fe89 	bl	801d68c <__cxa_guard_acquire>
 801597a:	b138      	cbz	r0, 801598c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801597c:	4620      	mov	r0, r4
 801597e:	f007 fe91 	bl	801d6a4 <__cxa_guard_release>
 8015982:	4a06      	ldr	r2, [pc, #24]	@ (801599c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015984:	4909      	ldr	r1, [pc, #36]	@ (80159ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8015986:	480a      	ldr	r0, [pc, #40]	@ (80159b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015988:	f007 fe79 	bl	801d67e <__aeabi_atexit>
 801598c:	4b05      	ldr	r3, [pc, #20]	@ (80159a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801598e:	60ab      	str	r3, [r5, #8]
 8015990:	4b07      	ldr	r3, [pc, #28]	@ (80159b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015992:	60eb      	str	r3, [r5, #12]
 8015994:	bd38      	pop	{r3, r4, r5, pc}
 8015996:	bf00      	nop
 8015998:	20013338 	.word	0x20013338
 801599c:	20000000 	.word	0x20000000
 80159a0:	080126d3 	.word	0x080126d3
 80159a4:	200000b0 	.word	0x200000b0
 80159a8:	2001333c 	.word	0x2001333c
 80159ac:	080126d1 	.word	0x080126d1
 80159b0:	200000b4 	.word	0x200000b4

080159b4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80159b4:	b510      	push	{r4, lr}
 80159b6:	4604      	mov	r4, r0
 80159b8:	f7ff ff88 	bl	80158cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80159bc:	4620      	mov	r0, r4
 80159be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80159c2:	f7ff bfbd 	b.w	8015940 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080159c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80159c8:	b538      	push	{r3, r4, r5, lr}
 80159ca:	4c15      	ldr	r4, [pc, #84]	@ (8015a20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80159cc:	7823      	ldrb	r3, [r4, #0]
 80159ce:	f3bf 8f5b 	dmb	ish
 80159d2:	07da      	lsls	r2, r3, #31
 80159d4:	4605      	mov	r5, r0
 80159d6:	d40b      	bmi.n	80159f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80159d8:	4620      	mov	r0, r4
 80159da:	f007 fe57 	bl	801d68c <__cxa_guard_acquire>
 80159de:	b138      	cbz	r0, 80159f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80159e0:	4620      	mov	r0, r4
 80159e2:	f007 fe5f 	bl	801d6a4 <__cxa_guard_release>
 80159e6:	4a0f      	ldr	r2, [pc, #60]	@ (8015a24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80159e8:	490f      	ldr	r1, [pc, #60]	@ (8015a28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80159ea:	4810      	ldr	r0, [pc, #64]	@ (8015a2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80159ec:	f007 fe47 	bl	801d67e <__aeabi_atexit>
 80159f0:	4c0f      	ldr	r4, [pc, #60]	@ (8015a30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80159f2:	7823      	ldrb	r3, [r4, #0]
 80159f4:	f3bf 8f5b 	dmb	ish
 80159f8:	07db      	lsls	r3, r3, #31
 80159fa:	d40b      	bmi.n	8015a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80159fc:	4620      	mov	r0, r4
 80159fe:	f007 fe45 	bl	801d68c <__cxa_guard_acquire>
 8015a02:	b138      	cbz	r0, 8015a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015a04:	4620      	mov	r0, r4
 8015a06:	f007 fe4d 	bl	801d6a4 <__cxa_guard_release>
 8015a0a:	4a06      	ldr	r2, [pc, #24]	@ (8015a24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015a0c:	4909      	ldr	r1, [pc, #36]	@ (8015a34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015a0e:	480a      	ldr	r0, [pc, #40]	@ (8015a38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015a10:	f007 fe35 	bl	801d67e <__aeabi_atexit>
 8015a14:	4b05      	ldr	r3, [pc, #20]	@ (8015a2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015a16:	622b      	str	r3, [r5, #32]
 8015a18:	4b07      	ldr	r3, [pc, #28]	@ (8015a38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015a1a:	626b      	str	r3, [r5, #36]	@ 0x24
 8015a1c:	bd38      	pop	{r3, r4, r5, pc}
 8015a1e:	bf00      	nop
 8015a20:	20013368 	.word	0x20013368
 8015a24:	20000000 	.word	0x20000000
 8015a28:	080126c7 	.word	0x080126c7
 8015a2c:	200000e0 	.word	0x200000e0
 8015a30:	2001336c 	.word	0x2001336c
 8015a34:	080126c5 	.word	0x080126c5
 8015a38:	200000e4 	.word	0x200000e4

08015a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015a3c:	b538      	push	{r3, r4, r5, lr}
 8015a3e:	4c15      	ldr	r4, [pc, #84]	@ (8015a94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015a40:	7823      	ldrb	r3, [r4, #0]
 8015a42:	f3bf 8f5b 	dmb	ish
 8015a46:	07da      	lsls	r2, r3, #31
 8015a48:	4605      	mov	r5, r0
 8015a4a:	d40b      	bmi.n	8015a64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015a4c:	4620      	mov	r0, r4
 8015a4e:	f007 fe1d 	bl	801d68c <__cxa_guard_acquire>
 8015a52:	b138      	cbz	r0, 8015a64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015a54:	4620      	mov	r0, r4
 8015a56:	f007 fe25 	bl	801d6a4 <__cxa_guard_release>
 8015a5a:	4a0f      	ldr	r2, [pc, #60]	@ (8015a98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015a5c:	490f      	ldr	r1, [pc, #60]	@ (8015a9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015a5e:	4810      	ldr	r0, [pc, #64]	@ (8015aa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015a60:	f007 fe0d 	bl	801d67e <__aeabi_atexit>
 8015a64:	4c0f      	ldr	r4, [pc, #60]	@ (8015aa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8015a66:	7823      	ldrb	r3, [r4, #0]
 8015a68:	f3bf 8f5b 	dmb	ish
 8015a6c:	07db      	lsls	r3, r3, #31
 8015a6e:	d40b      	bmi.n	8015a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015a70:	4620      	mov	r0, r4
 8015a72:	f007 fe0b 	bl	801d68c <__cxa_guard_acquire>
 8015a76:	b138      	cbz	r0, 8015a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015a78:	4620      	mov	r0, r4
 8015a7a:	f007 fe13 	bl	801d6a4 <__cxa_guard_release>
 8015a7e:	4a06      	ldr	r2, [pc, #24]	@ (8015a98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015a80:	4909      	ldr	r1, [pc, #36]	@ (8015aa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8015a82:	480a      	ldr	r0, [pc, #40]	@ (8015aac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015a84:	f007 fdfb 	bl	801d67e <__aeabi_atexit>
 8015a88:	4b05      	ldr	r3, [pc, #20]	@ (8015aa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015a8a:	61ab      	str	r3, [r5, #24]
 8015a8c:	4b07      	ldr	r3, [pc, #28]	@ (8015aac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015a8e:	61eb      	str	r3, [r5, #28]
 8015a90:	bd38      	pop	{r3, r4, r5, pc}
 8015a92:	bf00      	nop
 8015a94:	20013340 	.word	0x20013340
 8015a98:	20000000 	.word	0x20000000
 8015a9c:	080126cb 	.word	0x080126cb
 8015aa0:	200000b8 	.word	0x200000b8
 8015aa4:	20013344 	.word	0x20013344
 8015aa8:	080126c9 	.word	0x080126c9
 8015aac:	200000bc 	.word	0x200000bc

08015ab0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8015ab0:	b510      	push	{r4, lr}
 8015ab2:	4604      	mov	r4, r0
 8015ab4:	f7ff ff88 	bl	80159c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015ab8:	4620      	mov	r0, r4
 8015aba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015abe:	f7ff bfbd 	b.w	8015a3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015ac4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015ac4:	b538      	push	{r3, r4, r5, lr}
 8015ac6:	4c15      	ldr	r4, [pc, #84]	@ (8015b1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015ac8:	7823      	ldrb	r3, [r4, #0]
 8015aca:	f3bf 8f5b 	dmb	ish
 8015ace:	07da      	lsls	r2, r3, #31
 8015ad0:	4605      	mov	r5, r0
 8015ad2:	d40b      	bmi.n	8015aec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015ad4:	4620      	mov	r0, r4
 8015ad6:	f007 fdd9 	bl	801d68c <__cxa_guard_acquire>
 8015ada:	b138      	cbz	r0, 8015aec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015adc:	4620      	mov	r0, r4
 8015ade:	f007 fde1 	bl	801d6a4 <__cxa_guard_release>
 8015ae2:	4a0f      	ldr	r2, [pc, #60]	@ (8015b20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015ae4:	490f      	ldr	r1, [pc, #60]	@ (8015b24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8015ae6:	4810      	ldr	r0, [pc, #64]	@ (8015b28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015ae8:	f007 fdc9 	bl	801d67e <__aeabi_atexit>
 8015aec:	4c0f      	ldr	r4, [pc, #60]	@ (8015b2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015aee:	7823      	ldrb	r3, [r4, #0]
 8015af0:	f3bf 8f5b 	dmb	ish
 8015af4:	07db      	lsls	r3, r3, #31
 8015af6:	d40b      	bmi.n	8015b10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015af8:	4620      	mov	r0, r4
 8015afa:	f007 fdc7 	bl	801d68c <__cxa_guard_acquire>
 8015afe:	b138      	cbz	r0, 8015b10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015b00:	4620      	mov	r0, r4
 8015b02:	f007 fdcf 	bl	801d6a4 <__cxa_guard_release>
 8015b06:	4a06      	ldr	r2, [pc, #24]	@ (8015b20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015b08:	4909      	ldr	r1, [pc, #36]	@ (8015b30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015b0a:	480a      	ldr	r0, [pc, #40]	@ (8015b34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015b0c:	f007 fdb7 	bl	801d67e <__aeabi_atexit>
 8015b10:	4b05      	ldr	r3, [pc, #20]	@ (8015b28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015b12:	632b      	str	r3, [r5, #48]	@ 0x30
 8015b14:	4b07      	ldr	r3, [pc, #28]	@ (8015b34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015b16:	636b      	str	r3, [r5, #52]	@ 0x34
 8015b18:	bd38      	pop	{r3, r4, r5, pc}
 8015b1a:	bf00      	nop
 8015b1c:	20013378 	.word	0x20013378
 8015b20:	20000000 	.word	0x20000000
 8015b24:	080126bf 	.word	0x080126bf
 8015b28:	200000f0 	.word	0x200000f0
 8015b2c:	2001337c 	.word	0x2001337c
 8015b30:	080126bd 	.word	0x080126bd
 8015b34:	200000f4 	.word	0x200000f4

08015b38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8015b38:	b538      	push	{r3, r4, r5, lr}
 8015b3a:	4c15      	ldr	r4, [pc, #84]	@ (8015b90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8015b3c:	7823      	ldrb	r3, [r4, #0]
 8015b3e:	f3bf 8f5b 	dmb	ish
 8015b42:	07da      	lsls	r2, r3, #31
 8015b44:	4605      	mov	r5, r0
 8015b46:	d40b      	bmi.n	8015b60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015b48:	4620      	mov	r0, r4
 8015b4a:	f007 fd9f 	bl	801d68c <__cxa_guard_acquire>
 8015b4e:	b138      	cbz	r0, 8015b60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8015b50:	4620      	mov	r0, r4
 8015b52:	f007 fda7 	bl	801d6a4 <__cxa_guard_release>
 8015b56:	4a0f      	ldr	r2, [pc, #60]	@ (8015b94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015b58:	490f      	ldr	r1, [pc, #60]	@ (8015b98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8015b5a:	4810      	ldr	r0, [pc, #64]	@ (8015b9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015b5c:	f007 fd8f 	bl	801d67e <__aeabi_atexit>
 8015b60:	4c0f      	ldr	r4, [pc, #60]	@ (8015ba0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8015b62:	7823      	ldrb	r3, [r4, #0]
 8015b64:	f3bf 8f5b 	dmb	ish
 8015b68:	07db      	lsls	r3, r3, #31
 8015b6a:	d40b      	bmi.n	8015b84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015b6c:	4620      	mov	r0, r4
 8015b6e:	f007 fd8d 	bl	801d68c <__cxa_guard_acquire>
 8015b72:	b138      	cbz	r0, 8015b84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015b74:	4620      	mov	r0, r4
 8015b76:	f007 fd95 	bl	801d6a4 <__cxa_guard_release>
 8015b7a:	4a06      	ldr	r2, [pc, #24]	@ (8015b94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015b7c:	4909      	ldr	r1, [pc, #36]	@ (8015ba4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8015b7e:	480a      	ldr	r0, [pc, #40]	@ (8015ba8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015b80:	f007 fd7d 	bl	801d67e <__aeabi_atexit>
 8015b84:	4b05      	ldr	r3, [pc, #20]	@ (8015b9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015b86:	62ab      	str	r3, [r5, #40]	@ 0x28
 8015b88:	4b07      	ldr	r3, [pc, #28]	@ (8015ba8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015b8a:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8015b8c:	bd38      	pop	{r3, r4, r5, pc}
 8015b8e:	bf00      	nop
 8015b90:	20013348 	.word	0x20013348
 8015b94:	20000000 	.word	0x20000000
 8015b98:	080126c3 	.word	0x080126c3
 8015b9c:	200000c0 	.word	0x200000c0
 8015ba0:	2001334c 	.word	0x2001334c
 8015ba4:	080126c1 	.word	0x080126c1
 8015ba8:	200000c4 	.word	0x200000c4

08015bac <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8015bac:	b510      	push	{r4, lr}
 8015bae:	4604      	mov	r4, r0
 8015bb0:	f7ff ff88 	bl	8015ac4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8015bb4:	4620      	mov	r0, r4
 8015bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bba:	f7ff bfbd 	b.w	8015b38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08015bc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8015bc0:	b538      	push	{r3, r4, r5, lr}
 8015bc2:	4c15      	ldr	r4, [pc, #84]	@ (8015c18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8015bc4:	7823      	ldrb	r3, [r4, #0]
 8015bc6:	f3bf 8f5b 	dmb	ish
 8015bca:	07da      	lsls	r2, r3, #31
 8015bcc:	4605      	mov	r5, r0
 8015bce:	d40b      	bmi.n	8015be8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015bd0:	4620      	mov	r0, r4
 8015bd2:	f007 fd5b 	bl	801d68c <__cxa_guard_acquire>
 8015bd6:	b138      	cbz	r0, 8015be8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015bd8:	4620      	mov	r0, r4
 8015bda:	f007 fd63 	bl	801d6a4 <__cxa_guard_release>
 8015bde:	4a0f      	ldr	r2, [pc, #60]	@ (8015c1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015be0:	490f      	ldr	r1, [pc, #60]	@ (8015c20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8015be2:	4810      	ldr	r0, [pc, #64]	@ (8015c24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015be4:	f007 fd4b 	bl	801d67e <__aeabi_atexit>
 8015be8:	4c0f      	ldr	r4, [pc, #60]	@ (8015c28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015bea:	7823      	ldrb	r3, [r4, #0]
 8015bec:	f3bf 8f5b 	dmb	ish
 8015bf0:	07db      	lsls	r3, r3, #31
 8015bf2:	d40b      	bmi.n	8015c0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015bf4:	4620      	mov	r0, r4
 8015bf6:	f007 fd49 	bl	801d68c <__cxa_guard_acquire>
 8015bfa:	b138      	cbz	r0, 8015c0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015bfc:	4620      	mov	r0, r4
 8015bfe:	f007 fd51 	bl	801d6a4 <__cxa_guard_release>
 8015c02:	4a06      	ldr	r2, [pc, #24]	@ (8015c1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015c04:	4909      	ldr	r1, [pc, #36]	@ (8015c2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8015c06:	480a      	ldr	r0, [pc, #40]	@ (8015c30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015c08:	f007 fd39 	bl	801d67e <__aeabi_atexit>
 8015c0c:	4b05      	ldr	r3, [pc, #20]	@ (8015c24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015c0e:	652b      	str	r3, [r5, #80]	@ 0x50
 8015c10:	4b07      	ldr	r3, [pc, #28]	@ (8015c30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015c12:	656b      	str	r3, [r5, #84]	@ 0x54
 8015c14:	bd38      	pop	{r3, r4, r5, pc}
 8015c16:	bf00      	nop
 8015c18:	20013380 	.word	0x20013380
 8015c1c:	20000000 	.word	0x20000000
 8015c20:	080126af 	.word	0x080126af
 8015c24:	200000f8 	.word	0x200000f8
 8015c28:	20013384 	.word	0x20013384
 8015c2c:	080126ad 	.word	0x080126ad
 8015c30:	200000fc 	.word	0x200000fc

08015c34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8015c34:	b538      	push	{r3, r4, r5, lr}
 8015c36:	4c15      	ldr	r4, [pc, #84]	@ (8015c8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8015c38:	7823      	ldrb	r3, [r4, #0]
 8015c3a:	f3bf 8f5b 	dmb	ish
 8015c3e:	07da      	lsls	r2, r3, #31
 8015c40:	4605      	mov	r5, r0
 8015c42:	d40b      	bmi.n	8015c5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015c44:	4620      	mov	r0, r4
 8015c46:	f007 fd21 	bl	801d68c <__cxa_guard_acquire>
 8015c4a:	b138      	cbz	r0, 8015c5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8015c4c:	4620      	mov	r0, r4
 8015c4e:	f007 fd29 	bl	801d6a4 <__cxa_guard_release>
 8015c52:	4a0f      	ldr	r2, [pc, #60]	@ (8015c90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015c54:	490f      	ldr	r1, [pc, #60]	@ (8015c94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8015c56:	4810      	ldr	r0, [pc, #64]	@ (8015c98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015c58:	f007 fd11 	bl	801d67e <__aeabi_atexit>
 8015c5c:	4c0f      	ldr	r4, [pc, #60]	@ (8015c9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8015c5e:	7823      	ldrb	r3, [r4, #0]
 8015c60:	f3bf 8f5b 	dmb	ish
 8015c64:	07db      	lsls	r3, r3, #31
 8015c66:	d40b      	bmi.n	8015c80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015c68:	4620      	mov	r0, r4
 8015c6a:	f007 fd0f 	bl	801d68c <__cxa_guard_acquire>
 8015c6e:	b138      	cbz	r0, 8015c80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015c70:	4620      	mov	r0, r4
 8015c72:	f007 fd17 	bl	801d6a4 <__cxa_guard_release>
 8015c76:	4a06      	ldr	r2, [pc, #24]	@ (8015c90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015c78:	4909      	ldr	r1, [pc, #36]	@ (8015ca0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8015c7a:	480a      	ldr	r0, [pc, #40]	@ (8015ca4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015c7c:	f007 fcff 	bl	801d67e <__aeabi_atexit>
 8015c80:	4b05      	ldr	r3, [pc, #20]	@ (8015c98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015c82:	64ab      	str	r3, [r5, #72]	@ 0x48
 8015c84:	4b07      	ldr	r3, [pc, #28]	@ (8015ca4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015c86:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8015c88:	bd38      	pop	{r3, r4, r5, pc}
 8015c8a:	bf00      	nop
 8015c8c:	20013388 	.word	0x20013388
 8015c90:	20000000 	.word	0x20000000
 8015c94:	080126b3 	.word	0x080126b3
 8015c98:	20000100 	.word	0x20000100
 8015c9c:	2001338c 	.word	0x2001338c
 8015ca0:	080126b1 	.word	0x080126b1
 8015ca4:	20000104 	.word	0x20000104

08015ca8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8015ca8:	b538      	push	{r3, r4, r5, lr}
 8015caa:	4c15      	ldr	r4, [pc, #84]	@ (8015d00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8015cac:	7823      	ldrb	r3, [r4, #0]
 8015cae:	f3bf 8f5b 	dmb	ish
 8015cb2:	07da      	lsls	r2, r3, #31
 8015cb4:	4605      	mov	r5, r0
 8015cb6:	d40b      	bmi.n	8015cd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015cb8:	4620      	mov	r0, r4
 8015cba:	f007 fce7 	bl	801d68c <__cxa_guard_acquire>
 8015cbe:	b138      	cbz	r0, 8015cd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015cc0:	4620      	mov	r0, r4
 8015cc2:	f007 fcef 	bl	801d6a4 <__cxa_guard_release>
 8015cc6:	4a0f      	ldr	r2, [pc, #60]	@ (8015d04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015cc8:	490f      	ldr	r1, [pc, #60]	@ (8015d08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8015cca:	4810      	ldr	r0, [pc, #64]	@ (8015d0c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015ccc:	f007 fcd7 	bl	801d67e <__aeabi_atexit>
 8015cd0:	4c0f      	ldr	r4, [pc, #60]	@ (8015d10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8015cd2:	7823      	ldrb	r3, [r4, #0]
 8015cd4:	f3bf 8f5b 	dmb	ish
 8015cd8:	07db      	lsls	r3, r3, #31
 8015cda:	d40b      	bmi.n	8015cf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015cdc:	4620      	mov	r0, r4
 8015cde:	f007 fcd5 	bl	801d68c <__cxa_guard_acquire>
 8015ce2:	b138      	cbz	r0, 8015cf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015ce4:	4620      	mov	r0, r4
 8015ce6:	f007 fcdd 	bl	801d6a4 <__cxa_guard_release>
 8015cea:	4a06      	ldr	r2, [pc, #24]	@ (8015d04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015cec:	4909      	ldr	r1, [pc, #36]	@ (8015d14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8015cee:	480a      	ldr	r0, [pc, #40]	@ (8015d18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015cf0:	f007 fcc5 	bl	801d67e <__aeabi_atexit>
 8015cf4:	4b05      	ldr	r3, [pc, #20]	@ (8015d0c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015cf6:	642b      	str	r3, [r5, #64]	@ 0x40
 8015cf8:	4b07      	ldr	r3, [pc, #28]	@ (8015d18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015cfa:	646b      	str	r3, [r5, #68]	@ 0x44
 8015cfc:	bd38      	pop	{r3, r4, r5, pc}
 8015cfe:	bf00      	nop
 8015d00:	20013350 	.word	0x20013350
 8015d04:	20000000 	.word	0x20000000
 8015d08:	080126b7 	.word	0x080126b7
 8015d0c:	200000c8 	.word	0x200000c8
 8015d10:	20013354 	.word	0x20013354
 8015d14:	080126b5 	.word	0x080126b5
 8015d18:	200000cc 	.word	0x200000cc

08015d1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015d1c:	b538      	push	{r3, r4, r5, lr}
 8015d1e:	4c15      	ldr	r4, [pc, #84]	@ (8015d74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015d20:	7823      	ldrb	r3, [r4, #0]
 8015d22:	f3bf 8f5b 	dmb	ish
 8015d26:	07da      	lsls	r2, r3, #31
 8015d28:	4605      	mov	r5, r0
 8015d2a:	d40b      	bmi.n	8015d44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015d2c:	4620      	mov	r0, r4
 8015d2e:	f007 fcad 	bl	801d68c <__cxa_guard_acquire>
 8015d32:	b138      	cbz	r0, 8015d44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015d34:	4620      	mov	r0, r4
 8015d36:	f007 fcb5 	bl	801d6a4 <__cxa_guard_release>
 8015d3a:	4a0f      	ldr	r2, [pc, #60]	@ (8015d78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015d3c:	490f      	ldr	r1, [pc, #60]	@ (8015d7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8015d3e:	4810      	ldr	r0, [pc, #64]	@ (8015d80 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015d40:	f007 fc9d 	bl	801d67e <__aeabi_atexit>
 8015d44:	4c0f      	ldr	r4, [pc, #60]	@ (8015d84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8015d46:	7823      	ldrb	r3, [r4, #0]
 8015d48:	f3bf 8f5b 	dmb	ish
 8015d4c:	07db      	lsls	r3, r3, #31
 8015d4e:	d40b      	bmi.n	8015d68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015d50:	4620      	mov	r0, r4
 8015d52:	f007 fc9b 	bl	801d68c <__cxa_guard_acquire>
 8015d56:	b138      	cbz	r0, 8015d68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015d58:	4620      	mov	r0, r4
 8015d5a:	f007 fca3 	bl	801d6a4 <__cxa_guard_release>
 8015d5e:	4a06      	ldr	r2, [pc, #24]	@ (8015d78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015d60:	4909      	ldr	r1, [pc, #36]	@ (8015d88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8015d62:	480a      	ldr	r0, [pc, #40]	@ (8015d8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015d64:	f007 fc8b 	bl	801d67e <__aeabi_atexit>
 8015d68:	4b05      	ldr	r3, [pc, #20]	@ (8015d80 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015d6a:	63ab      	str	r3, [r5, #56]	@ 0x38
 8015d6c:	4b07      	ldr	r3, [pc, #28]	@ (8015d8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015d6e:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8015d70:	bd38      	pop	{r3, r4, r5, pc}
 8015d72:	bf00      	nop
 8015d74:	20013370 	.word	0x20013370
 8015d78:	20000000 	.word	0x20000000
 8015d7c:	080126bb 	.word	0x080126bb
 8015d80:	200000e8 	.word	0x200000e8
 8015d84:	20013374 	.word	0x20013374
 8015d88:	080126b9 	.word	0x080126b9
 8015d8c:	200000ec 	.word	0x200000ec

08015d90 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8015d90:	b510      	push	{r4, lr}
 8015d92:	4604      	mov	r4, r0
 8015d94:	f7ff ff14 	bl	8015bc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8015d98:	4620      	mov	r0, r4
 8015d9a:	f7ff ff85 	bl	8015ca8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8015d9e:	4620      	mov	r0, r4
 8015da0:	f7ff ff48 	bl	8015c34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8015da4:	4620      	mov	r0, r4
 8015da6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015daa:	f7ff bfb7 	b.w	8015d1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08015db0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8015db0:	b538      	push	{r3, r4, r5, lr}
 8015db2:	4c15      	ldr	r4, [pc, #84]	@ (8015e08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8015db4:	7823      	ldrb	r3, [r4, #0]
 8015db6:	f3bf 8f5b 	dmb	ish
 8015dba:	07da      	lsls	r2, r3, #31
 8015dbc:	4605      	mov	r5, r0
 8015dbe:	d40b      	bmi.n	8015dd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015dc0:	4620      	mov	r0, r4
 8015dc2:	f007 fc63 	bl	801d68c <__cxa_guard_acquire>
 8015dc6:	b138      	cbz	r0, 8015dd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015dc8:	4620      	mov	r0, r4
 8015dca:	f007 fc6b 	bl	801d6a4 <__cxa_guard_release>
 8015dce:	4a0f      	ldr	r2, [pc, #60]	@ (8015e0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015dd0:	490f      	ldr	r1, [pc, #60]	@ (8015e10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8015dd2:	4810      	ldr	r0, [pc, #64]	@ (8015e14 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015dd4:	f007 fc53 	bl	801d67e <__aeabi_atexit>
 8015dd8:	4c0f      	ldr	r4, [pc, #60]	@ (8015e18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8015dda:	7823      	ldrb	r3, [r4, #0]
 8015ddc:	f3bf 8f5b 	dmb	ish
 8015de0:	07db      	lsls	r3, r3, #31
 8015de2:	d40b      	bmi.n	8015dfc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015de4:	4620      	mov	r0, r4
 8015de6:	f007 fc51 	bl	801d68c <__cxa_guard_acquire>
 8015dea:	b138      	cbz	r0, 8015dfc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015dec:	4620      	mov	r0, r4
 8015dee:	f007 fc59 	bl	801d6a4 <__cxa_guard_release>
 8015df2:	4a06      	ldr	r2, [pc, #24]	@ (8015e0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015df4:	4909      	ldr	r1, [pc, #36]	@ (8015e1c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8015df6:	480a      	ldr	r0, [pc, #40]	@ (8015e20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015df8:	f007 fc41 	bl	801d67e <__aeabi_atexit>
 8015dfc:	4b05      	ldr	r3, [pc, #20]	@ (8015e14 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015dfe:	662b      	str	r3, [r5, #96]	@ 0x60
 8015e00:	4b07      	ldr	r3, [pc, #28]	@ (8015e20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015e02:	666b      	str	r3, [r5, #100]	@ 0x64
 8015e04:	bd38      	pop	{r3, r4, r5, pc}
 8015e06:	bf00      	nop
 8015e08:	20013358 	.word	0x20013358
 8015e0c:	20000000 	.word	0x20000000
 8015e10:	080126a7 	.word	0x080126a7
 8015e14:	200000d0 	.word	0x200000d0
 8015e18:	2001335c 	.word	0x2001335c
 8015e1c:	080126a5 	.word	0x080126a5
 8015e20:	200000d4 	.word	0x200000d4

08015e24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8015e24:	b538      	push	{r3, r4, r5, lr}
 8015e26:	4c15      	ldr	r4, [pc, #84]	@ (8015e7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015e28:	7823      	ldrb	r3, [r4, #0]
 8015e2a:	f3bf 8f5b 	dmb	ish
 8015e2e:	07da      	lsls	r2, r3, #31
 8015e30:	4605      	mov	r5, r0
 8015e32:	d40b      	bmi.n	8015e4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015e34:	4620      	mov	r0, r4
 8015e36:	f007 fc29 	bl	801d68c <__cxa_guard_acquire>
 8015e3a:	b138      	cbz	r0, 8015e4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015e3c:	4620      	mov	r0, r4
 8015e3e:	f007 fc31 	bl	801d6a4 <__cxa_guard_release>
 8015e42:	4a0f      	ldr	r2, [pc, #60]	@ (8015e80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015e44:	490f      	ldr	r1, [pc, #60]	@ (8015e84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8015e46:	4810      	ldr	r0, [pc, #64]	@ (8015e88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015e48:	f007 fc19 	bl	801d67e <__aeabi_atexit>
 8015e4c:	4c0f      	ldr	r4, [pc, #60]	@ (8015e8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8015e4e:	7823      	ldrb	r3, [r4, #0]
 8015e50:	f3bf 8f5b 	dmb	ish
 8015e54:	07db      	lsls	r3, r3, #31
 8015e56:	d40b      	bmi.n	8015e70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015e58:	4620      	mov	r0, r4
 8015e5a:	f007 fc17 	bl	801d68c <__cxa_guard_acquire>
 8015e5e:	b138      	cbz	r0, 8015e70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015e60:	4620      	mov	r0, r4
 8015e62:	f007 fc1f 	bl	801d6a4 <__cxa_guard_release>
 8015e66:	4a06      	ldr	r2, [pc, #24]	@ (8015e80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015e68:	4909      	ldr	r1, [pc, #36]	@ (8015e90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8015e6a:	480a      	ldr	r0, [pc, #40]	@ (8015e94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015e6c:	f007 fc07 	bl	801d67e <__aeabi_atexit>
 8015e70:	4b05      	ldr	r3, [pc, #20]	@ (8015e88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015e72:	65ab      	str	r3, [r5, #88]	@ 0x58
 8015e74:	4b07      	ldr	r3, [pc, #28]	@ (8015e94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015e76:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8015e78:	bd38      	pop	{r3, r4, r5, pc}
 8015e7a:	bf00      	nop
 8015e7c:	20013330 	.word	0x20013330
 8015e80:	20000000 	.word	0x20000000
 8015e84:	080126ab 	.word	0x080126ab
 8015e88:	200000a8 	.word	0x200000a8
 8015e8c:	20013334 	.word	0x20013334
 8015e90:	080126a9 	.word	0x080126a9
 8015e94:	200000ac 	.word	0x200000ac

08015e98 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8015e98:	b510      	push	{r4, lr}
 8015e9a:	4604      	mov	r4, r0
 8015e9c:	f7ff ff88 	bl	8015db0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8015ea0:	4620      	mov	r0, r4
 8015ea2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015ea6:	f7ff bfbd 	b.w	8015e24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08015eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8015eac:	b538      	push	{r3, r4, r5, lr}
 8015eae:	4c15      	ldr	r4, [pc, #84]	@ (8015f04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8015eb0:	7823      	ldrb	r3, [r4, #0]
 8015eb2:	f3bf 8f5b 	dmb	ish
 8015eb6:	07da      	lsls	r2, r3, #31
 8015eb8:	4605      	mov	r5, r0
 8015eba:	d40b      	bmi.n	8015ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015ebc:	4620      	mov	r0, r4
 8015ebe:	f007 fbe5 	bl	801d68c <__cxa_guard_acquire>
 8015ec2:	b138      	cbz	r0, 8015ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015ec4:	4620      	mov	r0, r4
 8015ec6:	f007 fbed 	bl	801d6a4 <__cxa_guard_release>
 8015eca:	4a0f      	ldr	r2, [pc, #60]	@ (8015f08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015ecc:	490f      	ldr	r1, [pc, #60]	@ (8015f0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8015ece:	4810      	ldr	r0, [pc, #64]	@ (8015f10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015ed0:	f007 fbd5 	bl	801d67e <__aeabi_atexit>
 8015ed4:	4c0f      	ldr	r4, [pc, #60]	@ (8015f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8015ed6:	7823      	ldrb	r3, [r4, #0]
 8015ed8:	f3bf 8f5b 	dmb	ish
 8015edc:	07db      	lsls	r3, r3, #31
 8015ede:	d40b      	bmi.n	8015ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015ee0:	4620      	mov	r0, r4
 8015ee2:	f007 fbd3 	bl	801d68c <__cxa_guard_acquire>
 8015ee6:	b138      	cbz	r0, 8015ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015ee8:	4620      	mov	r0, r4
 8015eea:	f007 fbdb 	bl	801d6a4 <__cxa_guard_release>
 8015eee:	4a06      	ldr	r2, [pc, #24]	@ (8015f08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015ef0:	4909      	ldr	r1, [pc, #36]	@ (8015f18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8015ef2:	480a      	ldr	r0, [pc, #40]	@ (8015f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015ef4:	f007 fbc3 	bl	801d67e <__aeabi_atexit>
 8015ef8:	4b05      	ldr	r3, [pc, #20]	@ (8015f10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015efa:	672b      	str	r3, [r5, #112]	@ 0x70
 8015efc:	4b07      	ldr	r3, [pc, #28]	@ (8015f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015efe:	676b      	str	r3, [r5, #116]	@ 0x74
 8015f00:	bd38      	pop	{r3, r4, r5, pc}
 8015f02:	bf00      	nop
 8015f04:	20013328 	.word	0x20013328
 8015f08:	20000000 	.word	0x20000000
 8015f0c:	0801269f 	.word	0x0801269f
 8015f10:	200000a0 	.word	0x200000a0
 8015f14:	2001332c 	.word	0x2001332c
 8015f18:	0801269d 	.word	0x0801269d
 8015f1c:	200000a4 	.word	0x200000a4

08015f20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015f20:	b538      	push	{r3, r4, r5, lr}
 8015f22:	4c15      	ldr	r4, [pc, #84]	@ (8015f78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8015f24:	7823      	ldrb	r3, [r4, #0]
 8015f26:	f3bf 8f5b 	dmb	ish
 8015f2a:	07da      	lsls	r2, r3, #31
 8015f2c:	4605      	mov	r5, r0
 8015f2e:	d40b      	bmi.n	8015f48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015f30:	4620      	mov	r0, r4
 8015f32:	f007 fbab 	bl	801d68c <__cxa_guard_acquire>
 8015f36:	b138      	cbz	r0, 8015f48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015f38:	4620      	mov	r0, r4
 8015f3a:	f007 fbb3 	bl	801d6a4 <__cxa_guard_release>
 8015f3e:	4a0f      	ldr	r2, [pc, #60]	@ (8015f7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015f40:	490f      	ldr	r1, [pc, #60]	@ (8015f80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8015f42:	4810      	ldr	r0, [pc, #64]	@ (8015f84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015f44:	f007 fb9b 	bl	801d67e <__aeabi_atexit>
 8015f48:	4c0f      	ldr	r4, [pc, #60]	@ (8015f88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8015f4a:	7823      	ldrb	r3, [r4, #0]
 8015f4c:	f3bf 8f5b 	dmb	ish
 8015f50:	07db      	lsls	r3, r3, #31
 8015f52:	d40b      	bmi.n	8015f6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015f54:	4620      	mov	r0, r4
 8015f56:	f007 fb99 	bl	801d68c <__cxa_guard_acquire>
 8015f5a:	b138      	cbz	r0, 8015f6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015f5c:	4620      	mov	r0, r4
 8015f5e:	f007 fba1 	bl	801d6a4 <__cxa_guard_release>
 8015f62:	4a06      	ldr	r2, [pc, #24]	@ (8015f7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015f64:	4909      	ldr	r1, [pc, #36]	@ (8015f8c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8015f66:	480a      	ldr	r0, [pc, #40]	@ (8015f90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015f68:	f007 fb89 	bl	801d67e <__aeabi_atexit>
 8015f6c:	4b05      	ldr	r3, [pc, #20]	@ (8015f84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015f6e:	66ab      	str	r3, [r5, #104]	@ 0x68
 8015f70:	4b07      	ldr	r3, [pc, #28]	@ (8015f90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015f72:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8015f74:	bd38      	pop	{r3, r4, r5, pc}
 8015f76:	bf00      	nop
 8015f78:	20013320 	.word	0x20013320
 8015f7c:	20000000 	.word	0x20000000
 8015f80:	080126a3 	.word	0x080126a3
 8015f84:	20000098 	.word	0x20000098
 8015f88:	20013324 	.word	0x20013324
 8015f8c:	080126a1 	.word	0x080126a1
 8015f90:	2000009c 	.word	0x2000009c

08015f94 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8015f94:	b510      	push	{r4, lr}
 8015f96:	4604      	mov	r4, r0
 8015f98:	f7ff ff88 	bl	8015eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8015f9c:	4620      	mov	r0, r4
 8015f9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015fa2:	f7ff bfbd 	b.w	8015f20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08015fa6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8015fa6:	b510      	push	{r4, lr}
 8015fa8:	4604      	mov	r4, r0
 8015faa:	f7ff fff3 	bl	8015f94 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8015fae:	4620      	mov	r0, r4
 8015fb0:	f7ff ff72 	bl	8015e98 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8015fb4:	4620      	mov	r0, r4
 8015fb6:	f7ff fdf9 	bl	8015bac <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8015fba:	4620      	mov	r0, r4
 8015fbc:	f7ff fcfa 	bl	80159b4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8015fc0:	4620      	mov	r0, r4
 8015fc2:	f7ff fd75 	bl	8015ab0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8015fc6:	4620      	mov	r0, r4
 8015fc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015fcc:	f7ff bee0 	b.w	8015d90 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08015fd0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8015fd0:	b538      	push	{r3, r4, r5, lr}
 8015fd2:	4c0b      	ldr	r4, [pc, #44]	@ (8016000 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8015fd4:	7823      	ldrb	r3, [r4, #0]
 8015fd6:	f3bf 8f5b 	dmb	ish
 8015fda:	07db      	lsls	r3, r3, #31
 8015fdc:	4605      	mov	r5, r0
 8015fde:	d40b      	bmi.n	8015ff8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8015fe0:	4620      	mov	r0, r4
 8015fe2:	f007 fb53 	bl	801d68c <__cxa_guard_acquire>
 8015fe6:	b138      	cbz	r0, 8015ff8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8015fe8:	4620      	mov	r0, r4
 8015fea:	f007 fb5b 	bl	801d6a4 <__cxa_guard_release>
 8015fee:	4a05      	ldr	r2, [pc, #20]	@ (8016004 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8015ff0:	4905      	ldr	r1, [pc, #20]	@ (8016008 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8015ff2:	4806      	ldr	r0, [pc, #24]	@ (801600c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8015ff4:	f007 fb43 	bl	801d67e <__aeabi_atexit>
 8015ff8:	4b04      	ldr	r3, [pc, #16]	@ (801600c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8015ffa:	67ab      	str	r3, [r5, #120]	@ 0x78
 8015ffc:	bd38      	pop	{r3, r4, r5, pc}
 8015ffe:	bf00      	nop
 8016000:	20013314 	.word	0x20013314
 8016004:	20000000 	.word	0x20000000
 8016008:	0801269b 	.word	0x0801269b
 801600c:	20000090 	.word	0x20000090

08016010 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8016010:	b538      	push	{r3, r4, r5, lr}
 8016012:	4c0b      	ldr	r4, [pc, #44]	@ (8016040 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8016014:	7823      	ldrb	r3, [r4, #0]
 8016016:	f3bf 8f5b 	dmb	ish
 801601a:	07db      	lsls	r3, r3, #31
 801601c:	4605      	mov	r5, r0
 801601e:	d40b      	bmi.n	8016038 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8016020:	4620      	mov	r0, r4
 8016022:	f007 fb33 	bl	801d68c <__cxa_guard_acquire>
 8016026:	b138      	cbz	r0, 8016038 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8016028:	4620      	mov	r0, r4
 801602a:	f007 fb3b 	bl	801d6a4 <__cxa_guard_release>
 801602e:	4a05      	ldr	r2, [pc, #20]	@ (8016044 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8016030:	4905      	ldr	r1, [pc, #20]	@ (8016048 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8016032:	4806      	ldr	r0, [pc, #24]	@ (801604c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8016034:	f007 fb23 	bl	801d67e <__aeabi_atexit>
 8016038:	4b04      	ldr	r3, [pc, #16]	@ (801604c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801603a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801603c:	bd38      	pop	{r3, r4, r5, pc}
 801603e:	bf00      	nop
 8016040:	20013318 	.word	0x20013318
 8016044:	20000000 	.word	0x20000000
 8016048:	08012699 	.word	0x08012699
 801604c:	20000094 	.word	0x20000094

08016050 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8016050:	b570      	push	{r4, r5, r6, lr}
 8016052:	4d0d      	ldr	r5, [pc, #52]	@ (8016088 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8016054:	4c0d      	ldr	r4, [pc, #52]	@ (801608c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8016056:	782b      	ldrb	r3, [r5, #0]
 8016058:	f3bf 8f5b 	dmb	ish
 801605c:	f013 0f01 	tst.w	r3, #1
 8016060:	4606      	mov	r6, r0
 8016062:	d10d      	bne.n	8016080 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8016064:	4628      	mov	r0, r5
 8016066:	f007 fb11 	bl	801d68c <__cxa_guard_acquire>
 801606a:	b148      	cbz	r0, 8016080 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801606c:	4b08      	ldr	r3, [pc, #32]	@ (8016090 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801606e:	6023      	str	r3, [r4, #0]
 8016070:	4628      	mov	r0, r5
 8016072:	f007 fb17 	bl	801d6a4 <__cxa_guard_release>
 8016076:	4a07      	ldr	r2, [pc, #28]	@ (8016094 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8016078:	4907      	ldr	r1, [pc, #28]	@ (8016098 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801607a:	4620      	mov	r0, r4
 801607c:	f007 faff 	bl	801d67e <__aeabi_atexit>
 8016080:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
 8016084:	bd70      	pop	{r4, r5, r6, pc}
 8016086:	bf00      	nop
 8016088:	2001331c 	.word	0x2001331c
 801608c:	20013390 	.word	0x20013390
 8016090:	08020738 	.word	0x08020738
 8016094:	20000000 	.word	0x20000000
 8016098:	08012697 	.word	0x08012697

0801609c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801609c:	b510      	push	{r4, lr}
 801609e:	4604      	mov	r4, r0
 80160a0:	f7ff ff96 	bl	8015fd0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80160a4:	4620      	mov	r0, r4
 80160a6:	f7ff ffb3 	bl	8016010 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80160aa:	4620      	mov	r0, r4
 80160ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80160b0:	f7ff bfce 	b.w	8016050 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080160b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80160b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160b8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80160bc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 80160c0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 80160c4:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80160c8:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80160cc:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80160d0:	8808      	ldrh	r0, [r1, #0]
 80160d2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80160d6:	2d00      	cmp	r5, #0
 80160d8:	eb02 0a0c 	add.w	sl, r2, ip
 80160dc:	f2c0 80b0 	blt.w	8016240 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80160e0:	45ab      	cmp	fp, r5
 80160e2:	f340 80ad 	ble.w	8016240 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80160e6:	2c00      	cmp	r4, #0
 80160e8:	f2c0 80a8 	blt.w	801623c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80160ec:	45a6      	cmp	lr, r4
 80160ee:	f340 80a5 	ble.w	801623c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80160f2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80160f6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80160fa:	1c62      	adds	r2, r4, #1
 80160fc:	f100 80a3 	bmi.w	8016246 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8016100:	4596      	cmp	lr, r2
 8016102:	f340 80a0 	ble.w	8016246 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8016106:	f1b9 0f00 	cmp.w	r9, #0
 801610a:	f000 809c 	beq.w	8016246 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801610e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016112:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8016116:	3501      	adds	r5, #1
 8016118:	f100 8099 	bmi.w	801624e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801611c:	45ab      	cmp	fp, r5
 801611e:	f340 8096 	ble.w	801624e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8016122:	2f00      	cmp	r7, #0
 8016124:	f000 8093 	beq.w	801624e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8016128:	2c00      	cmp	r4, #0
 801612a:	f2c0 808e 	blt.w	801624a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801612e:	45a6      	cmp	lr, r4
 8016130:	f340 808b 	ble.w	801624a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8016134:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8016138:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801613c:	3401      	adds	r4, #1
 801613e:	f100 8089 	bmi.w	8016254 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016142:	45a6      	cmp	lr, r4
 8016144:	f340 8086 	ble.w	8016254 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016148:	f1b9 0f00 	cmp.w	r9, #0
 801614c:	f000 8082 	beq.w	8016254 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016150:	44d6      	add	lr, sl
 8016152:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016156:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801615a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801615e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8016162:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8016166:	fb19 fe07 	smulbb	lr, r9, r7
 801616a:	ea44 0808 	orr.w	r8, r4, r8
 801616e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8016172:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8016176:	f1c7 0210 	rsb	r2, r7, #16
 801617a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801617e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8016182:	ea44 0c0c 	orr.w	ip, r4, ip
 8016186:	eba2 0209 	sub.w	r2, r2, r9
 801618a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801618e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8016192:	fb04 f40c 	mul.w	r4, r4, ip
 8016196:	fb02 4808 	mla	r8, r2, r8, r4
 801619a:	041a      	lsls	r2, r3, #16
 801619c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80161a0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80161a4:	4313      	orrs	r3, r2
 80161a6:	042a      	lsls	r2, r5, #16
 80161a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80161ac:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80161b0:	fb0e 8303 	mla	r3, lr, r3, r8
 80161b4:	432a      	orrs	r2, r5
 80161b6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80161ba:	fb07 3202 	mla	r2, r7, r2, r3
 80161be:	0d53      	lsrs	r3, r2, #21
 80161c0:	0952      	lsrs	r2, r2, #5
 80161c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80161c6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80161ca:	431a      	orrs	r2, r3
 80161cc:	b293      	uxth	r3, r2
 80161ce:	b2b4      	uxth	r4, r6
 80161d0:	1202      	asrs	r2, r0, #8
 80161d2:	43f6      	mvns	r6, r6
 80161d4:	b2f6      	uxtb	r6, r6
 80161d6:	121d      	asrs	r5, r3, #8
 80161d8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80161dc:	fb12 f206 	smulbb	r2, r2, r6
 80161e0:	10c7      	asrs	r7, r0, #3
 80161e2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80161e6:	00c0      	lsls	r0, r0, #3
 80161e8:	fb05 2504 	mla	r5, r5, r4, r2
 80161ec:	b2c0      	uxtb	r0, r0
 80161ee:	10da      	asrs	r2, r3, #3
 80161f0:	00db      	lsls	r3, r3, #3
 80161f2:	b2db      	uxtb	r3, r3
 80161f4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80161f8:	fb10 f006 	smulbb	r0, r0, r6
 80161fc:	b2ad      	uxth	r5, r5
 80161fe:	fb03 0004 	mla	r0, r3, r4, r0
 8016202:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8016206:	fb17 f706 	smulbb	r7, r7, r6
 801620a:	b280      	uxth	r0, r0
 801620c:	1c6b      	adds	r3, r5, #1
 801620e:	fb02 7204 	mla	r2, r2, r4, r7
 8016212:	b292      	uxth	r2, r2
 8016214:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016218:	1c43      	adds	r3, r0, #1
 801621a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801621e:	1c50      	adds	r0, r2, #1
 8016220:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016224:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016228:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801622c:	0952      	lsrs	r2, r2, #5
 801622e:	432b      	orrs	r3, r5
 8016230:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016234:	4313      	orrs	r3, r2
 8016236:	800b      	strh	r3, [r1, #0]
 8016238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801623c:	4680      	mov	r8, r0
 801623e:	e75c      	b.n	80160fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8016240:	4684      	mov	ip, r0
 8016242:	4680      	mov	r8, r0
 8016244:	e767      	b.n	8016116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8016246:	4684      	mov	ip, r0
 8016248:	e765      	b.n	8016116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801624a:	4605      	mov	r5, r0
 801624c:	e776      	b.n	801613c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801624e:	4603      	mov	r3, r0
 8016250:	4605      	mov	r5, r0
 8016252:	e782      	b.n	801615a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8016254:	4603      	mov	r3, r0
 8016256:	e780      	b.n	801615a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08016258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801625c:	b099      	sub	sp, #100	@ 0x64
 801625e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8016262:	9215      	str	r2, [sp, #84]	@ 0x54
 8016264:	9309      	str	r3, [sp, #36]	@ 0x24
 8016266:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8016268:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801626c:	930d      	str	r3, [sp, #52]	@ 0x34
 801626e:	910c      	str	r1, [sp, #48]	@ 0x30
 8016270:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8016274:	9016      	str	r0, [sp, #88]	@ 0x58
 8016276:	6850      	ldr	r0, [r2, #4]
 8016278:	6812      	ldr	r2, [r2, #0]
 801627a:	fb00 1303 	mla	r3, r0, r3, r1
 801627e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8016282:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8016284:	681b      	ldr	r3, [r3, #0]
 8016286:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016288:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801628a:	685e      	ldr	r6, [r3, #4]
 801628c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801628e:	43db      	mvns	r3, r3
 8016290:	b2db      	uxtb	r3, r3
 8016292:	3604      	adds	r6, #4
 8016294:	930a      	str	r3, [sp, #40]	@ 0x28
 8016296:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016298:	2b00      	cmp	r3, #0
 801629a:	dc03      	bgt.n	80162a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801629c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801629e:	2b00      	cmp	r3, #0
 80162a0:	f340 8225 	ble.w	80166ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80162a4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80162a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80162aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80162ae:	1e48      	subs	r0, r1, #1
 80162b0:	1e57      	subs	r7, r2, #1
 80162b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80162b4:	2b00      	cmp	r3, #0
 80162b6:	f340 80e3 	ble.w	8016480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80162ba:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80162be:	ea4f 4325 	mov.w	r3, r5, asr #16
 80162c2:	d406      	bmi.n	80162d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80162c4:	4584      	cmp	ip, r0
 80162c6:	da04      	bge.n	80162d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80162c8:	2b00      	cmp	r3, #0
 80162ca:	db02      	blt.n	80162d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80162cc:	42bb      	cmp	r3, r7
 80162ce:	f2c0 80d8 	blt.w	8016482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80162d2:	f11c 0c01 	adds.w	ip, ip, #1
 80162d6:	f100 80c9 	bmi.w	801646c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80162da:	4561      	cmp	r1, ip
 80162dc:	f2c0 80c6 	blt.w	801646c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80162e0:	3301      	adds	r3, #1
 80162e2:	f100 80c3 	bmi.w	801646c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80162e6:	429a      	cmp	r2, r3
 80162e8:	f2c0 80c0 	blt.w	801646c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80162ec:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80162f0:	4647      	mov	r7, r8
 80162f2:	f1bb 0f00 	cmp.w	fp, #0
 80162f6:	f340 80e3 	ble.w	80164c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80162fa:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80162fc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80162fe:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016302:	689b      	ldr	r3, [r3, #8]
 8016304:	ea5f 422a 	movs.w	r2, sl, asr #16
 8016308:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801630c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8016310:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016314:	f100 8121 	bmi.w	801655a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016318:	f103 39ff 	add.w	r9, r3, #4294967295
 801631c:	454a      	cmp	r2, r9
 801631e:	f280 811c 	bge.w	801655a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016322:	f1bc 0f00 	cmp.w	ip, #0
 8016326:	f2c0 8118 	blt.w	801655a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801632a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801632e:	45cc      	cmp	ip, r9
 8016330:	f280 8113 	bge.w	801655a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016334:	b21b      	sxth	r3, r3
 8016336:	fb0c 2203 	mla	r2, ip, r3, r2
 801633a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801633c:	eb04 0902 	add.w	r9, r4, r2
 8016340:	5ca2      	ldrb	r2, [r4, r2]
 8016342:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8016346:	2800      	cmp	r0, #0
 8016348:	f000 80fe 	beq.w	8016548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801634c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016350:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8016354:	9211      	str	r2, [sp, #68]	@ 0x44
 8016356:	b151      	cbz	r1, 801636e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016358:	eb09 0203 	add.w	r2, r9, r3
 801635c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016360:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016364:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016366:	7853      	ldrb	r3, [r2, #1]
 8016368:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801636c:	9312      	str	r3, [sp, #72]	@ 0x48
 801636e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016370:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016372:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016376:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801637a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801637e:	ea4c 0c03 	orr.w	ip, ip, r3
 8016382:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8016384:	041b      	lsls	r3, r3, #16
 8016386:	fb10 f201 	smulbb	r2, r0, r1
 801638a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801638e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016392:	10d2      	asrs	r2, r2, #3
 8016394:	4323      	orrs	r3, r4
 8016396:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801639a:	4353      	muls	r3, r2
 801639c:	fb09 330c 	mla	r3, r9, ip, r3
 80163a0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80163a4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80163a8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80163ac:	ea4c 0e0e 	orr.w	lr, ip, lr
 80163b0:	f1c1 0c10 	rsb	ip, r1, #16
 80163b4:	ebac 0c00 	sub.w	ip, ip, r0
 80163b8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80163bc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80163c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80163c2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80163c4:	0418      	lsls	r0, r3, #16
 80163c6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80163ca:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80163ce:	4318      	orrs	r0, r3
 80163d0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80163d4:	fb02 c200 	mla	r2, r2, r0, ip
 80163d8:	0d53      	lsrs	r3, r2, #21
 80163da:	0952      	lsrs	r2, r2, #5
 80163dc:	8838      	ldrh	r0, [r7, #0]
 80163de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80163e2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80163e6:	431a      	orrs	r2, r3
 80163e8:	b292      	uxth	r2, r2
 80163ea:	1201      	asrs	r1, r0, #8
 80163ec:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80163f0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80163f4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80163f8:	fb11 f104 	smulbb	r1, r1, r4
 80163fc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8016400:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016404:	00c0      	lsls	r0, r0, #3
 8016406:	fb0c 1c03 	mla	ip, ip, r3, r1
 801640a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801640e:	10d1      	asrs	r1, r2, #3
 8016410:	b2c0      	uxtb	r0, r0
 8016412:	00d2      	lsls	r2, r2, #3
 8016414:	b2d2      	uxtb	r2, r2
 8016416:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801641a:	fb1e fe04 	smulbb	lr, lr, r4
 801641e:	fb10 f004 	smulbb	r0, r0, r4
 8016422:	fa1f fc8c 	uxth.w	ip, ip
 8016426:	fb01 e103 	mla	r1, r1, r3, lr
 801642a:	fb02 0303 	mla	r3, r2, r3, r0
 801642e:	b29a      	uxth	r2, r3
 8016430:	f10c 0301 	add.w	r3, ip, #1
 8016434:	b289      	uxth	r1, r1
 8016436:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801643a:	1c53      	adds	r3, r2, #1
 801643c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016440:	1c4a      	adds	r2, r1, #1
 8016442:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016446:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801644a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801644e:	0949      	lsrs	r1, r1, #5
 8016450:	ea43 030c 	orr.w	r3, r3, ip
 8016454:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016458:	430b      	orrs	r3, r1
 801645a:	803b      	strh	r3, [r7, #0]
 801645c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801645e:	449a      	add	sl, r3
 8016460:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016462:	3702      	adds	r7, #2
 8016464:	441d      	add	r5, r3
 8016466:	f10b 3bff 	add.w	fp, fp, #4294967295
 801646a:	e742      	b.n	80162f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801646c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801646e:	449a      	add	sl, r3
 8016470:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016472:	441d      	add	r5, r3
 8016474:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016476:	3b01      	subs	r3, #1
 8016478:	9309      	str	r3, [sp, #36]	@ 0x24
 801647a:	f108 0802 	add.w	r8, r8, #2
 801647e:	e718      	b.n	80162b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016480:	d023      	beq.n	80164ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8016482:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016484:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8016486:	3b01      	subs	r3, #1
 8016488:	fb00 a003 	mla	r0, r0, r3, sl
 801648c:	1400      	asrs	r0, r0, #16
 801648e:	f53f af2d 	bmi.w	80162ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016492:	3901      	subs	r1, #1
 8016494:	4288      	cmp	r0, r1
 8016496:	f6bf af29 	bge.w	80162ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801649a:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801649c:	fb01 5303 	mla	r3, r1, r3, r5
 80164a0:	141b      	asrs	r3, r3, #16
 80164a2:	f53f af23 	bmi.w	80162ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80164a6:	3a01      	subs	r2, #1
 80164a8:	4293      	cmp	r3, r2
 80164aa:	f6bf af1f 	bge.w	80162ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80164ae:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80164b2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80164b6:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 80164ba:	f1be 0f00 	cmp.w	lr, #0
 80164be:	dc6c      	bgt.n	801659a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80164c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80164c2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80164c6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80164ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80164cc:	2b00      	cmp	r3, #0
 80164ce:	f340 810e 	ble.w	80166ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80164d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80164da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80164de:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80164e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80164ec:	eef0 6a62 	vmov.f32	s13, s5
 80164f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80164f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80164f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80164fc:	ee16 aa90 	vmov	sl, s13
 8016500:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016504:	eef0 6a43 	vmov.f32	s13, s6
 8016508:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801650c:	ee12 2a90 	vmov	r2, s5
 8016510:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016514:	fb92 f3f3 	sdiv	r3, r2, r3
 8016518:	ee13 2a10 	vmov	r2, s6
 801651c:	9325      	str	r3, [sp, #148]	@ 0x94
 801651e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8016520:	fb92 f3f3 	sdiv	r3, r2, r3
 8016524:	9326      	str	r3, [sp, #152]	@ 0x98
 8016526:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016528:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801652a:	3b01      	subs	r3, #1
 801652c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016530:	930c      	str	r3, [sp, #48]	@ 0x30
 8016532:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8016534:	bf08      	it	eq
 8016536:	4613      	moveq	r3, r2
 8016538:	ee16 5a90 	vmov	r5, s13
 801653c:	9309      	str	r3, [sp, #36]	@ 0x24
 801653e:	eeb0 3a67 	vmov.f32	s6, s15
 8016542:	eef0 2a47 	vmov.f32	s5, s14
 8016546:	e6a6      	b.n	8016296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016548:	2900      	cmp	r1, #0
 801654a:	f43f af10 	beq.w	801636e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801654e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016552:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016556:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016558:	e709      	b.n	801636e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801655a:	f112 0901 	adds.w	r9, r2, #1
 801655e:	f53f af7d 	bmi.w	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016562:	454b      	cmp	r3, r9
 8016564:	f6ff af7a 	blt.w	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016568:	f11c 0901 	adds.w	r9, ip, #1
 801656c:	f53f af76 	bmi.w	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016570:	45ce      	cmp	lr, r9
 8016572:	f6ff af73 	blt.w	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016576:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8016578:	9202      	str	r2, [sp, #8]
 801657a:	b21b      	sxth	r3, r3
 801657c:	fa0f f28e 	sxth.w	r2, lr
 8016580:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016584:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016588:	9201      	str	r2, [sp, #4]
 801658a:	9300      	str	r3, [sp, #0]
 801658c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801658e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8016590:	4633      	mov	r3, r6
 8016592:	4639      	mov	r1, r7
 8016594:	f7ff fd8e 	bl	80160b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016598:	e760      	b.n	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801659a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801659c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801659e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80165a2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80165a6:	1429      	asrs	r1, r5, #16
 80165a8:	fb03 2101 	mla	r1, r3, r1, r2
 80165ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80165ae:	440a      	add	r2, r1
 80165b0:	5c61      	ldrb	r1, [r4, r1]
 80165b2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80165b6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80165ba:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80165be:	f1bc 0f00 	cmp.w	ip, #0
 80165c2:	f000 808c 	beq.w	80166de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80165c6:	7857      	ldrb	r7, [r2, #1]
 80165c8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80165cc:	9413      	str	r4, [sp, #76]	@ 0x4c
 80165ce:	b140      	cbz	r0, 80165e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80165d0:	18d7      	adds	r7, r2, r3
 80165d2:	5cd3      	ldrb	r3, [r2, r3]
 80165d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80165d8:	9310      	str	r3, [sp, #64]	@ 0x40
 80165da:	787b      	ldrb	r3, [r7, #1]
 80165dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80165e0:	9314      	str	r3, [sp, #80]	@ 0x50
 80165e2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80165e4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80165e6:	fb1c f200 	smulbb	r2, ip, r0
 80165ea:	041f      	lsls	r7, r3, #16
 80165ec:	10d2      	asrs	r2, r2, #3
 80165ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80165f2:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 80165f6:	431f      	orrs	r7, r3
 80165f8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80165fc:	9317      	str	r3, [sp, #92]	@ 0x5c
 80165fe:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8016600:	041b      	lsls	r3, r3, #16
 8016602:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8016606:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801660a:	ea43 030b 	orr.w	r3, r3, fp
 801660e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8016610:	4353      	muls	r3, r2
 8016612:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016616:	fb04 3707 	mla	r7, r4, r7, r3
 801661a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801661e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8016622:	ea43 0b01 	orr.w	fp, r3, r1
 8016626:	f1c0 0110 	rsb	r1, r0, #16
 801662a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801662c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801662e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016632:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016636:	fb0c 770b 	mla	r7, ip, fp, r7
 801663a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801663e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8016642:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016646:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801664a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801664e:	fb02 770c 	mla	r7, r2, ip, r7
 8016652:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016654:	0d79      	lsrs	r1, r7, #21
 8016656:	097f      	lsrs	r7, r7, #5
 8016658:	8812      	ldrh	r2, [r2, #0]
 801665a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801665e:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8016662:	430f      	orrs	r7, r1
 8016664:	b2bb      	uxth	r3, r7
 8016666:	1211      	asrs	r1, r2, #8
 8016668:	1218      	asrs	r0, r3, #8
 801666a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801666e:	fb11 f104 	smulbb	r1, r1, r4
 8016672:	10d7      	asrs	r7, r2, #3
 8016674:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016678:	00d2      	lsls	r2, r2, #3
 801667a:	fb00 1009 	mla	r0, r0, r9, r1
 801667e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016682:	10d9      	asrs	r1, r3, #3
 8016684:	b2d2      	uxtb	r2, r2
 8016686:	00db      	lsls	r3, r3, #3
 8016688:	fb17 f704 	smulbb	r7, r7, r4
 801668c:	fb12 f204 	smulbb	r2, r2, r4
 8016690:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016694:	b2db      	uxtb	r3, r3
 8016696:	b280      	uxth	r0, r0
 8016698:	fb01 7109 	mla	r1, r1, r9, r7
 801669c:	fb03 2309 	mla	r3, r3, r9, r2
 80166a0:	b29b      	uxth	r3, r3
 80166a2:	b289      	uxth	r1, r1
 80166a4:	1c42      	adds	r2, r0, #1
 80166a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80166aa:	1c4f      	adds	r7, r1, #1
 80166ac:	1c5a      	adds	r2, r3, #1
 80166ae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80166b2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80166b6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80166ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80166be:	0949      	lsrs	r1, r1, #5
 80166c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80166c2:	4310      	orrs	r0, r2
 80166c4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80166c8:	4308      	orrs	r0, r1
 80166ca:	f823 0b02 	strh.w	r0, [r3], #2
 80166ce:	930e      	str	r3, [sp, #56]	@ 0x38
 80166d0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80166d2:	449a      	add	sl, r3
 80166d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80166d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80166da:	441d      	add	r5, r3
 80166dc:	e6ed      	b.n	80164ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80166de:	2800      	cmp	r0, #0
 80166e0:	f43f af7f 	beq.w	80165e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80166e4:	5cd3      	ldrb	r3, [r2, r3]
 80166e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80166ea:	9310      	str	r3, [sp, #64]	@ 0x40
 80166ec:	e779      	b.n	80165e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80166ee:	b019      	add	sp, #100	@ 0x64
 80166f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080166f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80166f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80166f8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 80166fc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8016700:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8016704:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8016708:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801670c:	8808      	ldrh	r0, [r1, #0]
 801670e:	fb08 470e 	mla	r7, r8, lr, r4
 8016712:	f1b8 0f00 	cmp.w	r8, #0
 8016716:	eb02 0907 	add.w	r9, r2, r7
 801671a:	db67      	blt.n	80167ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801671c:	45c2      	cmp	sl, r8
 801671e:	dd65      	ble.n	80167ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8016720:	2c00      	cmp	r4, #0
 8016722:	db61      	blt.n	80167e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016724:	45a6      	cmp	lr, r4
 8016726:	dd5f      	ble.n	80167e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016728:	5dd2      	ldrb	r2, [r2, r7]
 801672a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801672e:	1c62      	adds	r2, r4, #1
 8016730:	d45f      	bmi.n	80167f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016732:	4596      	cmp	lr, r2
 8016734:	dd5d      	ble.n	80167f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016736:	2d00      	cmp	r5, #0
 8016738:	d05b      	beq.n	80167f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801673a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801673e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016742:	f118 0801 	adds.w	r8, r8, #1
 8016746:	d458      	bmi.n	80167fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016748:	45c2      	cmp	sl, r8
 801674a:	dd56      	ble.n	80167fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801674c:	2e00      	cmp	r6, #0
 801674e:	d054      	beq.n	80167fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016750:	2c00      	cmp	r4, #0
 8016752:	db50      	blt.n	80167f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016754:	45a6      	cmp	lr, r4
 8016756:	dd4e      	ble.n	80167f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016758:	f819 200e 	ldrb.w	r2, [r9, lr]
 801675c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016760:	3401      	adds	r4, #1
 8016762:	d407      	bmi.n	8016774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016764:	45a6      	cmp	lr, r4
 8016766:	dd05      	ble.n	8016774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016768:	b125      	cbz	r5, 8016774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801676a:	44ce      	add	lr, r9
 801676c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016770:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8016774:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8016778:	fb15 f406 	smulbb	r4, r5, r6
 801677c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016780:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8016784:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8016788:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801678c:	ea43 0c0c 	orr.w	ip, r3, ip
 8016790:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8016794:	f1c6 0310 	rsb	r3, r6, #16
 8016798:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801679c:	1b5b      	subs	r3, r3, r5
 801679e:	ea4e 0707 	orr.w	r7, lr, r7
 80167a2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80167a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80167aa:	437d      	muls	r5, r7
 80167ac:	fb03 5c0c 	mla	ip, r3, ip, r5
 80167b0:	0403      	lsls	r3, r0, #16
 80167b2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80167b6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80167ba:	4318      	orrs	r0, r3
 80167bc:	0413      	lsls	r3, r2, #16
 80167be:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80167c2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80167c6:	4313      	orrs	r3, r2
 80167c8:	fb04 c000 	mla	r0, r4, r0, ip
 80167cc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80167d0:	fb06 0003 	mla	r0, r6, r3, r0
 80167d4:	0d43      	lsrs	r3, r0, #21
 80167d6:	0940      	lsrs	r0, r0, #5
 80167d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80167dc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80167e0:	4318      	orrs	r0, r3
 80167e2:	8008      	strh	r0, [r1, #0]
 80167e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80167e8:	4684      	mov	ip, r0
 80167ea:	e7a0      	b.n	801672e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80167ec:	4607      	mov	r7, r0
 80167ee:	4684      	mov	ip, r0
 80167f0:	e7a7      	b.n	8016742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80167f2:	4607      	mov	r7, r0
 80167f4:	e7a5      	b.n	8016742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80167f6:	4602      	mov	r2, r0
 80167f8:	e7b2      	b.n	8016760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80167fa:	4602      	mov	r2, r0
 80167fc:	e7ba      	b.n	8016774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080167fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80167fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016802:	b093      	sub	sp, #76	@ 0x4c
 8016804:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8016808:	920f      	str	r2, [sp, #60]	@ 0x3c
 801680a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801680c:	9108      	str	r1, [sp, #32]
 801680e:	9306      	str	r3, [sp, #24]
 8016810:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8016814:	9010      	str	r0, [sp, #64]	@ 0x40
 8016816:	6850      	ldr	r0, [r2, #4]
 8016818:	6812      	ldr	r2, [r2, #0]
 801681a:	fb00 1303 	mla	r3, r0, r3, r1
 801681e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016822:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016824:	681b      	ldr	r3, [r3, #0]
 8016826:	9307      	str	r3, [sp, #28]
 8016828:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801682a:	685f      	ldr	r7, [r3, #4]
 801682c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016830:	3704      	adds	r7, #4
 8016832:	9b08      	ldr	r3, [sp, #32]
 8016834:	2b00      	cmp	r3, #0
 8016836:	dc03      	bgt.n	8016840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8016838:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801683a:	2b00      	cmp	r3, #0
 801683c:	f340 81b2 	ble.w	8016ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016840:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016842:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016846:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801684a:	1e48      	subs	r0, r1, #1
 801684c:	f102 3cff 	add.w	ip, r2, #4294967295
 8016850:	9b06      	ldr	r3, [sp, #24]
 8016852:	2b00      	cmp	r3, #0
 8016854:	f340 80a9 	ble.w	80169aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8016858:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801685c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016860:	d406      	bmi.n	8016870 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016862:	4586      	cmp	lr, r0
 8016864:	da04      	bge.n	8016870 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016866:	2b00      	cmp	r3, #0
 8016868:	db02      	blt.n	8016870 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801686a:	4563      	cmp	r3, ip
 801686c:	f2c0 809e 	blt.w	80169ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016870:	f11e 0e01 	adds.w	lr, lr, #1
 8016874:	f100 808f 	bmi.w	8016996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016878:	4571      	cmp	r1, lr
 801687a:	f2c0 808c 	blt.w	8016996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801687e:	3301      	adds	r3, #1
 8016880:	f100 8089 	bmi.w	8016996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016884:	429a      	cmp	r2, r3
 8016886:	f2c0 8086 	blt.w	8016996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801688a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801688e:	46c8      	mov	r8, r9
 8016890:	f1bb 0f00 	cmp.w	fp, #0
 8016894:	f340 80a6 	ble.w	80169e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016898:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801689a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801689c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80168a0:	689b      	ldr	r3, [r3, #8]
 80168a2:	1422      	asrs	r2, r4, #16
 80168a4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80168a8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80168ac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80168b0:	f100 80e3 	bmi.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80168b4:	f103 3aff 	add.w	sl, r3, #4294967295
 80168b8:	4552      	cmp	r2, sl
 80168ba:	f280 80de 	bge.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80168be:	f1bc 0f00 	cmp.w	ip, #0
 80168c2:	f2c0 80da 	blt.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80168c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80168ca:	45d4      	cmp	ip, sl
 80168cc:	f280 80d5 	bge.w	8016a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80168d0:	b21b      	sxth	r3, r3
 80168d2:	fb0c 2203 	mla	r2, ip, r3, r2
 80168d6:	9d07      	ldr	r5, [sp, #28]
 80168d8:	eb05 0a02 	add.w	sl, r5, r2
 80168dc:	5caa      	ldrb	r2, [r5, r2]
 80168de:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80168e2:	2800      	cmp	r0, #0
 80168e4:	f000 80c0 	beq.w	8016a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80168e8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80168ec:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80168f0:	920b      	str	r2, [sp, #44]	@ 0x2c
 80168f2:	b151      	cbz	r1, 801690a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80168f4:	eb0a 0203 	add.w	r2, sl, r3
 80168f8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80168fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016900:	9309      	str	r3, [sp, #36]	@ 0x24
 8016902:	7853      	ldrb	r3, [r2, #1]
 8016904:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016908:	930c      	str	r3, [sp, #48]	@ 0x30
 801690a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801690c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801690e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016912:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016916:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801691a:	ea4c 0c03 	orr.w	ip, ip, r3
 801691e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016920:	041b      	lsls	r3, r3, #16
 8016922:	fb10 f201 	smulbb	r2, r0, r1
 8016926:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801692a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801692e:	10d2      	asrs	r2, r2, #3
 8016930:	432b      	orrs	r3, r5
 8016932:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8016936:	4353      	muls	r3, r2
 8016938:	fb0a 330c 	mla	r3, sl, ip, r3
 801693c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016940:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016944:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8016948:	ea4c 0e0e 	orr.w	lr, ip, lr
 801694c:	f1c1 0c10 	rsb	ip, r1, #16
 8016950:	ebac 0c00 	sub.w	ip, ip, r0
 8016954:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016958:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801695c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801695e:	0418      	lsls	r0, r3, #16
 8016960:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8016964:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016968:	4318      	orrs	r0, r3
 801696a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801696e:	fb02 c200 	mla	r2, r2, r0, ip
 8016972:	0d53      	lsrs	r3, r2, #21
 8016974:	0952      	lsrs	r2, r2, #5
 8016976:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801697a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801697e:	431a      	orrs	r2, r3
 8016980:	f8a8 2000 	strh.w	r2, [r8]
 8016984:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016986:	441c      	add	r4, r3
 8016988:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801698a:	f108 0802 	add.w	r8, r8, #2
 801698e:	441e      	add	r6, r3
 8016990:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016994:	e77c      	b.n	8016890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016996:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016998:	441c      	add	r4, r3
 801699a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801699c:	441e      	add	r6, r3
 801699e:	9b06      	ldr	r3, [sp, #24]
 80169a0:	3b01      	subs	r3, #1
 80169a2:	9306      	str	r3, [sp, #24]
 80169a4:	f109 0902 	add.w	r9, r9, #2
 80169a8:	e752      	b.n	8016850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80169aa:	d020      	beq.n	80169ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80169ac:	9b06      	ldr	r3, [sp, #24]
 80169ae:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80169b0:	3b01      	subs	r3, #1
 80169b2:	fb00 4003 	mla	r0, r0, r3, r4
 80169b6:	1400      	asrs	r0, r0, #16
 80169b8:	f53f af67 	bmi.w	801688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80169bc:	3901      	subs	r1, #1
 80169be:	4288      	cmp	r0, r1
 80169c0:	f6bf af63 	bge.w	801688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80169c4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80169c6:	fb01 6303 	mla	r3, r1, r3, r6
 80169ca:	141b      	asrs	r3, r3, #16
 80169cc:	f53f af5d 	bmi.w	801688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80169d0:	3a01      	subs	r2, #1
 80169d2:	4293      	cmp	r3, r2
 80169d4:	f6bf af59 	bge.w	801688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80169d8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80169dc:	46ca      	mov	sl, r9
 80169de:	f1b8 0f00 	cmp.w	r8, #0
 80169e2:	dc67      	bgt.n	8016ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80169e4:	9b06      	ldr	r3, [sp, #24]
 80169e6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80169ea:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80169ee:	9b08      	ldr	r3, [sp, #32]
 80169f0:	2b00      	cmp	r3, #0
 80169f2:	f340 80d7 	ble.w	8016ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80169f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80169fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80169fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016a02:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016a04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016a08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016a0c:	eeb0 6a62 	vmov.f32	s12, s5
 8016a10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016a14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016a1c:	ee16 4a10 	vmov	r4, s12
 8016a20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016a24:	eeb0 6a43 	vmov.f32	s12, s6
 8016a28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016a2c:	ee12 2a90 	vmov	r2, s5
 8016a30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a34:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a38:	ee13 2a10 	vmov	r2, s6
 8016a3c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8016a3e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016a40:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a44:	9320      	str	r3, [sp, #128]	@ 0x80
 8016a46:	9b08      	ldr	r3, [sp, #32]
 8016a48:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016a4a:	3b01      	subs	r3, #1
 8016a4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016a50:	9308      	str	r3, [sp, #32]
 8016a52:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016a54:	bf08      	it	eq
 8016a56:	4613      	moveq	r3, r2
 8016a58:	ee16 6a10 	vmov	r6, s12
 8016a5c:	9306      	str	r3, [sp, #24]
 8016a5e:	eeb0 3a67 	vmov.f32	s6, s15
 8016a62:	eef0 2a47 	vmov.f32	s5, s14
 8016a66:	e6e4      	b.n	8016832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8016a68:	2900      	cmp	r1, #0
 8016a6a:	f43f af4e 	beq.w	801690a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016a6e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016a72:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016a76:	9309      	str	r3, [sp, #36]	@ 0x24
 8016a78:	e747      	b.n	801690a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016a7a:	f112 0a01 	adds.w	sl, r2, #1
 8016a7e:	d481      	bmi.n	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016a80:	4553      	cmp	r3, sl
 8016a82:	f6ff af7f 	blt.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016a86:	f11c 0a01 	adds.w	sl, ip, #1
 8016a8a:	f53f af7b 	bmi.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016a8e:	45d6      	cmp	lr, sl
 8016a90:	f6ff af78 	blt.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016a94:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016a98:	b21b      	sxth	r3, r3
 8016a9a:	fa0f f28e 	sxth.w	r2, lr
 8016a9e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8016aa2:	9201      	str	r2, [sp, #4]
 8016aa4:	9300      	str	r3, [sp, #0]
 8016aa6:	9a07      	ldr	r2, [sp, #28]
 8016aa8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8016aaa:	463b      	mov	r3, r7
 8016aac:	4641      	mov	r1, r8
 8016aae:	f7ff fe21 	bl	80166f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016ab2:	e767      	b.n	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ab4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8016ab6:	9d07      	ldr	r5, [sp, #28]
 8016ab8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016abc:	1422      	asrs	r2, r4, #16
 8016abe:	1431      	asrs	r1, r6, #16
 8016ac0:	fb03 2101 	mla	r1, r3, r1, r2
 8016ac4:	9a07      	ldr	r2, [sp, #28]
 8016ac6:	440a      	add	r2, r1
 8016ac8:	5c69      	ldrb	r1, [r5, r1]
 8016aca:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016ace:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016ad2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016ad6:	f1be 0f00 	cmp.w	lr, #0
 8016ada:	d05c      	beq.n	8016b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016adc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8016ae0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8016ae4:	950d      	str	r5, [sp, #52]	@ 0x34
 8016ae6:	b150      	cbz	r0, 8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016ae8:	eb02 0c03 	add.w	ip, r2, r3
 8016aec:	5cd3      	ldrb	r3, [r2, r3]
 8016aee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016af2:	930a      	str	r3, [sp, #40]	@ 0x28
 8016af4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8016af8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016afc:	930e      	str	r3, [sp, #56]	@ 0x38
 8016afe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016b00:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8016b02:	fb1e f200 	smulbb	r2, lr, r0
 8016b06:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016b0a:	10d2      	asrs	r2, r2, #3
 8016b0c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8016b10:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8016b14:	ea4c 0c03 	orr.w	ip, ip, r3
 8016b18:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8016b1c:	9311      	str	r3, [sp, #68]	@ 0x44
 8016b1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016b20:	041b      	lsls	r3, r3, #16
 8016b22:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 8016b26:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8016b2a:	ea43 030b 	orr.w	r3, r3, fp
 8016b2e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8016b30:	4353      	muls	r3, r2
 8016b32:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016b36:	fb05 3c0c 	mla	ip, r5, ip, r3
 8016b3a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8016b3e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8016b42:	ea43 0b01 	orr.w	fp, r3, r1
 8016b46:	f1c0 0110 	rsb	r1, r0, #16
 8016b4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016b4c:	eba1 0e0e 	sub.w	lr, r1, lr
 8016b50:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016b54:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016b58:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016b5c:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8016b60:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8016b64:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016b68:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016b6c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016b70:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8016b74:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016b78:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016b7c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8016b80:	ea43 0c0c 	orr.w	ip, r3, ip
 8016b84:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016b86:	f82a cb02 	strh.w	ip, [sl], #2
 8016b8a:	441c      	add	r4, r3
 8016b8c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016b8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016b92:	441e      	add	r6, r3
 8016b94:	e723      	b.n	80169de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8016b96:	2800      	cmp	r0, #0
 8016b98:	d0b1      	beq.n	8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016b9a:	5cd3      	ldrb	r3, [r2, r3]
 8016b9c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016ba0:	930a      	str	r3, [sp, #40]	@ 0x28
 8016ba2:	e7ac      	b.n	8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016ba4:	b013      	add	sp, #76	@ 0x4c
 8016ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016baa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8016baa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bae:	880d      	ldrh	r5, [r1, #0]
 8016bb0:	b087      	sub	sp, #28
 8016bb2:	10ef      	asrs	r7, r5, #3
 8016bb4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8016bb8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016bbc:	00ed      	lsls	r5, r5, #3
 8016bbe:	9701      	str	r7, [sp, #4]
 8016bc0:	b2ed      	uxtb	r5, r5
 8016bc2:	9502      	str	r5, [sp, #8]
 8016bc4:	9d01      	ldr	r5, [sp, #4]
 8016bc6:	9103      	str	r1, [sp, #12]
 8016bc8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8016bcc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8016bd0:	9902      	ldr	r1, [sp, #8]
 8016bd2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016bd6:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8016bda:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8016bde:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8016be2:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8016be6:	022d      	lsls	r5, r5, #8
 8016be8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8016bec:	fb06 0709 	mla	r7, r6, r9, r0
 8016bf0:	430d      	orrs	r5, r1
 8016bf2:	2e00      	cmp	r6, #0
 8016bf4:	eb02 0c07 	add.w	ip, r2, r7
 8016bf8:	9505      	str	r5, [sp, #20]
 8016bfa:	f2c0 80b6 	blt.w	8016d6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016bfe:	45b3      	cmp	fp, r6
 8016c00:	f340 80b3 	ble.w	8016d6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8016c04:	2800      	cmp	r0, #0
 8016c06:	f2c0 80ae 	blt.w	8016d66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016c0a:	4581      	cmp	r9, r0
 8016c0c:	f340 80ab 	ble.w	8016d66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8016c10:	5dd7      	ldrb	r7, [r2, r7]
 8016c12:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016c16:	441f      	add	r7, r3
 8016c18:	1c42      	adds	r2, r0, #1
 8016c1a:	f100 80a9 	bmi.w	8016d70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016c1e:	4591      	cmp	r9, r2
 8016c20:	f340 80a6 	ble.w	8016d70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016c24:	2c00      	cmp	r4, #0
 8016c26:	f000 80a3 	beq.w	8016d70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8016c2a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016c2e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016c32:	441d      	add	r5, r3
 8016c34:	3601      	adds	r6, #1
 8016c36:	f100 809f 	bmi.w	8016d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016c3a:	45b3      	cmp	fp, r6
 8016c3c:	f340 809c 	ble.w	8016d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016c40:	f1be 0f00 	cmp.w	lr, #0
 8016c44:	f000 8098 	beq.w	8016d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016c48:	2800      	cmp	r0, #0
 8016c4a:	f2c0 8093 	blt.w	8016d74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016c4e:	4581      	cmp	r9, r0
 8016c50:	f340 8090 	ble.w	8016d74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016c54:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8016c58:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016c5c:	441e      	add	r6, r3
 8016c5e:	3001      	adds	r0, #1
 8016c60:	f100 808d 	bmi.w	8016d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016c64:	4581      	cmp	r9, r0
 8016c66:	f340 808a 	ble.w	8016d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016c6a:	2c00      	cmp	r4, #0
 8016c6c:	f000 8087 	beq.w	8016d7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016c70:	44e1      	add	r9, ip
 8016c72:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016c76:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016c7a:	4413      	add	r3, r2
 8016c7c:	b2a4      	uxth	r4, r4
 8016c7e:	fa1f fe8e 	uxth.w	lr, lr
 8016c82:	fb04 fb0e 	mul.w	fp, r4, lr
 8016c86:	0124      	lsls	r4, r4, #4
 8016c88:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8016c8c:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8016c90:	eba4 040b 	sub.w	r4, r4, fp
 8016c94:	fa1f f08e 	uxth.w	r0, lr
 8016c98:	b2a2      	uxth	r2, r4
 8016c9a:	78ac      	ldrb	r4, [r5, #2]
 8016c9c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8016ca0:	9901      	ldr	r1, [sp, #4]
 8016ca2:	eba9 0900 	sub.w	r9, r9, r0
 8016ca6:	fa1f f989 	uxth.w	r9, r9
 8016caa:	4354      	muls	r4, r2
 8016cac:	fb09 440c 	mla	r4, r9, ip, r4
 8016cb0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016cb4:	fb00 440c 	mla	r4, r0, ip, r4
 8016cb8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8016cbc:	fa1f fe88 	uxth.w	lr, r8
 8016cc0:	ea6f 0808 	mvn.w	r8, r8
 8016cc4:	fa5f f888 	uxtb.w	r8, r8
 8016cc8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8016ccc:	fb1a fa08 	smulbb	sl, sl, r8
 8016cd0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016cd4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8016cd8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8016cdc:	787c      	ldrb	r4, [r7, #1]
 8016cde:	782d      	ldrb	r5, [r5, #0]
 8016ce0:	783f      	ldrb	r7, [r7, #0]
 8016ce2:	fb02 fa0a 	mul.w	sl, r2, sl
 8016ce6:	fb09 aa04 	mla	sl, r9, r4, sl
 8016cea:	7874      	ldrb	r4, [r6, #1]
 8016cec:	436a      	muls	r2, r5
 8016cee:	7835      	ldrb	r5, [r6, #0]
 8016cf0:	fb00 aa04 	mla	sl, r0, r4, sl
 8016cf4:	fb09 2207 	mla	r2, r9, r7, r2
 8016cf8:	785c      	ldrb	r4, [r3, #1]
 8016cfa:	781b      	ldrb	r3, [r3, #0]
 8016cfc:	fb00 2005 	mla	r0, r0, r5, r2
 8016d00:	fb0b a404 	mla	r4, fp, r4, sl
 8016d04:	fb0b 0b03 	mla	fp, fp, r3, r0
 8016d08:	9b02      	ldr	r3, [sp, #8]
 8016d0a:	fb11 fa08 	smulbb	sl, r1, r8
 8016d0e:	fa1f fc8c 	uxth.w	ip, ip
 8016d12:	fb13 f808 	smulbb	r8, r3, r8
 8016d16:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8016d1a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016d1e:	fb04 a40e 	mla	r4, r4, lr, sl
 8016d22:	f10c 0301 	add.w	r3, ip, #1
 8016d26:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8016d2a:	fa1f fe8e 	uxth.w	lr, lr
 8016d2e:	b2a4      	uxth	r4, r4
 8016d30:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8016d34:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8016d38:	f104 0a01 	add.w	sl, r4, #1
 8016d3c:	f10e 0c01 	add.w	ip, lr, #1
 8016d40:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016d44:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016d48:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016d4c:	0964      	lsrs	r4, r4, #5
 8016d4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8016d52:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8016d56:	9b03      	ldr	r3, [sp, #12]
 8016d58:	ea4c 0c04 	orr.w	ip, ip, r4
 8016d5c:	f8a3 c000 	strh.w	ip, [r3]
 8016d60:	b007      	add	sp, #28
 8016d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d66:	af05      	add	r7, sp, #20
 8016d68:	e756      	b.n	8016c18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8016d6a:	ad05      	add	r5, sp, #20
 8016d6c:	462f      	mov	r7, r5
 8016d6e:	e761      	b.n	8016c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8016d70:	ad05      	add	r5, sp, #20
 8016d72:	e75f      	b.n	8016c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8016d74:	ae05      	add	r6, sp, #20
 8016d76:	e772      	b.n	8016c5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8016d78:	ab05      	add	r3, sp, #20
 8016d7a:	461e      	mov	r6, r3
 8016d7c:	e77e      	b.n	8016c7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8016d7e:	ab05      	add	r3, sp, #20
 8016d80:	e77c      	b.n	8016c7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08016d82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d86:	b095      	sub	sp, #84	@ 0x54
 8016d88:	9212      	str	r2, [sp, #72]	@ 0x48
 8016d8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8016d8c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8016d8e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8016d92:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016d94:	910e      	str	r1, [sp, #56]	@ 0x38
 8016d96:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8016d9a:	9013      	str	r0, [sp, #76]	@ 0x4c
 8016d9c:	6850      	ldr	r0, [r2, #4]
 8016d9e:	6812      	ldr	r2, [r2, #0]
 8016da0:	fb00 1303 	mla	r3, r0, r3, r1
 8016da4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016da8:	930a      	str	r3, [sp, #40]	@ 0x28
 8016daa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016dac:	681b      	ldr	r3, [r3, #0]
 8016dae:	930d      	str	r3, [sp, #52]	@ 0x34
 8016db0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016db2:	685c      	ldr	r4, [r3, #4]
 8016db4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016db6:	43db      	mvns	r3, r3
 8016db8:	b2db      	uxtb	r3, r3
 8016dba:	3404      	adds	r4, #4
 8016dbc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016dbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016dc0:	2b00      	cmp	r3, #0
 8016dc2:	dc03      	bgt.n	8016dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016dc4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8016dc6:	2b00      	cmp	r3, #0
 8016dc8:	f340 8255 	ble.w	8017276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8016dcc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016dce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016dd2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016dd6:	1e48      	subs	r0, r1, #1
 8016dd8:	1e55      	subs	r5, r2, #1
 8016dda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016ddc:	2b00      	cmp	r3, #0
 8016dde:	f340 80f9 	ble.w	8016fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016de2:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8016de4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016de6:	1436      	asrs	r6, r6, #16
 8016de8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016dec:	d406      	bmi.n	8016dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016dee:	4286      	cmp	r6, r0
 8016df0:	da04      	bge.n	8016dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016df2:	2b00      	cmp	r3, #0
 8016df4:	db02      	blt.n	8016dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016df6:	42ab      	cmp	r3, r5
 8016df8:	f2c0 80ed 	blt.w	8016fd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8016dfc:	3601      	adds	r6, #1
 8016dfe:	f100 80da 	bmi.w	8016fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016e02:	42b1      	cmp	r1, r6
 8016e04:	f2c0 80d7 	blt.w	8016fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016e08:	3301      	adds	r3, #1
 8016e0a:	f100 80d4 	bmi.w	8016fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016e0e:	429a      	cmp	r2, r3
 8016e10:	f2c0 80d1 	blt.w	8016fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016e14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016e16:	9311      	str	r3, [sp, #68]	@ 0x44
 8016e18:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016e1a:	930c      	str	r3, [sp, #48]	@ 0x30
 8016e1c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016e1e:	2b00      	cmp	r3, #0
 8016e20:	f340 80fa 	ble.w	8017018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8016e24:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8016e26:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016e28:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8016e2a:	68c6      	ldr	r6, [r0, #12]
 8016e2c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8016e2e:	141d      	asrs	r5, r3, #16
 8016e30:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016e34:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016e36:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8016e38:	1400      	asrs	r0, r0, #16
 8016e3a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016e3e:	6892      	ldr	r2, [r2, #8]
 8016e40:	f100 813e 	bmi.w	80170c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016e44:	1e57      	subs	r7, r2, #1
 8016e46:	42b8      	cmp	r0, r7
 8016e48:	f280 813a 	bge.w	80170c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016e4c:	2d00      	cmp	r5, #0
 8016e4e:	f2c0 8137 	blt.w	80170c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016e52:	1e77      	subs	r7, r6, #1
 8016e54:	42bd      	cmp	r5, r7
 8016e56:	f280 8133 	bge.w	80170c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016e5a:	b212      	sxth	r2, r2
 8016e5c:	fb05 0002 	mla	r0, r5, r2, r0
 8016e60:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8016e62:	f815 a000 	ldrb.w	sl, [r5, r0]
 8016e66:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8016e6a:	182e      	adds	r6, r5, r0
 8016e6c:	eb04 050a 	add.w	r5, r4, sl
 8016e70:	2b00      	cmp	r3, #0
 8016e72:	f000 8117 	beq.w	80170a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8016e76:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016e7a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016e7e:	44a4      	add	ip, r4
 8016e80:	2900      	cmp	r1, #0
 8016e82:	f000 8117 	beq.w	80170b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8016e86:	18b0      	adds	r0, r6, r2
 8016e88:	5cb2      	ldrb	r2, [r6, r2]
 8016e8a:	7840      	ldrb	r0, [r0, #1]
 8016e8c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016e90:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016e94:	4422      	add	r2, r4
 8016e96:	4420      	add	r0, r4
 8016e98:	b29b      	uxth	r3, r3
 8016e9a:	b289      	uxth	r1, r1
 8016e9c:	fb03 f901 	mul.w	r9, r3, r1
 8016ea0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016ea4:	011b      	lsls	r3, r3, #4
 8016ea6:	b289      	uxth	r1, r1
 8016ea8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8016eac:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016eb0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016eb2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8016eb6:	f8b6 e000 	ldrh.w	lr, [r6]
 8016eba:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8016ebe:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8016ec2:	eba3 0309 	sub.w	r3, r3, r9
 8016ec6:	b29b      	uxth	r3, r3
 8016ec8:	eba8 0801 	sub.w	r8, r8, r1
 8016ecc:	fa1f f888 	uxth.w	r8, r8
 8016ed0:	435f      	muls	r7, r3
 8016ed2:	fb08 770b 	mla	r7, r8, fp, r7
 8016ed6:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016eda:	9310      	str	r3, [sp, #64]	@ 0x40
 8016edc:	fb01 770b 	mla	r7, r1, fp, r7
 8016ee0:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016ee4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016ee6:	fb09 770b 	mla	r7, r9, fp, r7
 8016eea:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8016eee:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8016ef2:	fb1b fb03 	smulbb	fp, fp, r3
 8016ef6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016efa:	fb07 b706 	mla	r7, r7, r6, fp
 8016efe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016f00:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016f04:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016f08:	f89c c000 	ldrb.w	ip, [ip]
 8016f0c:	435d      	muls	r5, r3
 8016f0e:	fb08 550b 	mla	r5, r8, fp, r5
 8016f12:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016f16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016f18:	fb01 550b 	mla	r5, r1, fp, r5
 8016f1c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016f20:	fb09 550b 	mla	r5, r9, fp, r5
 8016f24:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8016f28:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016f2c:	fb1b fb03 	smulbb	fp, fp, r3
 8016f30:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016f32:	fb03 f30c 	mul.w	r3, r3, ip
 8016f36:	f892 c000 	ldrb.w	ip, [r2]
 8016f3a:	fb08 330a 	mla	r3, r8, sl, r3
 8016f3e:	fb01 330c 	mla	r3, r1, ip, r3
 8016f42:	f890 c000 	ldrb.w	ip, [r0]
 8016f46:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016f4a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8016f4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016f50:	fa5f fe8e 	uxtb.w	lr, lr
 8016f54:	b2bf      	uxth	r7, r7
 8016f56:	fb1e fe03 	smulbb	lr, lr, r3
 8016f5a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016f5e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016f62:	fb05 b506 	mla	r5, r5, r6, fp
 8016f66:	1c7b      	adds	r3, r7, #1
 8016f68:	fb0c e606 	mla	r6, ip, r6, lr
 8016f6c:	b2ad      	uxth	r5, r5
 8016f6e:	b2b6      	uxth	r6, r6
 8016f70:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016f74:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8016f78:	f105 0b01 	add.w	fp, r5, #1
 8016f7c:	1c77      	adds	r7, r6, #1
 8016f7e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016f82:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016f86:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016f8a:	096d      	lsrs	r5, r5, #5
 8016f8c:	431f      	orrs	r7, r3
 8016f8e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016f92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016f94:	433d      	orrs	r5, r7
 8016f96:	801d      	strh	r5, [r3, #0]
 8016f98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016f9a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8016f9c:	3302      	adds	r3, #2
 8016f9e:	930c      	str	r3, [sp, #48]	@ 0x30
 8016fa0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016fa2:	4413      	add	r3, r2
 8016fa4:	931f      	str	r3, [sp, #124]	@ 0x7c
 8016fa6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8016fa8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016faa:	4413      	add	r3, r2
 8016fac:	9320      	str	r3, [sp, #128]	@ 0x80
 8016fae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016fb0:	3b01      	subs	r3, #1
 8016fb2:	9311      	str	r3, [sp, #68]	@ 0x44
 8016fb4:	e732      	b.n	8016e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016fb6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8016fb8:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8016fba:	4433      	add	r3, r6
 8016fbc:	931f      	str	r3, [sp, #124]	@ 0x7c
 8016fbe:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8016fc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8016fc2:	4433      	add	r3, r6
 8016fc4:	9320      	str	r3, [sp, #128]	@ 0x80
 8016fc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016fc8:	3b01      	subs	r3, #1
 8016fca:	9309      	str	r3, [sp, #36]	@ 0x24
 8016fcc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016fce:	3302      	adds	r3, #2
 8016fd0:	930a      	str	r3, [sp, #40]	@ 0x28
 8016fd2:	e702      	b.n	8016dda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016fd4:	d027      	beq.n	8017026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8016fd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016fd8:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8016fda:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8016fdc:	3b01      	subs	r3, #1
 8016fde:	fb00 5003 	mla	r0, r0, r3, r5
 8016fe2:	1400      	asrs	r0, r0, #16
 8016fe4:	f53f af16 	bmi.w	8016e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fe8:	3901      	subs	r1, #1
 8016fea:	4288      	cmp	r0, r1
 8016fec:	f6bf af12 	bge.w	8016e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016ff0:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8016ff2:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8016ff4:	fb01 0303 	mla	r3, r1, r3, r0
 8016ff8:	141b      	asrs	r3, r3, #16
 8016ffa:	f53f af0b 	bmi.w	8016e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016ffe:	3a01      	subs	r2, #1
 8017000:	4293      	cmp	r3, r2
 8017002:	f6bf af07 	bge.w	8016e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017006:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017008:	9311      	str	r3, [sp, #68]	@ 0x44
 801700a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801700e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017010:	930c      	str	r3, [sp, #48]	@ 0x30
 8017012:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017014:	2b00      	cmp	r3, #0
 8017016:	dc70      	bgt.n	80170fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8017018:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801701a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801701c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017020:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017024:	930a      	str	r3, [sp, #40]	@ 0x28
 8017026:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017028:	2b00      	cmp	r3, #0
 801702a:	f340 8124 	ble.w	8017276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801702e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017032:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017036:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801703a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801703c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017040:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017044:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017048:	eef0 6a62 	vmov.f32	s13, s5
 801704c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017050:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017054:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017058:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801705c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017060:	eef0 6a43 	vmov.f32	s13, s6
 8017064:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017068:	ee12 2a90 	vmov	r2, s5
 801706c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017070:	fb92 f3f3 	sdiv	r3, r2, r3
 8017074:	ee13 2a10 	vmov	r2, s6
 8017078:	9321      	str	r3, [sp, #132]	@ 0x84
 801707a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801707c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017080:	9322      	str	r3, [sp, #136]	@ 0x88
 8017082:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017084:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017086:	3b01      	subs	r3, #1
 8017088:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801708c:	930e      	str	r3, [sp, #56]	@ 0x38
 801708e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8017090:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8017094:	bf08      	it	eq
 8017096:	4613      	moveq	r3, r2
 8017098:	9309      	str	r3, [sp, #36]	@ 0x24
 801709a:	eeb0 3a67 	vmov.f32	s6, s15
 801709e:	eef0 2a47 	vmov.f32	s5, s14
 80170a2:	e68c      	b.n	8016dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80170a4:	b149      	cbz	r1, 80170ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80170a6:	5cb2      	ldrb	r2, [r6, r2]
 80170a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80170ac:	4422      	add	r2, r4
 80170ae:	4628      	mov	r0, r5
 80170b0:	46ac      	mov	ip, r5
 80170b2:	e6f1      	b.n	8016e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80170b4:	4628      	mov	r0, r5
 80170b6:	462a      	mov	r2, r5
 80170b8:	e6ee      	b.n	8016e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80170ba:	4628      	mov	r0, r5
 80170bc:	462a      	mov	r2, r5
 80170be:	e7f7      	b.n	80170b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80170c0:	1c47      	adds	r7, r0, #1
 80170c2:	f53f af69 	bmi.w	8016f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80170c6:	42ba      	cmp	r2, r7
 80170c8:	f6ff af66 	blt.w	8016f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80170cc:	1c6f      	adds	r7, r5, #1
 80170ce:	f53f af63 	bmi.w	8016f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80170d2:	42be      	cmp	r6, r7
 80170d4:	f6ff af60 	blt.w	8016f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80170d8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80170da:	9002      	str	r0, [sp, #8]
 80170dc:	b236      	sxth	r6, r6
 80170de:	b212      	sxth	r2, r2
 80170e0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80170e4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80170e8:	9200      	str	r2, [sp, #0]
 80170ea:	9601      	str	r6, [sp, #4]
 80170ec:	4623      	mov	r3, r4
 80170ee:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 80170f2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80170f4:	f7ff fd59 	bl	8016baa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80170f8:	e74e      	b.n	8016f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80170fa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80170fc:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80170fe:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8017100:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017102:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017106:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8017108:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801710c:	142d      	asrs	r5, r5, #16
 801710e:	1400      	asrs	r0, r0, #16
 8017110:	fb02 5000 	mla	r0, r2, r0, r5
 8017114:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8017116:	f815 9000 	ldrb.w	r9, [r5, r0]
 801711a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801711e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8017122:	182e      	adds	r6, r5, r0
 8017124:	eb04 0509 	add.w	r5, r4, r9
 8017128:	2b00      	cmp	r3, #0
 801712a:	f000 8096 	beq.w	801725a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801712e:	7877      	ldrb	r7, [r6, #1]
 8017130:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017134:	4427      	add	r7, r4
 8017136:	2900      	cmp	r1, #0
 8017138:	f000 8097 	beq.w	801726a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801713c:	18b0      	adds	r0, r6, r2
 801713e:	5cb2      	ldrb	r2, [r6, r2]
 8017140:	7840      	ldrb	r0, [r0, #1]
 8017142:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017146:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801714a:	4422      	add	r2, r4
 801714c:	4420      	add	r0, r4
 801714e:	b29b      	uxth	r3, r3
 8017150:	b289      	uxth	r1, r1
 8017152:	fb03 f801 	mul.w	r8, r3, r1
 8017156:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017158:	f895 b002 	ldrb.w	fp, [r5, #2]
 801715c:	f8b6 c000 	ldrh.w	ip, [r6]
 8017160:	78be      	ldrb	r6, [r7, #2]
 8017162:	f814 9009 	ldrb.w	r9, [r4, r9]
 8017166:	011b      	lsls	r3, r3, #4
 8017168:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801716c:	b289      	uxth	r1, r1
 801716e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8017172:	eba3 0308 	sub.w	r3, r3, r8
 8017176:	b29b      	uxth	r3, r3
 8017178:	ebae 0e01 	sub.w	lr, lr, r1
 801717c:	fa1f fe8e 	uxth.w	lr, lr
 8017180:	435e      	muls	r6, r3
 8017182:	fb0e 660b 	mla	r6, lr, fp, r6
 8017186:	f892 b002 	ldrb.w	fp, [r2, #2]
 801718a:	9310      	str	r3, [sp, #64]	@ 0x40
 801718c:	fb01 660b 	mla	r6, r1, fp, r6
 8017190:	f890 b002 	ldrb.w	fp, [r0, #2]
 8017194:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017196:	fb08 660b 	mla	r6, r8, fp, r6
 801719a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801719e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80171a2:	fb1b fb03 	smulbb	fp, fp, r3
 80171a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80171aa:	fb06 b60a 	mla	r6, r6, sl, fp
 80171ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80171b0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80171b4:	787d      	ldrb	r5, [r7, #1]
 80171b6:	783f      	ldrb	r7, [r7, #0]
 80171b8:	435d      	muls	r5, r3
 80171ba:	fb0e 550b 	mla	r5, lr, fp, r5
 80171be:	f892 b001 	ldrb.w	fp, [r2, #1]
 80171c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80171c4:	fb01 550b 	mla	r5, r1, fp, r5
 80171c8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80171cc:	fb08 550b 	mla	r5, r8, fp, r5
 80171d0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80171d4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80171d8:	fb1b fb03 	smulbb	fp, fp, r3
 80171dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80171de:	437b      	muls	r3, r7
 80171e0:	7817      	ldrb	r7, [r2, #0]
 80171e2:	fb0e 3309 	mla	r3, lr, r9, r3
 80171e6:	fb01 3307 	mla	r3, r1, r7, r3
 80171ea:	7807      	ldrb	r7, [r0, #0]
 80171ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80171f0:	fb08 3707 	mla	r7, r8, r7, r3
 80171f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80171f6:	fa5f fc8c 	uxtb.w	ip, ip
 80171fa:	fb1c fc03 	smulbb	ip, ip, r3
 80171fe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8017202:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017206:	fb05 b50a 	mla	r5, r5, sl, fp
 801720a:	fb07 c70a 	mla	r7, r7, sl, ip
 801720e:	b2b6      	uxth	r6, r6
 8017210:	b2ad      	uxth	r5, r5
 8017212:	b2bf      	uxth	r7, r7
 8017214:	1c73      	adds	r3, r6, #1
 8017216:	1c7a      	adds	r2, r7, #1
 8017218:	f105 0b01 	add.w	fp, r5, #1
 801721c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017220:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8017224:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017228:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801722c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017230:	096d      	lsrs	r5, r5, #5
 8017232:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017234:	4316      	orrs	r6, r2
 8017236:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801723a:	432e      	orrs	r6, r5
 801723c:	f823 6b02 	strh.w	r6, [r3], #2
 8017240:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8017242:	930c      	str	r3, [sp, #48]	@ 0x30
 8017244:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8017246:	4413      	add	r3, r2
 8017248:	931f      	str	r3, [sp, #124]	@ 0x7c
 801724a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801724c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801724e:	4413      	add	r3, r2
 8017250:	9320      	str	r3, [sp, #128]	@ 0x80
 8017252:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8017254:	3b01      	subs	r3, #1
 8017256:	9311      	str	r3, [sp, #68]	@ 0x44
 8017258:	e6db      	b.n	8017012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801725a:	b149      	cbz	r1, 8017270 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801725c:	5cb2      	ldrb	r2, [r6, r2]
 801725e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017262:	4422      	add	r2, r4
 8017264:	4628      	mov	r0, r5
 8017266:	462f      	mov	r7, r5
 8017268:	e771      	b.n	801714e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801726a:	4628      	mov	r0, r5
 801726c:	462a      	mov	r2, r5
 801726e:	e76e      	b.n	801714e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8017270:	4628      	mov	r0, r5
 8017272:	462a      	mov	r2, r5
 8017274:	e7f7      	b.n	8017266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8017276:	b015      	add	sp, #84	@ 0x54
 8017278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801727c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801727c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017280:	880f      	ldrh	r7, [r1, #0]
 8017282:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8017286:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801728a:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801728e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8017292:	023c      	lsls	r4, r7, #8
 8017294:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8017298:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801729c:	017c      	lsls	r4, r7, #5
 801729e:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 80172a2:	00ff      	lsls	r7, r7, #3
 80172a4:	ea4b 0404 	orr.w	r4, fp, r4
 80172a8:	b2ff      	uxtb	r7, r7
 80172aa:	fb05 ca0e 	mla	sl, r5, lr, ip
 80172ae:	4327      	orrs	r7, r4
 80172b0:	2d00      	cmp	r5, #0
 80172b2:	eb02 080a 	add.w	r8, r2, sl
 80172b6:	9701      	str	r7, [sp, #4]
 80172b8:	db7e      	blt.n	80173b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80172ba:	45a9      	cmp	r9, r5
 80172bc:	dd7c      	ble.n	80173b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80172be:	f1bc 0f00 	cmp.w	ip, #0
 80172c2:	db77      	blt.n	80173b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80172c4:	45e6      	cmp	lr, ip
 80172c6:	dd75      	ble.n	80173b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80172c8:	f812 700a 	ldrb.w	r7, [r2, sl]
 80172cc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80172d0:	441f      	add	r7, r3
 80172d2:	f11c 0201 	adds.w	r2, ip, #1
 80172d6:	d472      	bmi.n	80173be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80172d8:	4596      	cmp	lr, r2
 80172da:	dd70      	ble.n	80173be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80172dc:	2800      	cmp	r0, #0
 80172de:	d06e      	beq.n	80173be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80172e0:	f898 4001 	ldrb.w	r4, [r8, #1]
 80172e4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80172e8:	441c      	add	r4, r3
 80172ea:	3501      	adds	r5, #1
 80172ec:	d46b      	bmi.n	80173c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80172ee:	45a9      	cmp	r9, r5
 80172f0:	dd69      	ble.n	80173c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80172f2:	2e00      	cmp	r6, #0
 80172f4:	d067      	beq.n	80173c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80172f6:	f1bc 0f00 	cmp.w	ip, #0
 80172fa:	db62      	blt.n	80173c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80172fc:	45e6      	cmp	lr, ip
 80172fe:	dd60      	ble.n	80173c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8017300:	f818 500e 	ldrb.w	r5, [r8, lr]
 8017304:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017308:	441d      	add	r5, r3
 801730a:	f11c 0201 	adds.w	r2, ip, #1
 801730e:	d45d      	bmi.n	80173cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017310:	4596      	cmp	lr, r2
 8017312:	dd5b      	ble.n	80173cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017314:	2800      	cmp	r0, #0
 8017316:	d059      	beq.n	80173cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8017318:	44c6      	add	lr, r8
 801731a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801731e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017322:	4413      	add	r3, r2
 8017324:	b280      	uxth	r0, r0
 8017326:	b2b2      	uxth	r2, r6
 8017328:	fb00 f602 	mul.w	r6, r0, r2
 801732c:	0100      	lsls	r0, r0, #4
 801732e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8017332:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8017336:	1b80      	subs	r0, r0, r6
 8017338:	fa1f fc82 	uxth.w	ip, r2
 801733c:	b282      	uxth	r2, r0
 801733e:	78a0      	ldrb	r0, [r4, #2]
 8017340:	f897 e002 	ldrb.w	lr, [r7, #2]
 8017344:	f897 9000 	ldrb.w	r9, [r7]
 8017348:	787f      	ldrb	r7, [r7, #1]
 801734a:	eba8 080c 	sub.w	r8, r8, ip
 801734e:	fa1f f888 	uxth.w	r8, r8
 8017352:	4350      	muls	r0, r2
 8017354:	fb08 0e0e 	mla	lr, r8, lr, r0
 8017358:	78a8      	ldrb	r0, [r5, #2]
 801735a:	fb0c e000 	mla	r0, ip, r0, lr
 801735e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8017362:	fb06 0e0e 	mla	lr, r6, lr, r0
 8017366:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801736a:	f894 e000 	ldrb.w	lr, [r4]
 801736e:	fb02 fe0e 	mul.w	lr, r2, lr
 8017372:	fb08 e909 	mla	r9, r8, r9, lr
 8017376:	f895 e000 	ldrb.w	lr, [r5]
 801737a:	fb0c 990e 	mla	r9, ip, lr, r9
 801737e:	f893 e000 	ldrb.w	lr, [r3]
 8017382:	785b      	ldrb	r3, [r3, #1]
 8017384:	fb06 9e0e 	mla	lr, r6, lr, r9
 8017388:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801738c:	ea4e 0e00 	orr.w	lr, lr, r0
 8017390:	7860      	ldrb	r0, [r4, #1]
 8017392:	4350      	muls	r0, r2
 8017394:	786a      	ldrb	r2, [r5, #1]
 8017396:	fb08 0007 	mla	r0, r8, r7, r0
 801739a:	fb0c 0202 	mla	r2, ip, r2, r0
 801739e:	fb06 2303 	mla	r3, r6, r3, r2
 80173a2:	095b      	lsrs	r3, r3, #5
 80173a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80173a8:	ea4e 0303 	orr.w	r3, lr, r3
 80173ac:	800b      	strh	r3, [r1, #0]
 80173ae:	b003      	add	sp, #12
 80173b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173b4:	af01      	add	r7, sp, #4
 80173b6:	e78c      	b.n	80172d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80173b8:	ac01      	add	r4, sp, #4
 80173ba:	4627      	mov	r7, r4
 80173bc:	e795      	b.n	80172ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80173be:	ac01      	add	r4, sp, #4
 80173c0:	e793      	b.n	80172ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80173c2:	ad01      	add	r5, sp, #4
 80173c4:	e7a1      	b.n	801730a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80173c6:	ab01      	add	r3, sp, #4
 80173c8:	461d      	mov	r5, r3
 80173ca:	e7ab      	b.n	8017324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80173cc:	ab01      	add	r3, sp, #4
 80173ce:	e7a9      	b.n	8017324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080173d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80173d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173d4:	b08f      	sub	sp, #60	@ 0x3c
 80173d6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 80173da:	920c      	str	r2, [sp, #48]	@ 0x30
 80173dc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80173de:	910a      	str	r1, [sp, #40]	@ 0x28
 80173e0:	9306      	str	r3, [sp, #24]
 80173e2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 80173e6:	900d      	str	r0, [sp, #52]	@ 0x34
 80173e8:	6850      	ldr	r0, [r2, #4]
 80173ea:	6812      	ldr	r2, [r2, #0]
 80173ec:	fb00 1303 	mla	r3, r0, r3, r1
 80173f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80173f4:	9307      	str	r3, [sp, #28]
 80173f6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80173f8:	681b      	ldr	r3, [r3, #0]
 80173fa:	9308      	str	r3, [sp, #32]
 80173fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80173fe:	685c      	ldr	r4, [r3, #4]
 8017400:	3404      	adds	r4, #4
 8017402:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017404:	2b00      	cmp	r3, #0
 8017406:	dc03      	bgt.n	8017410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017408:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801740a:	2b00      	cmp	r3, #0
 801740c:	f340 81d6 	ble.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8017410:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8017412:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017416:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801741a:	1e48      	subs	r0, r1, #1
 801741c:	1e56      	subs	r6, r2, #1
 801741e:	9b06      	ldr	r3, [sp, #24]
 8017420:	2b00      	cmp	r3, #0
 8017422:	f340 80b7 	ble.w	8017594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8017426:	ea5f 472b 	movs.w	r7, fp, asr #16
 801742a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801742e:	d406      	bmi.n	801743e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017430:	4287      	cmp	r7, r0
 8017432:	da04      	bge.n	801743e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017434:	2b00      	cmp	r3, #0
 8017436:	db02      	blt.n	801743e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017438:	42b3      	cmp	r3, r6
 801743a:	f2c0 80ac 	blt.w	8017596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801743e:	3701      	adds	r7, #1
 8017440:	f100 809d 	bmi.w	801757e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017444:	42b9      	cmp	r1, r7
 8017446:	f2c0 809a 	blt.w	801757e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801744a:	3301      	adds	r3, #1
 801744c:	f100 8097 	bmi.w	801757e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017450:	429a      	cmp	r2, r3
 8017452:	f2c0 8094 	blt.w	801757e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017456:	9b06      	ldr	r3, [sp, #24]
 8017458:	930b      	str	r3, [sp, #44]	@ 0x2c
 801745a:	9b07      	ldr	r3, [sp, #28]
 801745c:	9309      	str	r3, [sp, #36]	@ 0x24
 801745e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017460:	2b00      	cmp	r3, #0
 8017462:	f340 80b5 	ble.w	80175d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8017466:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8017468:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801746a:	68c7      	ldr	r7, [r0, #12]
 801746c:	6892      	ldr	r2, [r2, #8]
 801746e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8017472:	ea4f 4625 	mov.w	r6, r5, asr #16
 8017476:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801747a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801747e:	f100 80fb 	bmi.w	8017678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017482:	f102 3cff 	add.w	ip, r2, #4294967295
 8017486:	4560      	cmp	r0, ip
 8017488:	f280 80f6 	bge.w	8017678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801748c:	2e00      	cmp	r6, #0
 801748e:	f2c0 80f3 	blt.w	8017678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017492:	f107 3cff 	add.w	ip, r7, #4294967295
 8017496:	4566      	cmp	r6, ip
 8017498:	f280 80ee 	bge.w	8017678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801749c:	b212      	sxth	r2, r2
 801749e:	fb06 0002 	mla	r0, r6, r2, r0
 80174a2:	9e08      	ldr	r6, [sp, #32]
 80174a4:	1837      	adds	r7, r6, r0
 80174a6:	5c30      	ldrb	r0, [r6, r0]
 80174a8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80174ac:	eb04 0c08 	add.w	ip, r4, r8
 80174b0:	2b00      	cmp	r3, #0
 80174b2:	f000 80d3 	beq.w	801765c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174b6:	787e      	ldrb	r6, [r7, #1]
 80174b8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80174bc:	4426      	add	r6, r4
 80174be:	2900      	cmp	r1, #0
 80174c0:	f000 80d4 	beq.w	801766c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80174c4:	18b8      	adds	r0, r7, r2
 80174c6:	5cba      	ldrb	r2, [r7, r2]
 80174c8:	7840      	ldrb	r0, [r0, #1]
 80174ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80174ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80174d2:	4422      	add	r2, r4
 80174d4:	4420      	add	r0, r4
 80174d6:	b29b      	uxth	r3, r3
 80174d8:	b289      	uxth	r1, r1
 80174da:	fb03 f901 	mul.w	r9, r3, r1
 80174de:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80174e2:	011b      	lsls	r3, r3, #4
 80174e4:	b289      	uxth	r1, r1
 80174e6:	78b7      	ldrb	r7, [r6, #2]
 80174e8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80174ec:	f89c c001 	ldrb.w	ip, [ip, #1]
 80174f0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80174f4:	eba3 0309 	sub.w	r3, r3, r9
 80174f8:	b29b      	uxth	r3, r3
 80174fa:	ebae 0e01 	sub.w	lr, lr, r1
 80174fe:	fa1f fe8e 	uxth.w	lr, lr
 8017502:	435f      	muls	r7, r3
 8017504:	fb0e 770a 	mla	r7, lr, sl, r7
 8017508:	f892 a002 	ldrb.w	sl, [r2, #2]
 801750c:	fb01 770a 	mla	r7, r1, sl, r7
 8017510:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017514:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017518:	f814 7008 	ldrb.w	r7, [r4, r8]
 801751c:	f896 8000 	ldrb.w	r8, [r6]
 8017520:	7876      	ldrb	r6, [r6, #1]
 8017522:	fb03 f808 	mul.w	r8, r3, r8
 8017526:	fb0e 8807 	mla	r8, lr, r7, r8
 801752a:	7817      	ldrb	r7, [r2, #0]
 801752c:	fb01 8807 	mla	r8, r1, r7, r8
 8017530:	7807      	ldrb	r7, [r0, #0]
 8017532:	fb09 8707 	mla	r7, r9, r7, r8
 8017536:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801753a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801753e:	ea47 070a 	orr.w	r7, r7, sl
 8017542:	4373      	muls	r3, r6
 8017544:	f892 a001 	ldrb.w	sl, [r2, #1]
 8017548:	fb0e 330c 	mla	r3, lr, ip, r3
 801754c:	fb01 310a 	mla	r1, r1, sl, r3
 8017550:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017554:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017556:	fb09 1a0a 	mla	sl, r9, sl, r1
 801755a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801755e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017562:	ea47 070a 	orr.w	r7, r7, sl
 8017566:	801f      	strh	r7, [r3, #0]
 8017568:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801756a:	3302      	adds	r3, #2
 801756c:	9309      	str	r3, [sp, #36]	@ 0x24
 801756e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017570:	449b      	add	fp, r3
 8017572:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017574:	441d      	add	r5, r3
 8017576:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017578:	3b01      	subs	r3, #1
 801757a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801757c:	e76f      	b.n	801745e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801757e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017580:	449b      	add	fp, r3
 8017582:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017584:	441d      	add	r5, r3
 8017586:	9b06      	ldr	r3, [sp, #24]
 8017588:	3b01      	subs	r3, #1
 801758a:	9306      	str	r3, [sp, #24]
 801758c:	9b07      	ldr	r3, [sp, #28]
 801758e:	3302      	adds	r3, #2
 8017590:	9307      	str	r3, [sp, #28]
 8017592:	e744      	b.n	801741e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8017594:	d023      	beq.n	80175de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8017596:	9b06      	ldr	r3, [sp, #24]
 8017598:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801759a:	3b01      	subs	r3, #1
 801759c:	fb00 b003 	mla	r0, r0, r3, fp
 80175a0:	1400      	asrs	r0, r0, #16
 80175a2:	f53f af58 	bmi.w	8017456 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80175a6:	3901      	subs	r1, #1
 80175a8:	4288      	cmp	r0, r1
 80175aa:	f6bf af54 	bge.w	8017456 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80175ae:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80175b0:	fb01 5303 	mla	r3, r1, r3, r5
 80175b4:	141b      	asrs	r3, r3, #16
 80175b6:	f53f af4e 	bmi.w	8017456 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80175ba:	3a01      	subs	r2, #1
 80175bc:	4293      	cmp	r3, r2
 80175be:	f6bf af4a 	bge.w	8017456 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80175c2:	9b06      	ldr	r3, [sp, #24]
 80175c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80175c6:	9b07      	ldr	r3, [sp, #28]
 80175c8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80175ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80175cc:	2b00      	cmp	r3, #0
 80175ce:	dc70      	bgt.n	80176b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80175d0:	9b06      	ldr	r3, [sp, #24]
 80175d2:	9a07      	ldr	r2, [sp, #28]
 80175d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80175d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80175dc:	9307      	str	r3, [sp, #28]
 80175de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80175e0:	2b00      	cmp	r3, #0
 80175e2:	f340 80eb 	ble.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80175e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80175ea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80175ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80175f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80175f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80175f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80175fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017600:	eef0 6a62 	vmov.f32	s13, s5
 8017604:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017608:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801760c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017610:	ee16 ba90 	vmov	fp, s13
 8017614:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017618:	eef0 6a43 	vmov.f32	s13, s6
 801761c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017620:	ee12 2a90 	vmov	r2, s5
 8017624:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017628:	fb92 f3f3 	sdiv	r3, r2, r3
 801762c:	ee13 2a10 	vmov	r2, s6
 8017630:	931b      	str	r3, [sp, #108]	@ 0x6c
 8017632:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017634:	fb92 f3f3 	sdiv	r3, r2, r3
 8017638:	931c      	str	r3, [sp, #112]	@ 0x70
 801763a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801763c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801763e:	3b01      	subs	r3, #1
 8017640:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017644:	930a      	str	r3, [sp, #40]	@ 0x28
 8017646:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017648:	bf08      	it	eq
 801764a:	4613      	moveq	r3, r2
 801764c:	ee16 5a90 	vmov	r5, s13
 8017650:	9306      	str	r3, [sp, #24]
 8017652:	eeb0 3a67 	vmov.f32	s6, s15
 8017656:	eef0 2a47 	vmov.f32	s5, s14
 801765a:	e6d2      	b.n	8017402 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801765c:	b149      	cbz	r1, 8017672 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801765e:	5cba      	ldrb	r2, [r7, r2]
 8017660:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017664:	4422      	add	r2, r4
 8017666:	4660      	mov	r0, ip
 8017668:	4666      	mov	r6, ip
 801766a:	e734      	b.n	80174d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801766c:	4660      	mov	r0, ip
 801766e:	4662      	mov	r2, ip
 8017670:	e731      	b.n	80174d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017672:	4660      	mov	r0, ip
 8017674:	4662      	mov	r2, ip
 8017676:	e7f7      	b.n	8017668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8017678:	f110 0c01 	adds.w	ip, r0, #1
 801767c:	f53f af74 	bmi.w	8017568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017680:	4562      	cmp	r2, ip
 8017682:	f6ff af71 	blt.w	8017568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017686:	f116 0c01 	adds.w	ip, r6, #1
 801768a:	f53f af6d 	bmi.w	8017568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801768e:	4567      	cmp	r7, ip
 8017690:	f6ff af6a 	blt.w	8017568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017694:	b23f      	sxth	r7, r7
 8017696:	b212      	sxth	r2, r2
 8017698:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801769c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80176a0:	9200      	str	r2, [sp, #0]
 80176a2:	9701      	str	r7, [sp, #4]
 80176a4:	4623      	mov	r3, r4
 80176a6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80176aa:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80176ac:	f7ff fde6 	bl	801727c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80176b0:	e75a      	b.n	8017568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80176b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80176b4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80176b8:	ea4f 462b 	mov.w	r6, fp, asr #16
 80176bc:	1428      	asrs	r0, r5, #16
 80176be:	fb02 6000 	mla	r0, r2, r0, r6
 80176c2:	9e08      	ldr	r6, [sp, #32]
 80176c4:	f816 8000 	ldrb.w	r8, [r6, r0]
 80176c8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80176cc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80176d0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80176d4:	1837      	adds	r7, r6, r0
 80176d6:	eb04 0c08 	add.w	ip, r4, r8
 80176da:	2b00      	cmp	r3, #0
 80176dc:	d060      	beq.n	80177a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80176de:	787e      	ldrb	r6, [r7, #1]
 80176e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80176e4:	4426      	add	r6, r4
 80176e6:	2900      	cmp	r1, #0
 80176e8:	d062      	beq.n	80177b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80176ea:	18b8      	adds	r0, r7, r2
 80176ec:	5cba      	ldrb	r2, [r7, r2]
 80176ee:	7840      	ldrb	r0, [r0, #1]
 80176f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80176f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80176f8:	4422      	add	r2, r4
 80176fa:	4420      	add	r0, r4
 80176fc:	b29b      	uxth	r3, r3
 80176fe:	b289      	uxth	r1, r1
 8017700:	fb03 f901 	mul.w	r9, r3, r1
 8017704:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017708:	011b      	lsls	r3, r3, #4
 801770a:	b289      	uxth	r1, r1
 801770c:	78b7      	ldrb	r7, [r6, #2]
 801770e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017712:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017716:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801771a:	eba3 0309 	sub.w	r3, r3, r9
 801771e:	b29b      	uxth	r3, r3
 8017720:	ebae 0e01 	sub.w	lr, lr, r1
 8017724:	fa1f fe8e 	uxth.w	lr, lr
 8017728:	435f      	muls	r7, r3
 801772a:	fb0e 770a 	mla	r7, lr, sl, r7
 801772e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017732:	fb01 770a 	mla	r7, r1, sl, r7
 8017736:	f890 a002 	ldrb.w	sl, [r0, #2]
 801773a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801773e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017742:	f896 8000 	ldrb.w	r8, [r6]
 8017746:	7876      	ldrb	r6, [r6, #1]
 8017748:	fb03 f808 	mul.w	r8, r3, r8
 801774c:	fb0e 8807 	mla	r8, lr, r7, r8
 8017750:	7817      	ldrb	r7, [r2, #0]
 8017752:	fb01 8807 	mla	r8, r1, r7, r8
 8017756:	7807      	ldrb	r7, [r0, #0]
 8017758:	fb09 8707 	mla	r7, r9, r7, r8
 801775c:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8017760:	4373      	muls	r3, r6
 8017762:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017766:	7856      	ldrb	r6, [r2, #1]
 8017768:	ea47 070a 	orr.w	r7, r7, sl
 801776c:	fb0e 330c 	mla	r3, lr, ip, r3
 8017770:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017774:	fb01 3306 	mla	r3, r1, r6, r3
 8017778:	fb09 3a0a 	mla	sl, r9, sl, r3
 801777c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017780:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017782:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017786:	ea47 070a 	orr.w	r7, r7, sl
 801778a:	f823 7b02 	strh.w	r7, [r3], #2
 801778e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017790:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017792:	449b      	add	fp, r3
 8017794:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017796:	441d      	add	r5, r3
 8017798:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801779a:	3b01      	subs	r3, #1
 801779c:	9309      	str	r3, [sp, #36]	@ 0x24
 801779e:	e714      	b.n	80175ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80177a0:	b149      	cbz	r1, 80177b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80177a2:	5cba      	ldrb	r2, [r7, r2]
 80177a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80177a8:	4422      	add	r2, r4
 80177aa:	4660      	mov	r0, ip
 80177ac:	4666      	mov	r6, ip
 80177ae:	e7a5      	b.n	80176fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80177b0:	4660      	mov	r0, ip
 80177b2:	4662      	mov	r2, ip
 80177b4:	e7a2      	b.n	80176fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80177b6:	4660      	mov	r0, ip
 80177b8:	4662      	mov	r2, ip
 80177ba:	e7f7      	b.n	80177ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80177bc:	b00f      	add	sp, #60	@ 0x3c
 80177be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080177c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80177c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177c6:	b085      	sub	sp, #20
 80177c8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 80177cc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 80177d0:	9102      	str	r1, [sp, #8]
 80177d2:	2c00      	cmp	r4, #0
 80177d4:	fb04 710c 	mla	r1, r4, ip, r7
 80177d8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 80177dc:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 80177e0:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80177e4:	eb02 0e01 	add.w	lr, r2, r1
 80177e8:	f2c0 8122 	blt.w	8017a30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80177ec:	45a0      	cmp	r8, r4
 80177ee:	f340 811f 	ble.w	8017a30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80177f2:	2f00      	cmp	r7, #0
 80177f4:	f2c0 811a 	blt.w	8017a2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80177f8:	45bc      	cmp	ip, r7
 80177fa:	f340 8117 	ble.w	8017a2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80177fe:	5c52      	ldrb	r2, [r2, r1]
 8017800:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017804:	1c7a      	adds	r2, r7, #1
 8017806:	f100 8116 	bmi.w	8017a36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801780a:	4594      	cmp	ip, r2
 801780c:	f340 8113 	ble.w	8017a36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017810:	2e00      	cmp	r6, #0
 8017812:	f000 8112 	beq.w	8017a3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8017816:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801781a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801781e:	3401      	adds	r4, #1
 8017820:	f100 810f 	bmi.w	8017a42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017824:	45a0      	cmp	r8, r4
 8017826:	f340 810c 	ble.w	8017a42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801782a:	2800      	cmp	r0, #0
 801782c:	f000 810c 	beq.w	8017a48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8017830:	2f00      	cmp	r7, #0
 8017832:	f2c0 8104 	blt.w	8017a3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017836:	45bc      	cmp	ip, r7
 8017838:	f340 8101 	ble.w	8017a3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801783c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8017840:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8017844:	3701      	adds	r7, #1
 8017846:	f100 8102 	bmi.w	8017a4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801784a:	45bc      	cmp	ip, r7
 801784c:	f340 80ff 	ble.w	8017a4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017850:	2e00      	cmp	r6, #0
 8017852:	f000 80fe 	beq.w	8017a52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8017856:	44f4      	add	ip, lr
 8017858:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801785c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017860:	b2b6      	uxth	r6, r6
 8017862:	b280      	uxth	r0, r0
 8017864:	fb00 fe06 	mul.w	lr, r0, r6
 8017868:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801786c:	0136      	lsls	r6, r6, #4
 801786e:	eba6 070e 	sub.w	r7, r6, lr
 8017872:	b280      	uxth	r0, r0
 8017874:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8017878:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801787c:	b2bf      	uxth	r7, r7
 801787e:	1a1b      	subs	r3, r3, r0
 8017880:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8017884:	b29b      	uxth	r3, r3
 8017886:	fb0a f607 	mul.w	r6, sl, r7
 801788a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801788e:	fb0b 6603 	mla	r6, fp, r3, r6
 8017892:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017896:	fb00 6609 	mla	r6, r0, r9, r6
 801789a:	fb0e 6608 	mla	r6, lr, r8, r6
 801789e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80178a2:	9600      	str	r6, [sp, #0]
 80178a4:	2e00      	cmp	r6, #0
 80178a6:	f000 80be 	beq.w	8017a26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80178aa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80178ae:	fb0b fc0c 	mul.w	ip, fp, ip
 80178b2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80178b6:	fb0b f505 	mul.w	r5, fp, r5
 80178ba:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80178be:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80178c2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80178c6:	44dc      	add	ip, fp
 80178c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178cc:	9501      	str	r5, [sp, #4]
 80178ce:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80178d2:	9503      	str	r5, [sp, #12]
 80178d4:	9d01      	ldr	r5, [sp, #4]
 80178d6:	9e02      	ldr	r6, [sp, #8]
 80178d8:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80178dc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80178e0:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80178e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80178e8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80178ec:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80178f0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80178f4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80178f8:	4465      	add	r5, ip
 80178fa:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80178fe:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8017902:	fb09 fc0c 	mul.w	ip, r9, ip
 8017906:	fb09 f904 	mul.w	r9, r9, r4
 801790a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801790e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8017912:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8017916:	fb08 f404 	mul.w	r4, r8, r4
 801791a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801791e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8017922:	fb08 f802 	mul.w	r8, r8, r2
 8017926:	fb0a fa01 	mul.w	sl, sl, r1
 801792a:	0a22      	lsrs	r2, r4, #8
 801792c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8017930:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8017934:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8017938:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801793c:	4414      	add	r4, r2
 801793e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8017942:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8017946:	0a2d      	lsrs	r5, r5, #8
 8017948:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801794c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8017950:	9a03      	ldr	r2, [sp, #12]
 8017952:	8836      	ldrh	r6, [r6, #0]
 8017954:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8017958:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801795c:	437d      	muls	r5, r7
 801795e:	4461      	add	r1, ip
 8017960:	0a24      	lsrs	r4, r4, #8
 8017962:	fb02 5503 	mla	r5, r2, r3, r5
 8017966:	0a09      	lsrs	r1, r1, #8
 8017968:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801796c:	fb04 540e 	mla	r4, r4, lr, r5
 8017970:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8017974:	fb01 4100 	mla	r1, r1, r0, r4
 8017978:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801797c:	0a09      	lsrs	r1, r1, #8
 801797e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017982:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8017986:	fb07 f70a 	mul.w	r7, r7, sl
 801798a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801798e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8017992:	fb03 7101 	mla	r1, r3, r1, r7
 8017996:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801799a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801799e:	fb0e 1e08 	mla	lr, lr, r8, r1
 80179a2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80179a6:	fb00 e101 	mla	r1, r0, r1, lr
 80179aa:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80179ae:	9a00      	ldr	r2, [sp, #0]
 80179b0:	b287      	uxth	r7, r0
 80179b2:	437a      	muls	r2, r7
 80179b4:	0a09      	lsrs	r1, r1, #8
 80179b6:	1c53      	adds	r3, r2, #1
 80179b8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80179bc:	4321      	orrs	r1, r4
 80179be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80179c2:	1235      	asrs	r5, r6, #8
 80179c4:	0c0a      	lsrs	r2, r1, #16
 80179c6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80179ca:	b2db      	uxtb	r3, r3
 80179cc:	fb12 f207 	smulbb	r2, r2, r7
 80179d0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80179d4:	fb05 2503 	mla	r5, r5, r3, r2
 80179d8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80179dc:	10f2      	asrs	r2, r6, #3
 80179de:	b2c8      	uxtb	r0, r1
 80179e0:	00f6      	lsls	r6, r6, #3
 80179e2:	fb14 f407 	smulbb	r4, r4, r7
 80179e6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80179ea:	b2f6      	uxtb	r6, r6
 80179ec:	fb10 f007 	smulbb	r0, r0, r7
 80179f0:	fb02 4203 	mla	r2, r2, r3, r4
 80179f4:	b2ad      	uxth	r5, r5
 80179f6:	fb06 0303 	mla	r3, r6, r3, r0
 80179fa:	b299      	uxth	r1, r3
 80179fc:	b294      	uxth	r4, r2
 80179fe:	1c6b      	adds	r3, r5, #1
 8017a00:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017a04:	1c62      	adds	r2, r4, #1
 8017a06:	1c4b      	adds	r3, r1, #1
 8017a08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017a0c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017a10:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017a14:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017a18:	0952      	lsrs	r2, r2, #5
 8017a1a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017a1e:	432b      	orrs	r3, r5
 8017a20:	4313      	orrs	r3, r2
 8017a22:	9a02      	ldr	r2, [sp, #8]
 8017a24:	8013      	strh	r3, [r2, #0]
 8017a26:	b005      	add	sp, #20
 8017a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a2c:	2500      	movs	r5, #0
 8017a2e:	e6e9      	b.n	8017804 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8017a30:	2100      	movs	r1, #0
 8017a32:	460d      	mov	r5, r1
 8017a34:	e6f3      	b.n	801781e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017a36:	2100      	movs	r1, #0
 8017a38:	e6f1      	b.n	801781e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017a3a:	4631      	mov	r1, r6
 8017a3c:	e6ef      	b.n	801781e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017a3e:	2400      	movs	r4, #0
 8017a40:	e700      	b.n	8017844 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8017a42:	2200      	movs	r2, #0
 8017a44:	4614      	mov	r4, r2
 8017a46:	e70b      	b.n	8017860 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017a48:	4602      	mov	r2, r0
 8017a4a:	4604      	mov	r4, r0
 8017a4c:	e708      	b.n	8017860 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017a4e:	2200      	movs	r2, #0
 8017a50:	e706      	b.n	8017860 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017a52:	4632      	mov	r2, r6
 8017a54:	e704      	b.n	8017860 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08017a56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a5a:	b09f      	sub	sp, #124	@ 0x7c
 8017a5c:	921b      	str	r2, [sp, #108]	@ 0x6c
 8017a5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8017a60:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8017a62:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8017a66:	931c      	str	r3, [sp, #112]	@ 0x70
 8017a68:	9119      	str	r1, [sp, #100]	@ 0x64
 8017a6a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8017a6e:	901d      	str	r0, [sp, #116]	@ 0x74
 8017a70:	6850      	ldr	r0, [r2, #4]
 8017a72:	6812      	ldr	r2, [r2, #0]
 8017a74:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8017a76:	fb00 1303 	mla	r3, r0, r3, r1
 8017a7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017a7e:	930c      	str	r3, [sp, #48]	@ 0x30
 8017a80:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017a82:	681b      	ldr	r3, [r3, #0]
 8017a84:	9312      	str	r3, [sp, #72]	@ 0x48
 8017a86:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017a88:	685e      	ldr	r6, [r3, #4]
 8017a8a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8017a8e:	930d      	str	r3, [sp, #52]	@ 0x34
 8017a90:	3604      	adds	r6, #4
 8017a92:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8017a94:	2b00      	cmp	r3, #0
 8017a96:	dc03      	bgt.n	8017aa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017a98:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8017a9a:	2b00      	cmp	r3, #0
 8017a9c:	f340 8388 	ble.w	80181b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8017aa0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017aa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017aa6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017aaa:	1e48      	subs	r0, r1, #1
 8017aac:	1e57      	subs	r7, r2, #1
 8017aae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017ab0:	2b00      	cmp	r3, #0
 8017ab2:	f340 8195 	ble.w	8017de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017ab6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017ab8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017abc:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017ac0:	d406      	bmi.n	8017ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017ac2:	4584      	cmp	ip, r0
 8017ac4:	da04      	bge.n	8017ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017ac6:	2b00      	cmp	r3, #0
 8017ac8:	db02      	blt.n	8017ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017aca:	42bb      	cmp	r3, r7
 8017acc:	f2c0 8189 	blt.w	8017de2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017ad0:	f11c 0c01 	adds.w	ip, ip, #1
 8017ad4:	f100 8177 	bmi.w	8017dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017ad8:	4561      	cmp	r1, ip
 8017ada:	f2c0 8174 	blt.w	8017dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017ade:	3301      	adds	r3, #1
 8017ae0:	f100 8171 	bmi.w	8017dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017ae4:	429a      	cmp	r2, r3
 8017ae6:	f2c0 816e 	blt.w	8017dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017aea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017aec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017aee:	931a      	str	r3, [sp, #104]	@ 0x68
 8017af0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8017af2:	2b00      	cmp	r3, #0
 8017af4:	f340 8193 	ble.w	8017e1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017af8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017afa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017afe:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017b00:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017b04:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017b06:	141b      	asrs	r3, r3, #16
 8017b08:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017b0c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017b10:	f100 81d6 	bmi.w	8017ec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b14:	f100 38ff 	add.w	r8, r0, #4294967295
 8017b18:	4543      	cmp	r3, r8
 8017b1a:	f280 81d1 	bge.w	8017ec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b1e:	f1bc 0f00 	cmp.w	ip, #0
 8017b22:	f2c0 81cd 	blt.w	8017ec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b26:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017b2a:	45c4      	cmp	ip, r8
 8017b2c:	f280 81c8 	bge.w	8017ec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b30:	b200      	sxth	r0, r0
 8017b32:	fb0c 3300 	mla	r3, ip, r0, r3
 8017b36:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017b38:	eb04 0803 	add.w	r8, r4, r3
 8017b3c:	5ce3      	ldrb	r3, [r4, r3]
 8017b3e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017b42:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017b46:	2a00      	cmp	r2, #0
 8017b48:	f000 81af 	beq.w	8017eaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017b4c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017b50:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017b54:	940e      	str	r4, [sp, #56]	@ 0x38
 8017b56:	0e24      	lsrs	r4, r4, #24
 8017b58:	9415      	str	r4, [sp, #84]	@ 0x54
 8017b5a:	b179      	cbz	r1, 8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017b5c:	eb08 0c00 	add.w	ip, r8, r0
 8017b60:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017b64:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017b68:	900a      	str	r0, [sp, #40]	@ 0x28
 8017b6a:	0e00      	lsrs	r0, r0, #24
 8017b6c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8017b6e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017b72:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017b76:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017b78:	0e00      	lsrs	r0, r0, #24
 8017b7a:	9016      	str	r0, [sp, #88]	@ 0x58
 8017b7c:	b292      	uxth	r2, r2
 8017b7e:	b289      	uxth	r1, r1
 8017b80:	fb02 f901 	mul.w	r9, r2, r1
 8017b84:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017b88:	0112      	lsls	r2, r2, #4
 8017b8a:	eba2 0809 	sub.w	r8, r2, r9
 8017b8e:	b289      	uxth	r1, r1
 8017b90:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8017b94:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017b96:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017b98:	fa1f f888 	uxth.w	r8, r8
 8017b9c:	1a52      	subs	r2, r2, r1
 8017b9e:	b292      	uxth	r2, r2
 8017ba0:	fb08 f000 	mul.w	r0, r8, r0
 8017ba4:	fb02 000e 	mla	r0, r2, lr, r0
 8017ba8:	fb01 0004 	mla	r0, r1, r4, r0
 8017bac:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017bae:	fb09 0004 	mla	r0, r9, r4, r0
 8017bb2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017bb6:	2800      	cmp	r0, #0
 8017bb8:	f000 80fa 	beq.w	8017db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017bbc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8017bc0:	d01b      	beq.n	8017bfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8017bc2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8017bc6:	fb0e fa0a 	mul.w	sl, lr, sl
 8017bca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017bce:	fb0e fe03 	mul.w	lr, lr, r3
 8017bd2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017bd6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017bda:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8017bde:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8017be2:	4453      	add	r3, sl
 8017be4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017be8:	0a1b      	lsrs	r3, r3, #8
 8017bea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017bee:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017bf2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8017bf6:	ea43 030c 	orr.w	r3, r3, ip
 8017bfa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017bfc:	2cff      	cmp	r4, #255	@ 0xff
 8017bfe:	d021      	beq.n	8017c44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8017c00:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017c02:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017c06:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017c08:	fb04 fb0b 	mul.w	fp, r4, fp
 8017c0c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017c0e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017c12:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017c14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017c18:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c1c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017c20:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017c24:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017c28:	44de      	add	lr, fp
 8017c2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017c2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017c3a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017c3e:	ea4e 040a 	orr.w	r4, lr, sl
 8017c42:	940e      	str	r4, [sp, #56]	@ 0x38
 8017c44:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017c46:	2cff      	cmp	r4, #255	@ 0xff
 8017c48:	d021      	beq.n	8017c8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8017c4a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017c4c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017c50:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017c52:	fb04 fb0b 	mul.w	fp, r4, fp
 8017c56:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017c58:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017c5c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017c5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017c62:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c66:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017c6a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017c6e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017c72:	44de      	add	lr, fp
 8017c74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017c78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c80:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017c84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017c88:	ea4e 040a 	orr.w	r4, lr, sl
 8017c8c:	940a      	str	r4, [sp, #40]	@ 0x28
 8017c8e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017c90:	2cff      	cmp	r4, #255	@ 0xff
 8017c92:	d021      	beq.n	8017cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017c94:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8017c96:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8017c9a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017c9c:	fb04 fb0b 	mul.w	fp, r4, fp
 8017ca0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8017ca2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017ca6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8017ca8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017cac:	fb04 fa0a 	mul.w	sl, r4, sl
 8017cb0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017cb4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8017cb8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8017cbc:	44de      	add	lr, fp
 8017cbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017cc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017cc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017cca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8017cce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8017cd2:	ea4e 040a 	orr.w	r4, lr, sl
 8017cd6:	940f      	str	r4, [sp, #60]	@ 0x3c
 8017cd8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017cda:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8017cde:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8017ce0:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8017ce4:	fb08 fc0c 	mul.w	ip, r8, ip
 8017ce8:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017cec:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8017cf0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8017cf2:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017cf6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8017cfa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8017cfc:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017d00:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8017d04:	fb08 f80e 	mul.w	r8, r8, lr
 8017d08:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017d0c:	fb02 8303 	mla	r3, r2, r3, r8
 8017d10:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017d12:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8017d14:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8017d18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017d1a:	fb01 330a 	mla	r3, r1, sl, r3
 8017d1e:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8017d22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017d24:	fb09 3901 	mla	r9, r9, r1, r3
 8017d28:	4342      	muls	r2, r0
 8017d2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017d32:	883b      	ldrh	r3, [r7, #0]
 8017d34:	1c50      	adds	r0, r2, #1
 8017d36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017d3a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8017d3e:	ea4c 0c09 	orr.w	ip, ip, r9
 8017d42:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017d46:	1219      	asrs	r1, r3, #8
 8017d48:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017d4c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017d50:	b2c0      	uxtb	r0, r0
 8017d52:	fb12 f204 	smulbb	r2, r2, r4
 8017d56:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017d5a:	fb01 2100 	mla	r1, r1, r0, r2
 8017d5e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8017d62:	10da      	asrs	r2, r3, #3
 8017d64:	fa5f fc8c 	uxtb.w	ip, ip
 8017d68:	00db      	lsls	r3, r3, #3
 8017d6a:	fb1c fc04 	smulbb	ip, ip, r4
 8017d6e:	b2db      	uxtb	r3, r3
 8017d70:	b289      	uxth	r1, r1
 8017d72:	fb03 c300 	mla	r3, r3, r0, ip
 8017d76:	fa1f fc83 	uxth.w	ip, r3
 8017d7a:	1c4b      	adds	r3, r1, #1
 8017d7c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017d80:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8017d84:	fb1e fe04 	smulbb	lr, lr, r4
 8017d88:	f10c 0301 	add.w	r3, ip, #1
 8017d8c:	fb02 e200 	mla	r2, r2, r0, lr
 8017d90:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017d94:	b292      	uxth	r2, r2
 8017d96:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8017d9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017d9e:	430b      	orrs	r3, r1
 8017da0:	1c51      	adds	r1, r2, #1
 8017da2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017da6:	0952      	lsrs	r2, r2, #5
 8017da8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017dac:	4313      	orrs	r3, r2
 8017dae:	803b      	strh	r3, [r7, #0]
 8017db0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8017db2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8017db4:	441a      	add	r2, r3
 8017db6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017db8:	9229      	str	r2, [sp, #164]	@ 0xa4
 8017dba:	441d      	add	r5, r3
 8017dbc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8017dbe:	3b01      	subs	r3, #1
 8017dc0:	3702      	adds	r7, #2
 8017dc2:	931a      	str	r3, [sp, #104]	@ 0x68
 8017dc4:	e694      	b.n	8017af0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017dc6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8017dc8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017dca:	441c      	add	r4, r3
 8017dcc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8017dce:	9429      	str	r4, [sp, #164]	@ 0xa4
 8017dd0:	441d      	add	r5, r3
 8017dd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017dd4:	3b01      	subs	r3, #1
 8017dd6:	9309      	str	r3, [sp, #36]	@ 0x24
 8017dd8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017dda:	3302      	adds	r3, #2
 8017ddc:	930c      	str	r3, [sp, #48]	@ 0x30
 8017dde:	e666      	b.n	8017aae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017de0:	d024      	beq.n	8017e2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8017de2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017de4:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8017de6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017de8:	3b01      	subs	r3, #1
 8017dea:	fb00 4003 	mla	r0, r0, r3, r4
 8017dee:	1400      	asrs	r0, r0, #16
 8017df0:	f53f ae7b 	bmi.w	8017aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017df4:	3901      	subs	r1, #1
 8017df6:	4288      	cmp	r0, r1
 8017df8:	f6bf ae77 	bge.w	8017aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017dfc:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8017dfe:	fb01 5303 	mla	r3, r1, r3, r5
 8017e02:	141b      	asrs	r3, r3, #16
 8017e04:	f53f ae71 	bmi.w	8017aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017e08:	3a01      	subs	r2, #1
 8017e0a:	4293      	cmp	r3, r2
 8017e0c:	f6bf ae6d 	bge.w	8017aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8017e10:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8017e14:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8017e18:	f1bb 0f00 	cmp.w	fp, #0
 8017e1c:	dc70      	bgt.n	8017f00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8017e1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017e20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017e24:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017e26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017e2a:	930c      	str	r3, [sp, #48]	@ 0x30
 8017e2c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8017e2e:	2b00      	cmp	r3, #0
 8017e30:	f340 81be 	ble.w	80181b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8017e34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e38:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017e3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017e40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017e42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017e4e:	eef0 6a62 	vmov.f32	s13, s5
 8017e52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017e56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017e5e:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8017e62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e66:	eef0 6a43 	vmov.f32	s13, s6
 8017e6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e6e:	ee12 2a90 	vmov	r2, s5
 8017e72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e76:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e7a:	ee13 2a10 	vmov	r2, s6
 8017e7e:	932b      	str	r3, [sp, #172]	@ 0xac
 8017e80:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e86:	932c      	str	r3, [sp, #176]	@ 0xb0
 8017e88:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8017e8a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8017e8c:	3b01      	subs	r3, #1
 8017e8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e92:	9319      	str	r3, [sp, #100]	@ 0x64
 8017e94:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017e96:	bf08      	it	eq
 8017e98:	4613      	moveq	r3, r2
 8017e9a:	ee16 5a90 	vmov	r5, s13
 8017e9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8017ea0:	eeb0 3a67 	vmov.f32	s6, s15
 8017ea4:	eef0 2a47 	vmov.f32	s5, s14
 8017ea8:	e5f3      	b.n	8017a92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017eaa:	2900      	cmp	r1, #0
 8017eac:	f43f ae66 	beq.w	8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017eb0:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017eb4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017eb8:	900a      	str	r0, [sp, #40]	@ 0x28
 8017eba:	0e00      	lsrs	r0, r0, #24
 8017ebc:	9013      	str	r0, [sp, #76]	@ 0x4c
 8017ebe:	e65d      	b.n	8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8017ec0:	f113 0801 	adds.w	r8, r3, #1
 8017ec4:	f53f af74 	bmi.w	8017db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017ec8:	4540      	cmp	r0, r8
 8017eca:	f6ff af71 	blt.w	8017db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017ece:	f11c 0801 	adds.w	r8, ip, #1
 8017ed2:	f53f af6d 	bmi.w	8017db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017ed6:	45c6      	cmp	lr, r8
 8017ed8:	f6ff af6a 	blt.w	8017db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017edc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8017ede:	9302      	str	r3, [sp, #8]
 8017ee0:	b200      	sxth	r0, r0
 8017ee2:	fa0f f38e 	sxth.w	r3, lr
 8017ee6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8017eea:	e9cd c203 	strd	ip, r2, [sp, #12]
 8017eee:	9301      	str	r3, [sp, #4]
 8017ef0:	9000      	str	r0, [sp, #0]
 8017ef2:	4633      	mov	r3, r6
 8017ef4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017ef6:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8017ef8:	4639      	mov	r1, r7
 8017efa:	f7ff fc62 	bl	80177c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8017efe:	e757      	b.n	8017db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017f00:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8017f02:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8017f04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017f08:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8017f0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f0e:	1427      	asrs	r7, r4, #16
 8017f10:	142b      	asrs	r3, r5, #16
 8017f12:	fb01 7303 	mla	r3, r1, r3, r7
 8017f16:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017f18:	18e7      	adds	r7, r4, r3
 8017f1a:	5ce3      	ldrb	r3, [r4, r3]
 8017f1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017f20:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017f24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017f28:	2a00      	cmp	r2, #0
 8017f2a:	f000 8137 	beq.w	801819c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8017f2e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017f32:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017f36:	9410      	str	r4, [sp, #64]	@ 0x40
 8017f38:	0e24      	lsrs	r4, r4, #24
 8017f3a:	9417      	str	r4, [sp, #92]	@ 0x5c
 8017f3c:	b170      	cbz	r0, 8017f5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8017f3e:	eb07 0e01 	add.w	lr, r7, r1
 8017f42:	5c79      	ldrb	r1, [r7, r1]
 8017f44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017f48:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017f4a:	0e09      	lsrs	r1, r1, #24
 8017f4c:	9114      	str	r1, [sp, #80]	@ 0x50
 8017f4e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017f52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017f56:	9111      	str	r1, [sp, #68]	@ 0x44
 8017f58:	0e09      	lsrs	r1, r1, #24
 8017f5a:	9118      	str	r1, [sp, #96]	@ 0x60
 8017f5c:	b292      	uxth	r2, r2
 8017f5e:	b280      	uxth	r0, r0
 8017f60:	fb02 f800 	mul.w	r8, r2, r0
 8017f64:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8017f68:	0112      	lsls	r2, r2, #4
 8017f6a:	eba2 0e08 	sub.w	lr, r2, r8
 8017f6e:	b280      	uxth	r0, r0
 8017f70:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8017f74:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8017f76:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017f78:	fa1f fe8e 	uxth.w	lr, lr
 8017f7c:	1a12      	subs	r2, r2, r0
 8017f7e:	b292      	uxth	r2, r2
 8017f80:	fb0e f101 	mul.w	r1, lr, r1
 8017f84:	fb02 110c 	mla	r1, r2, ip, r1
 8017f88:	fb00 1104 	mla	r1, r0, r4, r1
 8017f8c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8017f8e:	fb08 1104 	mla	r1, r8, r4, r1
 8017f92:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017f96:	2900      	cmp	r1, #0
 8017f98:	f000 80f5 	beq.w	8018186 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8017f9c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8017fa0:	d019      	beq.n	8017fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8017fa2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8017fa6:	fb0c fa0a 	mul.w	sl, ip, sl
 8017faa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8017fae:	fb0c fc03 	mul.w	ip, ip, r3
 8017fb2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017fb6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017fba:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8017fbe:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8017fc2:	4453      	add	r3, sl
 8017fc4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017fc8:	0a1b      	lsrs	r3, r3, #8
 8017fca:	0a3f      	lsrs	r7, r7, #8
 8017fcc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8017fd0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8017fd4:	433b      	orrs	r3, r7
 8017fd6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8017fd8:	2cff      	cmp	r4, #255	@ 0xff
 8017fda:	d020      	beq.n	801801e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8017fdc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017fde:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8017fe2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8017fe4:	4367      	muls	r7, r4
 8017fe6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8017fe8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8017fec:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8017fee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017ff2:	fb04 fa0a 	mul.w	sl, r4, sl
 8017ff6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8017ffa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8017ffe:	44bc      	add	ip, r7
 8018000:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018004:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018008:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801800c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018010:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018014:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018018:	ea4c 040a 	orr.w	r4, ip, sl
 801801c:	9410      	str	r4, [sp, #64]	@ 0x40
 801801e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018020:	2cff      	cmp	r4, #255	@ 0xff
 8018022:	d020      	beq.n	8018066 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8018024:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018026:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801802a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801802c:	4367      	muls	r7, r4
 801802e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018030:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018034:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018036:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801803a:	fb04 fa0a 	mul.w	sl, r4, sl
 801803e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018042:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018046:	44bc      	add	ip, r7
 8018048:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801804c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018050:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018054:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018058:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801805c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018060:	ea4c 040a 	orr.w	r4, ip, sl
 8018064:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018066:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8018068:	2cff      	cmp	r4, #255	@ 0xff
 801806a:	d020      	beq.n	80180ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801806c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801806e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018072:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8018074:	4367      	muls	r7, r4
 8018076:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018078:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801807c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801807e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018082:	fb04 fa0a 	mul.w	sl, r4, sl
 8018086:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801808a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801808e:	44bc      	add	ip, r7
 8018090:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018094:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018098:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801809c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80180a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80180a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80180a8:	ea4c 040a 	orr.w	r4, ip, sl
 80180ac:	9411      	str	r4, [sp, #68]	@ 0x44
 80180ae:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80180b0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80180b4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80180b6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80180ba:	fb0e f707 	mul.w	r7, lr, r7
 80180be:	fb02 770c 	mla	r7, r2, ip, r7
 80180c2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80180c6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80180c8:	fb00 770c 	mla	r7, r0, ip, r7
 80180cc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80180d0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80180d2:	fb08 770c 	mla	r7, r8, ip, r7
 80180d6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 80180da:	fb0e fe0c 	mul.w	lr, lr, ip
 80180de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80180e2:	fb02 e303 	mla	r3, r2, r3, lr
 80180e6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80180e8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80180ea:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80180ee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80180f0:	fb00 330a 	mla	r3, r0, sl, r3
 80180f4:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80180f8:	fb08 3c0c 	mla	ip, r8, ip, r3
 80180fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80180fe:	f8b9 0000 	ldrh.w	r0, [r9]
 8018102:	434b      	muls	r3, r1
 8018104:	0a3f      	lsrs	r7, r7, #8
 8018106:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801810a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801810e:	1c59      	adds	r1, r3, #1
 8018110:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8018114:	ea47 070c 	orr.w	r7, r7, ip
 8018118:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801811c:	1202      	asrs	r2, r0, #8
 801811e:	0c3b      	lsrs	r3, r7, #16
 8018120:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018124:	b2c9      	uxtb	r1, r1
 8018126:	fb13 f304 	smulbb	r3, r3, r4
 801812a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801812e:	fb02 3201 	mla	r2, r2, r1, r3
 8018132:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8018136:	10c3      	asrs	r3, r0, #3
 8018138:	b2ff      	uxtb	r7, r7
 801813a:	00c0      	lsls	r0, r0, #3
 801813c:	b292      	uxth	r2, r2
 801813e:	fb1c fc04 	smulbb	ip, ip, r4
 8018142:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8018146:	b2c0      	uxtb	r0, r0
 8018148:	fb17 f704 	smulbb	r7, r7, r4
 801814c:	fb03 c301 	mla	r3, r3, r1, ip
 8018150:	fb00 7001 	mla	r0, r0, r1, r7
 8018154:	f102 0c01 	add.w	ip, r2, #1
 8018158:	b280      	uxth	r0, r0
 801815a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801815e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8018162:	1c42      	adds	r2, r0, #1
 8018164:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018168:	b29b      	uxth	r3, r3
 801816a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801816e:	ea42 020c 	orr.w	r2, r2, ip
 8018172:	f103 0c01 	add.w	ip, r3, #1
 8018176:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801817a:	095b      	lsrs	r3, r3, #5
 801817c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018180:	431a      	orrs	r2, r3
 8018182:	f8a9 2000 	strh.w	r2, [r9]
 8018186:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8018188:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801818a:	441a      	add	r2, r3
 801818c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801818e:	9229      	str	r2, [sp, #164]	@ 0xa4
 8018190:	f109 0902 	add.w	r9, r9, #2
 8018194:	441d      	add	r5, r3
 8018196:	f10b 3bff 	add.w	fp, fp, #4294967295
 801819a:	e63d      	b.n	8017e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801819c:	2800      	cmp	r0, #0
 801819e:	f43f aedd 	beq.w	8017f5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80181a2:	5c79      	ldrb	r1, [r7, r1]
 80181a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80181a8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80181aa:	0e09      	lsrs	r1, r1, #24
 80181ac:	9114      	str	r1, [sp, #80]	@ 0x50
 80181ae:	e6d5      	b.n	8017f5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80181b0:	b01f      	add	sp, #124	@ 0x7c
 80181b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080181b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80181b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181ba:	b089      	sub	sp, #36	@ 0x24
 80181bc:	9101      	str	r1, [sp, #4]
 80181be:	9801      	ldr	r0, [sp, #4]
 80181c0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 80181c4:	8800      	ldrh	r0, [r0, #0]
 80181c6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 80181ca:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 80181ce:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 80181d2:	1206      	asrs	r6, r0, #8
 80181d4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 80181d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80181dc:	9602      	str	r6, [sp, #8]
 80181de:	10c6      	asrs	r6, r0, #3
 80181e0:	00c0      	lsls	r0, r0, #3
 80181e2:	b2c0      	uxtb	r0, r0
 80181e4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80181e8:	9004      	str	r0, [sp, #16]
 80181ea:	2f00      	cmp	r7, #0
 80181ec:	fb07 100c 	mla	r0, r7, ip, r1
 80181f0:	9603      	str	r6, [sp, #12]
 80181f2:	eb02 0e00 	add.w	lr, r2, r0
 80181f6:	f2c0 810a 	blt.w	801840e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80181fa:	45b8      	cmp	r8, r7
 80181fc:	f340 8107 	ble.w	801840e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8018200:	2900      	cmp	r1, #0
 8018202:	f2c0 8102 	blt.w	801840a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8018206:	458c      	cmp	ip, r1
 8018208:	f340 80ff 	ble.w	801840a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801820c:	5c12      	ldrb	r2, [r2, r0]
 801820e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8018212:	1c4a      	adds	r2, r1, #1
 8018214:	f100 80fe 	bmi.w	8018414 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8018218:	4594      	cmp	ip, r2
 801821a:	f340 80fb 	ble.w	8018414 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801821e:	2d00      	cmp	r5, #0
 8018220:	f000 80fa 	beq.w	8018418 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8018224:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018228:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801822c:	3701      	adds	r7, #1
 801822e:	f100 80f7 	bmi.w	8018420 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8018232:	45b8      	cmp	r8, r7
 8018234:	f340 80f4 	ble.w	8018420 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8018238:	2c00      	cmp	r4, #0
 801823a:	f000 80f4 	beq.w	8018426 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801823e:	2900      	cmp	r1, #0
 8018240:	eb0e 020c 	add.w	r2, lr, ip
 8018244:	f2c0 80ea 	blt.w	801841c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8018248:	458c      	cmp	ip, r1
 801824a:	f340 80e7 	ble.w	801841c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801824e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8018252:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8018256:	3101      	adds	r1, #1
 8018258:	f100 80e8 	bmi.w	801842c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801825c:	458c      	cmp	ip, r1
 801825e:	f340 80e5 	ble.w	801842c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8018262:	2d00      	cmp	r5, #0
 8018264:	f000 80e4 	beq.w	8018430 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8018268:	7852      	ldrb	r2, [r2, #1]
 801826a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801826e:	0e0b      	lsrs	r3, r1, #24
 8018270:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8018274:	9300      	str	r3, [sp, #0]
 8018276:	b2a4      	uxth	r4, r4
 8018278:	b2ab      	uxth	r3, r5
 801827a:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801827e:	fb03 f904 	mul.w	r9, r3, r4
 8018282:	fb0a f505 	mul.w	r5, sl, r5
 8018286:	011b      	lsls	r3, r3, #4
 8018288:	eba3 0e09 	sub.w	lr, r3, r9
 801828c:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8018290:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8018294:	0a28      	lsrs	r0, r5, #8
 8018296:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801829a:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801829e:	4405      	add	r5, r0
 80182a0:	0a2d      	lsrs	r5, r5, #8
 80182a2:	fb0a f303 	mul.w	r3, sl, r3
 80182a6:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80182aa:	9005      	str	r0, [sp, #20]
 80182ac:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80182b0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80182b4:	0a1b      	lsrs	r3, r3, #8
 80182b6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80182ba:	9306      	str	r3, [sp, #24]
 80182bc:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 80182c0:	fb0b f303 	mul.w	r3, fp, r3
 80182c4:	0a1d      	lsrs	r5, r3, #8
 80182c6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80182ca:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80182ce:	fb0b f606 	mul.w	r6, fp, r6
 80182d2:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80182d6:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 80182da:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80182de:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80182e2:	fb08 f707 	mul.w	r7, r8, r7
 80182e6:	441d      	add	r5, r3
 80182e8:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 80182ec:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80182f0:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80182f4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80182f8:	fb08 fc0c 	mul.w	ip, r8, ip
 80182fc:	0a1b      	lsrs	r3, r3, #8
 80182fe:	9307      	str	r3, [sp, #28]
 8018300:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8018304:	0e0b      	lsrs	r3, r1, #24
 8018306:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801830a:	435f      	muls	r7, r3
 801830c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8018310:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8018314:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8018318:	4460      	add	r0, ip
 801831a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801831e:	b2a4      	uxth	r4, r4
 8018320:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018324:	0a2d      	lsrs	r5, r5, #8
 8018326:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801832a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801832e:	fa1f fe8e 	uxth.w	lr, lr
 8018332:	4359      	muls	r1, r3
 8018334:	1b12      	subs	r2, r2, r4
 8018336:	9b05      	ldr	r3, [sp, #20]
 8018338:	44bc      	add	ip, r7
 801833a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801833e:	b292      	uxth	r2, r2
 8018340:	fb05 f50e 	mul.w	r5, r5, lr
 8018344:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018348:	fb03 5502 	mla	r5, r3, r2, r5
 801834c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018350:	9b06      	ldr	r3, [sp, #24]
 8018352:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8018356:	0a36      	lsrs	r6, r6, #8
 8018358:	0a00      	lsrs	r0, r0, #8
 801835a:	fb0c 5509 	mla	r5, ip, r9, r5
 801835e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8018362:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018366:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801836a:	fb00 5504 	mla	r5, r0, r4, r5
 801836e:	fb0e f606 	mul.w	r6, lr, r6
 8018372:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8018376:	0a09      	lsrs	r1, r1, #8
 8018378:	9b07      	ldr	r3, [sp, #28]
 801837a:	fb02 6000 	mla	r0, r2, r0, r6
 801837e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8018382:	fb09 0001 	mla	r0, r9, r1, r0
 8018386:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801838a:	fb0e fe0b 	mul.w	lr, lr, fp
 801838e:	fb04 0003 	mla	r0, r4, r3, r0
 8018392:	fb02 e20a 	mla	r2, r2, sl, lr
 8018396:	9b00      	ldr	r3, [sp, #0]
 8018398:	fb04 2408 	mla	r4, r4, r8, r2
 801839c:	fb09 4903 	mla	r9, r9, r3, r4
 80183a0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80183a4:	9b02      	ldr	r3, [sp, #8]
 80183a6:	9a04      	ldr	r2, [sp, #16]
 80183a8:	fa5f f989 	uxtb.w	r9, r9
 80183ac:	fb03 f109 	mul.w	r1, r3, r9
 80183b0:	9b03      	ldr	r3, [sp, #12]
 80183b2:	0a2d      	lsrs	r5, r5, #8
 80183b4:	0a00      	lsrs	r0, r0, #8
 80183b6:	fb03 f309 	mul.w	r3, r3, r9
 80183ba:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80183be:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80183c2:	4305      	orrs	r5, r0
 80183c4:	fb02 f909 	mul.w	r9, r2, r9
 80183c8:	1c58      	adds	r0, r3, #1
 80183ca:	1c4a      	adds	r2, r1, #1
 80183cc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80183d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80183d4:	0a2b      	lsrs	r3, r5, #8
 80183d6:	0c2a      	lsrs	r2, r5, #16
 80183d8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80183dc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80183e0:	00db      	lsls	r3, r3, #3
 80183e2:	0212      	lsls	r2, r2, #8
 80183e4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80183e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80183ec:	4313      	orrs	r3, r2
 80183ee:	f109 0201 	add.w	r2, r9, #1
 80183f2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80183f6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80183fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80183fe:	431d      	orrs	r5, r3
 8018400:	9b01      	ldr	r3, [sp, #4]
 8018402:	801d      	strh	r5, [r3, #0]
 8018404:	b009      	add	sp, #36	@ 0x24
 8018406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801840a:	2000      	movs	r0, #0
 801840c:	e701      	b.n	8018212 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801840e:	2600      	movs	r6, #0
 8018410:	4630      	mov	r0, r6
 8018412:	e70b      	b.n	801822c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8018414:	2600      	movs	r6, #0
 8018416:	e709      	b.n	801822c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8018418:	462e      	mov	r6, r5
 801841a:	e707      	b.n	801822c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801841c:	2700      	movs	r7, #0
 801841e:	e71a      	b.n	8018256 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8018420:	2100      	movs	r1, #0
 8018422:	460f      	mov	r7, r1
 8018424:	e723      	b.n	801826e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8018426:	4621      	mov	r1, r4
 8018428:	4627      	mov	r7, r4
 801842a:	e720      	b.n	801826e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801842c:	2100      	movs	r1, #0
 801842e:	e71e      	b.n	801826e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8018430:	4629      	mov	r1, r5
 8018432:	e71c      	b.n	801826e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08018434 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018438:	b09b      	sub	sp, #108	@ 0x6c
 801843a:	9218      	str	r2, [sp, #96]	@ 0x60
 801843c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801843e:	9116      	str	r1, [sp, #88]	@ 0x58
 8018440:	9307      	str	r3, [sp, #28]
 8018442:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8018446:	9019      	str	r0, [sp, #100]	@ 0x64
 8018448:	6850      	ldr	r0, [r2, #4]
 801844a:	6812      	ldr	r2, [r2, #0]
 801844c:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801844e:	fb00 1303 	mla	r3, r0, r3, r1
 8018452:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018456:	930a      	str	r3, [sp, #40]	@ 0x28
 8018458:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801845a:	681b      	ldr	r3, [r3, #0]
 801845c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801845e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018460:	685e      	ldr	r6, [r3, #4]
 8018462:	3604      	adds	r6, #4
 8018464:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018466:	2b00      	cmp	r3, #0
 8018468:	dc03      	bgt.n	8018472 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801846a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801846c:	2b00      	cmp	r3, #0
 801846e:	f340 8373 	ble.w	8018b58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8018472:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8018474:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018478:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801847c:	1e48      	subs	r0, r1, #1
 801847e:	1e57      	subs	r7, r2, #1
 8018480:	9b07      	ldr	r3, [sp, #28]
 8018482:	2b00      	cmp	r3, #0
 8018484:	f340 8190 	ble.w	80187a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018488:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801848a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801848e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018492:	d406      	bmi.n	80184a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018494:	4584      	cmp	ip, r0
 8018496:	da04      	bge.n	80184a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018498:	2b00      	cmp	r3, #0
 801849a:	db02      	blt.n	80184a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801849c:	42bb      	cmp	r3, r7
 801849e:	f2c0 8184 	blt.w	80187aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80184a2:	f11c 0c01 	adds.w	ip, ip, #1
 80184a6:	f100 8172 	bmi.w	801878e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80184aa:	4561      	cmp	r1, ip
 80184ac:	f2c0 816f 	blt.w	801878e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80184b0:	3301      	adds	r3, #1
 80184b2:	f100 816c 	bmi.w	801878e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80184b6:	429a      	cmp	r2, r3
 80184b8:	f2c0 8169 	blt.w	801878e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80184bc:	9b07      	ldr	r3, [sp, #28]
 80184be:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80184c0:	9317      	str	r3, [sp, #92]	@ 0x5c
 80184c2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80184c4:	2b00      	cmp	r3, #0
 80184c6:	f340 818e 	ble.w	80187e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80184ca:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80184cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80184d0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80184d2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80184d6:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80184d8:	141b      	asrs	r3, r3, #16
 80184da:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80184de:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80184e2:	f100 81d1 	bmi.w	8018888 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80184e6:	f101 38ff 	add.w	r8, r1, #4294967295
 80184ea:	4543      	cmp	r3, r8
 80184ec:	f280 81cc 	bge.w	8018888 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80184f0:	f1bc 0f00 	cmp.w	ip, #0
 80184f4:	f2c0 81c8 	blt.w	8018888 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80184f8:	f10e 38ff 	add.w	r8, lr, #4294967295
 80184fc:	45c4      	cmp	ip, r8
 80184fe:	f280 81c3 	bge.w	8018888 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018502:	b209      	sxth	r1, r1
 8018504:	fb0c 3301 	mla	r3, ip, r1, r3
 8018508:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801850a:	eb04 0803 	add.w	r8, r4, r3
 801850e:	5ce3      	ldrb	r3, [r4, r3]
 8018510:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018514:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018518:	2a00      	cmp	r2, #0
 801851a:	f000 81aa 	beq.w	8018872 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801851e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018522:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018526:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018528:	0e24      	lsrs	r4, r4, #24
 801852a:	9412      	str	r4, [sp, #72]	@ 0x48
 801852c:	b178      	cbz	r0, 801854e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801852e:	eb08 0c01 	add.w	ip, r8, r1
 8018532:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018536:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801853a:	9108      	str	r1, [sp, #32]
 801853c:	0e09      	lsrs	r1, r1, #24
 801853e:	9110      	str	r1, [sp, #64]	@ 0x40
 8018540:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8018544:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018548:	910c      	str	r1, [sp, #48]	@ 0x30
 801854a:	0e09      	lsrs	r1, r1, #24
 801854c:	9113      	str	r1, [sp, #76]	@ 0x4c
 801854e:	b292      	uxth	r2, r2
 8018550:	b280      	uxth	r0, r0
 8018552:	fb02 f900 	mul.w	r9, r2, r0
 8018556:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801855a:	0112      	lsls	r2, r2, #4
 801855c:	eba2 0809 	sub.w	r8, r2, r9
 8018560:	b280      	uxth	r0, r0
 8018562:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8018566:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018568:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801856a:	fa1f f888 	uxth.w	r8, r8
 801856e:	1a12      	subs	r2, r2, r0
 8018570:	b292      	uxth	r2, r2
 8018572:	fb08 f101 	mul.w	r1, r8, r1
 8018576:	fb02 110e 	mla	r1, r2, lr, r1
 801857a:	fb00 1104 	mla	r1, r0, r4, r1
 801857e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018580:	fb09 1104 	mla	r1, r9, r4, r1
 8018584:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018588:	2900      	cmp	r1, #0
 801858a:	f000 80f5 	beq.w	8018778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801858e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8018592:	d01b      	beq.n	80185cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018594:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8018598:	fb0e fa0a 	mul.w	sl, lr, sl
 801859c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80185a0:	fb0e fe03 	mul.w	lr, lr, r3
 80185a4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80185a8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80185ac:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80185b0:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80185b4:	4453      	add	r3, sl
 80185b6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80185ba:	0a1b      	lsrs	r3, r3, #8
 80185bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80185c0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80185c4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80185c8:	ea43 030c 	orr.w	r3, r3, ip
 80185cc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80185ce:	2cff      	cmp	r4, #255	@ 0xff
 80185d0:	d021      	beq.n	8018616 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80185d2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80185d4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80185d8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80185da:	fb04 fb0b 	mul.w	fp, r4, fp
 80185de:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80185e0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80185e4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80185e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80185ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80185ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80185f2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80185f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80185fa:	44de      	add	lr, fp
 80185fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018600:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018604:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018608:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801860c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018610:	ea4e 040a 	orr.w	r4, lr, sl
 8018614:	940b      	str	r4, [sp, #44]	@ 0x2c
 8018616:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018618:	2cff      	cmp	r4, #255	@ 0xff
 801861a:	d021      	beq.n	8018660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801861c:	9c08      	ldr	r4, [sp, #32]
 801861e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8018622:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018624:	fb04 fb0b 	mul.w	fp, r4, fp
 8018628:	9c08      	ldr	r4, [sp, #32]
 801862a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801862e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8018630:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018634:	fb04 fa0a 	mul.w	sl, r4, sl
 8018638:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801863c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8018640:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8018644:	44de      	add	lr, fp
 8018646:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801864a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801864e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018652:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018656:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801865a:	ea4e 040a 	orr.w	r4, lr, sl
 801865e:	9408      	str	r4, [sp, #32]
 8018660:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018662:	2cff      	cmp	r4, #255	@ 0xff
 8018664:	d021      	beq.n	80186aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018666:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8018668:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801866c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801866e:	fb04 fb0b 	mul.w	fp, r4, fp
 8018672:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8018674:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018678:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801867a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801867e:	fb04 fa0a 	mul.w	sl, r4, sl
 8018682:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8018686:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801868a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801868e:	44de      	add	lr, fp
 8018690:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018694:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018698:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801869c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80186a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80186a4:	ea4e 040a 	orr.w	r4, lr, sl
 80186a8:	940c      	str	r4, [sp, #48]	@ 0x30
 80186aa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80186ac:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80186b0:	9c08      	ldr	r4, [sp, #32]
 80186b2:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80186b6:	fb08 fc0c 	mul.w	ip, r8, ip
 80186ba:	fb02 cc0e 	mla	ip, r2, lr, ip
 80186be:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80186c2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80186c4:	fb00 cc0e 	mla	ip, r0, lr, ip
 80186c8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80186cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80186ce:	fb09 cc0e 	mla	ip, r9, lr, ip
 80186d2:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80186d6:	fb08 f80e 	mul.w	r8, r8, lr
 80186da:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80186de:	fb02 8303 	mla	r3, r2, r3, r8
 80186e2:	9a08      	ldr	r2, [sp, #32]
 80186e4:	f8b7 8000 	ldrh.w	r8, [r7]
 80186e8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80186ec:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80186ee:	fb00 330a 	mla	r3, r0, sl, r3
 80186f2:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 80186f6:	fb09 3900 	mla	r9, r9, r0, r3
 80186fa:	43c9      	mvns	r1, r1
 80186fc:	ea4f 2228 	mov.w	r2, r8, asr #8
 8018700:	fa5f fe81 	uxtb.w	lr, r1
 8018704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018708:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801870c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8018710:	fb02 f20e 	mul.w	r2, r2, lr
 8018714:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018718:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801871c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018720:	1c53      	adds	r3, r2, #1
 8018722:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018726:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801872a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801872e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018732:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8018736:	4a63      	ldr	r2, [pc, #396]	@ (80188c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8018738:	fb00 f00e 	mul.w	r0, r0, lr
 801873c:	b2db      	uxtb	r3, r3
 801873e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018742:	1c43      	adds	r3, r0, #1
 8018744:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018748:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801874c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018750:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018754:	b2c9      	uxtb	r1, r1
 8018756:	00db      	lsls	r3, r3, #3
 8018758:	fb01 f10e 	mul.w	r1, r1, lr
 801875c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018760:	4313      	orrs	r3, r2
 8018762:	1c4a      	adds	r2, r1, #1
 8018764:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018768:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801876c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018770:	ea4c 0c03 	orr.w	ip, ip, r3
 8018774:	f8a7 c000 	strh.w	ip, [r7]
 8018778:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801877a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801877c:	441a      	add	r2, r3
 801877e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018780:	9225      	str	r2, [sp, #148]	@ 0x94
 8018782:	441d      	add	r5, r3
 8018784:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8018786:	3b01      	subs	r3, #1
 8018788:	3702      	adds	r7, #2
 801878a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801878c:	e699      	b.n	80184c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801878e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8018790:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8018792:	441c      	add	r4, r3
 8018794:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018796:	9425      	str	r4, [sp, #148]	@ 0x94
 8018798:	441d      	add	r5, r3
 801879a:	9b07      	ldr	r3, [sp, #28]
 801879c:	3b01      	subs	r3, #1
 801879e:	9307      	str	r3, [sp, #28]
 80187a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80187a2:	3302      	adds	r3, #2
 80187a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80187a6:	e66b      	b.n	8018480 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80187a8:	d024      	beq.n	80187f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80187aa:	9b07      	ldr	r3, [sp, #28]
 80187ac:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80187ae:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80187b0:	3b01      	subs	r3, #1
 80187b2:	fb00 4003 	mla	r0, r0, r3, r4
 80187b6:	1400      	asrs	r0, r0, #16
 80187b8:	f53f ae80 	bmi.w	80184bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80187bc:	3901      	subs	r1, #1
 80187be:	4288      	cmp	r0, r1
 80187c0:	f6bf ae7c 	bge.w	80184bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80187c4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80187c6:	fb01 5303 	mla	r3, r1, r3, r5
 80187ca:	141b      	asrs	r3, r3, #16
 80187cc:	f53f ae76 	bmi.w	80184bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80187d0:	3a01      	subs	r2, #1
 80187d2:	4293      	cmp	r3, r2
 80187d4:	f6bf ae72 	bge.w	80184bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80187d8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80187dc:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80187e0:	f1bb 0f00 	cmp.w	fp, #0
 80187e4:	dc70      	bgt.n	80188c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80187e6:	9b07      	ldr	r3, [sp, #28]
 80187e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80187ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80187ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80187f2:	930a      	str	r3, [sp, #40]	@ 0x28
 80187f4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80187f6:	2b00      	cmp	r3, #0
 80187f8:	f340 81ae 	ble.w	8018b58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80187fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018800:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018804:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018808:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801880a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801880e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018812:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018816:	eef0 6a62 	vmov.f32	s13, s5
 801881a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801881e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018822:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018826:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801882a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801882e:	eef0 6a43 	vmov.f32	s13, s6
 8018832:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018836:	ee12 2a90 	vmov	r2, s5
 801883a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801883e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018842:	ee13 2a10 	vmov	r2, s6
 8018846:	9327      	str	r3, [sp, #156]	@ 0x9c
 8018848:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801884a:	fb92 f3f3 	sdiv	r3, r2, r3
 801884e:	9328      	str	r3, [sp, #160]	@ 0xa0
 8018850:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8018852:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8018854:	3b01      	subs	r3, #1
 8018856:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801885a:	9316      	str	r3, [sp, #88]	@ 0x58
 801885c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801885e:	bf08      	it	eq
 8018860:	4613      	moveq	r3, r2
 8018862:	ee16 5a90 	vmov	r5, s13
 8018866:	9307      	str	r3, [sp, #28]
 8018868:	eeb0 3a67 	vmov.f32	s6, s15
 801886c:	eef0 2a47 	vmov.f32	s5, s14
 8018870:	e5f8      	b.n	8018464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018872:	2800      	cmp	r0, #0
 8018874:	f43f ae6b 	beq.w	801854e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018878:	f818 1001 	ldrb.w	r1, [r8, r1]
 801887c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018880:	9108      	str	r1, [sp, #32]
 8018882:	0e09      	lsrs	r1, r1, #24
 8018884:	9110      	str	r1, [sp, #64]	@ 0x40
 8018886:	e662      	b.n	801854e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018888:	f113 0801 	adds.w	r8, r3, #1
 801888c:	f53f af74 	bmi.w	8018778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018890:	4541      	cmp	r1, r8
 8018892:	f6ff af71 	blt.w	8018778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018896:	f11c 0801 	adds.w	r8, ip, #1
 801889a:	f53f af6d 	bmi.w	8018778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801889e:	45c6      	cmp	lr, r8
 80188a0:	f6ff af6a 	blt.w	8018778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80188a4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80188a8:	b209      	sxth	r1, r1
 80188aa:	fa0f f38e 	sxth.w	r3, lr
 80188ae:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80188b2:	9301      	str	r3, [sp, #4]
 80188b4:	9100      	str	r1, [sp, #0]
 80188b6:	4633      	mov	r3, r6
 80188b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80188ba:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80188bc:	4639      	mov	r1, r7
 80188be:	f7ff fc7a 	bl	80181b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80188c2:	e759      	b.n	8018778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80188c4:	fffff800 	.word	0xfffff800
 80188c8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80188ca:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80188cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80188d0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80188d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80188d6:	1427      	asrs	r7, r4, #16
 80188d8:	142b      	asrs	r3, r5, #16
 80188da:	fb01 7303 	mla	r3, r1, r3, r7
 80188de:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80188e0:	18e7      	adds	r7, r4, r3
 80188e2:	5ce3      	ldrb	r3, [r4, r3]
 80188e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80188e8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80188ec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80188f0:	2a00      	cmp	r2, #0
 80188f2:	f000 8127 	beq.w	8018b44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80188f6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80188fa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80188fe:	940d      	str	r4, [sp, #52]	@ 0x34
 8018900:	0e24      	lsrs	r4, r4, #24
 8018902:	9414      	str	r4, [sp, #80]	@ 0x50
 8018904:	b170      	cbz	r0, 8018924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018906:	eb07 0e01 	add.w	lr, r7, r1
 801890a:	5c79      	ldrb	r1, [r7, r1]
 801890c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018910:	9109      	str	r1, [sp, #36]	@ 0x24
 8018912:	0e09      	lsrs	r1, r1, #24
 8018914:	9111      	str	r1, [sp, #68]	@ 0x44
 8018916:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801891a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801891e:	910e      	str	r1, [sp, #56]	@ 0x38
 8018920:	0e09      	lsrs	r1, r1, #24
 8018922:	9115      	str	r1, [sp, #84]	@ 0x54
 8018924:	b292      	uxth	r2, r2
 8018926:	b280      	uxth	r0, r0
 8018928:	fb02 f800 	mul.w	r8, r2, r0
 801892c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018930:	0112      	lsls	r2, r2, #4
 8018932:	eba2 0e08 	sub.w	lr, r2, r8
 8018936:	b280      	uxth	r0, r0
 8018938:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801893c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801893e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018940:	fa1f fe8e 	uxth.w	lr, lr
 8018944:	1a09      	subs	r1, r1, r0
 8018946:	b289      	uxth	r1, r1
 8018948:	fb0e f202 	mul.w	r2, lr, r2
 801894c:	fb01 220c 	mla	r2, r1, ip, r2
 8018950:	fb00 2204 	mla	r2, r0, r4, r2
 8018954:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018956:	fb08 2204 	mla	r2, r8, r4, r2
 801895a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801895e:	2a00      	cmp	r2, #0
 8018960:	f000 80e5 	beq.w	8018b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8018964:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8018968:	d019      	beq.n	801899e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801896a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801896e:	fb0c fa0a 	mul.w	sl, ip, sl
 8018972:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018976:	fb0c fc03 	mul.w	ip, ip, r3
 801897a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801897e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018982:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8018986:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801898a:	4453      	add	r3, sl
 801898c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018990:	0a1b      	lsrs	r3, r3, #8
 8018992:	0a3f      	lsrs	r7, r7, #8
 8018994:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8018998:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801899c:	433b      	orrs	r3, r7
 801899e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80189a0:	2cff      	cmp	r4, #255	@ 0xff
 80189a2:	d020      	beq.n	80189e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80189a4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80189a6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80189aa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80189ac:	4367      	muls	r7, r4
 80189ae:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80189b0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80189b4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80189b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80189ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80189be:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80189c2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80189c6:	44bc      	add	ip, r7
 80189c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80189cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80189d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80189d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80189d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80189dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80189e0:	ea4c 040a 	orr.w	r4, ip, sl
 80189e4:	940d      	str	r4, [sp, #52]	@ 0x34
 80189e6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80189e8:	2cff      	cmp	r4, #255	@ 0xff
 80189ea:	d020      	beq.n	8018a2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80189ec:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80189ee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80189f2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80189f4:	4367      	muls	r7, r4
 80189f6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80189f8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80189fc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80189fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018a02:	fb04 fa0a 	mul.w	sl, r4, sl
 8018a06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018a0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018a0e:	44bc      	add	ip, r7
 8018a10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018a14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018a18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018a20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018a24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018a28:	ea4c 040a 	orr.w	r4, ip, sl
 8018a2c:	9409      	str	r4, [sp, #36]	@ 0x24
 8018a2e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018a30:	2cff      	cmp	r4, #255	@ 0xff
 8018a32:	d020      	beq.n	8018a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8018a34:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018a36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018a3a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018a3c:	4367      	muls	r7, r4
 8018a3e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018a40:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8018a44:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018a46:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018a4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8018a4e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8018a52:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018a56:	44bc      	add	ip, r7
 8018a58:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8018a5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018a60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018a68:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8018a6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8018a70:	ea4c 040a 	orr.w	r4, ip, sl
 8018a74:	940e      	str	r4, [sp, #56]	@ 0x38
 8018a76:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018a78:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8018a7c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8018a7e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8018a82:	fb0e f707 	mul.w	r7, lr, r7
 8018a86:	fb01 770c 	mla	r7, r1, ip, r7
 8018a8a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018a8e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018a90:	fb00 770c 	mla	r7, r0, ip, r7
 8018a94:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8018a98:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018a9a:	fb08 770c 	mla	r7, r8, ip, r7
 8018a9e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8018aa2:	fb0e fe0c 	mul.w	lr, lr, ip
 8018aa6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8018aaa:	fb01 e303 	mla	r3, r1, r3, lr
 8018aae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018ab0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8018ab4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018ab6:	fb00 330a 	mla	r3, r0, sl, r3
 8018aba:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8018abe:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018ac2:	f8b9 3000 	ldrh.w	r3, [r9]
 8018ac6:	43d2      	mvns	r2, r2
 8018ac8:	1218      	asrs	r0, r3, #8
 8018aca:	b2d2      	uxtb	r2, r2
 8018acc:	10d9      	asrs	r1, r3, #3
 8018ace:	0a3f      	lsrs	r7, r7, #8
 8018ad0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018ad4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018ad8:	00db      	lsls	r3, r3, #3
 8018ada:	4350      	muls	r0, r2
 8018adc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8018ae0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8018ae4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018ae8:	b2db      	uxtb	r3, r3
 8018aea:	ea47 070c 	orr.w	r7, r7, ip
 8018aee:	4351      	muls	r1, r2
 8018af0:	4353      	muls	r3, r2
 8018af2:	1c42      	adds	r2, r0, #1
 8018af4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018af8:	0c3a      	lsrs	r2, r7, #16
 8018afa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018afe:	4a18      	ldr	r2, [pc, #96]	@ (8018b60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8018b00:	b2c0      	uxtb	r0, r0
 8018b02:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018b06:	1c4a      	adds	r2, r1, #1
 8018b08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018b0c:	0a3a      	lsrs	r2, r7, #8
 8018b0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018b12:	00c9      	lsls	r1, r1, #3
 8018b14:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018b18:	4301      	orrs	r1, r0
 8018b1a:	1c58      	adds	r0, r3, #1
 8018b1c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018b20:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018b24:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018b28:	4308      	orrs	r0, r1
 8018b2a:	f8a9 0000 	strh.w	r0, [r9]
 8018b2e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8018b30:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8018b32:	441a      	add	r2, r3
 8018b34:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018b36:	9225      	str	r2, [sp, #148]	@ 0x94
 8018b38:	f109 0902 	add.w	r9, r9, #2
 8018b3c:	441d      	add	r5, r3
 8018b3e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018b42:	e64d      	b.n	80187e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8018b44:	2800      	cmp	r0, #0
 8018b46:	f43f aeed 	beq.w	8018924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018b4a:	5c79      	ldrb	r1, [r7, r1]
 8018b4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018b50:	9109      	str	r1, [sp, #36]	@ 0x24
 8018b52:	0e09      	lsrs	r1, r1, #24
 8018b54:	9111      	str	r1, [sp, #68]	@ 0x44
 8018b56:	e6e5      	b.n	8018924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018b58:	b01b      	add	sp, #108	@ 0x6c
 8018b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b5e:	bf00      	nop
 8018b60:	fffff800 	.word	0xfffff800

08018b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8018b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b68:	b085      	sub	sp, #20
 8018b6a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8018b6e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8018b72:	9103      	str	r1, [sp, #12]
 8018b74:	fb00 7406 	mla	r4, r0, r6, r7
 8018b78:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8018b7c:	2800      	cmp	r0, #0
 8018b7e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8018b82:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8018b86:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8018b8a:	9501      	str	r5, [sp, #4]
 8018b8c:	eb03 0904 	add.w	r9, r3, r4
 8018b90:	f2c0 8150 	blt.w	8018e34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018b94:	4583      	cmp	fp, r0
 8018b96:	f340 814d 	ble.w	8018e34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018b9a:	2f00      	cmp	r7, #0
 8018b9c:	f2c0 8146 	blt.w	8018e2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018ba0:	42be      	cmp	r6, r7
 8018ba2:	f340 8143 	ble.w	8018e2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018ba6:	f813 c004 	ldrb.w	ip, [r3, r4]
 8018baa:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8018bae:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018bb2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8018bb6:	4355      	muls	r5, r2
 8018bb8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018bbc:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8018bc0:	fb0c f203 	mul.w	r2, ip, r3
 8018bc4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018bc8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8018bcc:	441d      	add	r5, r3
 8018bce:	f102 0320 	add.w	r3, r2, #32
 8018bd2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018bd6:	0a1b      	lsrs	r3, r3, #8
 8018bd8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018bdc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018be0:	431c      	orrs	r4, r3
 8018be2:	1c7b      	adds	r3, r7, #1
 8018be4:	f100 812b 	bmi.w	8018e3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018be8:	429e      	cmp	r6, r3
 8018bea:	f340 8128 	ble.w	8018e3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8018bee:	2900      	cmp	r1, #0
 8018bf0:	f000 8128 	beq.w	8018e44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8018bf4:	9a01      	ldr	r2, [sp, #4]
 8018bf6:	f899 3001 	ldrb.w	r3, [r9, #1]
 8018bfa:	8855      	ldrh	r5, [r2, #2]
 8018bfc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8018c00:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8018c04:	fb08 f802 	mul.w	r8, r8, r2
 8018c08:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018c0c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8018c10:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8018c14:	435d      	muls	r5, r3
 8018c16:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8018c1a:	44d0      	add	r8, sl
 8018c1c:	f105 0a20 	add.w	sl, r5, #32
 8018c20:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8018c24:	0a2d      	lsrs	r5, r5, #8
 8018c26:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018c2a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018c2e:	432a      	orrs	r2, r5
 8018c30:	3001      	adds	r0, #1
 8018c32:	f100 810d 	bmi.w	8018e50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8018c36:	4583      	cmp	fp, r0
 8018c38:	f340 810a 	ble.w	8018e50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8018c3c:	f1be 0f00 	cmp.w	lr, #0
 8018c40:	f000 810b 	beq.w	8018e5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8018c44:	2f00      	cmp	r7, #0
 8018c46:	f2c0 8100 	blt.w	8018e4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018c4a:	42be      	cmp	r6, r7
 8018c4c:	f340 80fd 	ble.w	8018e4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018c50:	9801      	ldr	r0, [sp, #4]
 8018c52:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018c56:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8018c5a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018c5e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8018c62:	fb0a fa00 	mul.w	sl, sl, r0
 8018c66:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8018c6a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018c6e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018c72:	fb05 f808 	mul.w	r8, r5, r8
 8018c76:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8018c7a:	4482      	add	sl, r0
 8018c7c:	f108 0020 	add.w	r0, r8, #32
 8018c80:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018c84:	0a00      	lsrs	r0, r0, #8
 8018c86:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8018c8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018c8e:	ea4b 0b00 	orr.w	fp, fp, r0
 8018c92:	3701      	adds	r7, #1
 8018c94:	f100 80e6 	bmi.w	8018e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018c98:	42be      	cmp	r6, r7
 8018c9a:	f340 80e3 	ble.w	8018e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018c9e:	2900      	cmp	r1, #0
 8018ca0:	f000 80e3 	beq.w	8018e6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8018ca4:	3601      	adds	r6, #1
 8018ca6:	9801      	ldr	r0, [sp, #4]
 8018ca8:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018cac:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8018cb0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8018cb4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8018cb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018cbc:	fb09 f906 	mul.w	r9, r9, r6
 8018cc0:	fb07 f800 	mul.w	r8, r7, r0
 8018cc4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8018cc8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8018ccc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8018cd0:	44d1      	add	r9, sl
 8018cd2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8018cd6:	f108 0020 	add.w	r0, r8, #32
 8018cda:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018cde:	0a00      	lsrs	r0, r0, #8
 8018ce0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018ce4:	4330      	orrs	r0, r6
 8018ce6:	b28e      	uxth	r6, r1
 8018ce8:	fa1f f98e 	uxth.w	r9, lr
 8018cec:	fb06 f809 	mul.w	r8, r6, r9
 8018cf0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8018cf4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018cf8:	0136      	lsls	r6, r6, #4
 8018cfa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018cfe:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8018d02:	9601      	str	r6, [sp, #4]
 8018d04:	ea4a 0404 	orr.w	r4, sl, r4
 8018d08:	fa1f f689 	uxth.w	r6, r9
 8018d0c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018d10:	fb11 f90e 	smulbb	r9, r1, lr
 8018d14:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8018d18:	9602      	str	r6, [sp, #8]
 8018d1a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018d1e:	4626      	mov	r6, r4
 8018d20:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018d24:	f1ce 0410 	rsb	r4, lr, #16
 8018d28:	1a64      	subs	r4, r4, r1
 8018d2a:	ea4a 0202 	orr.w	r2, sl, r2
 8018d2e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8018d32:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018d36:	434a      	muls	r2, r1
 8018d38:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8018d3c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8018d40:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018d44:	fb04 2406 	mla	r4, r4, r6, r2
 8018d48:	ea4a 0000 	orr.w	r0, sl, r0
 8018d4c:	fb09 4200 	mla	r2, r9, r0, r4
 8018d50:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8018d54:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8018d58:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8018d5c:	ea44 0b0b 	orr.w	fp, r4, fp
 8018d60:	9c01      	ldr	r4, [sp, #4]
 8018d62:	9e02      	ldr	r6, [sp, #8]
 8018d64:	9903      	ldr	r1, [sp, #12]
 8018d66:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8018d6a:	1ba4      	subs	r4, r4, r6
 8018d6c:	9e01      	ldr	r6, [sp, #4]
 8018d6e:	8808      	ldrh	r0, [r1, #0]
 8018d70:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8018d74:	eba6 0608 	sub.w	r6, r6, r8
 8018d78:	b2b6      	uxth	r6, r6
 8018d7a:	b2a4      	uxth	r4, r4
 8018d7c:	4373      	muls	r3, r6
 8018d7e:	fb0c 3304 	mla	r3, ip, r4, r3
 8018d82:	9c02      	ldr	r4, [sp, #8]
 8018d84:	fb04 3505 	mla	r5, r4, r5, r3
 8018d88:	fb08 5707 	mla	r7, r8, r7, r5
 8018d8c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018d90:	b289      	uxth	r1, r1
 8018d92:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8018d96:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018d9a:	434f      	muls	r7, r1
 8018d9c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018da0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018da4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018da8:	1c7b      	adds	r3, r7, #1
 8018daa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8018dae:	ea42 0e0e 	orr.w	lr, r2, lr
 8018db2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018db6:	fa1f f28e 	uxth.w	r2, lr
 8018dba:	1203      	asrs	r3, r0, #8
 8018dbc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8018dc0:	b2ff      	uxtb	r7, r7
 8018dc2:	1215      	asrs	r5, r2, #8
 8018dc4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8018dc8:	fb13 f307 	smulbb	r3, r3, r7
 8018dcc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018dd0:	fb05 3501 	mla	r5, r5, r1, r3
 8018dd4:	10c3      	asrs	r3, r0, #3
 8018dd6:	10d4      	asrs	r4, r2, #3
 8018dd8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8018ddc:	fb13 f307 	smulbb	r3, r3, r7
 8018de0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018de4:	fb04 3401 	mla	r4, r4, r1, r3
 8018de8:	00c3      	lsls	r3, r0, #3
 8018dea:	00d2      	lsls	r2, r2, #3
 8018dec:	b2db      	uxtb	r3, r3
 8018dee:	fb13 f307 	smulbb	r3, r3, r7
 8018df2:	b2d2      	uxtb	r2, r2
 8018df4:	fb02 3101 	mla	r1, r2, r1, r3
 8018df8:	b2ad      	uxth	r5, r5
 8018dfa:	b289      	uxth	r1, r1
 8018dfc:	b2a4      	uxth	r4, r4
 8018dfe:	1c6b      	adds	r3, r5, #1
 8018e00:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018e04:	1c62      	adds	r2, r4, #1
 8018e06:	1c4b      	adds	r3, r1, #1
 8018e08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018e0c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018e10:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018e14:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e18:	0964      	lsrs	r4, r4, #5
 8018e1a:	432b      	orrs	r3, r5
 8018e1c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018e20:	9a03      	ldr	r2, [sp, #12]
 8018e22:	4323      	orrs	r3, r4
 8018e24:	8013      	strh	r3, [r2, #0]
 8018e26:	b005      	add	sp, #20
 8018e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e2c:	f04f 0c00 	mov.w	ip, #0
 8018e30:	4664      	mov	r4, ip
 8018e32:	e6d6      	b.n	8018be2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8018e34:	2300      	movs	r3, #0
 8018e36:	469c      	mov	ip, r3
 8018e38:	461a      	mov	r2, r3
 8018e3a:	461c      	mov	r4, r3
 8018e3c:	e6f8      	b.n	8018c30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8018e3e:	2300      	movs	r3, #0
 8018e40:	461a      	mov	r2, r3
 8018e42:	e6f5      	b.n	8018c30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8018e44:	460b      	mov	r3, r1
 8018e46:	460a      	mov	r2, r1
 8018e48:	e6f2      	b.n	8018c30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8018e4a:	2500      	movs	r5, #0
 8018e4c:	46ab      	mov	fp, r5
 8018e4e:	e720      	b.n	8018c92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8018e50:	2700      	movs	r7, #0
 8018e52:	463d      	mov	r5, r7
 8018e54:	4638      	mov	r0, r7
 8018e56:	46bb      	mov	fp, r7
 8018e58:	e745      	b.n	8018ce6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8018e5a:	4677      	mov	r7, lr
 8018e5c:	4675      	mov	r5, lr
 8018e5e:	4670      	mov	r0, lr
 8018e60:	46f3      	mov	fp, lr
 8018e62:	e740      	b.n	8018ce6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8018e64:	2700      	movs	r7, #0
 8018e66:	4638      	mov	r0, r7
 8018e68:	e73d      	b.n	8018ce6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8018e6a:	460f      	mov	r7, r1
 8018e6c:	4608      	mov	r0, r1
 8018e6e:	e73a      	b.n	8018ce6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08018e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e74:	b097      	sub	sp, #92	@ 0x5c
 8018e76:	9214      	str	r2, [sp, #80]	@ 0x50
 8018e78:	9308      	str	r3, [sp, #32]
 8018e7a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8018e7c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018e80:	9312      	str	r3, [sp, #72]	@ 0x48
 8018e82:	9111      	str	r1, [sp, #68]	@ 0x44
 8018e84:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8018e88:	9015      	str	r0, [sp, #84]	@ 0x54
 8018e8a:	6850      	ldr	r0, [r2, #4]
 8018e8c:	6812      	ldr	r2, [r2, #0]
 8018e8e:	fb00 1303 	mla	r3, r0, r3, r1
 8018e92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018e96:	9309      	str	r3, [sp, #36]	@ 0x24
 8018e98:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018e9a:	681b      	ldr	r3, [r3, #0]
 8018e9c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018e9e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018ea0:	685b      	ldr	r3, [r3, #4]
 8018ea2:	930c      	str	r3, [sp, #48]	@ 0x30
 8018ea4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8018ea8:	930a      	str	r3, [sp, #40]	@ 0x28
 8018eaa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018eac:	2b00      	cmp	r3, #0
 8018eae:	dc03      	bgt.n	8018eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018eb0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8018eb2:	2b00      	cmp	r3, #0
 8018eb4:	f340 83cb 	ble.w	801964e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8018eb8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018eba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ebe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018ec2:	1e48      	subs	r0, r1, #1
 8018ec4:	1e55      	subs	r5, r2, #1
 8018ec6:	9b08      	ldr	r3, [sp, #32]
 8018ec8:	2b00      	cmp	r3, #0
 8018eca:	f340 81a3 	ble.w	8019214 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8018ece:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8018ed0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018ed2:	1436      	asrs	r6, r6, #16
 8018ed4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018ed8:	d406      	bmi.n	8018ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018eda:	4286      	cmp	r6, r0
 8018edc:	da04      	bge.n	8018ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018ede:	2b00      	cmp	r3, #0
 8018ee0:	db02      	blt.n	8018ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018ee2:	42ab      	cmp	r3, r5
 8018ee4:	f2c0 8197 	blt.w	8019216 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018ee8:	3601      	adds	r6, #1
 8018eea:	f100 8184 	bmi.w	80191f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018eee:	42b1      	cmp	r1, r6
 8018ef0:	f2c0 8181 	blt.w	80191f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018ef4:	3301      	adds	r3, #1
 8018ef6:	f100 817e 	bmi.w	80191f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018efa:	429a      	cmp	r2, r3
 8018efc:	f2c0 817b 	blt.w	80191f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018f00:	9b08      	ldr	r3, [sp, #32]
 8018f02:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8018f04:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018f06:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8018f0a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018f0c:	2b00      	cmp	r3, #0
 8018f0e:	f340 81a4 	ble.w	801925a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018f12:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018f14:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8018f16:	1418      	asrs	r0, r3, #16
 8018f18:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8018f1a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018f1e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018f20:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018f24:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018f26:	142d      	asrs	r5, r5, #16
 8018f28:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018f2c:	f100 81f8 	bmi.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8018f30:	f102 3eff 	add.w	lr, r2, #4294967295
 8018f34:	4575      	cmp	r5, lr
 8018f36:	f280 81f3 	bge.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8018f3a:	2800      	cmp	r0, #0
 8018f3c:	f2c0 81f0 	blt.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8018f40:	f103 3eff 	add.w	lr, r3, #4294967295
 8018f44:	4570      	cmp	r0, lr
 8018f46:	f280 81eb 	bge.w	8019320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8018f4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018f4c:	b212      	sxth	r2, r2
 8018f4e:	fb00 5002 	mla	r0, r0, r2, r5
 8018f52:	fa1f fe81 	uxth.w	lr, r1
 8018f56:	eb03 0a00 	add.w	sl, r3, r0
 8018f5a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018f5e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8018f62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018f66:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8018f6a:	b29b      	uxth	r3, r3
 8018f6c:	f1bc 0f00 	cmp.w	ip, #0
 8018f70:	f000 81b9 	beq.w	80192e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8018f74:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018f78:	940d      	str	r4, [sp, #52]	@ 0x34
 8018f7a:	eb0a 0b02 	add.w	fp, sl, r2
 8018f7e:	fa1f fa8c 	uxth.w	sl, ip
 8018f82:	fb0a fe0e 	mul.w	lr, sl, lr
 8018f86:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018f8a:	fa1f fa8a 	uxth.w	sl, sl
 8018f8e:	eba5 050e 	sub.w	r5, r5, lr
 8018f92:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018f96:	940e      	str	r4, [sp, #56]	@ 0x38
 8018f98:	eba3 030a 	sub.w	r3, r3, sl
 8018f9c:	b2ad      	uxth	r5, r5
 8018f9e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018fa0:	b29b      	uxth	r3, r3
 8018fa2:	fb08 f505 	mul.w	r5, r8, r5
 8018fa6:	fb09 5303 	mla	r3, r9, r3, r5
 8018faa:	fb0a 3304 	mla	r3, sl, r4, r3
 8018fae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8018fb0:	fb0e 3304 	mla	r3, lr, r4, r3
 8018fb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018fb8:	2b00      	cmp	r3, #0
 8018fba:	f000 810f 	beq.w	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8018fbe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018fc0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018fc4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018fc8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018fcc:	f000 8190 	beq.w	80192f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8018fd0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8018fd4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018fd8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018fdc:	fb09 f000 	mul.w	r0, r9, r0
 8018fe0:	fb0a fe0e 	mul.w	lr, sl, lr
 8018fe4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018fe8:	f100 0b20 	add.w	fp, r0, #32
 8018fec:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8018ff0:	44ce      	add	lr, r9
 8018ff2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018ff6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018ffa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018ffe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019002:	ea4e 0909 	orr.w	r9, lr, r9
 8019006:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801900a:	8868      	ldrh	r0, [r5, #2]
 801900c:	d019      	beq.n	8019042 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801900e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019012:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019016:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801901a:	fb08 f800 	mul.w	r8, r8, r0
 801901e:	fb0a fe0e 	mul.w	lr, sl, lr
 8019022:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019026:	f108 0b20 	add.w	fp, r8, #32
 801902a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801902e:	4486      	add	lr, r0
 8019030:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019034:	0a00      	lsrs	r0, r0, #8
 8019036:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801903a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801903e:	ea4e 0000 	orr.w	r0, lr, r0
 8019042:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019046:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801904a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801904e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019052:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019056:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801905a:	ea4e 0909 	orr.w	r9, lr, r9
 801905e:	ea4a 0000 	orr.w	r0, sl, r0
 8019062:	f1bc 0f00 	cmp.w	ip, #0
 8019066:	f000 8145 	beq.w	80192f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801906a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801906e:	3a01      	subs	r2, #1
 8019070:	0052      	lsls	r2, r2, #1
 8019072:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019074:	3202      	adds	r2, #2
 8019076:	2cff      	cmp	r4, #255	@ 0xff
 8019078:	eb05 0e02 	add.w	lr, r5, r2
 801907c:	5aaa      	ldrh	r2, [r5, r2]
 801907e:	d018      	beq.n	80190b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019080:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8019084:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019088:	fb04 fa02 	mul.w	sl, r4, r2
 801908c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019090:	fb08 f805 	mul.w	r8, r8, r5
 8019094:	f10a 0520 	add.w	r5, sl, #32
 8019098:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801909c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80190a0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80190a4:	4442      	add	r2, r8
 80190a6:	0a2d      	lsrs	r5, r5, #8
 80190a8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80190ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80190b0:	432a      	orrs	r2, r5
 80190b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80190b4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80190b8:	2cff      	cmp	r4, #255	@ 0xff
 80190ba:	d01a      	beq.n	80190f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80190bc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 80190c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80190c4:	fb04 fa05 	mul.w	sl, r4, r5
 80190c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80190cc:	fb08 f80e 	mul.w	r8, r8, lr
 80190d0:	f10a 0e20 	add.w	lr, sl, #32
 80190d4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80190d8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80190dc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80190e0:	4445      	add	r5, r8
 80190e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190e6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80190ea:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80190ee:	ea45 050e 	orr.w	r5, r5, lr
 80190f2:	fb1c fe01 	smulbb	lr, ip, r1
 80190f6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80190fa:	f1cc 0810 	rsb	r8, ip, #16
 80190fe:	eba8 0801 	sub.w	r8, r8, r1
 8019102:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019106:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801910a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801910e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019112:	4341      	muls	r1, r0
 8019114:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019118:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801911c:	ea4a 0202 	orr.w	r2, sl, r2
 8019120:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019124:	fb09 1108 	mla	r1, r9, r8, r1
 8019128:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801912c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019130:	fb0c 1102 	mla	r1, ip, r2, r1
 8019134:	ea4b 0505 	orr.w	r5, fp, r5
 8019138:	fb0e 1e05 	mla	lr, lr, r5, r1
 801913c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019140:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019144:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019148:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801914c:	ea42 0e0e 	orr.w	lr, r2, lr
 8019150:	fa1f f28e 	uxth.w	r2, lr
 8019154:	2bff      	cmp	r3, #255	@ 0xff
 8019156:	d103      	bne.n	8019160 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019158:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801915a:	29ff      	cmp	r1, #255	@ 0xff
 801915c:	f000 80de 	beq.w	801931c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8019160:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019162:	8838      	ldrh	r0, [r7, #0]
 8019164:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019166:	434b      	muls	r3, r1
 8019168:	f103 0c01 	add.w	ip, r3, #1
 801916c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8019170:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019174:	fa5f fc83 	uxtb.w	ip, r3
 8019178:	1203      	asrs	r3, r0, #8
 801917a:	1215      	asrs	r5, r2, #8
 801917c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8019180:	fb13 f30c 	smulbb	r3, r3, ip
 8019184:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019188:	fb05 3501 	mla	r5, r5, r1, r3
 801918c:	10c3      	asrs	r3, r0, #3
 801918e:	10d1      	asrs	r1, r2, #3
 8019190:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8019194:	fb13 f30c 	smulbb	r3, r3, ip
 8019198:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801919c:	fb01 3104 	mla	r1, r1, r4, r3
 80191a0:	00c3      	lsls	r3, r0, #3
 80191a2:	00d2      	lsls	r2, r2, #3
 80191a4:	b2db      	uxtb	r3, r3
 80191a6:	b2d2      	uxtb	r2, r2
 80191a8:	fb13 f30c 	smulbb	r3, r3, ip
 80191ac:	b2ad      	uxth	r5, r5
 80191ae:	fb02 3304 	mla	r3, r2, r4, r3
 80191b2:	b29a      	uxth	r2, r3
 80191b4:	1c6b      	adds	r3, r5, #1
 80191b6:	b289      	uxth	r1, r1
 80191b8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80191bc:	1c53      	adds	r3, r2, #1
 80191be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80191c2:	1c4a      	adds	r2, r1, #1
 80191c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80191c8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80191cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80191d0:	0949      	lsrs	r1, r1, #5
 80191d2:	432b      	orrs	r3, r5
 80191d4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80191d8:	430b      	orrs	r3, r1
 80191da:	803b      	strh	r3, [r7, #0]
 80191dc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80191de:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80191e0:	4413      	add	r3, r2
 80191e2:	9321      	str	r3, [sp, #132]	@ 0x84
 80191e4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80191e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80191e8:	441a      	add	r2, r3
 80191ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80191ec:	9222      	str	r2, [sp, #136]	@ 0x88
 80191ee:	3b01      	subs	r3, #1
 80191f0:	3702      	adds	r7, #2
 80191f2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80191f4:	e689      	b.n	8018f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80191f6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80191f8:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80191fa:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 80191fc:	4433      	add	r3, r6
 80191fe:	9321      	str	r3, [sp, #132]	@ 0x84
 8019200:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019202:	441c      	add	r4, r3
 8019204:	9b08      	ldr	r3, [sp, #32]
 8019206:	9422      	str	r4, [sp, #136]	@ 0x88
 8019208:	3b01      	subs	r3, #1
 801920a:	9308      	str	r3, [sp, #32]
 801920c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801920e:	3302      	adds	r3, #2
 8019210:	9309      	str	r3, [sp, #36]	@ 0x24
 8019212:	e658      	b.n	8018ec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8019214:	d028      	beq.n	8019268 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019216:	9b08      	ldr	r3, [sp, #32]
 8019218:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801921a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801921c:	3b01      	subs	r3, #1
 801921e:	fb00 5003 	mla	r0, r0, r3, r5
 8019222:	1400      	asrs	r0, r0, #16
 8019224:	f53f ae6c 	bmi.w	8018f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019228:	3901      	subs	r1, #1
 801922a:	4288      	cmp	r0, r1
 801922c:	f6bf ae68 	bge.w	8018f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019230:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8019232:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8019234:	fb01 0303 	mla	r3, r1, r3, r0
 8019238:	141b      	asrs	r3, r3, #16
 801923a:	f53f ae61 	bmi.w	8018f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801923e:	3a01      	subs	r2, #1
 8019240:	4293      	cmp	r3, r2
 8019242:	f6bf ae5d 	bge.w	8018f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019246:	9b08      	ldr	r3, [sp, #32]
 8019248:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801924c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801924e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8019252:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019254:	2b00      	cmp	r3, #0
 8019256:	f300 8082 	bgt.w	801935e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801925a:	9b08      	ldr	r3, [sp, #32]
 801925c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019260:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019262:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019266:	9309      	str	r3, [sp, #36]	@ 0x24
 8019268:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801926a:	2b00      	cmp	r3, #0
 801926c:	f340 81ef 	ble.w	801964e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8019270:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019274:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019278:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801927c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801927e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019282:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019286:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801928a:	eef0 6a62 	vmov.f32	s13, s5
 801928e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019292:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019296:	ee77 2a62 	vsub.f32	s5, s14, s5
 801929a:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801929e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192a2:	eef0 6a43 	vmov.f32	s13, s6
 80192a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192aa:	ee12 2a90 	vmov	r2, s5
 80192ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80192b6:	ee13 2a10 	vmov	r2, s6
 80192ba:	9323      	str	r3, [sp, #140]	@ 0x8c
 80192bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80192be:	fb92 f3f3 	sdiv	r3, r2, r3
 80192c2:	9324      	str	r3, [sp, #144]	@ 0x90
 80192c4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80192c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80192c8:	3b01      	subs	r3, #1
 80192ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80192d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80192d2:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 80192d6:	bf08      	it	eq
 80192d8:	4613      	moveq	r3, r2
 80192da:	9308      	str	r3, [sp, #32]
 80192dc:	eeb0 3a67 	vmov.f32	s6, s15
 80192e0:	eef0 2a47 	vmov.f32	s5, s14
 80192e4:	e5e1      	b.n	8018eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80192e6:	fb08 f505 	mul.w	r5, r8, r5
 80192ea:	fb09 5303 	mla	r3, r9, r3, r5
 80192ee:	e661      	b.n	8018fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80192f0:	4681      	mov	r9, r0
 80192f2:	e688      	b.n	8019006 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80192f4:	f1c1 0210 	rsb	r2, r1, #16
 80192f8:	4341      	muls	r1, r0
 80192fa:	fb09 1902 	mla	r9, r9, r2, r1
 80192fe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019302:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019306:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801930a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801930e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019312:	ea42 0909 	orr.w	r9, r2, r9
 8019316:	fa1f f289 	uxth.w	r2, r9
 801931a:	e71b      	b.n	8019154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801931c:	803a      	strh	r2, [r7, #0]
 801931e:	e75d      	b.n	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019320:	f115 0e01 	adds.w	lr, r5, #1
 8019324:	f53f af5a 	bmi.w	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019328:	4572      	cmp	r2, lr
 801932a:	f6ff af57 	blt.w	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801932e:	f110 0e01 	adds.w	lr, r0, #1
 8019332:	f53f af53 	bmi.w	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019336:	4573      	cmp	r3, lr
 8019338:	f6ff af50 	blt.w	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801933c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801933e:	9502      	str	r5, [sp, #8]
 8019340:	b21b      	sxth	r3, r3
 8019342:	b212      	sxth	r2, r2
 8019344:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8019348:	9301      	str	r3, [sp, #4]
 801934a:	9200      	str	r2, [sp, #0]
 801934c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8019350:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8019354:	4639      	mov	r1, r7
 8019356:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019358:	f7ff fc04 	bl	8018b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801935c:	e73e      	b.n	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801935e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8019360:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019364:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019366:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801936a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801936c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019370:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019372:	141f      	asrs	r7, r3, #16
 8019374:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8019376:	141b      	asrs	r3, r3, #16
 8019378:	fb01 3707 	mla	r7, r1, r7, r3
 801937c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801937e:	fa1f fc82 	uxth.w	ip, r2
 8019382:	eb03 0a07 	add.w	sl, r3, r7
 8019386:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801938a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801938e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019392:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8019396:	b29b      	uxth	r3, r3
 8019398:	2d00      	cmp	r5, #0
 801939a:	f000 813d 	beq.w	8019618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801939e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80193a2:	940f      	str	r4, [sp, #60]	@ 0x3c
 80193a4:	eb0a 0b01 	add.w	fp, sl, r1
 80193a8:	fa1f fa85 	uxth.w	sl, r5
 80193ac:	fb0a fc0c 	mul.w	ip, sl, ip
 80193b0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80193b4:	fa1f fa8a 	uxth.w	sl, sl
 80193b8:	eba0 000c 	sub.w	r0, r0, ip
 80193bc:	eba3 030a 	sub.w	r3, r3, sl
 80193c0:	b280      	uxth	r0, r0
 80193c2:	fb08 f000 	mul.w	r0, r8, r0
 80193c6:	b29b      	uxth	r3, r3
 80193c8:	fb09 0303 	mla	r3, r9, r3, r0
 80193cc:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80193ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80193d2:	9410      	str	r4, [sp, #64]	@ 0x40
 80193d4:	fb0a 3300 	mla	r3, sl, r0, r3
 80193d8:	fb0c 3304 	mla	r3, ip, r4, r3
 80193dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80193e0:	2b00      	cmp	r3, #0
 80193e2:	f000 810b 	beq.w	80195fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80193e6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80193e8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80193ea:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80193ee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80193f2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80193f6:	f000 8114 	beq.w	8019622 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80193fa:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80193fe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019402:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019406:	fb09 f707 	mul.w	r7, r9, r7
 801940a:	fb0a fc0c 	mul.w	ip, sl, ip
 801940e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019412:	f107 0b20 	add.w	fp, r7, #32
 8019416:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801941a:	44cc      	add	ip, r9
 801941c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019420:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019424:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019428:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801942c:	ea4c 0909 	orr.w	r9, ip, r9
 8019430:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8019434:	8847      	ldrh	r7, [r0, #2]
 8019436:	d019      	beq.n	801946c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8019438:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801943c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019440:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019444:	fb08 f807 	mul.w	r8, r8, r7
 8019448:	fb0a fc0c 	mul.w	ip, sl, ip
 801944c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019450:	f108 0b20 	add.w	fp, r8, #32
 8019454:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8019458:	44bc      	add	ip, r7
 801945a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801945e:	0a3f      	lsrs	r7, r7, #8
 8019460:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019464:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019468:	ea4c 0707 	orr.w	r7, ip, r7
 801946c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019470:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019474:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019478:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801947c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019480:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019484:	ea4c 0909 	orr.w	r9, ip, r9
 8019488:	ea4a 0707 	orr.w	r7, sl, r7
 801948c:	2d00      	cmp	r5, #0
 801948e:	f000 80ca 	beq.w	8019626 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8019492:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8019496:	3901      	subs	r1, #1
 8019498:	0049      	lsls	r1, r1, #1
 801949a:	3102      	adds	r1, #2
 801949c:	eb00 0c01 	add.w	ip, r0, r1
 80194a0:	5a41      	ldrh	r1, [r0, r1]
 80194a2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80194a4:	28ff      	cmp	r0, #255	@ 0xff
 80194a6:	d019      	beq.n	80194dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80194a8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80194aa:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80194ae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80194b2:	fb04 fa01 	mul.w	sl, r4, r1
 80194b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80194ba:	fb08 f800 	mul.w	r8, r8, r0
 80194be:	f10a 0020 	add.w	r0, sl, #32
 80194c2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80194c6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80194ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80194ce:	4441      	add	r1, r8
 80194d0:	0a00      	lsrs	r0, r0, #8
 80194d2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80194d6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80194da:	4301      	orrs	r1, r0
 80194dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80194de:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80194e2:	2cff      	cmp	r4, #255	@ 0xff
 80194e4:	d01a      	beq.n	801951c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80194e6:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80194ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80194ee:	fb04 fa00 	mul.w	sl, r4, r0
 80194f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80194f6:	fb08 f80c 	mul.w	r8, r8, ip
 80194fa:	f10a 0c20 	add.w	ip, sl, #32
 80194fe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019502:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019506:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801950a:	4440      	add	r0, r8
 801950c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019510:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019514:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019518:	ea40 000c 	orr.w	r0, r0, ip
 801951c:	fb15 fc02 	smulbb	ip, r5, r2
 8019520:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019524:	f1c5 0810 	rsb	r8, r5, #16
 8019528:	eba8 0802 	sub.w	r8, r8, r2
 801952c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019530:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019534:	437a      	muls	r2, r7
 8019536:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801953a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801953e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019542:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019546:	fb09 2208 	mla	r2, r9, r8, r2
 801954a:	ea4a 0101 	orr.w	r1, sl, r1
 801954e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019552:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019556:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801955a:	fb05 2201 	mla	r2, r5, r1, r2
 801955e:	ea4b 0000 	orr.w	r0, fp, r0
 8019562:	fb0c 2200 	mla	r2, ip, r0, r2
 8019566:	0d57      	lsrs	r7, r2, #21
 8019568:	0952      	lsrs	r2, r2, #5
 801956a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801956e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019572:	433a      	orrs	r2, r7
 8019574:	2bff      	cmp	r3, #255	@ 0xff
 8019576:	b292      	uxth	r2, r2
 8019578:	d102      	bne.n	8019580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801957a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801957c:	29ff      	cmp	r1, #255	@ 0xff
 801957e:	d063      	beq.n	8019648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8019580:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8019582:	f8be 1000 	ldrh.w	r1, [lr]
 8019586:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019588:	4343      	muls	r3, r0
 801958a:	1c58      	adds	r0, r3, #1
 801958c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8019590:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019594:	1208      	asrs	r0, r1, #8
 8019596:	b2db      	uxtb	r3, r3
 8019598:	1215      	asrs	r5, r2, #8
 801959a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801959e:	fb10 f003 	smulbb	r0, r0, r3
 80195a2:	10cf      	asrs	r7, r1, #3
 80195a4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80195a8:	00c9      	lsls	r1, r1, #3
 80195aa:	fb05 0504 	mla	r5, r5, r4, r0
 80195ae:	b2c9      	uxtb	r1, r1
 80195b0:	10d0      	asrs	r0, r2, #3
 80195b2:	00d2      	lsls	r2, r2, #3
 80195b4:	fb11 f103 	smulbb	r1, r1, r3
 80195b8:	b2d2      	uxtb	r2, r2
 80195ba:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80195be:	fb02 1204 	mla	r2, r2, r4, r1
 80195c2:	fb17 f703 	smulbb	r7, r7, r3
 80195c6:	b2ad      	uxth	r5, r5
 80195c8:	b292      	uxth	r2, r2
 80195ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80195ce:	fb00 7004 	mla	r0, r0, r4, r7
 80195d2:	1c6b      	adds	r3, r5, #1
 80195d4:	1c57      	adds	r7, r2, #1
 80195d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80195da:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80195de:	b280      	uxth	r0, r0
 80195e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80195e4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80195e8:	433d      	orrs	r5, r7
 80195ea:	1c47      	adds	r7, r0, #1
 80195ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80195f0:	097f      	lsrs	r7, r7, #5
 80195f2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80195f6:	433d      	orrs	r5, r7
 80195f8:	f8ae 5000 	strh.w	r5, [lr]
 80195fc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80195fe:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8019600:	4413      	add	r3, r2
 8019602:	9321      	str	r3, [sp, #132]	@ 0x84
 8019604:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8019606:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019608:	441a      	add	r2, r3
 801960a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801960c:	9222      	str	r2, [sp, #136]	@ 0x88
 801960e:	3b01      	subs	r3, #1
 8019610:	f10e 0e02 	add.w	lr, lr, #2
 8019614:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019616:	e61c      	b.n	8019252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8019618:	fb08 f000 	mul.w	r0, r8, r0
 801961c:	fb09 0303 	mla	r3, r9, r3, r0
 8019620:	e6dc      	b.n	80193dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8019622:	46b9      	mov	r9, r7
 8019624:	e704      	b.n	8019430 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8019626:	f1c2 0110 	rsb	r1, r2, #16
 801962a:	437a      	muls	r2, r7
 801962c:	fb09 2901 	mla	r9, r9, r1, r2
 8019630:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019634:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019638:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801963c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019640:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019644:	4302      	orrs	r2, r0
 8019646:	e795      	b.n	8019574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8019648:	f8ae 2000 	strh.w	r2, [lr]
 801964c:	e7d6      	b.n	80195fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801964e:	b017      	add	sp, #92	@ 0x5c
 8019650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019658:	b085      	sub	sp, #20
 801965a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801965e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8019662:	9103      	str	r1, [sp, #12]
 8019664:	fb00 7406 	mla	r4, r0, r6, r7
 8019668:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801966c:	2800      	cmp	r0, #0
 801966e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8019672:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8019676:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801967a:	9501      	str	r5, [sp, #4]
 801967c:	eb02 0904 	add.w	r9, r2, r4
 8019680:	f2c0 8141 	blt.w	8019906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8019684:	4583      	cmp	fp, r0
 8019686:	f340 813e 	ble.w	8019906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801968a:	2f00      	cmp	r7, #0
 801968c:	f2c0 8137 	blt.w	80198fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019690:	42be      	cmp	r6, r7
 8019692:	f340 8134 	ble.w	80198fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019696:	f812 c004 	ldrb.w	ip, [r2, r4]
 801969a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801969e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80196a2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 80196a6:	4355      	muls	r5, r2
 80196a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80196ac:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 80196b0:	fb0c f203 	mul.w	r2, ip, r3
 80196b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80196b8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 80196bc:	441d      	add	r5, r3
 80196be:	f102 0320 	add.w	r3, r2, #32
 80196c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80196c6:	0a1b      	lsrs	r3, r3, #8
 80196c8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80196cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80196d0:	431c      	orrs	r4, r3
 80196d2:	1c7b      	adds	r3, r7, #1
 80196d4:	f100 811c 	bmi.w	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80196d8:	429e      	cmp	r6, r3
 80196da:	f340 8119 	ble.w	8019910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80196de:	2900      	cmp	r1, #0
 80196e0:	f000 8119 	beq.w	8019916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80196e4:	9a01      	ldr	r2, [sp, #4]
 80196e6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80196ea:	8855      	ldrh	r5, [r2, #2]
 80196ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80196f0:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80196f4:	fb08 f802 	mul.w	r8, r8, r2
 80196f8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80196fc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8019700:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8019704:	435d      	muls	r5, r3
 8019706:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801970a:	44d0      	add	r8, sl
 801970c:	f105 0a20 	add.w	sl, r5, #32
 8019710:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019714:	0a2d      	lsrs	r5, r5, #8
 8019716:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801971a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801971e:	432a      	orrs	r2, r5
 8019720:	3001      	adds	r0, #1
 8019722:	f100 80fe 	bmi.w	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8019726:	4583      	cmp	fp, r0
 8019728:	f340 80fb 	ble.w	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801972c:	f1be 0f00 	cmp.w	lr, #0
 8019730:	f000 80fc 	beq.w	801992c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8019734:	2f00      	cmp	r7, #0
 8019736:	f2c0 80f1 	blt.w	801991c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801973a:	42be      	cmp	r6, r7
 801973c:	f340 80ee 	ble.w	801991c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019740:	9801      	ldr	r0, [sp, #4]
 8019742:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019746:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801974a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801974e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8019752:	fb0a fa00 	mul.w	sl, sl, r0
 8019756:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801975a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801975e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019762:	fb05 f808 	mul.w	r8, r5, r8
 8019766:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801976a:	4482      	add	sl, r0
 801976c:	f108 0020 	add.w	r0, r8, #32
 8019770:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019774:	0a00      	lsrs	r0, r0, #8
 8019776:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801977a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801977e:	ea4b 0b00 	orr.w	fp, fp, r0
 8019782:	3701      	adds	r7, #1
 8019784:	f100 80d7 	bmi.w	8019936 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019788:	42be      	cmp	r6, r7
 801978a:	f340 80d4 	ble.w	8019936 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801978e:	2900      	cmp	r1, #0
 8019790:	f000 80d4 	beq.w	801993c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8019794:	3601      	adds	r6, #1
 8019796:	9801      	ldr	r0, [sp, #4]
 8019798:	f819 7006 	ldrb.w	r7, [r9, r6]
 801979c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80197a0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80197a4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 80197a8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80197ac:	fb09 f906 	mul.w	r9, r9, r6
 80197b0:	fb07 f800 	mul.w	r8, r7, r0
 80197b4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 80197b8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80197bc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 80197c0:	44d1      	add	r9, sl
 80197c2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80197c6:	f108 0020 	add.w	r0, r8, #32
 80197ca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80197ce:	0a00      	lsrs	r0, r0, #8
 80197d0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80197d4:	4330      	orrs	r0, r6
 80197d6:	b28e      	uxth	r6, r1
 80197d8:	fa1f f98e 	uxth.w	r9, lr
 80197dc:	fb06 f809 	mul.w	r8, r6, r9
 80197e0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80197e4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80197e8:	0136      	lsls	r6, r6, #4
 80197ea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80197ee:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80197f2:	9601      	str	r6, [sp, #4]
 80197f4:	ea4a 0404 	orr.w	r4, sl, r4
 80197f8:	fa1f f689 	uxth.w	r6, r9
 80197fc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019800:	fb11 f90e 	smulbb	r9, r1, lr
 8019804:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8019808:	9602      	str	r6, [sp, #8]
 801980a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801980e:	4626      	mov	r6, r4
 8019810:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019814:	f1ce 0410 	rsb	r4, lr, #16
 8019818:	1a64      	subs	r4, r4, r1
 801981a:	ea4a 0202 	orr.w	r2, sl, r2
 801981e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8019822:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019826:	434a      	muls	r2, r1
 8019828:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801982c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019830:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019834:	fb04 2406 	mla	r4, r4, r6, r2
 8019838:	ea4a 0000 	orr.w	r0, sl, r0
 801983c:	fb09 4200 	mla	r2, r9, r0, r4
 8019840:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8019844:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019848:	9801      	ldr	r0, [sp, #4]
 801984a:	9903      	ldr	r1, [sp, #12]
 801984c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8019850:	ea44 0b0b 	orr.w	fp, r4, fp
 8019854:	9c02      	ldr	r4, [sp, #8]
 8019856:	8809      	ldrh	r1, [r1, #0]
 8019858:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801985c:	1b00      	subs	r0, r0, r4
 801985e:	9c01      	ldr	r4, [sp, #4]
 8019860:	eba4 0608 	sub.w	r6, r4, r8
 8019864:	b2b6      	uxth	r6, r6
 8019866:	b280      	uxth	r0, r0
 8019868:	4373      	muls	r3, r6
 801986a:	fb0c 3300 	mla	r3, ip, r0, r3
 801986e:	9802      	ldr	r0, [sp, #8]
 8019870:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019874:	fb00 3505 	mla	r5, r0, r5, r3
 8019878:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801987c:	fb08 5707 	mla	r7, r8, r7, r5
 8019880:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019884:	120b      	asrs	r3, r1, #8
 8019886:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801988a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801988e:	b2ff      	uxtb	r7, r7
 8019890:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019894:	10c8      	asrs	r0, r1, #3
 8019896:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801989a:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801989e:	00c9      	lsls	r1, r1, #3
 80198a0:	437b      	muls	r3, r7
 80198a2:	ea42 0e0e 	orr.w	lr, r2, lr
 80198a6:	b2c9      	uxtb	r1, r1
 80198a8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80198ac:	fa1f f28e 	uxth.w	r2, lr
 80198b0:	4378      	muls	r0, r7
 80198b2:	434f      	muls	r7, r1
 80198b4:	1c59      	adds	r1, r3, #1
 80198b6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80198ba:	1213      	asrs	r3, r2, #8
 80198bc:	f023 0307 	bic.w	r3, r3, #7
 80198c0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80198c4:	1c41      	adds	r1, r0, #1
 80198c6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80198ca:	10d1      	asrs	r1, r2, #3
 80198cc:	f021 0103 	bic.w	r1, r1, #3
 80198d0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80198d4:	021b      	lsls	r3, r3, #8
 80198d6:	00c9      	lsls	r1, r1, #3
 80198d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80198dc:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80198e0:	430b      	orrs	r3, r1
 80198e2:	1c79      	adds	r1, r7, #1
 80198e4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80198e8:	00d2      	lsls	r2, r2, #3
 80198ea:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80198ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80198f2:	431a      	orrs	r2, r3
 80198f4:	9b03      	ldr	r3, [sp, #12]
 80198f6:	801a      	strh	r2, [r3, #0]
 80198f8:	b005      	add	sp, #20
 80198fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198fe:	f04f 0c00 	mov.w	ip, #0
 8019902:	4664      	mov	r4, ip
 8019904:	e6e5      	b.n	80196d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8019906:	2300      	movs	r3, #0
 8019908:	469c      	mov	ip, r3
 801990a:	461a      	mov	r2, r3
 801990c:	461c      	mov	r4, r3
 801990e:	e707      	b.n	8019720 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019910:	2300      	movs	r3, #0
 8019912:	461a      	mov	r2, r3
 8019914:	e704      	b.n	8019720 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019916:	460b      	mov	r3, r1
 8019918:	460a      	mov	r2, r1
 801991a:	e701      	b.n	8019720 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801991c:	2500      	movs	r5, #0
 801991e:	46ab      	mov	fp, r5
 8019920:	e72f      	b.n	8019782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8019922:	2700      	movs	r7, #0
 8019924:	463d      	mov	r5, r7
 8019926:	4638      	mov	r0, r7
 8019928:	46bb      	mov	fp, r7
 801992a:	e754      	b.n	80197d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801992c:	4677      	mov	r7, lr
 801992e:	4675      	mov	r5, lr
 8019930:	4670      	mov	r0, lr
 8019932:	46f3      	mov	fp, lr
 8019934:	e74f      	b.n	80197d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019936:	2700      	movs	r7, #0
 8019938:	4638      	mov	r0, r7
 801993a:	e74c      	b.n	80197d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801993c:	460f      	mov	r7, r1
 801993e:	4608      	mov	r0, r1
 8019940:	e749      	b.n	80197d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019948:	b093      	sub	sp, #76	@ 0x4c
 801994a:	9210      	str	r2, [sp, #64]	@ 0x40
 801994c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801994e:	910e      	str	r1, [sp, #56]	@ 0x38
 8019950:	9306      	str	r3, [sp, #24]
 8019952:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8019956:	9011      	str	r0, [sp, #68]	@ 0x44
 8019958:	6850      	ldr	r0, [r2, #4]
 801995a:	6812      	ldr	r2, [r2, #0]
 801995c:	fb00 1303 	mla	r3, r0, r3, r1
 8019960:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019964:	9307      	str	r3, [sp, #28]
 8019966:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019968:	681b      	ldr	r3, [r3, #0]
 801996a:	9308      	str	r3, [sp, #32]
 801996c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801996e:	685b      	ldr	r3, [r3, #4]
 8019970:	9309      	str	r3, [sp, #36]	@ 0x24
 8019972:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019974:	2b00      	cmp	r3, #0
 8019976:	dc03      	bgt.n	8019980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019978:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801997a:	2b00      	cmp	r3, #0
 801997c:	f340 83b4 	ble.w	801a0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019980:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019982:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019986:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801998a:	1e48      	subs	r0, r1, #1
 801998c:	1e55      	subs	r5, r2, #1
 801998e:	9b06      	ldr	r3, [sp, #24]
 8019990:	2b00      	cmp	r3, #0
 8019992:	f340 8163 	ble.w	8019c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019996:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8019998:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801999a:	1436      	asrs	r6, r6, #16
 801999c:	ea4f 4323 	mov.w	r3, r3, asr #16
 80199a0:	d406      	bmi.n	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80199a2:	4286      	cmp	r6, r0
 80199a4:	da04      	bge.n	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80199a6:	2b00      	cmp	r3, #0
 80199a8:	db02      	blt.n	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80199aa:	42ab      	cmp	r3, r5
 80199ac:	f2c0 8157 	blt.w	8019c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80199b0:	3601      	adds	r6, #1
 80199b2:	f100 8144 	bmi.w	8019c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80199b6:	42b1      	cmp	r1, r6
 80199b8:	f2c0 8141 	blt.w	8019c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80199bc:	3301      	adds	r3, #1
 80199be:	f100 813e 	bmi.w	8019c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80199c2:	429a      	cmp	r2, r3
 80199c4:	f2c0 813b 	blt.w	8019c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80199c8:	9b06      	ldr	r3, [sp, #24]
 80199ca:	9f07      	ldr	r7, [sp, #28]
 80199cc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80199ce:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80199d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80199d4:	2b00      	cmp	r3, #0
 80199d6:	f340 8164 	ble.w	8019ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80199da:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80199dc:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80199de:	1418      	asrs	r0, r3, #16
 80199e0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80199e2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80199e6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80199e8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80199ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80199ee:	142d      	asrs	r5, r5, #16
 80199f0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80199f4:	f100 81ee 	bmi.w	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80199f8:	f102 3eff 	add.w	lr, r2, #4294967295
 80199fc:	4575      	cmp	r5, lr
 80199fe:	f280 81e9 	bge.w	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019a02:	2800      	cmp	r0, #0
 8019a04:	f2c0 81e6 	blt.w	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019a08:	f103 3eff 	add.w	lr, r3, #4294967295
 8019a0c:	4570      	cmp	r0, lr
 8019a0e:	f280 81e1 	bge.w	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019a12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a14:	b212      	sxth	r2, r2
 8019a16:	fb00 5002 	mla	r0, r0, r2, r5
 8019a1a:	fa1f fe81 	uxth.w	lr, r1
 8019a1e:	eb03 0a00 	add.w	sl, r3, r0
 8019a22:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019a26:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019a2a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019a2e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8019a32:	b29b      	uxth	r3, r3
 8019a34:	f1bc 0f00 	cmp.w	ip, #0
 8019a38:	f000 8179 	beq.w	8019d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019a3c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019a40:	940a      	str	r4, [sp, #40]	@ 0x28
 8019a42:	eb0a 0b02 	add.w	fp, sl, r2
 8019a46:	fa1f fa8c 	uxth.w	sl, ip
 8019a4a:	fb0a fe0e 	mul.w	lr, sl, lr
 8019a4e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019a52:	fa1f fa8a 	uxth.w	sl, sl
 8019a56:	eba5 050e 	sub.w	r5, r5, lr
 8019a5a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019a5e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8019a60:	eba3 030a 	sub.w	r3, r3, sl
 8019a64:	b2ad      	uxth	r5, r5
 8019a66:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019a68:	b29b      	uxth	r3, r3
 8019a6a:	fb08 f505 	mul.w	r5, r8, r5
 8019a6e:	fb09 5303 	mla	r3, r9, r3, r5
 8019a72:	fb0a 3304 	mla	r3, sl, r4, r3
 8019a76:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019a78:	fb0e 3304 	mla	r3, lr, r4, r3
 8019a7c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019a80:	2b00      	cmp	r3, #0
 8019a82:	f000 80cf 	beq.w	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019a86:	9c08      	ldr	r4, [sp, #32]
 8019a88:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019a8c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019a90:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019a94:	f000 8150 	beq.w	8019d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019a98:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019a9c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019aa0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019aa4:	fb09 f000 	mul.w	r0, r9, r0
 8019aa8:	fb0a fe0e 	mul.w	lr, sl, lr
 8019aac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019ab0:	f100 0b20 	add.w	fp, r0, #32
 8019ab4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019ab8:	44ce      	add	lr, r9
 8019aba:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8019abe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ac2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019ac6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019aca:	ea4e 0909 	orr.w	r9, lr, r9
 8019ace:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8019ad2:	8868      	ldrh	r0, [r5, #2]
 8019ad4:	d019      	beq.n	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019ad6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8019ada:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019ade:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019ae2:	fb08 f800 	mul.w	r8, r8, r0
 8019ae6:	fb0a fe0e 	mul.w	lr, sl, lr
 8019aea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019aee:	f108 0b20 	add.w	fp, r8, #32
 8019af2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8019af6:	4486      	add	lr, r0
 8019af8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019afc:	0a00      	lsrs	r0, r0, #8
 8019afe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019b02:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019b06:	ea4e 0000 	orr.w	r0, lr, r0
 8019b0a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019b0e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019b12:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8019b16:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019b1a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019b1e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019b22:	ea4e 0909 	orr.w	r9, lr, r9
 8019b26:	ea4a 0000 	orr.w	r0, sl, r0
 8019b2a:	f1bc 0f00 	cmp.w	ip, #0
 8019b2e:	f000 8105 	beq.w	8019d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019b32:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8019b36:	3a01      	subs	r2, #1
 8019b38:	0052      	lsls	r2, r2, #1
 8019b3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019b3c:	3202      	adds	r2, #2
 8019b3e:	2cff      	cmp	r4, #255	@ 0xff
 8019b40:	eb05 0e02 	add.w	lr, r5, r2
 8019b44:	5aaa      	ldrh	r2, [r5, r2]
 8019b46:	d018      	beq.n	8019b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019b48:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8019b4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019b50:	fb04 fa02 	mul.w	sl, r4, r2
 8019b54:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019b58:	fb08 f805 	mul.w	r8, r8, r5
 8019b5c:	f10a 0520 	add.w	r5, sl, #32
 8019b60:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019b64:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019b68:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019b6c:	4442      	add	r2, r8
 8019b6e:	0a2d      	lsrs	r5, r5, #8
 8019b70:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019b74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019b78:	432a      	orrs	r2, r5
 8019b7a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019b7c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019b80:	2cff      	cmp	r4, #255	@ 0xff
 8019b82:	d01a      	beq.n	8019bba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019b84:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8019b88:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019b8c:	fb04 fa05 	mul.w	sl, r4, r5
 8019b90:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019b94:	fb08 f80e 	mul.w	r8, r8, lr
 8019b98:	f10a 0e20 	add.w	lr, sl, #32
 8019b9c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019ba0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019ba4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019ba8:	4445      	add	r5, r8
 8019baa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019bae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8019bb2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8019bb6:	ea45 050e 	orr.w	r5, r5, lr
 8019bba:	fb1c fe01 	smulbb	lr, ip, r1
 8019bbe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8019bc2:	f1cc 0810 	rsb	r8, ip, #16
 8019bc6:	eba8 0801 	sub.w	r8, r8, r1
 8019bca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019bce:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8019bd2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019bd6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019bda:	4341      	muls	r1, r0
 8019bdc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019be0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019be4:	ea4a 0202 	orr.w	r2, sl, r2
 8019be8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019bec:	fb09 1108 	mla	r1, r9, r8, r1
 8019bf0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019bf4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019bf8:	fb0c 1102 	mla	r1, ip, r2, r1
 8019bfc:	ea4b 0505 	orr.w	r5, fp, r5
 8019c00:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019c04:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019c08:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019c0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019c10:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019c14:	ea42 0e0e 	orr.w	lr, r2, lr
 8019c18:	fa1f f28e 	uxth.w	r2, lr
 8019c1c:	2bff      	cmp	r3, #255	@ 0xff
 8019c1e:	f040 80a1 	bne.w	8019d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8019c22:	803a      	strh	r2, [r7, #0]
 8019c24:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019c26:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8019c28:	4413      	add	r3, r2
 8019c2a:	931d      	str	r3, [sp, #116]	@ 0x74
 8019c2c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8019c2e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019c30:	441a      	add	r2, r3
 8019c32:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019c34:	921e      	str	r2, [sp, #120]	@ 0x78
 8019c36:	3b01      	subs	r3, #1
 8019c38:	3702      	adds	r7, #2
 8019c3a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019c3c:	e6c9      	b.n	80199d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019c3e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019c40:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8019c42:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8019c44:	4433      	add	r3, r6
 8019c46:	931d      	str	r3, [sp, #116]	@ 0x74
 8019c48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019c4a:	441c      	add	r4, r3
 8019c4c:	9b06      	ldr	r3, [sp, #24]
 8019c4e:	941e      	str	r4, [sp, #120]	@ 0x78
 8019c50:	3b01      	subs	r3, #1
 8019c52:	9306      	str	r3, [sp, #24]
 8019c54:	9b07      	ldr	r3, [sp, #28]
 8019c56:	3302      	adds	r3, #2
 8019c58:	9307      	str	r3, [sp, #28]
 8019c5a:	e698      	b.n	801998e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019c5c:	d028      	beq.n	8019cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019c5e:	9b06      	ldr	r3, [sp, #24]
 8019c60:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019c62:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8019c64:	3b01      	subs	r3, #1
 8019c66:	fb00 5003 	mla	r0, r0, r3, r5
 8019c6a:	1400      	asrs	r0, r0, #16
 8019c6c:	f53f aeac 	bmi.w	80199c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c70:	3901      	subs	r1, #1
 8019c72:	4288      	cmp	r0, r1
 8019c74:	f6bf aea8 	bge.w	80199c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c78:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019c7a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8019c7c:	fb01 0303 	mla	r3, r1, r3, r0
 8019c80:	141b      	asrs	r3, r3, #16
 8019c82:	f53f aea1 	bmi.w	80199c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c86:	3a01      	subs	r2, #1
 8019c88:	4293      	cmp	r3, r2
 8019c8a:	f6bf ae9d 	bge.w	80199c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c8e:	9b06      	ldr	r3, [sp, #24]
 8019c90:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019c94:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019c96:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8019c9a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019c9c:	2b00      	cmp	r3, #0
 8019c9e:	f300 80b6 	bgt.w	8019e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8019ca2:	9b06      	ldr	r3, [sp, #24]
 8019ca4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019ca8:	9b07      	ldr	r3, [sp, #28]
 8019caa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019cae:	9307      	str	r3, [sp, #28]
 8019cb0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019cb2:	2b00      	cmp	r3, #0
 8019cb4:	f340 8218 	ble.w	801a0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019cb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cbc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019cc0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019cc4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019cc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019cca:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019cce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cd2:	eef0 6a62 	vmov.f32	s13, s5
 8019cd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019cda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019cde:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ce2:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8019ce6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019cea:	eef0 6a43 	vmov.f32	s13, s6
 8019cee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019cf2:	ee12 2a90 	vmov	r2, s5
 8019cf6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019cfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8019cfe:	ee13 2a10 	vmov	r2, s6
 8019d02:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019d04:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019d06:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d0a:	9320      	str	r3, [sp, #128]	@ 0x80
 8019d0c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019d0e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019d10:	3b01      	subs	r3, #1
 8019d12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d16:	930e      	str	r3, [sp, #56]	@ 0x38
 8019d18:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019d1a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8019d1e:	bf08      	it	eq
 8019d20:	4613      	moveq	r3, r2
 8019d22:	9306      	str	r3, [sp, #24]
 8019d24:	eeb0 3a67 	vmov.f32	s6, s15
 8019d28:	eef0 2a47 	vmov.f32	s5, s14
 8019d2c:	e621      	b.n	8019972 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019d2e:	fb08 f505 	mul.w	r5, r8, r5
 8019d32:	fb09 5303 	mla	r3, r9, r3, r5
 8019d36:	e6a1      	b.n	8019a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8019d38:	4681      	mov	r9, r0
 8019d3a:	e6c8      	b.n	8019ace <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8019d3c:	f1c1 0210 	rsb	r2, r1, #16
 8019d40:	4341      	muls	r1, r0
 8019d42:	fb09 1902 	mla	r9, r9, r2, r1
 8019d46:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019d4a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019d4e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019d52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019d56:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019d5a:	ea42 0909 	orr.w	r9, r2, r9
 8019d5e:	fa1f f289 	uxth.w	r2, r9
 8019d62:	e75b      	b.n	8019c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8019d64:	f8b7 c000 	ldrh.w	ip, [r7]
 8019d68:	43db      	mvns	r3, r3
 8019d6a:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019d6e:	fa5f fe83 	uxtb.w	lr, r3
 8019d72:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019d76:	fb00 f00e 	mul.w	r0, r0, lr
 8019d7a:	1c41      	adds	r1, r0, #1
 8019d7c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019d80:	1211      	asrs	r1, r2, #8
 8019d82:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019d86:	f021 0107 	bic.w	r1, r1, #7
 8019d8a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019d8e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019d92:	48d7      	ldr	r0, [pc, #860]	@ (801a0f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8019d94:	fb05 f50e 	mul.w	r5, r5, lr
 8019d98:	b2c9      	uxtb	r1, r1
 8019d9a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8019d9e:	1c69      	adds	r1, r5, #1
 8019da0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019da4:	10d1      	asrs	r1, r2, #3
 8019da6:	f021 0103 	bic.w	r1, r1, #3
 8019daa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019dae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019db2:	b2db      	uxtb	r3, r3
 8019db4:	00c9      	lsls	r1, r1, #3
 8019db6:	fb03 f30e 	mul.w	r3, r3, lr
 8019dba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019dbe:	4301      	orrs	r1, r0
 8019dc0:	1c58      	adds	r0, r3, #1
 8019dc2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019dc6:	00d2      	lsls	r2, r2, #3
 8019dc8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019dcc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019dd0:	430a      	orrs	r2, r1
 8019dd2:	e726      	b.n	8019c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8019dd4:	f115 0e01 	adds.w	lr, r5, #1
 8019dd8:	f53f af24 	bmi.w	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019ddc:	4572      	cmp	r2, lr
 8019dde:	f6ff af21 	blt.w	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019de2:	f110 0e01 	adds.w	lr, r0, #1
 8019de6:	f53f af1d 	bmi.w	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019dea:	4573      	cmp	r3, lr
 8019dec:	f6ff af1a 	blt.w	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019df0:	b21b      	sxth	r3, r3
 8019df2:	b212      	sxth	r2, r2
 8019df4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8019df8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8019dfc:	9301      	str	r3, [sp, #4]
 8019dfe:	9200      	str	r2, [sp, #0]
 8019e00:	4639      	mov	r1, r7
 8019e02:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8019e06:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019e08:	f7ff fc24 	bl	8019654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019e0c:	e70a      	b.n	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019e0e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019e10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019e14:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019e16:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019e1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019e1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019e20:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019e22:	141f      	asrs	r7, r3, #16
 8019e24:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8019e26:	141b      	asrs	r3, r3, #16
 8019e28:	fb01 3707 	mla	r7, r1, r7, r3
 8019e2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e2e:	fa1f fc82 	uxth.w	ip, r2
 8019e32:	eb03 0a07 	add.w	sl, r3, r7
 8019e36:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019e3a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019e3e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019e42:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8019e46:	b29b      	uxth	r3, r3
 8019e48:	2d00      	cmp	r5, #0
 8019e4a:	f000 80fe 	beq.w	801a04a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8019e4e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019e52:	940c      	str	r4, [sp, #48]	@ 0x30
 8019e54:	eb0a 0b01 	add.w	fp, sl, r1
 8019e58:	fa1f fa85 	uxth.w	sl, r5
 8019e5c:	fb0a fc0c 	mul.w	ip, sl, ip
 8019e60:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019e64:	fa1f fa8a 	uxth.w	sl, sl
 8019e68:	eba0 000c 	sub.w	r0, r0, ip
 8019e6c:	eba3 030a 	sub.w	r3, r3, sl
 8019e70:	b280      	uxth	r0, r0
 8019e72:	fb08 f000 	mul.w	r0, r8, r0
 8019e76:	b29b      	uxth	r3, r3
 8019e78:	fb09 0303 	mla	r3, r9, r3, r0
 8019e7c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8019e7e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019e82:	940d      	str	r4, [sp, #52]	@ 0x34
 8019e84:	fb0a 3300 	mla	r3, sl, r0, r3
 8019e88:	fb0c 3304 	mla	r3, ip, r4, r3
 8019e8c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019e90:	2b00      	cmp	r3, #0
 8019e92:	f000 80cc 	beq.w	801a02e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8019e96:	9808      	ldr	r0, [sp, #32]
 8019e98:	9c08      	ldr	r4, [sp, #32]
 8019e9a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019e9e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019ea2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019ea6:	f000 80d5 	beq.w	801a054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8019eaa:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8019eae:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019eb2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019eb6:	fb09 f707 	mul.w	r7, r9, r7
 8019eba:	fb0a fc0c 	mul.w	ip, sl, ip
 8019ebe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019ec2:	f107 0b20 	add.w	fp, r7, #32
 8019ec6:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8019eca:	44cc      	add	ip, r9
 8019ecc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019ed0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ed4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019ed8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019edc:	ea4c 0909 	orr.w	r9, ip, r9
 8019ee0:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8019ee4:	8847      	ldrh	r7, [r0, #2]
 8019ee6:	d019      	beq.n	8019f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8019ee8:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8019eec:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019ef0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019ef4:	fb08 f807 	mul.w	r8, r8, r7
 8019ef8:	fb0a fc0c 	mul.w	ip, sl, ip
 8019efc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019f00:	f108 0b20 	add.w	fp, r8, #32
 8019f04:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8019f08:	44bc      	add	ip, r7
 8019f0a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019f0e:	0a3f      	lsrs	r7, r7, #8
 8019f10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019f14:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019f18:	ea4c 0707 	orr.w	r7, ip, r7
 8019f1c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019f20:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019f24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019f28:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8019f2c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019f30:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019f34:	ea4c 0909 	orr.w	r9, ip, r9
 8019f38:	ea4a 0707 	orr.w	r7, sl, r7
 8019f3c:	2d00      	cmp	r5, #0
 8019f3e:	f000 808b 	beq.w	801a058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8019f42:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8019f46:	3901      	subs	r1, #1
 8019f48:	0049      	lsls	r1, r1, #1
 8019f4a:	3102      	adds	r1, #2
 8019f4c:	eb00 0c01 	add.w	ip, r0, r1
 8019f50:	5a41      	ldrh	r1, [r0, r1]
 8019f52:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8019f54:	28ff      	cmp	r0, #255	@ 0xff
 8019f56:	d019      	beq.n	8019f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8019f58:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8019f5a:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8019f5e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019f62:	fb04 fa01 	mul.w	sl, r4, r1
 8019f66:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019f6a:	fb08 f800 	mul.w	r8, r8, r0
 8019f6e:	f10a 0020 	add.w	r0, sl, #32
 8019f72:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019f76:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019f7a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019f7e:	4441      	add	r1, r8
 8019f80:	0a00      	lsrs	r0, r0, #8
 8019f82:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019f86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019f8a:	4301      	orrs	r1, r0
 8019f8c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019f8e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019f92:	2cff      	cmp	r4, #255	@ 0xff
 8019f94:	d01a      	beq.n	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8019f96:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8019f9a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019f9e:	fb04 fa00 	mul.w	sl, r4, r0
 8019fa2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019fa6:	fb08 f80c 	mul.w	r8, r8, ip
 8019faa:	f10a 0c20 	add.w	ip, sl, #32
 8019fae:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019fb2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019fb6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8019fba:	4440      	add	r0, r8
 8019fbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fc0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019fc4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8019fc8:	ea40 000c 	orr.w	r0, r0, ip
 8019fcc:	fb15 fc02 	smulbb	ip, r5, r2
 8019fd0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019fd4:	f1c5 0810 	rsb	r8, r5, #16
 8019fd8:	eba8 0802 	sub.w	r8, r8, r2
 8019fdc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019fe0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019fe4:	437a      	muls	r2, r7
 8019fe6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019fea:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019fee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8019ff2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019ff6:	fb09 2208 	mla	r2, r9, r8, r2
 8019ffa:	ea4a 0101 	orr.w	r1, sl, r1
 8019ffe:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a002:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a006:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a00a:	fb05 2201 	mla	r2, r5, r1, r2
 801a00e:	ea4b 0000 	orr.w	r0, fp, r0
 801a012:	fb0c 2200 	mla	r2, ip, r0, r2
 801a016:	0d57      	lsrs	r7, r2, #21
 801a018:	0952      	lsrs	r2, r2, #5
 801a01a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801a01e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a022:	433a      	orrs	r2, r7
 801a024:	2bff      	cmp	r3, #255	@ 0xff
 801a026:	b292      	uxth	r2, r2
 801a028:	d127      	bne.n	801a07a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801a02a:	f8ae 2000 	strh.w	r2, [lr]
 801a02e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a030:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801a032:	4413      	add	r3, r2
 801a034:	931d      	str	r3, [sp, #116]	@ 0x74
 801a036:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801a038:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a03a:	441a      	add	r2, r3
 801a03c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a03e:	921e      	str	r2, [sp, #120]	@ 0x78
 801a040:	3b01      	subs	r3, #1
 801a042:	f10e 0e02 	add.w	lr, lr, #2
 801a046:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a048:	e627      	b.n	8019c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a04a:	fb08 f000 	mul.w	r0, r8, r0
 801a04e:	fb09 0303 	mla	r3, r9, r3, r0
 801a052:	e71b      	b.n	8019e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801a054:	46b9      	mov	r9, r7
 801a056:	e743      	b.n	8019ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801a058:	f1c2 0110 	rsb	r1, r2, #16
 801a05c:	437a      	muls	r2, r7
 801a05e:	fb09 2901 	mla	r9, r9, r1, r2
 801a062:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a066:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a06a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a06e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a072:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a076:	4302      	orrs	r2, r0
 801a078:	e7d4      	b.n	801a024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801a07a:	f8be 7000 	ldrh.w	r7, [lr]
 801a07e:	4c1c      	ldr	r4, [pc, #112]	@ (801a0f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801a080:	43db      	mvns	r3, r3
 801a082:	1238      	asrs	r0, r7, #8
 801a084:	fa5f fc83 	uxtb.w	ip, r3
 801a088:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a08c:	10fd      	asrs	r5, r7, #3
 801a08e:	fb00 f00c 	mul.w	r0, r0, ip
 801a092:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a096:	fb05 f10c 	mul.w	r1, r5, ip
 801a09a:	1c45      	adds	r5, r0, #1
 801a09c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a0a0:	1215      	asrs	r5, r2, #8
 801a0a2:	f025 0507 	bic.w	r5, r5, #7
 801a0a6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a0aa:	1c4d      	adds	r5, r1, #1
 801a0ac:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801a0b0:	10d1      	asrs	r1, r2, #3
 801a0b2:	f021 0103 	bic.w	r1, r1, #3
 801a0b6:	00fb      	lsls	r3, r7, #3
 801a0b8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a0bc:	b2db      	uxtb	r3, r3
 801a0be:	b2c0      	uxtb	r0, r0
 801a0c0:	00c9      	lsls	r1, r1, #3
 801a0c2:	fb03 f30c 	mul.w	r3, r3, ip
 801a0c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a0ca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801a0ce:	4308      	orrs	r0, r1
 801a0d0:	1c59      	adds	r1, r3, #1
 801a0d2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a0d6:	00d2      	lsls	r2, r2, #3
 801a0d8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a0dc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801a0e0:	4318      	orrs	r0, r3
 801a0e2:	f8ae 0000 	strh.w	r0, [lr]
 801a0e6:	e7a2      	b.n	801a02e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a0e8:	b013      	add	sp, #76	@ 0x4c
 801a0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0ee:	bf00      	nop
 801a0f0:	fffff800 	.word	0xfffff800

0801a0f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801a0f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a0f8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801a0fc:	fb05 4c03 	mla	ip, r5, r3, r4
 801a100:	2d00      	cmp	r5, #0
 801a102:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801a106:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801a10a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801a10e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a112:	8808      	ldrh	r0, [r1, #0]
 801a114:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a118:	f2c0 80a7 	blt.w	801a26a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a11c:	45aa      	cmp	sl, r5
 801a11e:	f340 80a4 	ble.w	801a26a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a122:	2c00      	cmp	r4, #0
 801a124:	f2c0 809f 	blt.w	801a266 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a128:	42a3      	cmp	r3, r4
 801a12a:	f340 809c 	ble.w	801a266 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a12e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801a132:	1c62      	adds	r2, r4, #1
 801a134:	f100 809c 	bmi.w	801a270 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a138:	4293      	cmp	r3, r2
 801a13a:	f340 8099 	ble.w	801a270 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a13e:	f1b9 0f00 	cmp.w	r9, #0
 801a142:	f000 8095 	beq.w	801a270 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a146:	f8be c002 	ldrh.w	ip, [lr, #2]
 801a14a:	3501      	adds	r5, #1
 801a14c:	f100 8094 	bmi.w	801a278 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a150:	45aa      	cmp	sl, r5
 801a152:	f340 8091 	ble.w	801a278 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a156:	2f00      	cmp	r7, #0
 801a158:	f000 808e 	beq.w	801a278 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a15c:	2c00      	cmp	r4, #0
 801a15e:	f2c0 8089 	blt.w	801a274 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a162:	42a3      	cmp	r3, r4
 801a164:	f340 8086 	ble.w	801a274 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a168:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801a16c:	3401      	adds	r4, #1
 801a16e:	f100 8086 	bmi.w	801a27e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a172:	42a3      	cmp	r3, r4
 801a174:	f340 8083 	ble.w	801a27e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a178:	f1b9 0f00 	cmp.w	r9, #0
 801a17c:	d07f      	beq.n	801a27e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a17e:	3301      	adds	r3, #1
 801a180:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801a184:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a188:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a18c:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801a190:	fb19 fe07 	smulbb	lr, r9, r7
 801a194:	ea44 0808 	orr.w	r8, r4, r8
 801a198:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a19c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a1a0:	f1c7 0210 	rsb	r2, r7, #16
 801a1a4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a1a8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a1ac:	ea44 0c0c 	orr.w	ip, r4, ip
 801a1b0:	eba2 0209 	sub.w	r2, r2, r9
 801a1b4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a1b8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a1bc:	fb04 f40c 	mul.w	r4, r4, ip
 801a1c0:	fb02 4808 	mla	r8, r2, r8, r4
 801a1c4:	041a      	lsls	r2, r3, #16
 801a1c6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a1ca:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a1ce:	4313      	orrs	r3, r2
 801a1d0:	042a      	lsls	r2, r5, #16
 801a1d2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a1d6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a1da:	fb0e 8303 	mla	r3, lr, r3, r8
 801a1de:	432a      	orrs	r2, r5
 801a1e0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a1e4:	fb07 3202 	mla	r2, r7, r2, r3
 801a1e8:	0d53      	lsrs	r3, r2, #21
 801a1ea:	0952      	lsrs	r2, r2, #5
 801a1ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a1f0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a1f4:	431a      	orrs	r2, r3
 801a1f6:	b293      	uxth	r3, r2
 801a1f8:	b2b4      	uxth	r4, r6
 801a1fa:	1202      	asrs	r2, r0, #8
 801a1fc:	43f6      	mvns	r6, r6
 801a1fe:	b2f6      	uxtb	r6, r6
 801a200:	121d      	asrs	r5, r3, #8
 801a202:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a206:	fb12 f206 	smulbb	r2, r2, r6
 801a20a:	10c7      	asrs	r7, r0, #3
 801a20c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a210:	00c0      	lsls	r0, r0, #3
 801a212:	fb05 2504 	mla	r5, r5, r4, r2
 801a216:	b2c0      	uxtb	r0, r0
 801a218:	10da      	asrs	r2, r3, #3
 801a21a:	00db      	lsls	r3, r3, #3
 801a21c:	b2db      	uxtb	r3, r3
 801a21e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a222:	fb10 f006 	smulbb	r0, r0, r6
 801a226:	b2ad      	uxth	r5, r5
 801a228:	fb03 0004 	mla	r0, r3, r4, r0
 801a22c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a230:	fb17 f706 	smulbb	r7, r7, r6
 801a234:	b280      	uxth	r0, r0
 801a236:	1c6b      	adds	r3, r5, #1
 801a238:	fb02 7204 	mla	r2, r2, r4, r7
 801a23c:	b292      	uxth	r2, r2
 801a23e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a242:	1c43      	adds	r3, r0, #1
 801a244:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a248:	1c50      	adds	r0, r2, #1
 801a24a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a24e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a252:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a256:	0952      	lsrs	r2, r2, #5
 801a258:	432b      	orrs	r3, r5
 801a25a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a25e:	4313      	orrs	r3, r2
 801a260:	800b      	strh	r3, [r1, #0]
 801a262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a266:	4680      	mov	r8, r0
 801a268:	e763      	b.n	801a132 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801a26a:	4684      	mov	ip, r0
 801a26c:	4680      	mov	r8, r0
 801a26e:	e76c      	b.n	801a14a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a270:	4684      	mov	ip, r0
 801a272:	e76a      	b.n	801a14a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a274:	4605      	mov	r5, r0
 801a276:	e779      	b.n	801a16c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801a278:	4603      	mov	r3, r0
 801a27a:	4605      	mov	r5, r0
 801a27c:	e782      	b.n	801a184 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801a27e:	4603      	mov	r3, r0
 801a280:	e780      	b.n	801a184 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801a282 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a282:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a286:	b093      	sub	sp, #76	@ 0x4c
 801a288:	461d      	mov	r5, r3
 801a28a:	9210      	str	r2, [sp, #64]	@ 0x40
 801a28c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801a28e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801a292:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a294:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801a298:	910a      	str	r1, [sp, #40]	@ 0x28
 801a29a:	6859      	ldr	r1, [r3, #4]
 801a29c:	681b      	ldr	r3, [r3, #0]
 801a29e:	9011      	str	r0, [sp, #68]	@ 0x44
 801a2a0:	fb01 2707 	mla	r7, r1, r7, r2
 801a2a4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801a2a8:	9307      	str	r3, [sp, #28]
 801a2aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a2ac:	681b      	ldr	r3, [r3, #0]
 801a2ae:	9309      	str	r3, [sp, #36]	@ 0x24
 801a2b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a2b2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a2b6:	43db      	mvns	r3, r3
 801a2b8:	b2db      	uxtb	r3, r3
 801a2ba:	9308      	str	r3, [sp, #32]
 801a2bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a2be:	2b00      	cmp	r3, #0
 801a2c0:	dc03      	bgt.n	801a2ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a2c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a2c4:	2b00      	cmp	r3, #0
 801a2c6:	f340 8203 	ble.w	801a6d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a2ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a2cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a2d4:	1e48      	subs	r0, r1, #1
 801a2d6:	f102 3cff 	add.w	ip, r2, #4294967295
 801a2da:	2d00      	cmp	r5, #0
 801a2dc:	f340 80da 	ble.w	801a494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a2e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a2e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a2e8:	d406      	bmi.n	801a2f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2ea:	4586      	cmp	lr, r0
 801a2ec:	da04      	bge.n	801a2f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2ee:	2b00      	cmp	r3, #0
 801a2f0:	db02      	blt.n	801a2f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2f2:	4563      	cmp	r3, ip
 801a2f4:	f2c0 80cf 	blt.w	801a496 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a2f8:	f11e 0e01 	adds.w	lr, lr, #1
 801a2fc:	f100 80c1 	bmi.w	801a482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a300:	4571      	cmp	r1, lr
 801a302:	f2c0 80be 	blt.w	801a482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a306:	3301      	adds	r3, #1
 801a308:	f100 80bb 	bmi.w	801a482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a30c:	429a      	cmp	r2, r3
 801a30e:	f2c0 80b8 	blt.w	801a482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a312:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801a316:	46a9      	mov	r9, r5
 801a318:	f1b9 0f00 	cmp.w	r9, #0
 801a31c:	f340 80d8 	ble.w	801a4d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801a320:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a322:	1421      	asrs	r1, r4, #16
 801a324:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a328:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a32c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a330:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a334:	f100 8111 	bmi.w	801a55a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a338:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a33c:	4551      	cmp	r1, sl
 801a33e:	f280 810c 	bge.w	801a55a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a342:	2800      	cmp	r0, #0
 801a344:	f2c0 8109 	blt.w	801a55a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a348:	f103 3aff 	add.w	sl, r3, #4294967295
 801a34c:	4550      	cmp	r0, sl
 801a34e:	f280 8104 	bge.w	801a55a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a352:	fa0f f38e 	sxth.w	r3, lr
 801a356:	fb00 1103 	mla	r1, r0, r3, r1
 801a35a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801a35c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801a360:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801a364:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801a368:	f1bc 0f00 	cmp.w	ip, #0
 801a36c:	d007      	beq.n	801a37e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801a36e:	005b      	lsls	r3, r3, #1
 801a370:	eb0a 0003 	add.w	r0, sl, r3
 801a374:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801a378:	930c      	str	r3, [sp, #48]	@ 0x30
 801a37a:	8843      	ldrh	r3, [r0, #2]
 801a37c:	930d      	str	r3, [sp, #52]	@ 0x34
 801a37e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801a382:	fb12 f30c 	smulbb	r3, r2, ip
 801a386:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a38a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a38e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a392:	10db      	asrs	r3, r3, #3
 801a394:	ea40 000e 	orr.w	r0, r0, lr
 801a398:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801a39c:	f1cc 0e10 	rsb	lr, ip, #16
 801a3a0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a3a4:	ebae 0e02 	sub.w	lr, lr, r2
 801a3a8:	ea4a 0101 	orr.w	r1, sl, r1
 801a3ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a3b0:	4351      	muls	r1, r2
 801a3b2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a3b4:	9f08      	ldr	r7, [sp, #32]
 801a3b6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a3ba:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a3be:	0410      	lsls	r0, r2, #16
 801a3c0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a3c4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a3c8:	4310      	orrs	r0, r2
 801a3ca:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a3cc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a3ce:	0412      	lsls	r2, r2, #16
 801a3d0:	fb03 e000 	mla	r0, r3, r0, lr
 801a3d4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a3d8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801a3dc:	ea42 020e 	orr.w	r2, r2, lr
 801a3e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a3e4:	fb03 0302 	mla	r3, r3, r2, r0
 801a3e8:	0d5a      	lsrs	r2, r3, #21
 801a3ea:	095b      	lsrs	r3, r3, #5
 801a3ec:	f8b8 0000 	ldrh.w	r0, [r8]
 801a3f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a3f4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a3f8:	4313      	orrs	r3, r2
 801a3fa:	b29b      	uxth	r3, r3
 801a3fc:	1201      	asrs	r1, r0, #8
 801a3fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801a402:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a406:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a40a:	fb11 f107 	smulbb	r1, r1, r7
 801a40e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a412:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a416:	00c0      	lsls	r0, r0, #3
 801a418:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a41c:	b2c0      	uxtb	r0, r0
 801a41e:	10d9      	asrs	r1, r3, #3
 801a420:	00db      	lsls	r3, r3, #3
 801a422:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a426:	b2db      	uxtb	r3, r3
 801a428:	fb10 f007 	smulbb	r0, r0, r7
 801a42c:	fa1f fc8c 	uxth.w	ip, ip
 801a430:	fb03 0302 	mla	r3, r3, r2, r0
 801a434:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a438:	fb1e fe07 	smulbb	lr, lr, r7
 801a43c:	fb01 e102 	mla	r1, r1, r2, lr
 801a440:	b29a      	uxth	r2, r3
 801a442:	f10c 0301 	add.w	r3, ip, #1
 801a446:	b289      	uxth	r1, r1
 801a448:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a44c:	1c53      	adds	r3, r2, #1
 801a44e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a452:	1c4a      	adds	r2, r1, #1
 801a454:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a458:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a45c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a460:	0949      	lsrs	r1, r1, #5
 801a462:	ea43 030c 	orr.w	r3, r3, ip
 801a466:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a46a:	430b      	orrs	r3, r1
 801a46c:	f8a8 3000 	strh.w	r3, [r8]
 801a470:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a472:	441c      	add	r4, r3
 801a474:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a476:	f108 0802 	add.w	r8, r8, #2
 801a47a:	441e      	add	r6, r3
 801a47c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a480:	e74a      	b.n	801a318 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a482:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a484:	441c      	add	r4, r3
 801a486:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a488:	441e      	add	r6, r3
 801a48a:	9b07      	ldr	r3, [sp, #28]
 801a48c:	3302      	adds	r3, #2
 801a48e:	3d01      	subs	r5, #1
 801a490:	9307      	str	r3, [sp, #28]
 801a492:	e722      	b.n	801a2da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a494:	d022      	beq.n	801a4dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a496:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a498:	1e6b      	subs	r3, r5, #1
 801a49a:	fb00 4003 	mla	r0, r0, r3, r4
 801a49e:	1400      	asrs	r0, r0, #16
 801a4a0:	f53f af37 	bmi.w	801a312 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4a4:	3901      	subs	r1, #1
 801a4a6:	4288      	cmp	r0, r1
 801a4a8:	f6bf af33 	bge.w	801a312 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4ac:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a4ae:	fb01 6303 	mla	r3, r1, r3, r6
 801a4b2:	141b      	asrs	r3, r3, #16
 801a4b4:	f53f af2d 	bmi.w	801a312 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4b8:	3a01      	subs	r2, #1
 801a4ba:	4293      	cmp	r3, r2
 801a4bc:	f6bf af29 	bge.w	801a312 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4c0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a4c4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801a4c8:	46a8      	mov	r8, r5
 801a4ca:	f1b8 0f00 	cmp.w	r8, #0
 801a4ce:	dc5e      	bgt.n	801a58e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a4d0:	9b07      	ldr	r3, [sp, #28]
 801a4d2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a4d6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a4da:	9307      	str	r3, [sp, #28]
 801a4dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a4de:	2b00      	cmp	r3, #0
 801a4e0:	f340 80f6 	ble.w	801a6d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a4e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a4ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a4f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a4f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4fe:	eef0 6a62 	vmov.f32	s13, s5
 801a502:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a506:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a50a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a50e:	ee16 4a90 	vmov	r4, s13
 801a512:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a516:	eef0 6a43 	vmov.f32	s13, s6
 801a51a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a51e:	ee12 2a90 	vmov	r2, s5
 801a522:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a526:	fb92 f3f3 	sdiv	r3, r2, r3
 801a52a:	ee13 2a10 	vmov	r2, s6
 801a52e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a530:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a532:	fb92 f3f3 	sdiv	r3, r2, r3
 801a536:	9320      	str	r3, [sp, #128]	@ 0x80
 801a538:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a53a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a53c:	3b01      	subs	r3, #1
 801a53e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a542:	930a      	str	r3, [sp, #40]	@ 0x28
 801a544:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a546:	ee16 6a90 	vmov	r6, s13
 801a54a:	bf14      	ite	ne
 801a54c:	461d      	movne	r5, r3
 801a54e:	4615      	moveq	r5, r2
 801a550:	eeb0 3a67 	vmov.f32	s6, s15
 801a554:	eef0 2a47 	vmov.f32	s5, s14
 801a558:	e6b0      	b.n	801a2bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a55a:	f111 0a01 	adds.w	sl, r1, #1
 801a55e:	d487      	bmi.n	801a470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a560:	45d6      	cmp	lr, sl
 801a562:	db85      	blt.n	801a470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a564:	f110 0a01 	adds.w	sl, r0, #1
 801a568:	d482      	bmi.n	801a470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a56a:	4553      	cmp	r3, sl
 801a56c:	db80      	blt.n	801a470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a56e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801a570:	9101      	str	r1, [sp, #4]
 801a572:	b21b      	sxth	r3, r3
 801a574:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801a578:	9300      	str	r3, [sp, #0]
 801a57a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801a57e:	fa0f f38e 	sxth.w	r3, lr
 801a582:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a584:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a586:	4641      	mov	r1, r8
 801a588:	f7ff fdb4 	bl	801a0f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801a58c:	e770      	b.n	801a470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a58e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a590:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801a592:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a596:	1430      	asrs	r0, r6, #16
 801a598:	1423      	asrs	r3, r4, #16
 801a59a:	fb01 3000 	mla	r0, r1, r0, r3
 801a59e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5a0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801a5a4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801a5a8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a5ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a5b0:	8858      	ldrh	r0, [r3, #2]
 801a5b2:	f1be 0f00 	cmp.w	lr, #0
 801a5b6:	d00b      	beq.n	801a5d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801a5b8:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801a5bc:	3901      	subs	r1, #1
 801a5be:	0049      	lsls	r1, r1, #1
 801a5c0:	3102      	adds	r1, #2
 801a5c2:	eb03 0b01 	add.w	fp, r3, r1
 801a5c6:	5a5b      	ldrh	r3, [r3, r1]
 801a5c8:	930e      	str	r3, [sp, #56]	@ 0x38
 801a5ca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a5ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a5d0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801a5d4:	fb12 f30e 	smulbb	r3, r2, lr
 801a5d8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a5dc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a5e0:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801a5e4:	10db      	asrs	r3, r3, #3
 801a5e6:	ea41 010c 	orr.w	r1, r1, ip
 801a5ea:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a5ee:	f1ce 0c10 	rsb	ip, lr, #16
 801a5f2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a5f6:	ebac 0c02 	sub.w	ip, ip, r2
 801a5fa:	ea4b 0000 	orr.w	r0, fp, r0
 801a5fe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a602:	4350      	muls	r0, r2
 801a604:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a606:	9f08      	ldr	r7, [sp, #32]
 801a608:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a60c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a610:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a614:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801a618:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a61a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a61c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a620:	0412      	lsls	r2, r2, #16
 801a622:	ea4b 0101 	orr.w	r1, fp, r1
 801a626:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a62a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a62e:	fb03 c101 	mla	r1, r3, r1, ip
 801a632:	4302      	orrs	r2, r0
 801a634:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a638:	fb03 1202 	mla	r2, r3, r2, r1
 801a63c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a640:	0952      	lsrs	r2, r2, #5
 801a642:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801a646:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801a64a:	f8b9 2000 	ldrh.w	r2, [r9]
 801a64e:	ea4b 0303 	orr.w	r3, fp, r3
 801a652:	b29b      	uxth	r3, r3
 801a654:	1211      	asrs	r1, r2, #8
 801a656:	1218      	asrs	r0, r3, #8
 801a658:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a65c:	fb11 f107 	smulbb	r1, r1, r7
 801a660:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a664:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a668:	00d2      	lsls	r2, r2, #3
 801a66a:	fb00 100a 	mla	r0, r0, sl, r1
 801a66e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801a672:	10d9      	asrs	r1, r3, #3
 801a674:	b2d2      	uxtb	r2, r2
 801a676:	00db      	lsls	r3, r3, #3
 801a678:	fb1c fc07 	smulbb	ip, ip, r7
 801a67c:	fb12 f207 	smulbb	r2, r2, r7
 801a680:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a684:	b2db      	uxtb	r3, r3
 801a686:	b280      	uxth	r0, r0
 801a688:	fb01 c10a 	mla	r1, r1, sl, ip
 801a68c:	fb03 230a 	mla	r3, r3, sl, r2
 801a690:	b29b      	uxth	r3, r3
 801a692:	b289      	uxth	r1, r1
 801a694:	1c42      	adds	r2, r0, #1
 801a696:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a69a:	f101 0c01 	add.w	ip, r1, #1
 801a69e:	1c5a      	adds	r2, r3, #1
 801a6a0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a6a4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a6a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a6aa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a6ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a6b2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a6b6:	4310      	orrs	r0, r2
 801a6b8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801a6bc:	441c      	add	r4, r3
 801a6be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a6c0:	ea40 000c 	orr.w	r0, r0, ip
 801a6c4:	f829 0b02 	strh.w	r0, [r9], #2
 801a6c8:	441e      	add	r6, r3
 801a6ca:	f108 38ff 	add.w	r8, r8, #4294967295
 801a6ce:	e6fc      	b.n	801a4ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801a6d0:	b013      	add	sp, #76	@ 0x4c
 801a6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801a6d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a6da:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801a6de:	fb0e 4703 	mla	r7, lr, r3, r4
 801a6e2:	f1be 0f00 	cmp.w	lr, #0
 801a6e6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801a6ea:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801a6ee:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801a6f2:	8808      	ldrh	r0, [r1, #0]
 801a6f4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801a6f8:	db60      	blt.n	801a7bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801a6fa:	45f1      	cmp	r9, lr
 801a6fc:	dd5e      	ble.n	801a7bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801a6fe:	2c00      	cmp	r4, #0
 801a700:	db5a      	blt.n	801a7b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801a702:	42a3      	cmp	r3, r4
 801a704:	dd58      	ble.n	801a7b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801a706:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801a70a:	1c62      	adds	r2, r4, #1
 801a70c:	d459      	bmi.n	801a7c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a70e:	4293      	cmp	r3, r2
 801a710:	dd57      	ble.n	801a7c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a712:	2d00      	cmp	r5, #0
 801a714:	d055      	beq.n	801a7c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a716:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801a71a:	f11e 0e01 	adds.w	lr, lr, #1
 801a71e:	d454      	bmi.n	801a7ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a720:	45f1      	cmp	r9, lr
 801a722:	dd52      	ble.n	801a7ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a724:	2e00      	cmp	r6, #0
 801a726:	d050      	beq.n	801a7ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a728:	2c00      	cmp	r4, #0
 801a72a:	db4c      	blt.n	801a7c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801a72c:	42a3      	cmp	r3, r4
 801a72e:	dd4a      	ble.n	801a7c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801a730:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801a734:	3401      	adds	r4, #1
 801a736:	d405      	bmi.n	801a744 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a738:	42a3      	cmp	r3, r4
 801a73a:	dd03      	ble.n	801a744 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a73c:	b115      	cbz	r5, 801a744 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a73e:	3301      	adds	r3, #1
 801a740:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801a744:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a748:	fb15 f406 	smulbb	r4, r5, r6
 801a74c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a750:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a754:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a758:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a75c:	ea43 0c0c 	orr.w	ip, r3, ip
 801a760:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a764:	f1c6 0310 	rsb	r3, r6, #16
 801a768:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a76c:	1b5b      	subs	r3, r3, r5
 801a76e:	ea4e 0707 	orr.w	r7, lr, r7
 801a772:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a776:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a77a:	437d      	muls	r5, r7
 801a77c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a780:	0403      	lsls	r3, r0, #16
 801a782:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a786:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a78a:	4318      	orrs	r0, r3
 801a78c:	0413      	lsls	r3, r2, #16
 801a78e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a792:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a796:	4313      	orrs	r3, r2
 801a798:	fb04 c000 	mla	r0, r4, r0, ip
 801a79c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a7a0:	fb06 0003 	mla	r0, r6, r3, r0
 801a7a4:	0d43      	lsrs	r3, r0, #21
 801a7a6:	0940      	lsrs	r0, r0, #5
 801a7a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a7ac:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a7b0:	4318      	orrs	r0, r3
 801a7b2:	8008      	strh	r0, [r1, #0]
 801a7b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a7b8:	4684      	mov	ip, r0
 801a7ba:	e7a6      	b.n	801a70a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801a7bc:	4607      	mov	r7, r0
 801a7be:	4684      	mov	ip, r0
 801a7c0:	e7ab      	b.n	801a71a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a7c2:	4607      	mov	r7, r0
 801a7c4:	e7a9      	b.n	801a71a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a7c6:	4602      	mov	r2, r0
 801a7c8:	e7b4      	b.n	801a734 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801a7ca:	4602      	mov	r2, r0
 801a7cc:	e7ba      	b.n	801a744 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801a7ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7d2:	b08f      	sub	sp, #60	@ 0x3c
 801a7d4:	461d      	mov	r5, r3
 801a7d6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801a7d8:	920c      	str	r2, [sp, #48]	@ 0x30
 801a7da:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801a7de:	9107      	str	r1, [sp, #28]
 801a7e0:	6859      	ldr	r1, [r3, #4]
 801a7e2:	681b      	ldr	r3, [r3, #0]
 801a7e4:	900d      	str	r0, [sp, #52]	@ 0x34
 801a7e6:	fb01 2707 	mla	r7, r1, r7, r2
 801a7ea:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a7ee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7f0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801a7f4:	f8d3 8000 	ldr.w	r8, [r3]
 801a7f8:	9b07      	ldr	r3, [sp, #28]
 801a7fa:	2b00      	cmp	r3, #0
 801a7fc:	dc03      	bgt.n	801a806 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a7fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a800:	2b00      	cmp	r3, #0
 801a802:	f340 8181 	ble.w	801ab08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801a806:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a808:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a80c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a810:	1e48      	subs	r0, r1, #1
 801a812:	f102 3cff 	add.w	ip, r2, #4294967295
 801a816:	2d00      	cmp	r5, #0
 801a818:	f340 809b 	ble.w	801a952 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801a81c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a820:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a824:	d406      	bmi.n	801a834 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a826:	4586      	cmp	lr, r0
 801a828:	da04      	bge.n	801a834 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a82a:	2b00      	cmp	r3, #0
 801a82c:	db02      	blt.n	801a834 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a82e:	4563      	cmp	r3, ip
 801a830:	f2c0 8090 	blt.w	801a954 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a834:	f11e 0e01 	adds.w	lr, lr, #1
 801a838:	f100 8084 	bmi.w	801a944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a83c:	4571      	cmp	r1, lr
 801a83e:	f2c0 8081 	blt.w	801a944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a842:	3301      	adds	r3, #1
 801a844:	d47e      	bmi.n	801a944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a846:	429a      	cmp	r2, r3
 801a848:	db7c      	blt.n	801a944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a84a:	46aa      	mov	sl, r5
 801a84c:	46b9      	mov	r9, r7
 801a84e:	f1ba 0f00 	cmp.w	sl, #0
 801a852:	f340 8099 	ble.w	801a988 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801a856:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a858:	1421      	asrs	r1, r4, #16
 801a85a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a85e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a862:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a866:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a86a:	f100 80d0 	bmi.w	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a86e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a872:	4559      	cmp	r1, fp
 801a874:	f280 80cb 	bge.w	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a878:	2800      	cmp	r0, #0
 801a87a:	f2c0 80c8 	blt.w	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a87e:	f103 3bff 	add.w	fp, r3, #4294967295
 801a882:	4558      	cmp	r0, fp
 801a884:	f280 80c3 	bge.w	801aa0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801a888:	fa0f fe8e 	sxth.w	lr, lr
 801a88c:	fb00 110e 	mla	r1, r0, lr, r1
 801a890:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a894:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a898:	8841      	ldrh	r1, [r0, #2]
 801a89a:	f1bc 0f00 	cmp.w	ip, #0
 801a89e:	d00b      	beq.n	801a8b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801a8a0:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801a8a4:	3b01      	subs	r3, #1
 801a8a6:	005b      	lsls	r3, r3, #1
 801a8a8:	3302      	adds	r3, #2
 801a8aa:	eb00 0e03 	add.w	lr, r0, r3
 801a8ae:	5ac3      	ldrh	r3, [r0, r3]
 801a8b0:	9308      	str	r3, [sp, #32]
 801a8b2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a8b6:	9309      	str	r3, [sp, #36]	@ 0x24
 801a8b8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a8bc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a8c0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801a8c4:	ea40 000b 	orr.w	r0, r0, fp
 801a8c8:	fb12 f30c 	smulbb	r3, r2, ip
 801a8cc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a8d0:	10db      	asrs	r3, r3, #3
 801a8d2:	f1cc 0e10 	rsb	lr, ip, #16
 801a8d6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a8da:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a8de:	ebae 0e02 	sub.w	lr, lr, r2
 801a8e2:	ea4b 0101 	orr.w	r1, fp, r1
 801a8e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a8ea:	4351      	muls	r1, r2
 801a8ec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a8ee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a8f2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a8f6:	0410      	lsls	r0, r2, #16
 801a8f8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a8fc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a900:	4310      	orrs	r0, r2
 801a902:	9a08      	ldr	r2, [sp, #32]
 801a904:	9908      	ldr	r1, [sp, #32]
 801a906:	0412      	lsls	r2, r2, #16
 801a908:	fb03 e000 	mla	r0, r3, r0, lr
 801a90c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a910:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801a914:	ea42 020e 	orr.w	r2, r2, lr
 801a918:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a91c:	fb03 0302 	mla	r3, r3, r2, r0
 801a920:	0d5a      	lsrs	r2, r3, #21
 801a922:	095b      	lsrs	r3, r3, #5
 801a924:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a928:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a92c:	4313      	orrs	r3, r2
 801a92e:	f8a9 3000 	strh.w	r3, [r9]
 801a932:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a934:	441c      	add	r4, r3
 801a936:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a938:	f109 0902 	add.w	r9, r9, #2
 801a93c:	441e      	add	r6, r3
 801a93e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a942:	e784      	b.n	801a84e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a944:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a946:	441c      	add	r4, r3
 801a948:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a94a:	3d01      	subs	r5, #1
 801a94c:	441e      	add	r6, r3
 801a94e:	3702      	adds	r7, #2
 801a950:	e761      	b.n	801a816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a952:	d01d      	beq.n	801a990 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a954:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801a956:	1e6b      	subs	r3, r5, #1
 801a958:	fb00 4003 	mla	r0, r0, r3, r4
 801a95c:	1400      	asrs	r0, r0, #16
 801a95e:	f53f af74 	bmi.w	801a84a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a962:	3901      	subs	r1, #1
 801a964:	4288      	cmp	r0, r1
 801a966:	f6bf af70 	bge.w	801a84a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a96a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801a96c:	fb01 6303 	mla	r3, r1, r3, r6
 801a970:	141b      	asrs	r3, r3, #16
 801a972:	f53f af6a 	bmi.w	801a84a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a976:	3a01      	subs	r2, #1
 801a978:	4293      	cmp	r3, r2
 801a97a:	f6bf af66 	bge.w	801a84a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a97e:	46a9      	mov	r9, r5
 801a980:	46ba      	mov	sl, r7
 801a982:	f1b9 0f00 	cmp.w	r9, #0
 801a986:	dc5a      	bgt.n	801aa3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801a988:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a98c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a990:	9b07      	ldr	r3, [sp, #28]
 801a992:	2b00      	cmp	r3, #0
 801a994:	f340 80b8 	ble.w	801ab08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801a998:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a99c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a9a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a9a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a9a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9b2:	eef0 6a62 	vmov.f32	s13, s5
 801a9b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9c2:	ee16 4a90 	vmov	r4, s13
 801a9c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9ca:	eef0 6a43 	vmov.f32	s13, s6
 801a9ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9d2:	ee12 2a90 	vmov	r2, s5
 801a9d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9da:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9de:	ee13 2a10 	vmov	r2, s6
 801a9e2:	931b      	str	r3, [sp, #108]	@ 0x6c
 801a9e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a9e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9ea:	931c      	str	r3, [sp, #112]	@ 0x70
 801a9ec:	9b07      	ldr	r3, [sp, #28]
 801a9ee:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a9f0:	3b01      	subs	r3, #1
 801a9f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9f6:	9307      	str	r3, [sp, #28]
 801a9f8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a9fa:	ee16 6a90 	vmov	r6, s13
 801a9fe:	bf14      	ite	ne
 801aa00:	461d      	movne	r5, r3
 801aa02:	4615      	moveq	r5, r2
 801aa04:	eeb0 3a67 	vmov.f32	s6, s15
 801aa08:	eef0 2a47 	vmov.f32	s5, s14
 801aa0c:	e6f4      	b.n	801a7f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801aa0e:	f111 0b01 	adds.w	fp, r1, #1
 801aa12:	d48e      	bmi.n	801a932 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa14:	45de      	cmp	lr, fp
 801aa16:	db8c      	blt.n	801a932 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa18:	f110 0b01 	adds.w	fp, r0, #1
 801aa1c:	d489      	bmi.n	801a932 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa1e:	455b      	cmp	r3, fp
 801aa20:	db87      	blt.n	801a932 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa22:	b21b      	sxth	r3, r3
 801aa24:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801aa28:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801aa2c:	9300      	str	r3, [sp, #0]
 801aa2e:	4642      	mov	r2, r8
 801aa30:	fa0f f38e 	sxth.w	r3, lr
 801aa34:	4649      	mov	r1, r9
 801aa36:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801aa38:	f7ff fe4d 	bl	801a6d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801aa3c:	e779      	b.n	801a932 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa3e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aa40:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801aa44:	1420      	asrs	r0, r4, #16
 801aa46:	1431      	asrs	r1, r6, #16
 801aa48:	fb03 0101 	mla	r1, r3, r1, r0
 801aa4c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801aa50:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801aa54:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801aa58:	8841      	ldrh	r1, [r0, #2]
 801aa5a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aa5e:	f1be 0f00 	cmp.w	lr, #0
 801aa62:	d00b      	beq.n	801aa7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801aa64:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801aa68:	3b01      	subs	r3, #1
 801aa6a:	005b      	lsls	r3, r3, #1
 801aa6c:	3302      	adds	r3, #2
 801aa6e:	eb00 0b03 	add.w	fp, r0, r3
 801aa72:	5ac3      	ldrh	r3, [r0, r3]
 801aa74:	930a      	str	r3, [sp, #40]	@ 0x28
 801aa76:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801aa7a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801aa7c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801aa80:	fb12 f30e 	smulbb	r3, r2, lr
 801aa84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801aa88:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801aa8c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801aa90:	10db      	asrs	r3, r3, #3
 801aa92:	ea40 000c 	orr.w	r0, r0, ip
 801aa96:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801aa9a:	f1ce 0c10 	rsb	ip, lr, #16
 801aa9e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801aaa2:	ebac 0c02 	sub.w	ip, ip, r2
 801aaa6:	ea4b 0101 	orr.w	r1, fp, r1
 801aaaa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801aaae:	4351      	muls	r1, r2
 801aab0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801aab2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801aab6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801aaba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801aabe:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801aac2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801aac4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801aac6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801aaca:	0412      	lsls	r2, r2, #16
 801aacc:	ea4b 0000 	orr.w	r0, fp, r0
 801aad0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801aad4:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801aad8:	fb03 c000 	mla	r0, r3, r0, ip
 801aadc:	ea42 0b0b 	orr.w	fp, r2, fp
 801aae0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801aae4:	fb03 000b 	mla	r0, r3, fp, r0
 801aae8:	0d43      	lsrs	r3, r0, #21
 801aaea:	0940      	lsrs	r0, r0, #5
 801aaec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aaf0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801aaf4:	4318      	orrs	r0, r3
 801aaf6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801aaf8:	f82a 0b02 	strh.w	r0, [sl], #2
 801aafc:	441c      	add	r4, r3
 801aafe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ab00:	f109 39ff 	add.w	r9, r9, #4294967295
 801ab04:	441e      	add	r6, r3
 801ab06:	e73c      	b.n	801a982 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801ab08:	b00f      	add	sp, #60	@ 0x3c
 801ab0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ab0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab12:	b085      	sub	sp, #20
 801ab14:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ab18:	9102      	str	r1, [sp, #8]
 801ab1a:	2c00      	cmp	r4, #0
 801ab1c:	fb04 7103 	mla	r1, r4, r3, r7
 801ab20:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ab24:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ab28:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ab2c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ab30:	f2c0 811b 	blt.w	801ad6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ab34:	45a6      	cmp	lr, r4
 801ab36:	f340 8118 	ble.w	801ad6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ab3a:	2f00      	cmp	r7, #0
 801ab3c:	f2c0 8113 	blt.w	801ad66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ab40:	42bb      	cmp	r3, r7
 801ab42:	f340 8110 	ble.w	801ad66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ab46:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ab4a:	1c7a      	adds	r2, r7, #1
 801ab4c:	f100 8110 	bmi.w	801ad70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ab50:	4293      	cmp	r3, r2
 801ab52:	f340 810d 	ble.w	801ad70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ab56:	2e00      	cmp	r6, #0
 801ab58:	f000 810c 	beq.w	801ad74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801ab5c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ab60:	3401      	adds	r4, #1
 801ab62:	f100 810b 	bmi.w	801ad7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ab66:	45a6      	cmp	lr, r4
 801ab68:	f340 8108 	ble.w	801ad7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ab6c:	2800      	cmp	r0, #0
 801ab6e:	f000 8108 	beq.w	801ad82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ab72:	2f00      	cmp	r7, #0
 801ab74:	f2c0 8100 	blt.w	801ad78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ab78:	42bb      	cmp	r3, r7
 801ab7a:	f340 80fd 	ble.w	801ad78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ab7e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ab82:	3701      	adds	r7, #1
 801ab84:	f100 8100 	bmi.w	801ad88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ab88:	42bb      	cmp	r3, r7
 801ab8a:	f340 80fd 	ble.w	801ad88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ab8e:	2e00      	cmp	r6, #0
 801ab90:	f000 80fc 	beq.w	801ad8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ab94:	3301      	adds	r3, #1
 801ab96:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ab9a:	b2b6      	uxth	r6, r6
 801ab9c:	b280      	uxth	r0, r0
 801ab9e:	fb00 fe06 	mul.w	lr, r0, r6
 801aba2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aba6:	0136      	lsls	r6, r6, #4
 801aba8:	eba6 070e 	sub.w	r7, r6, lr
 801abac:	b280      	uxth	r0, r0
 801abae:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801abb2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801abb6:	b2bf      	uxth	r7, r7
 801abb8:	1a1b      	subs	r3, r3, r0
 801abba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801abbe:	b29b      	uxth	r3, r3
 801abc0:	fb0a f607 	mul.w	r6, sl, r7
 801abc4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801abc8:	fb0b 6603 	mla	r6, fp, r3, r6
 801abcc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801abd0:	fb00 6609 	mla	r6, r0, r9, r6
 801abd4:	fb0e 6608 	mla	r6, lr, r8, r6
 801abd8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801abdc:	9600      	str	r6, [sp, #0]
 801abde:	2e00      	cmp	r6, #0
 801abe0:	f000 80be 	beq.w	801ad60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801abe4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801abe8:	fb0b fc0c 	mul.w	ip, fp, ip
 801abec:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801abf0:	fb0b f505 	mul.w	r5, fp, r5
 801abf4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801abf8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801abfc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ac00:	44dc      	add	ip, fp
 801ac02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ac06:	9501      	str	r5, [sp, #4]
 801ac08:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ac0c:	9503      	str	r5, [sp, #12]
 801ac0e:	9d01      	ldr	r5, [sp, #4]
 801ac10:	9e02      	ldr	r6, [sp, #8]
 801ac12:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ac16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ac1a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ac1e:	fb0a fc0c 	mul.w	ip, sl, ip
 801ac22:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ac26:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ac2a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ac2e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ac32:	4465      	add	r5, ip
 801ac34:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ac38:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ac3c:	fb09 fc0c 	mul.w	ip, r9, ip
 801ac40:	fb09 f904 	mul.w	r9, r9, r4
 801ac44:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ac48:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ac4c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ac50:	fb08 f404 	mul.w	r4, r8, r4
 801ac54:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ac58:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ac5c:	fb08 f802 	mul.w	r8, r8, r2
 801ac60:	fb0a fa01 	mul.w	sl, sl, r1
 801ac64:	0a22      	lsrs	r2, r4, #8
 801ac66:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ac6a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ac6e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ac72:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ac76:	4414      	add	r4, r2
 801ac78:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ac7c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801ac80:	0a2d      	lsrs	r5, r5, #8
 801ac82:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ac86:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ac8a:	9a03      	ldr	r2, [sp, #12]
 801ac8c:	8836      	ldrh	r6, [r6, #0]
 801ac8e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ac92:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ac96:	437d      	muls	r5, r7
 801ac98:	4461      	add	r1, ip
 801ac9a:	0a24      	lsrs	r4, r4, #8
 801ac9c:	fb02 5503 	mla	r5, r2, r3, r5
 801aca0:	0a09      	lsrs	r1, r1, #8
 801aca2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801aca6:	fb04 540e 	mla	r4, r4, lr, r5
 801acaa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801acae:	fb01 4100 	mla	r1, r1, r0, r4
 801acb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801acb6:	0a09      	lsrs	r1, r1, #8
 801acb8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801acbc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801acc0:	fb07 f70a 	mul.w	r7, r7, sl
 801acc4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801acc8:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801accc:	fb03 7101 	mla	r1, r3, r1, r7
 801acd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801acd4:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801acd8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801acdc:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801ace0:	fb00 e101 	mla	r1, r0, r1, lr
 801ace4:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801ace8:	9a00      	ldr	r2, [sp, #0]
 801acea:	b287      	uxth	r7, r0
 801acec:	437a      	muls	r2, r7
 801acee:	0a09      	lsrs	r1, r1, #8
 801acf0:	1c53      	adds	r3, r2, #1
 801acf2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801acf6:	4321      	orrs	r1, r4
 801acf8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801acfc:	1235      	asrs	r5, r6, #8
 801acfe:	0c0a      	lsrs	r2, r1, #16
 801ad00:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ad04:	b2db      	uxtb	r3, r3
 801ad06:	fb12 f207 	smulbb	r2, r2, r7
 801ad0a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ad0e:	fb05 2503 	mla	r5, r5, r3, r2
 801ad12:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ad16:	10f2      	asrs	r2, r6, #3
 801ad18:	b2c8      	uxtb	r0, r1
 801ad1a:	00f6      	lsls	r6, r6, #3
 801ad1c:	fb14 f407 	smulbb	r4, r4, r7
 801ad20:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ad24:	b2f6      	uxtb	r6, r6
 801ad26:	fb10 f007 	smulbb	r0, r0, r7
 801ad2a:	fb02 4203 	mla	r2, r2, r3, r4
 801ad2e:	b2ad      	uxth	r5, r5
 801ad30:	fb06 0303 	mla	r3, r6, r3, r0
 801ad34:	b299      	uxth	r1, r3
 801ad36:	b294      	uxth	r4, r2
 801ad38:	1c6b      	adds	r3, r5, #1
 801ad3a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ad3e:	1c62      	adds	r2, r4, #1
 801ad40:	1c4b      	adds	r3, r1, #1
 801ad42:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ad46:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ad4a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ad4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad52:	0952      	lsrs	r2, r2, #5
 801ad54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ad58:	432b      	orrs	r3, r5
 801ad5a:	4313      	orrs	r3, r2
 801ad5c:	9a02      	ldr	r2, [sp, #8]
 801ad5e:	8013      	strh	r3, [r2, #0]
 801ad60:	b005      	add	sp, #20
 801ad62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad66:	2500      	movs	r5, #0
 801ad68:	e6ef      	b.n	801ab4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801ad6a:	2100      	movs	r1, #0
 801ad6c:	460d      	mov	r5, r1
 801ad6e:	e6f7      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ad70:	2100      	movs	r1, #0
 801ad72:	e6f5      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ad74:	4631      	mov	r1, r6
 801ad76:	e6f3      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ad78:	2400      	movs	r4, #0
 801ad7a:	e702      	b.n	801ab82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801ad7c:	2200      	movs	r2, #0
 801ad7e:	4614      	mov	r4, r2
 801ad80:	e70b      	b.n	801ab9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ad82:	4602      	mov	r2, r0
 801ad84:	4604      	mov	r4, r0
 801ad86:	e708      	b.n	801ab9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ad88:	2200      	movs	r2, #0
 801ad8a:	e706      	b.n	801ab9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ad8c:	4632      	mov	r2, r6
 801ad8e:	e704      	b.n	801ab9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801ad90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad94:	b09d      	sub	sp, #116	@ 0x74
 801ad96:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801ad9a:	9219      	str	r2, [sp, #100]	@ 0x64
 801ad9c:	9307      	str	r3, [sp, #28]
 801ad9e:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801ada0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801ada4:	931a      	str	r3, [sp, #104]	@ 0x68
 801ada6:	9117      	str	r1, [sp, #92]	@ 0x5c
 801ada8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801adac:	901b      	str	r0, [sp, #108]	@ 0x6c
 801adae:	6850      	ldr	r0, [r2, #4]
 801adb0:	6812      	ldr	r2, [r2, #0]
 801adb2:	fb00 1303 	mla	r3, r0, r3, r1
 801adb6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801adba:	930a      	str	r3, [sp, #40]	@ 0x28
 801adbc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801adbe:	681b      	ldr	r3, [r3, #0]
 801adc0:	9310      	str	r3, [sp, #64]	@ 0x40
 801adc2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801adc6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801adc8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801adca:	2b00      	cmp	r3, #0
 801adcc:	dc03      	bgt.n	801add6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801adce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801add0:	2b00      	cmp	r3, #0
 801add2:	f340 8375 	ble.w	801b4c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801add6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801add8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801addc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ade0:	1e48      	subs	r0, r1, #1
 801ade2:	1e57      	subs	r7, r2, #1
 801ade4:	9b07      	ldr	r3, [sp, #28]
 801ade6:	2b00      	cmp	r3, #0
 801ade8:	f340 818e 	ble.w	801b108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801adec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801adf0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801adf4:	d406      	bmi.n	801ae04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801adf6:	4584      	cmp	ip, r0
 801adf8:	da04      	bge.n	801ae04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801adfa:	2b00      	cmp	r3, #0
 801adfc:	db02      	blt.n	801ae04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801adfe:	42bb      	cmp	r3, r7
 801ae00:	f2c0 8183 	blt.w	801b10a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ae04:	f11c 0c01 	adds.w	ip, ip, #1
 801ae08:	f100 8173 	bmi.w	801b0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ae0c:	4561      	cmp	r1, ip
 801ae0e:	f2c0 8170 	blt.w	801b0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ae12:	3301      	adds	r3, #1
 801ae14:	f100 816d 	bmi.w	801b0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ae18:	429a      	cmp	r2, r3
 801ae1a:	f2c0 816a 	blt.w	801b0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ae1e:	9b07      	ldr	r3, [sp, #28]
 801ae20:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ae22:	9318      	str	r3, [sp, #96]	@ 0x60
 801ae24:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ae26:	2b00      	cmp	r3, #0
 801ae28:	f340 818c 	ble.w	801b144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801ae2c:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801ae2e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ae30:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ae34:	689b      	ldr	r3, [r3, #8]
 801ae36:	1422      	asrs	r2, r4, #16
 801ae38:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ae3c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ae40:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ae44:	f100 81cd 	bmi.w	801b1e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ae48:	f103 38ff 	add.w	r8, r3, #4294967295
 801ae4c:	4542      	cmp	r2, r8
 801ae4e:	f280 81c8 	bge.w	801b1e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ae52:	f1bc 0f00 	cmp.w	ip, #0
 801ae56:	f2c0 81c4 	blt.w	801b1e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ae5a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ae5e:	45c4      	cmp	ip, r8
 801ae60:	f280 81bf 	bge.w	801b1e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ae64:	b21b      	sxth	r3, r3
 801ae66:	fb0c 2203 	mla	r2, ip, r3, r2
 801ae6a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ae6c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ae70:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ae74:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ae78:	2800      	cmp	r0, #0
 801ae7a:	f000 81a9 	beq.w	801b1d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801ae7e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ae82:	950c      	str	r5, [sp, #48]	@ 0x30
 801ae84:	0e2d      	lsrs	r5, r5, #24
 801ae86:	9513      	str	r5, [sp, #76]	@ 0x4c
 801ae88:	b181      	cbz	r1, 801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ae8a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801ae8e:	3b01      	subs	r3, #1
 801ae90:	009b      	lsls	r3, r3, #2
 801ae92:	3304      	adds	r3, #4
 801ae94:	eb08 0c03 	add.w	ip, r8, r3
 801ae98:	f858 3003 	ldr.w	r3, [r8, r3]
 801ae9c:	9308      	str	r3, [sp, #32]
 801ae9e:	0e1b      	lsrs	r3, r3, #24
 801aea0:	9311      	str	r3, [sp, #68]	@ 0x44
 801aea2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801aea6:	930d      	str	r3, [sp, #52]	@ 0x34
 801aea8:	0e1b      	lsrs	r3, r3, #24
 801aeaa:	9314      	str	r3, [sp, #80]	@ 0x50
 801aeac:	b280      	uxth	r0, r0
 801aeae:	b289      	uxth	r1, r1
 801aeb0:	fb00 f901 	mul.w	r9, r0, r1
 801aeb4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aeb8:	0100      	lsls	r0, r0, #4
 801aeba:	eba0 0809 	sub.w	r8, r0, r9
 801aebe:	b289      	uxth	r1, r1
 801aec0:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801aec4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801aec6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801aec8:	fa1f f888 	uxth.w	r8, r8
 801aecc:	1a5b      	subs	r3, r3, r1
 801aece:	b29b      	uxth	r3, r3
 801aed0:	fb08 f000 	mul.w	r0, r8, r0
 801aed4:	fb03 000e 	mla	r0, r3, lr, r0
 801aed8:	fb01 0005 	mla	r0, r1, r5, r0
 801aedc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801aede:	fb09 0005 	mla	r0, r9, r5, r0
 801aee2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801aee6:	2800      	cmp	r0, #0
 801aee8:	f000 80fa 	beq.w	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aeec:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801aef0:	d01b      	beq.n	801af2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801aef2:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801aef6:	fb0e fa0a 	mul.w	sl, lr, sl
 801aefa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801aefe:	fb0e fe02 	mul.w	lr, lr, r2
 801af02:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801af06:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801af0a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801af0e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801af12:	4452      	add	r2, sl
 801af14:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801af18:	0a12      	lsrs	r2, r2, #8
 801af1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af1e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801af22:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801af26:	ea42 020c 	orr.w	r2, r2, ip
 801af2a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801af2c:	2dff      	cmp	r5, #255	@ 0xff
 801af2e:	d021      	beq.n	801af74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af30:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801af32:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801af36:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801af38:	fb05 fb0b 	mul.w	fp, r5, fp
 801af3c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801af3e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801af42:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801af44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af48:	fb05 fa0a 	mul.w	sl, r5, sl
 801af4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801af50:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801af54:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801af58:	44de      	add	lr, fp
 801af5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af66:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801af6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801af6e:	ea4e 050a 	orr.w	r5, lr, sl
 801af72:	950c      	str	r5, [sp, #48]	@ 0x30
 801af74:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801af76:	2dff      	cmp	r5, #255	@ 0xff
 801af78:	d021      	beq.n	801afbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801af7a:	9d08      	ldr	r5, [sp, #32]
 801af7c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801af80:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801af82:	fb05 fb0b 	mul.w	fp, r5, fp
 801af86:	9d08      	ldr	r5, [sp, #32]
 801af88:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801af8c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801af8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af92:	fb05 fa0a 	mul.w	sl, r5, sl
 801af96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801af9a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801af9e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801afa2:	44de      	add	lr, fp
 801afa4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801afa8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801afac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afb0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801afb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801afb8:	ea4e 050a 	orr.w	r5, lr, sl
 801afbc:	9508      	str	r5, [sp, #32]
 801afbe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801afc0:	2dff      	cmp	r5, #255	@ 0xff
 801afc2:	d021      	beq.n	801b008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801afc4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801afc6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801afca:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801afcc:	fb05 fb0b 	mul.w	fp, r5, fp
 801afd0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801afd2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801afd6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801afd8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801afdc:	fb05 fa0a 	mul.w	sl, r5, sl
 801afe0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801afe4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801afe8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801afec:	44de      	add	lr, fp
 801afee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aff2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aff6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801affa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801affe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b002:	ea4e 050a 	orr.w	r5, lr, sl
 801b006:	950d      	str	r5, [sp, #52]	@ 0x34
 801b008:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b00a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b00e:	9d08      	ldr	r5, [sp, #32]
 801b010:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801b014:	fb08 fc0c 	mul.w	ip, r8, ip
 801b018:	fb03 cc0e 	mla	ip, r3, lr, ip
 801b01c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b020:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b022:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b026:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b02a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b02c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b030:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801b034:	fb08 f80e 	mul.w	r8, r8, lr
 801b038:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b03c:	fb03 8202 	mla	r2, r3, r2, r8
 801b040:	9b08      	ldr	r3, [sp, #32]
 801b042:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b044:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801b048:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b04a:	fb01 220a 	mla	r2, r1, sl, r2
 801b04e:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801b052:	fb09 2901 	mla	r9, r9, r1, r2
 801b056:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b058:	883b      	ldrh	r3, [r7, #0]
 801b05a:	4342      	muls	r2, r0
 801b05c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b060:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b064:	1c50      	adds	r0, r2, #1
 801b066:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b06a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b06e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b072:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b076:	1219      	asrs	r1, r3, #8
 801b078:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b07c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b080:	b2c0      	uxtb	r0, r0
 801b082:	fb12 f205 	smulbb	r2, r2, r5
 801b086:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b08a:	fb01 2100 	mla	r1, r1, r0, r2
 801b08e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b092:	10da      	asrs	r2, r3, #3
 801b094:	fa5f fc8c 	uxtb.w	ip, ip
 801b098:	00db      	lsls	r3, r3, #3
 801b09a:	fb1c fc05 	smulbb	ip, ip, r5
 801b09e:	b2db      	uxtb	r3, r3
 801b0a0:	b289      	uxth	r1, r1
 801b0a2:	fb03 c300 	mla	r3, r3, r0, ip
 801b0a6:	fa1f fc83 	uxth.w	ip, r3
 801b0aa:	1c4b      	adds	r3, r1, #1
 801b0ac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b0b0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b0b4:	fb1e fe05 	smulbb	lr, lr, r5
 801b0b8:	f10c 0301 	add.w	r3, ip, #1
 801b0bc:	fb02 e200 	mla	r2, r2, r0, lr
 801b0c0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b0c4:	b292      	uxth	r2, r2
 801b0c6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b0ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b0ce:	430b      	orrs	r3, r1
 801b0d0:	1c51      	adds	r1, r2, #1
 801b0d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b0d6:	0952      	lsrs	r2, r2, #5
 801b0d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b0dc:	4313      	orrs	r3, r2
 801b0de:	803b      	strh	r3, [r7, #0]
 801b0e0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b0e2:	441c      	add	r4, r3
 801b0e4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b0e6:	441e      	add	r6, r3
 801b0e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b0ea:	3b01      	subs	r3, #1
 801b0ec:	3702      	adds	r7, #2
 801b0ee:	9318      	str	r3, [sp, #96]	@ 0x60
 801b0f0:	e698      	b.n	801ae24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b0f2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b0f4:	441c      	add	r4, r3
 801b0f6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b0f8:	441e      	add	r6, r3
 801b0fa:	9b07      	ldr	r3, [sp, #28]
 801b0fc:	3b01      	subs	r3, #1
 801b0fe:	9307      	str	r3, [sp, #28]
 801b100:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b102:	3302      	adds	r3, #2
 801b104:	930a      	str	r3, [sp, #40]	@ 0x28
 801b106:	e66d      	b.n	801ade4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b108:	d023      	beq.n	801b152 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b10a:	9b07      	ldr	r3, [sp, #28]
 801b10c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801b10e:	3b01      	subs	r3, #1
 801b110:	fb00 4003 	mla	r0, r0, r3, r4
 801b114:	1400      	asrs	r0, r0, #16
 801b116:	f53f ae82 	bmi.w	801ae1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b11a:	3901      	subs	r1, #1
 801b11c:	4288      	cmp	r0, r1
 801b11e:	f6bf ae7e 	bge.w	801ae1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b122:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801b124:	fb01 6303 	mla	r3, r1, r3, r6
 801b128:	141b      	asrs	r3, r3, #16
 801b12a:	f53f ae78 	bmi.w	801ae1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b12e:	3a01      	subs	r2, #1
 801b130:	4293      	cmp	r3, r2
 801b132:	f6bf ae74 	bge.w	801ae1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b136:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b13a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801b13e:	f1bb 0f00 	cmp.w	fp, #0
 801b142:	dc6c      	bgt.n	801b21e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801b144:	9b07      	ldr	r3, [sp, #28]
 801b146:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b14a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b14c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b150:	930a      	str	r3, [sp, #40]	@ 0x28
 801b152:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b154:	2b00      	cmp	r3, #0
 801b156:	f340 81b3 	ble.w	801b4c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b15a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b15e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b162:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b166:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b168:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b16c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b170:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b174:	eef0 6a62 	vmov.f32	s13, s5
 801b178:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b17c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b180:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b184:	ee16 4a90 	vmov	r4, s13
 801b188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b18c:	eef0 6a43 	vmov.f32	s13, s6
 801b190:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b194:	ee12 2a90 	vmov	r2, s5
 801b198:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b19c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1a0:	ee13 2a10 	vmov	r2, s6
 801b1a4:	9329      	str	r3, [sp, #164]	@ 0xa4
 801b1a6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b1a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1ac:	932a      	str	r3, [sp, #168]	@ 0xa8
 801b1ae:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b1b0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801b1b2:	3b01      	subs	r3, #1
 801b1b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b1b8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b1ba:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b1bc:	bf08      	it	eq
 801b1be:	4613      	moveq	r3, r2
 801b1c0:	ee16 6a90 	vmov	r6, s13
 801b1c4:	9307      	str	r3, [sp, #28]
 801b1c6:	eeb0 3a67 	vmov.f32	s6, s15
 801b1ca:	eef0 2a47 	vmov.f32	s5, s14
 801b1ce:	e5fb      	b.n	801adc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b1d0:	2900      	cmp	r1, #0
 801b1d2:	f43f ae6b 	beq.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b1d6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b1da:	9308      	str	r3, [sp, #32]
 801b1dc:	0e1b      	lsrs	r3, r3, #24
 801b1de:	9311      	str	r3, [sp, #68]	@ 0x44
 801b1e0:	e664      	b.n	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b1e2:	f112 0801 	adds.w	r8, r2, #1
 801b1e6:	f53f af7b 	bmi.w	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b1ea:	4543      	cmp	r3, r8
 801b1ec:	f6ff af78 	blt.w	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b1f0:	f11c 0801 	adds.w	r8, ip, #1
 801b1f4:	f53f af74 	bmi.w	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b1f8:	45c6      	cmp	lr, r8
 801b1fa:	f6ff af71 	blt.w	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b1fe:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801b200:	9201      	str	r2, [sp, #4]
 801b202:	fa0f f28e 	sxth.w	r2, lr
 801b206:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801b20a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801b20e:	9200      	str	r2, [sp, #0]
 801b210:	b21b      	sxth	r3, r3
 801b212:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b214:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b216:	4639      	mov	r1, r7
 801b218:	f7ff fc79 	bl	801ab0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801b21c:	e760      	b.n	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b21e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801b220:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b222:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b226:	1427      	asrs	r7, r4, #16
 801b228:	1433      	asrs	r3, r6, #16
 801b22a:	fb01 7303 	mla	r3, r1, r3, r7
 801b22e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801b232:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b236:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b23a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b23e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b242:	2a00      	cmp	r2, #0
 801b244:	f000 8133 	beq.w	801b4ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801b248:	687d      	ldr	r5, [r7, #4]
 801b24a:	950e      	str	r5, [sp, #56]	@ 0x38
 801b24c:	0e2d      	lsrs	r5, r5, #24
 801b24e:	9515      	str	r5, [sp, #84]	@ 0x54
 801b250:	b178      	cbz	r0, 801b272 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b252:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801b256:	3901      	subs	r1, #1
 801b258:	0089      	lsls	r1, r1, #2
 801b25a:	3104      	adds	r1, #4
 801b25c:	eb07 0e01 	add.w	lr, r7, r1
 801b260:	5879      	ldr	r1, [r7, r1]
 801b262:	9109      	str	r1, [sp, #36]	@ 0x24
 801b264:	0e09      	lsrs	r1, r1, #24
 801b266:	9112      	str	r1, [sp, #72]	@ 0x48
 801b268:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b26c:	910f      	str	r1, [sp, #60]	@ 0x3c
 801b26e:	0e09      	lsrs	r1, r1, #24
 801b270:	9116      	str	r1, [sp, #88]	@ 0x58
 801b272:	b292      	uxth	r2, r2
 801b274:	b280      	uxth	r0, r0
 801b276:	fb02 f800 	mul.w	r8, r2, r0
 801b27a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b27e:	0112      	lsls	r2, r2, #4
 801b280:	eba2 0e08 	sub.w	lr, r2, r8
 801b284:	b280      	uxth	r0, r0
 801b286:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b28a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801b28c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b28e:	fa1f fe8e 	uxth.w	lr, lr
 801b292:	1a12      	subs	r2, r2, r0
 801b294:	b292      	uxth	r2, r2
 801b296:	fb0e f101 	mul.w	r1, lr, r1
 801b29a:	fb02 110c 	mla	r1, r2, ip, r1
 801b29e:	fb00 1105 	mla	r1, r0, r5, r1
 801b2a2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b2a4:	fb08 1105 	mla	r1, r8, r5, r1
 801b2a8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b2ac:	2900      	cmp	r1, #0
 801b2ae:	f000 80f5 	beq.w	801b49c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801b2b2:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b2b6:	d019      	beq.n	801b2ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801b2b8:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b2bc:	fb0c fa0a 	mul.w	sl, ip, sl
 801b2c0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b2c4:	fb0c fc03 	mul.w	ip, ip, r3
 801b2c8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b2cc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b2d0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b2d4:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b2d8:	4453      	add	r3, sl
 801b2da:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b2de:	0a1b      	lsrs	r3, r3, #8
 801b2e0:	0a3f      	lsrs	r7, r7, #8
 801b2e2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b2e6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b2ea:	433b      	orrs	r3, r7
 801b2ec:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b2ee:	2dff      	cmp	r5, #255	@ 0xff
 801b2f0:	d020      	beq.n	801b334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801b2f2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b2f4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b2f8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b2fa:	436f      	muls	r7, r5
 801b2fc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b2fe:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b302:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801b304:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b308:	fb05 fa0a 	mul.w	sl, r5, sl
 801b30c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b310:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b314:	44bc      	add	ip, r7
 801b316:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b31a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b31e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b322:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b326:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b32a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b32e:	ea4c 050a 	orr.w	r5, ip, sl
 801b332:	950e      	str	r5, [sp, #56]	@ 0x38
 801b334:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b336:	2dff      	cmp	r5, #255	@ 0xff
 801b338:	d020      	beq.n	801b37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801b33a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b33c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b340:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b342:	436f      	muls	r7, r5
 801b344:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b346:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b34a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b34c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b350:	fb05 fa0a 	mul.w	sl, r5, sl
 801b354:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b358:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b35c:	44bc      	add	ip, r7
 801b35e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b362:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b366:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b36a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b36e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b372:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b376:	ea4c 050a 	orr.w	r5, ip, sl
 801b37a:	9509      	str	r5, [sp, #36]	@ 0x24
 801b37c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b37e:	2dff      	cmp	r5, #255	@ 0xff
 801b380:	d020      	beq.n	801b3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801b382:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b384:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b388:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b38a:	436f      	muls	r7, r5
 801b38c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b38e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b392:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b394:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b398:	fb05 fa0a 	mul.w	sl, r5, sl
 801b39c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b3a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b3a4:	44bc      	add	ip, r7
 801b3a6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b3aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b3ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b3b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b3ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b3be:	ea4c 050a 	orr.w	r5, ip, sl
 801b3c2:	950f      	str	r5, [sp, #60]	@ 0x3c
 801b3c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b3c6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801b3ca:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801b3cc:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b3d0:	fb0e f707 	mul.w	r7, lr, r7
 801b3d4:	fb02 770c 	mla	r7, r2, ip, r7
 801b3d8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b3dc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b3de:	fb00 770c 	mla	r7, r0, ip, r7
 801b3e2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b3e6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b3e8:	fb08 770c 	mla	r7, r8, ip, r7
 801b3ec:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801b3f0:	fb0e fe0c 	mul.w	lr, lr, ip
 801b3f4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b3f8:	fb02 e303 	mla	r3, r2, r3, lr
 801b3fc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b3fe:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b400:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b404:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b406:	fb00 330a 	mla	r3, r0, sl, r3
 801b40a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801b40e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b412:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b414:	f8b9 0000 	ldrh.w	r0, [r9]
 801b418:	4359      	muls	r1, r3
 801b41a:	0a3f      	lsrs	r7, r7, #8
 801b41c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b420:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b424:	1c4b      	adds	r3, r1, #1
 801b426:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b42a:	ea47 070c 	orr.w	r7, r7, ip
 801b42e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b432:	1202      	asrs	r2, r0, #8
 801b434:	0c3b      	lsrs	r3, r7, #16
 801b436:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b43a:	b2c9      	uxtb	r1, r1
 801b43c:	fb13 f305 	smulbb	r3, r3, r5
 801b440:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b444:	fb02 3201 	mla	r2, r2, r1, r3
 801b448:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b44c:	10c3      	asrs	r3, r0, #3
 801b44e:	b2ff      	uxtb	r7, r7
 801b450:	00c0      	lsls	r0, r0, #3
 801b452:	b2c0      	uxtb	r0, r0
 801b454:	fb17 f705 	smulbb	r7, r7, r5
 801b458:	fb00 7001 	mla	r0, r0, r1, r7
 801b45c:	b292      	uxth	r2, r2
 801b45e:	fb1c fc05 	smulbb	ip, ip, r5
 801b462:	b280      	uxth	r0, r0
 801b464:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b468:	fb03 c301 	mla	r3, r3, r1, ip
 801b46c:	1c51      	adds	r1, r2, #1
 801b46e:	f100 0c01 	add.w	ip, r0, #1
 801b472:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b476:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b47a:	b29b      	uxth	r3, r3
 801b47c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b480:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801b484:	ea4c 0202 	orr.w	r2, ip, r2
 801b488:	f103 0c01 	add.w	ip, r3, #1
 801b48c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b490:	095b      	lsrs	r3, r3, #5
 801b492:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b496:	431a      	orrs	r2, r3
 801b498:	f8a9 2000 	strh.w	r2, [r9]
 801b49c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b49e:	441c      	add	r4, r3
 801b4a0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b4a2:	f109 0902 	add.w	r9, r9, #2
 801b4a6:	441e      	add	r6, r3
 801b4a8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b4ac:	e647      	b.n	801b13e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b4ae:	2800      	cmp	r0, #0
 801b4b0:	f43f aedf 	beq.w	801b272 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b4b4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b4b8:	9109      	str	r1, [sp, #36]	@ 0x24
 801b4ba:	0e09      	lsrs	r1, r1, #24
 801b4bc:	9112      	str	r1, [sp, #72]	@ 0x48
 801b4be:	e6d8      	b.n	801b272 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b4c0:	b01d      	add	sp, #116	@ 0x74
 801b4c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b4c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4ca:	b085      	sub	sp, #20
 801b4cc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801b4d0:	9102      	str	r1, [sp, #8]
 801b4d2:	2c00      	cmp	r4, #0
 801b4d4:	fb04 7103 	mla	r1, r4, r3, r7
 801b4d8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801b4dc:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801b4e0:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801b4e4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801b4e8:	f2c0 810c 	blt.w	801b704 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b4ec:	45a6      	cmp	lr, r4
 801b4ee:	f340 8109 	ble.w	801b704 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b4f2:	2f00      	cmp	r7, #0
 801b4f4:	f2c0 8104 	blt.w	801b700 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b4f8:	42bb      	cmp	r3, r7
 801b4fa:	f340 8101 	ble.w	801b700 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b4fe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801b502:	1c7a      	adds	r2, r7, #1
 801b504:	f100 8101 	bmi.w	801b70a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b508:	4293      	cmp	r3, r2
 801b50a:	f340 80fe 	ble.w	801b70a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b50e:	2e00      	cmp	r6, #0
 801b510:	f000 80fd 	beq.w	801b70e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801b514:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b518:	3401      	adds	r4, #1
 801b51a:	f100 80fc 	bmi.w	801b716 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b51e:	45a6      	cmp	lr, r4
 801b520:	f340 80f9 	ble.w	801b716 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b524:	2800      	cmp	r0, #0
 801b526:	f000 80f9 	beq.w	801b71c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801b52a:	2f00      	cmp	r7, #0
 801b52c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801b530:	f2c0 80ef 	blt.w	801b712 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b534:	42bb      	cmp	r3, r7
 801b536:	f340 80ec 	ble.w	801b712 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b53a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b53e:	3701      	adds	r7, #1
 801b540:	f100 80ef 	bmi.w	801b722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b544:	42bb      	cmp	r3, r7
 801b546:	f340 80ec 	ble.w	801b722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b54a:	2e00      	cmp	r6, #0
 801b54c:	f000 80eb 	beq.w	801b726 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801b550:	6852      	ldr	r2, [r2, #4]
 801b552:	b2b6      	uxth	r6, r6
 801b554:	b280      	uxth	r0, r0
 801b556:	fb00 fe06 	mul.w	lr, r0, r6
 801b55a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b55e:	0136      	lsls	r6, r6, #4
 801b560:	eba6 070e 	sub.w	r7, r6, lr
 801b564:	b280      	uxth	r0, r0
 801b566:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b56a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b56e:	b2bf      	uxth	r7, r7
 801b570:	1a1b      	subs	r3, r3, r0
 801b572:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b576:	b29b      	uxth	r3, r3
 801b578:	fb07 f60a 	mul.w	r6, r7, sl
 801b57c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b580:	fb0b 6603 	mla	r6, fp, r3, r6
 801b584:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b588:	fb00 6609 	mla	r6, r0, r9, r6
 801b58c:	fb0e 6608 	mla	r6, lr, r8, r6
 801b590:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b594:	9600      	str	r6, [sp, #0]
 801b596:	2e00      	cmp	r6, #0
 801b598:	f000 80af 	beq.w	801b6fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801b59c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b5a0:	fb0b fc0c 	mul.w	ip, fp, ip
 801b5a4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b5a8:	fb0b f505 	mul.w	r5, fp, r5
 801b5ac:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b5b0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b5b4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b5b8:	44dc      	add	ip, fp
 801b5ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5be:	9501      	str	r5, [sp, #4]
 801b5c0:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b5c4:	9503      	str	r5, [sp, #12]
 801b5c6:	9d01      	ldr	r5, [sp, #4]
 801b5c8:	9e02      	ldr	r6, [sp, #8]
 801b5ca:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b5ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b5d2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b5d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801b5da:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b5de:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b5e2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b5e6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b5ea:	4465      	add	r5, ip
 801b5ec:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b5f0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b5f4:	fb09 fc0c 	mul.w	ip, r9, ip
 801b5f8:	fb09 f904 	mul.w	r9, r9, r4
 801b5fc:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b600:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b604:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b608:	fb08 f404 	mul.w	r4, r8, r4
 801b60c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b610:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b614:	fb08 f802 	mul.w	r8, r8, r2
 801b618:	fb0a fa01 	mul.w	sl, sl, r1
 801b61c:	0a22      	lsrs	r2, r4, #8
 801b61e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b622:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b626:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b62a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b62e:	4414      	add	r4, r2
 801b630:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b634:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b638:	0a2d      	lsrs	r5, r5, #8
 801b63a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b63e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b642:	9a03      	ldr	r2, [sp, #12]
 801b644:	8836      	ldrh	r6, [r6, #0]
 801b646:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b64a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b64e:	437d      	muls	r5, r7
 801b650:	4461      	add	r1, ip
 801b652:	0a24      	lsrs	r4, r4, #8
 801b654:	fb02 5503 	mla	r5, r2, r3, r5
 801b658:	0a09      	lsrs	r1, r1, #8
 801b65a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b65e:	fb04 540e 	mla	r4, r4, lr, r5
 801b662:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b666:	fb01 4100 	mla	r1, r1, r0, r4
 801b66a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b66e:	0a09      	lsrs	r1, r1, #8
 801b670:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b674:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b678:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b67c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b680:	fb07 f70a 	mul.w	r7, r7, sl
 801b684:	fb03 7101 	mla	r1, r3, r1, r7
 801b688:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b68c:	9b00      	ldr	r3, [sp, #0]
 801b68e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b692:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b696:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b69a:	fb00 e101 	mla	r1, r0, r1, lr
 801b69e:	43da      	mvns	r2, r3
 801b6a0:	1233      	asrs	r3, r6, #8
 801b6a2:	b2d2      	uxtb	r2, r2
 801b6a4:	10f0      	asrs	r0, r6, #3
 801b6a6:	0a09      	lsrs	r1, r1, #8
 801b6a8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801b6ac:	00f6      	lsls	r6, r6, #3
 801b6ae:	4353      	muls	r3, r2
 801b6b0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b6b4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801b6b8:	b2f6      	uxtb	r6, r6
 801b6ba:	4321      	orrs	r1, r4
 801b6bc:	4350      	muls	r0, r2
 801b6be:	4356      	muls	r6, r2
 801b6c0:	1c5a      	adds	r2, r3, #1
 801b6c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b6c6:	0c0b      	lsrs	r3, r1, #16
 801b6c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b6cc:	1c42      	adds	r2, r0, #1
 801b6ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b6d2:	0a0a      	lsrs	r2, r1, #8
 801b6d4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b6d8:	021b      	lsls	r3, r3, #8
 801b6da:	00d2      	lsls	r2, r2, #3
 801b6dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b6e0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801b6e4:	4313      	orrs	r3, r2
 801b6e6:	1c72      	adds	r2, r6, #1
 801b6e8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b6ec:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801b6f0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b6f4:	4319      	orrs	r1, r3
 801b6f6:	9b02      	ldr	r3, [sp, #8]
 801b6f8:	8019      	strh	r1, [r3, #0]
 801b6fa:	b005      	add	sp, #20
 801b6fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b700:	2500      	movs	r5, #0
 801b702:	e6fe      	b.n	801b502 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801b704:	2100      	movs	r1, #0
 801b706:	460d      	mov	r5, r1
 801b708:	e706      	b.n	801b518 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b70a:	2100      	movs	r1, #0
 801b70c:	e704      	b.n	801b518 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b70e:	4631      	mov	r1, r6
 801b710:	e702      	b.n	801b518 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b712:	2400      	movs	r4, #0
 801b714:	e713      	b.n	801b53e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801b716:	2200      	movs	r2, #0
 801b718:	4614      	mov	r4, r2
 801b71a:	e71a      	b.n	801b552 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b71c:	4602      	mov	r2, r0
 801b71e:	4604      	mov	r4, r0
 801b720:	e717      	b.n	801b552 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b722:	2200      	movs	r2, #0
 801b724:	e715      	b.n	801b552 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b726:	4632      	mov	r2, r6
 801b728:	e713      	b.n	801b552 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801b72c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b72c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b730:	b09b      	sub	sp, #108	@ 0x6c
 801b732:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801b736:	9218      	str	r2, [sp, #96]	@ 0x60
 801b738:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b73a:	9116      	str	r1, [sp, #88]	@ 0x58
 801b73c:	9307      	str	r3, [sp, #28]
 801b73e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801b742:	9019      	str	r0, [sp, #100]	@ 0x64
 801b744:	6850      	ldr	r0, [r2, #4]
 801b746:	6812      	ldr	r2, [r2, #0]
 801b748:	fb00 1303 	mla	r3, r0, r3, r1
 801b74c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b750:	930a      	str	r3, [sp, #40]	@ 0x28
 801b752:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b754:	681b      	ldr	r3, [r3, #0]
 801b756:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b758:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b75a:	2b00      	cmp	r3, #0
 801b75c:	dc03      	bgt.n	801b766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b75e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b760:	2b00      	cmp	r3, #0
 801b762:	f340 8386 	ble.w	801be72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b766:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b768:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b76c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b770:	1e48      	subs	r0, r1, #1
 801b772:	1e57      	subs	r7, r2, #1
 801b774:	9b07      	ldr	r3, [sp, #28]
 801b776:	2b00      	cmp	r3, #0
 801b778:	f340 8166 	ble.w	801ba48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b77c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b780:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b784:	d406      	bmi.n	801b794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b786:	4584      	cmp	ip, r0
 801b788:	da04      	bge.n	801b794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b78a:	2b00      	cmp	r3, #0
 801b78c:	db02      	blt.n	801b794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b78e:	42bb      	cmp	r3, r7
 801b790:	f2c0 815b 	blt.w	801ba4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801b794:	f11c 0c01 	adds.w	ip, ip, #1
 801b798:	f100 814b 	bmi.w	801ba32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b79c:	4561      	cmp	r1, ip
 801b79e:	f2c0 8148 	blt.w	801ba32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b7a2:	3301      	adds	r3, #1
 801b7a4:	f100 8145 	bmi.w	801ba32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b7a8:	429a      	cmp	r2, r3
 801b7aa:	f2c0 8142 	blt.w	801ba32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b7ae:	9b07      	ldr	r3, [sp, #28]
 801b7b0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b7b2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b7b4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801b7b6:	2b00      	cmp	r3, #0
 801b7b8:	f340 8165 	ble.w	801ba86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7bc:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801b7be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b7c0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b7c4:	689b      	ldr	r3, [r3, #8]
 801b7c6:	1422      	asrs	r2, r4, #16
 801b7c8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b7cc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b7d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b7d4:	f100 81d5 	bmi.w	801bb82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b7d8:	f103 38ff 	add.w	r8, r3, #4294967295
 801b7dc:	4542      	cmp	r2, r8
 801b7de:	f280 81d0 	bge.w	801bb82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b7e2:	f1bc 0f00 	cmp.w	ip, #0
 801b7e6:	f2c0 81cc 	blt.w	801bb82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b7ea:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b7ee:	45c4      	cmp	ip, r8
 801b7f0:	f280 81c7 	bge.w	801bb82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b7f4:	b21b      	sxth	r3, r3
 801b7f6:	fb0c 2203 	mla	r2, ip, r3, r2
 801b7fa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b7fc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b800:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b804:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b808:	2900      	cmp	r1, #0
 801b80a:	f000 8182 	beq.w	801bb12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b80e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b812:	950b      	str	r5, [sp, #44]	@ 0x2c
 801b814:	0e2d      	lsrs	r5, r5, #24
 801b816:	9512      	str	r5, [sp, #72]	@ 0x48
 801b818:	b180      	cbz	r0, 801b83c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b81a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801b81e:	3b01      	subs	r3, #1
 801b820:	009b      	lsls	r3, r3, #2
 801b822:	3304      	adds	r3, #4
 801b824:	eb08 0c03 	add.w	ip, r8, r3
 801b828:	f858 3003 	ldr.w	r3, [r8, r3]
 801b82c:	9308      	str	r3, [sp, #32]
 801b82e:	0e1b      	lsrs	r3, r3, #24
 801b830:	9310      	str	r3, [sp, #64]	@ 0x40
 801b832:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b836:	930c      	str	r3, [sp, #48]	@ 0x30
 801b838:	0e1b      	lsrs	r3, r3, #24
 801b83a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b83c:	b289      	uxth	r1, r1
 801b83e:	b280      	uxth	r0, r0
 801b840:	fb01 f900 	mul.w	r9, r1, r0
 801b844:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b848:	0109      	lsls	r1, r1, #4
 801b84a:	eba1 0809 	sub.w	r8, r1, r9
 801b84e:	b280      	uxth	r0, r0
 801b850:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801b854:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b856:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b858:	fa1f f888 	uxth.w	r8, r8
 801b85c:	1a09      	subs	r1, r1, r0
 801b85e:	b289      	uxth	r1, r1
 801b860:	fb08 f303 	mul.w	r3, r8, r3
 801b864:	fb01 330e 	mla	r3, r1, lr, r3
 801b868:	fb00 3305 	mla	r3, r0, r5, r3
 801b86c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b86e:	fb09 3305 	mla	r3, r9, r5, r3
 801b872:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b876:	2b00      	cmp	r3, #0
 801b878:	f000 80d2 	beq.w	801ba20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b87c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b880:	d01b      	beq.n	801b8ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801b882:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801b886:	fb0e fa0a 	mul.w	sl, lr, sl
 801b88a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b88e:	fb0e fe02 	mul.w	lr, lr, r2
 801b892:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b896:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b89a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b89e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b8a2:	4452      	add	r2, sl
 801b8a4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b8a8:	0a12      	lsrs	r2, r2, #8
 801b8aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b8b2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b8b6:	ea42 020c 	orr.w	r2, r2, ip
 801b8ba:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b8bc:	2dff      	cmp	r5, #255	@ 0xff
 801b8be:	d021      	beq.n	801b904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801b8c0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b8c2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b8c6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b8c8:	fb05 fb0b 	mul.w	fp, r5, fp
 801b8cc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b8ce:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b8d2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b8d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8d8:	fb05 fa0a 	mul.w	sl, r5, sl
 801b8dc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8e0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b8e4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b8e8:	44de      	add	lr, fp
 801b8ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b8ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b8f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b8f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b8fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b8fe:	ea4e 050a 	orr.w	r5, lr, sl
 801b902:	950b      	str	r5, [sp, #44]	@ 0x2c
 801b904:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b906:	2dff      	cmp	r5, #255	@ 0xff
 801b908:	d021      	beq.n	801b94e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b90a:	9d08      	ldr	r5, [sp, #32]
 801b90c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b910:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b912:	fb05 fb0b 	mul.w	fp, r5, fp
 801b916:	9d08      	ldr	r5, [sp, #32]
 801b918:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801b91c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b91e:	fb05 fa0e 	mul.w	sl, r5, lr
 801b922:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b926:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b92a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b92e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b932:	44de      	add	lr, fp
 801b934:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b938:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b93c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b940:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b944:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b948:	ea4e 050a 	orr.w	r5, lr, sl
 801b94c:	9508      	str	r5, [sp, #32]
 801b94e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b950:	2dff      	cmp	r5, #255	@ 0xff
 801b952:	d021      	beq.n	801b998 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801b954:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b956:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801b95a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b95c:	fb05 fb0b 	mul.w	fp, r5, fp
 801b960:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b962:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801b966:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b968:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b96c:	fb05 fa0a 	mul.w	sl, r5, sl
 801b970:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b974:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b978:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b97c:	44de      	add	lr, fp
 801b97e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b982:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b986:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b98a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b98e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b992:	ea4e 050a 	orr.w	r5, lr, sl
 801b996:	950c      	str	r5, [sp, #48]	@ 0x30
 801b998:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b99a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b99e:	9d08      	ldr	r5, [sp, #32]
 801b9a0:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801b9a4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b9a8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b9ac:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b9b0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b9b2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b9b6:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801b9ba:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801b9bc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b9c0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801b9c4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b9c8:	fb08 f80e 	mul.w	r8, r8, lr
 801b9cc:	fb01 8202 	mla	r2, r1, r2, r8
 801b9d0:	9908      	ldr	r1, [sp, #32]
 801b9d2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801b9d6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b9d8:	fb00 220a 	mla	r2, r0, sl, r2
 801b9dc:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801b9e0:	fb09 2900 	mla	r9, r9, r0, r2
 801b9e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b9ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9f0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b9f4:	ea4c 0c09 	orr.w	ip, ip, r9
 801b9f8:	2bff      	cmp	r3, #255	@ 0xff
 801b9fa:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801b9fe:	f040 8091 	bne.w	801bb24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ba02:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ba06:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801ba0a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ba0e:	f022 0207 	bic.w	r2, r2, #7
 801ba12:	431a      	orrs	r2, r3
 801ba14:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ba18:	ea4c 0c02 	orr.w	ip, ip, r2
 801ba1c:	f8a7 c000 	strh.w	ip, [r7]
 801ba20:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ba22:	441c      	add	r4, r3
 801ba24:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba26:	441e      	add	r6, r3
 801ba28:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ba2a:	3b01      	subs	r3, #1
 801ba2c:	3702      	adds	r7, #2
 801ba2e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ba30:	e6c0      	b.n	801b7b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ba32:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ba34:	441c      	add	r4, r3
 801ba36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ba38:	441e      	add	r6, r3
 801ba3a:	9b07      	ldr	r3, [sp, #28]
 801ba3c:	3b01      	subs	r3, #1
 801ba3e:	9307      	str	r3, [sp, #28]
 801ba40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ba42:	3302      	adds	r3, #2
 801ba44:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba46:	e695      	b.n	801b774 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ba48:	d024      	beq.n	801ba94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ba4a:	9b07      	ldr	r3, [sp, #28]
 801ba4c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ba4e:	3b01      	subs	r3, #1
 801ba50:	fb00 4003 	mla	r0, r0, r3, r4
 801ba54:	1400      	asrs	r0, r0, #16
 801ba56:	f53f aeaa 	bmi.w	801b7ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ba5a:	3901      	subs	r1, #1
 801ba5c:	4288      	cmp	r0, r1
 801ba5e:	f6bf aea6 	bge.w	801b7ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ba62:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801ba64:	fb01 6303 	mla	r3, r1, r3, r6
 801ba68:	141b      	asrs	r3, r3, #16
 801ba6a:	f53f aea0 	bmi.w	801b7ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ba6e:	3a01      	subs	r2, #1
 801ba70:	4293      	cmp	r3, r2
 801ba72:	f6bf ae9c 	bge.w	801b7ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ba76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ba7a:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801ba7e:	f1bb 0f00 	cmp.w	fp, #0
 801ba82:	f300 809a 	bgt.w	801bbba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ba86:	9b07      	ldr	r3, [sp, #28]
 801ba88:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ba8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ba8e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ba92:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba94:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ba96:	2b00      	cmp	r3, #0
 801ba98:	f340 81eb 	ble.w	801be72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ba9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801baa0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801baa4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801baa8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801baaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801baae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bab2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bab6:	eef0 6a62 	vmov.f32	s13, s5
 801baba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801babe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bac2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bac6:	ee16 4a90 	vmov	r4, s13
 801baca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bace:	eef0 6a43 	vmov.f32	s13, s6
 801bad2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bad6:	ee12 2a90 	vmov	r2, s5
 801bada:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bade:	fb92 f3f3 	sdiv	r3, r2, r3
 801bae2:	ee13 2a10 	vmov	r2, s6
 801bae6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bae8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801baea:	fb92 f3f3 	sdiv	r3, r2, r3
 801baee:	9328      	str	r3, [sp, #160]	@ 0xa0
 801baf0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801baf2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801baf4:	3b01      	subs	r3, #1
 801baf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bafa:	9316      	str	r3, [sp, #88]	@ 0x58
 801bafc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bafe:	bf08      	it	eq
 801bb00:	4613      	moveq	r3, r2
 801bb02:	ee16 6a90 	vmov	r6, s13
 801bb06:	9307      	str	r3, [sp, #28]
 801bb08:	eeb0 3a67 	vmov.f32	s6, s15
 801bb0c:	eef0 2a47 	vmov.f32	s5, s14
 801bb10:	e622      	b.n	801b758 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801bb12:	2800      	cmp	r0, #0
 801bb14:	f43f ae92 	beq.w	801b83c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bb18:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801bb1c:	9308      	str	r3, [sp, #32]
 801bb1e:	0e1b      	lsrs	r3, r3, #24
 801bb20:	9310      	str	r3, [sp, #64]	@ 0x40
 801bb22:	e68b      	b.n	801b83c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bb24:	8839      	ldrh	r1, [r7, #0]
 801bb26:	4dd4      	ldr	r5, [pc, #848]	@ (801be78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801bb28:	43db      	mvns	r3, r3
 801bb2a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801bb2e:	fa5f f883 	uxtb.w	r8, r3
 801bb32:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801bb36:	fb0e fe08 	mul.w	lr, lr, r8
 801bb3a:	10c8      	asrs	r0, r1, #3
 801bb3c:	00cb      	lsls	r3, r1, #3
 801bb3e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bb42:	f10e 0101 	add.w	r1, lr, #1
 801bb46:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801bb4a:	fb00 f008 	mul.w	r0, r0, r8
 801bb4e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801bb52:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801bb56:	f100 0e01 	add.w	lr, r0, #1
 801bb5a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801bb5e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bb62:	b2db      	uxtb	r3, r3
 801bb64:	b2c9      	uxtb	r1, r1
 801bb66:	00d2      	lsls	r2, r2, #3
 801bb68:	fb03 f308 	mul.w	r3, r3, r8
 801bb6c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801bb70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bb74:	430a      	orrs	r2, r1
 801bb76:	1c59      	adds	r1, r3, #1
 801bb78:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bb7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bb80:	e748      	b.n	801ba14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801bb82:	f112 0801 	adds.w	r8, r2, #1
 801bb86:	f53f af4b 	bmi.w	801ba20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bb8a:	4543      	cmp	r3, r8
 801bb8c:	f6ff af48 	blt.w	801ba20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bb90:	f11c 0801 	adds.w	r8, ip, #1
 801bb94:	f53f af44 	bmi.w	801ba20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bb98:	45c6      	cmp	lr, r8
 801bb9a:	f6ff af41 	blt.w	801ba20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bb9e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801bba2:	fa0f f28e 	sxth.w	r2, lr
 801bba6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801bbaa:	9200      	str	r2, [sp, #0]
 801bbac:	b21b      	sxth	r3, r3
 801bbae:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bbb0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801bbb2:	4639      	mov	r1, r7
 801bbb4:	f7ff fc87 	bl	801b4c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801bbb8:	e732      	b.n	801ba20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bbba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bbbc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801bbbe:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801bbc2:	1421      	asrs	r1, r4, #16
 801bbc4:	1433      	asrs	r3, r6, #16
 801bbc6:	fb07 1303 	mla	r3, r7, r3, r1
 801bbca:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801bbcc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801bbd0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801bbd4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bbd8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bbdc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bbe0:	2a00      	cmp	r2, #0
 801bbe2:	f000 8107 	beq.w	801bdf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801bbe6:	684d      	ldr	r5, [r1, #4]
 801bbe8:	950d      	str	r5, [sp, #52]	@ 0x34
 801bbea:	0e2d      	lsrs	r5, r5, #24
 801bbec:	9514      	str	r5, [sp, #80]	@ 0x50
 801bbee:	b178      	cbz	r0, 801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bbf0:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801bbf4:	3f01      	subs	r7, #1
 801bbf6:	00bf      	lsls	r7, r7, #2
 801bbf8:	3704      	adds	r7, #4
 801bbfa:	eb01 0e07 	add.w	lr, r1, r7
 801bbfe:	59c9      	ldr	r1, [r1, r7]
 801bc00:	9109      	str	r1, [sp, #36]	@ 0x24
 801bc02:	0e09      	lsrs	r1, r1, #24
 801bc04:	9111      	str	r1, [sp, #68]	@ 0x44
 801bc06:	f8de 1004 	ldr.w	r1, [lr, #4]
 801bc0a:	910e      	str	r1, [sp, #56]	@ 0x38
 801bc0c:	0e09      	lsrs	r1, r1, #24
 801bc0e:	9115      	str	r1, [sp, #84]	@ 0x54
 801bc10:	b292      	uxth	r2, r2
 801bc12:	b280      	uxth	r0, r0
 801bc14:	fb02 f900 	mul.w	r9, r2, r0
 801bc18:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bc1c:	0112      	lsls	r2, r2, #4
 801bc1e:	eba2 0e09 	sub.w	lr, r2, r9
 801bc22:	b280      	uxth	r0, r0
 801bc24:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801bc28:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bc2a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bc2c:	fa1f fe8e 	uxth.w	lr, lr
 801bc30:	1a09      	subs	r1, r1, r0
 801bc32:	b289      	uxth	r1, r1
 801bc34:	fb0e f202 	mul.w	r2, lr, r2
 801bc38:	fb01 220c 	mla	r2, r1, ip, r2
 801bc3c:	fb00 2205 	mla	r2, r0, r5, r2
 801bc40:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801bc42:	fb09 2205 	mla	r2, r9, r5, r2
 801bc46:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bc4a:	2a00      	cmp	r2, #0
 801bc4c:	f000 80c9 	beq.w	801bde2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801bc50:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bc54:	d019      	beq.n	801bc8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801bc56:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bc5a:	fb0c fa0a 	mul.w	sl, ip, sl
 801bc5e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bc62:	fb0c fc03 	mul.w	ip, ip, r3
 801bc66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bc6a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bc6e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bc72:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bc76:	4453      	add	r3, sl
 801bc78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bc7c:	0a1b      	lsrs	r3, r3, #8
 801bc7e:	0a3f      	lsrs	r7, r7, #8
 801bc80:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bc84:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bc88:	433b      	orrs	r3, r7
 801bc8a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bc8c:	2dff      	cmp	r5, #255	@ 0xff
 801bc8e:	d020      	beq.n	801bcd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801bc90:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bc92:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801bc96:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bc98:	436f      	muls	r7, r5
 801bc9a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bc9c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801bca0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bca2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bca6:	fb05 fa0a 	mul.w	sl, r5, sl
 801bcaa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bcae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcb2:	44bc      	add	ip, r7
 801bcb4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bcb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bcbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcc4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcc8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bccc:	ea4c 050a 	orr.w	r5, ip, sl
 801bcd0:	950d      	str	r5, [sp, #52]	@ 0x34
 801bcd2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bcd4:	2dff      	cmp	r5, #255	@ 0xff
 801bcd6:	d020      	beq.n	801bd1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801bcd8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801bcda:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801bcde:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bce0:	436f      	muls	r7, r5
 801bce2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801bce4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801bce8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bcea:	fb05 fa0c 	mul.w	sl, r5, ip
 801bcee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcf2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bcf6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bcfa:	44bc      	add	ip, r7
 801bcfc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bd00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd0c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd10:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bd14:	ea4c 050a 	orr.w	r5, ip, sl
 801bd18:	9509      	str	r5, [sp, #36]	@ 0x24
 801bd1a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801bd1c:	2dff      	cmp	r5, #255	@ 0xff
 801bd1e:	d020      	beq.n	801bd62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801bd20:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801bd22:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801bd26:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801bd28:	436f      	muls	r7, r5
 801bd2a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801bd2c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801bd30:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801bd32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd36:	fb05 fa0a 	mul.w	sl, r5, sl
 801bd3a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bd3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd42:	44bc      	add	ip, r7
 801bd44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bd48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bd5c:	ea4c 050a 	orr.w	r5, ip, sl
 801bd60:	950e      	str	r5, [sp, #56]	@ 0x38
 801bd62:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bd64:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801bd68:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801bd6a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801bd6e:	fb0e f707 	mul.w	r7, lr, r7
 801bd72:	fb01 770c 	mla	r7, r1, ip, r7
 801bd76:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bd7a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801bd7c:	fb00 770c 	mla	r7, r0, ip, r7
 801bd80:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bd84:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bd86:	fb09 770c 	mla	r7, r9, ip, r7
 801bd8a:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801bd8e:	fb0e fe0c 	mul.w	lr, lr, ip
 801bd92:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bd96:	fb01 e303 	mla	r3, r1, r3, lr
 801bd9a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bd9c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801bda0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801bda2:	fb00 330a 	mla	r3, r0, sl, r3
 801bda6:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801bdaa:	fb09 3c0c 	mla	ip, r9, ip, r3
 801bdae:	0a3f      	lsrs	r7, r7, #8
 801bdb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bdb4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801bdb8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bdbc:	ea47 070c 	orr.w	r7, r7, ip
 801bdc0:	2aff      	cmp	r2, #255	@ 0xff
 801bdc2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801bdc6:	d11e      	bne.n	801be06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801bdc8:	097a      	lsrs	r2, r7, #5
 801bdca:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801bdce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bdd2:	f023 0307 	bic.w	r3, r3, #7
 801bdd6:	4313      	orrs	r3, r2
 801bdd8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801bddc:	431f      	orrs	r7, r3
 801bdde:	f8a8 7000 	strh.w	r7, [r8]
 801bde2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bde4:	441c      	add	r4, r3
 801bde6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bde8:	f108 0802 	add.w	r8, r8, #2
 801bdec:	441e      	add	r6, r3
 801bdee:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bdf2:	e644      	b.n	801ba7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801bdf4:	2800      	cmp	r0, #0
 801bdf6:	f43f af0b 	beq.w	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bdfa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801bdfe:	9109      	str	r1, [sp, #36]	@ 0x24
 801be00:	0e09      	lsrs	r1, r1, #24
 801be02:	9111      	str	r1, [sp, #68]	@ 0x44
 801be04:	e704      	b.n	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801be06:	f8b8 1000 	ldrh.w	r1, [r8]
 801be0a:	43d2      	mvns	r2, r2
 801be0c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801be10:	fa5f fe82 	uxtb.w	lr, r2
 801be14:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801be18:	fb0c fc0e 	mul.w	ip, ip, lr
 801be1c:	10c8      	asrs	r0, r1, #3
 801be1e:	00ca      	lsls	r2, r1, #3
 801be20:	f10c 0101 	add.w	r1, ip, #1
 801be24:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801be28:	0c39      	lsrs	r1, r7, #16
 801be2a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801be2e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801be32:	4911      	ldr	r1, [pc, #68]	@ (801be78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801be34:	fb00 f00e 	mul.w	r0, r0, lr
 801be38:	fa5f fc8c 	uxtb.w	ip, ip
 801be3c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801be40:	b2d2      	uxtb	r2, r2
 801be42:	1c41      	adds	r1, r0, #1
 801be44:	fb02 f20e 	mul.w	r2, r2, lr
 801be48:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801be4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801be50:	1c51      	adds	r1, r2, #1
 801be52:	00c0      	lsls	r0, r0, #3
 801be54:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801be58:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801be5c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801be60:	ea4c 0c00 	orr.w	ip, ip, r0
 801be64:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801be68:	ea47 0c0c 	orr.w	ip, r7, ip
 801be6c:	f8a8 c000 	strh.w	ip, [r8]
 801be70:	e7b7      	b.n	801bde2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801be72:	b01b      	add	sp, #108	@ 0x6c
 801be74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be78:	fffff800 	.word	0xfffff800

0801be7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801be7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be80:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801be84:	2d00      	cmp	r5, #0
 801be86:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801be8a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801be8e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801be92:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801be96:	fb05 0e03 	mla	lr, r5, r3, r0
 801be9a:	f2c0 808c 	blt.w	801bfb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801be9e:	45a9      	cmp	r9, r5
 801bea0:	f340 8089 	ble.w	801bfb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801bea4:	2800      	cmp	r0, #0
 801bea6:	f2c0 8084 	blt.w	801bfb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801beaa:	4580      	cmp	r8, r0
 801beac:	f340 8081 	ble.w	801bfb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801beb0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801beb4:	f01e 0f01 	tst.w	lr, #1
 801beb8:	5d16      	ldrb	r6, [r2, r4]
 801beba:	bf0c      	ite	eq
 801bebc:	f006 060f 	andeq.w	r6, r6, #15
 801bec0:	1136      	asrne	r6, r6, #4
 801bec2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801bec6:	b2f6      	uxtb	r6, r6
 801bec8:	1c44      	adds	r4, r0, #1
 801beca:	d477      	bmi.n	801bfbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801becc:	45a0      	cmp	r8, r4
 801bece:	dd75      	ble.n	801bfbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801bed0:	2f00      	cmp	r7, #0
 801bed2:	d075      	beq.n	801bfc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801bed4:	f10e 0a01 	add.w	sl, lr, #1
 801bed8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801bedc:	f01a 0f01 	tst.w	sl, #1
 801bee0:	5d14      	ldrb	r4, [r2, r4]
 801bee2:	bf0c      	ite	eq
 801bee4:	f004 040f 	andeq.w	r4, r4, #15
 801bee8:	1124      	asrne	r4, r4, #4
 801beea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801beee:	b2e4      	uxtb	r4, r4
 801bef0:	3501      	adds	r5, #1
 801bef2:	d469      	bmi.n	801bfc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801bef4:	45a9      	cmp	r9, r5
 801bef6:	dd67      	ble.n	801bfc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801bef8:	f1bc 0f00 	cmp.w	ip, #0
 801befc:	d067      	beq.n	801bfce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801befe:	2800      	cmp	r0, #0
 801bf00:	db60      	blt.n	801bfc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801bf02:	4580      	cmp	r8, r0
 801bf04:	dd5e      	ble.n	801bfc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801bf06:	eb03 090e 	add.w	r9, r3, lr
 801bf0a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801bf0e:	f019 0f01 	tst.w	r9, #1
 801bf12:	5d55      	ldrb	r5, [r2, r5]
 801bf14:	bf0c      	ite	eq
 801bf16:	f005 050f 	andeq.w	r5, r5, #15
 801bf1a:	112d      	asrne	r5, r5, #4
 801bf1c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801bf20:	b2ed      	uxtb	r5, r5
 801bf22:	3001      	adds	r0, #1
 801bf24:	d456      	bmi.n	801bfd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801bf26:	4580      	cmp	r8, r0
 801bf28:	dd54      	ble.n	801bfd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801bf2a:	2f00      	cmp	r7, #0
 801bf2c:	d054      	beq.n	801bfd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801bf2e:	3301      	adds	r3, #1
 801bf30:	449e      	add	lr, r3
 801bf32:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801bf36:	f01e 0f01 	tst.w	lr, #1
 801bf3a:	5cd0      	ldrb	r0, [r2, r3]
 801bf3c:	bf0c      	ite	eq
 801bf3e:	f000 000f 	andeq.w	r0, r0, #15
 801bf42:	1100      	asrne	r0, r0, #4
 801bf44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bf48:	b2c3      	uxtb	r3, r0
 801bf4a:	b2ba      	uxth	r2, r7
 801bf4c:	fa1f fc8c 	uxth.w	ip, ip
 801bf50:	fb02 f00c 	mul.w	r0, r2, ip
 801bf54:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801bf58:	0112      	lsls	r2, r2, #4
 801bf5a:	fa1f fc8c 	uxth.w	ip, ip
 801bf5e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801bf62:	1a12      	subs	r2, r2, r0
 801bf64:	eba7 070c 	sub.w	r7, r7, ip
 801bf68:	b292      	uxth	r2, r2
 801bf6a:	b2bf      	uxth	r7, r7
 801bf6c:	4362      	muls	r2, r4
 801bf6e:	fb06 2207 	mla	r2, r6, r7, r2
 801bf72:	fb0c 2505 	mla	r5, ip, r5, r2
 801bf76:	fb00 5303 	mla	r3, r0, r3, r5
 801bf7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bf7e:	b1b3      	cbz	r3, 801bfae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801bf80:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801bf84:	435a      	muls	r2, r3
 801bf86:	1c53      	adds	r3, r2, #1
 801bf88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bf8c:	4a2d      	ldr	r2, [pc, #180]	@ (801c044 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801bf8e:	121b      	asrs	r3, r3, #8
 801bf90:	6812      	ldr	r2, [r2, #0]
 801bf92:	2bff      	cmp	r3, #255	@ 0xff
 801bf94:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bf98:	d120      	bne.n	801bfdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801bf9a:	4b2b      	ldr	r3, [pc, #172]	@ (801c048 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801bf9c:	0950      	lsrs	r0, r2, #5
 801bf9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bfa2:	4033      	ands	r3, r6
 801bfa4:	4318      	orrs	r0, r3
 801bfa6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bfaa:	4302      	orrs	r2, r0
 801bfac:	800a      	strh	r2, [r1, #0]
 801bfae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bfb2:	2600      	movs	r6, #0
 801bfb4:	e788      	b.n	801bec8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801bfb6:	2400      	movs	r4, #0
 801bfb8:	4626      	mov	r6, r4
 801bfba:	e799      	b.n	801bef0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801bfbc:	2400      	movs	r4, #0
 801bfbe:	e797      	b.n	801bef0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801bfc0:	463c      	mov	r4, r7
 801bfc2:	e795      	b.n	801bef0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801bfc4:	2500      	movs	r5, #0
 801bfc6:	e7ac      	b.n	801bf22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801bfc8:	2300      	movs	r3, #0
 801bfca:	461d      	mov	r5, r3
 801bfcc:	e7bd      	b.n	801bf4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bfce:	4663      	mov	r3, ip
 801bfd0:	4665      	mov	r5, ip
 801bfd2:	e7ba      	b.n	801bf4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bfd4:	2300      	movs	r3, #0
 801bfd6:	e7b8      	b.n	801bf4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bfd8:	463b      	mov	r3, r7
 801bfda:	e7b6      	b.n	801bf4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bfdc:	880d      	ldrh	r5, [r1, #0]
 801bfde:	b29f      	uxth	r7, r3
 801bfe0:	122c      	asrs	r4, r5, #8
 801bfe2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801bfe6:	43db      	mvns	r3, r3
 801bfe8:	b2db      	uxtb	r3, r3
 801bfea:	fb10 f007 	smulbb	r0, r0, r7
 801bfee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801bff2:	fb04 0403 	mla	r4, r4, r3, r0
 801bff6:	b2f6      	uxtb	r6, r6
 801bff8:	10e8      	asrs	r0, r5, #3
 801bffa:	b2d2      	uxtb	r2, r2
 801bffc:	00ed      	lsls	r5, r5, #3
 801bffe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c002:	fb12 f207 	smulbb	r2, r2, r7
 801c006:	fb16 f607 	smulbb	r6, r6, r7
 801c00a:	b2ed      	uxtb	r5, r5
 801c00c:	b2a4      	uxth	r4, r4
 801c00e:	fb00 6603 	mla	r6, r0, r3, r6
 801c012:	fb05 2303 	mla	r3, r5, r3, r2
 801c016:	b29a      	uxth	r2, r3
 801c018:	1c63      	adds	r3, r4, #1
 801c01a:	b2b0      	uxth	r0, r6
 801c01c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c020:	1c53      	adds	r3, r2, #1
 801c022:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c026:	1c42      	adds	r2, r0, #1
 801c028:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c02c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c030:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c034:	0940      	lsrs	r0, r0, #5
 801c036:	4323      	orrs	r3, r4
 801c038:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c03c:	4303      	orrs	r3, r0
 801c03e:	800b      	strh	r3, [r1, #0]
 801c040:	e7b5      	b.n	801bfae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c042:	bf00      	nop
 801c044:	20013290 	.word	0x20013290
 801c048:	00fff800 	.word	0x00fff800

0801c04c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c04c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c050:	b097      	sub	sp, #92	@ 0x5c
 801c052:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801c056:	9214      	str	r2, [sp, #80]	@ 0x50
 801c058:	9309      	str	r3, [sp, #36]	@ 0x24
 801c05a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c05c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c060:	910d      	str	r1, [sp, #52]	@ 0x34
 801c062:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c064:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c068:	9015      	str	r0, [sp, #84]	@ 0x54
 801c06a:	6850      	ldr	r0, [r2, #4]
 801c06c:	6812      	ldr	r2, [r2, #0]
 801c06e:	fb00 1303 	mla	r3, r0, r3, r1
 801c072:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c076:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c078:	689b      	ldr	r3, [r3, #8]
 801c07a:	3301      	adds	r3, #1
 801c07c:	f023 0301 	bic.w	r3, r3, #1
 801c080:	930a      	str	r3, [sp, #40]	@ 0x28
 801c082:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c084:	681f      	ldr	r7, [r3, #0]
 801c086:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c088:	2b00      	cmp	r3, #0
 801c08a:	dc03      	bgt.n	801c094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c08c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c08e:	2b00      	cmp	r3, #0
 801c090:	f340 8287 	ble.w	801c5a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c094:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c096:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c09a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c09e:	1e48      	subs	r0, r1, #1
 801c0a0:	f102 3cff 	add.w	ip, r2, #4294967295
 801c0a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c0a6:	2b00      	cmp	r3, #0
 801c0a8:	f340 80c4 	ble.w	801c234 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c0ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c0b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c0b4:	d406      	bmi.n	801c0c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0b6:	4586      	cmp	lr, r0
 801c0b8:	da04      	bge.n	801c0c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0ba:	2b00      	cmp	r3, #0
 801c0bc:	db02      	blt.n	801c0c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0be:	4563      	cmp	r3, ip
 801c0c0:	f2c0 80b9 	blt.w	801c236 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801c0c4:	f11e 0e01 	adds.w	lr, lr, #1
 801c0c8:	f100 80aa 	bmi.w	801c220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c0cc:	4571      	cmp	r1, lr
 801c0ce:	f2c0 80a7 	blt.w	801c220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c0d2:	3301      	adds	r3, #1
 801c0d4:	f100 80a4 	bmi.w	801c220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c0d8:	429a      	cmp	r2, r3
 801c0da:	f2c0 80a1 	blt.w	801c220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c0de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c0e0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801c0e4:	930e      	str	r3, [sp, #56]	@ 0x38
 801c0e6:	46c8      	mov	r8, r9
 801c0e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c0ea:	2b00      	cmp	r3, #0
 801c0ec:	f340 80c3 	ble.w	801c276 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c0f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c0f2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c0f6:	1423      	asrs	r3, r4, #16
 801c0f8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c0fc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c100:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c104:	f100 814d 	bmi.w	801c3a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c108:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c10c:	455b      	cmp	r3, fp
 801c10e:	f280 8148 	bge.w	801c3a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c112:	2800      	cmp	r0, #0
 801c114:	f2c0 8145 	blt.w	801c3a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c118:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c11c:	4558      	cmp	r0, fp
 801c11e:	f280 8140 	bge.w	801c3a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c122:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c124:	fb00 3305 	mla	r3, r0, r5, r3
 801c128:	0858      	lsrs	r0, r3, #1
 801c12a:	07dd      	lsls	r5, r3, #31
 801c12c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c130:	bf54      	ite	pl
 801c132:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c136:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c13a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c13e:	fa5f fc8c 	uxtb.w	ip, ip
 801c142:	2a00      	cmp	r2, #0
 801c144:	f000 80db 	beq.w	801c2fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801c148:	1c58      	adds	r0, r3, #1
 801c14a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c14e:	07c0      	lsls	r0, r0, #31
 801c150:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c154:	bf54      	ite	pl
 801c156:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c15a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c15e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c162:	fa5f f08e 	uxtb.w	r0, lr
 801c166:	9010      	str	r0, [sp, #64]	@ 0x40
 801c168:	b1c9      	cbz	r1, 801c19e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c16a:	4453      	add	r3, sl
 801c16c:	0858      	lsrs	r0, r3, #1
 801c16e:	07dd      	lsls	r5, r3, #31
 801c170:	5c38      	ldrb	r0, [r7, r0]
 801c172:	bf54      	ite	pl
 801c174:	f000 000f 	andpl.w	r0, r0, #15
 801c178:	1100      	asrmi	r0, r0, #4
 801c17a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c17e:	3301      	adds	r3, #1
 801c180:	b2c0      	uxtb	r0, r0
 801c182:	900b      	str	r0, [sp, #44]	@ 0x2c
 801c184:	0858      	lsrs	r0, r3, #1
 801c186:	07dd      	lsls	r5, r3, #31
 801c188:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c18c:	bf54      	ite	pl
 801c18e:	f00e 030f 	andpl.w	r3, lr, #15
 801c192:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c196:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c19a:	b2db      	uxtb	r3, r3
 801c19c:	9311      	str	r3, [sp, #68]	@ 0x44
 801c19e:	b292      	uxth	r2, r2
 801c1a0:	b289      	uxth	r1, r1
 801c1a2:	fb02 f301 	mul.w	r3, r2, r1
 801c1a6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c1aa:	0112      	lsls	r2, r2, #4
 801c1ac:	b289      	uxth	r1, r1
 801c1ae:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801c1b2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c1b4:	1ad2      	subs	r2, r2, r3
 801c1b6:	1a40      	subs	r0, r0, r1
 801c1b8:	b292      	uxth	r2, r2
 801c1ba:	436a      	muls	r2, r5
 801c1bc:	b280      	uxth	r0, r0
 801c1be:	fb0c 2c00 	mla	ip, ip, r0, r2
 801c1c2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c1c4:	fb01 c102 	mla	r1, r1, r2, ip
 801c1c8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c1ca:	fb03 1302 	mla	r3, r3, r2, r1
 801c1ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c1d2:	b1db      	cbz	r3, 801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c1d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c1d6:	4353      	muls	r3, r2
 801c1d8:	1c5a      	adds	r2, r3, #1
 801c1da:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c1de:	4ac6      	ldr	r2, [pc, #792]	@ (801c4f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c1e0:	121b      	asrs	r3, r3, #8
 801c1e2:	6812      	ldr	r2, [r2, #0]
 801c1e4:	2bff      	cmp	r3, #255	@ 0xff
 801c1e6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c1ea:	f040 8099 	bne.w	801c320 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801c1ee:	0953      	lsrs	r3, r2, #5
 801c1f0:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c1f4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c1f8:	f02c 0c07 	bic.w	ip, ip, #7
 801c1fc:	ea43 0c0c 	orr.w	ip, r3, ip
 801c200:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c204:	ea4c 0202 	orr.w	r2, ip, r2
 801c208:	f8a8 2000 	strh.w	r2, [r8]
 801c20c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801c20e:	441c      	add	r4, r3
 801c210:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c212:	441e      	add	r6, r3
 801c214:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c216:	3b01      	subs	r3, #1
 801c218:	f108 0802 	add.w	r8, r8, #2
 801c21c:	930e      	str	r3, [sp, #56]	@ 0x38
 801c21e:	e763      	b.n	801c0e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c220:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801c222:	441c      	add	r4, r3
 801c224:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c226:	441e      	add	r6, r3
 801c228:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c22a:	3b01      	subs	r3, #1
 801c22c:	9309      	str	r3, [sp, #36]	@ 0x24
 801c22e:	f109 0902 	add.w	r9, r9, #2
 801c232:	e737      	b.n	801c0a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c234:	d024      	beq.n	801c280 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c236:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c238:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801c23a:	3b01      	subs	r3, #1
 801c23c:	fb00 4003 	mla	r0, r0, r3, r4
 801c240:	1400      	asrs	r0, r0, #16
 801c242:	f53f af4c 	bmi.w	801c0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c246:	3901      	subs	r1, #1
 801c248:	4288      	cmp	r0, r1
 801c24a:	f6bf af48 	bge.w	801c0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c24e:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801c250:	fb01 6303 	mla	r3, r1, r3, r6
 801c254:	141b      	asrs	r3, r3, #16
 801c256:	f53f af42 	bmi.w	801c0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c25a:	3a01      	subs	r2, #1
 801c25c:	4293      	cmp	r3, r2
 801c25e:	f6bf af3e 	bge.w	801c0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c262:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c266:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c26a:	930e      	str	r3, [sp, #56]	@ 0x38
 801c26c:	46c8      	mov	r8, r9
 801c26e:	f1bb 0f00 	cmp.w	fp, #0
 801c272:	f300 80b7 	bgt.w	801c3e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c278:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c27c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c280:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c282:	2b00      	cmp	r3, #0
 801c284:	f340 818d 	ble.w	801c5a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c288:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c28c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c290:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c294:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c296:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c29a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c29e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2a2:	eef0 6a62 	vmov.f32	s13, s5
 801c2a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2b2:	ee16 4a90 	vmov	r4, s13
 801c2b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2ba:	eef0 6a43 	vmov.f32	s13, s6
 801c2be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2c2:	ee12 2a90 	vmov	r2, s5
 801c2c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2ce:	ee13 2a10 	vmov	r2, s6
 801c2d2:	9323      	str	r3, [sp, #140]	@ 0x8c
 801c2d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2da:	9324      	str	r3, [sp, #144]	@ 0x90
 801c2dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c2de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c2e0:	3b01      	subs	r3, #1
 801c2e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2e6:	930d      	str	r3, [sp, #52]	@ 0x34
 801c2e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c2ea:	bf08      	it	eq
 801c2ec:	4613      	moveq	r3, r2
 801c2ee:	ee16 6a90 	vmov	r6, s13
 801c2f2:	9309      	str	r3, [sp, #36]	@ 0x24
 801c2f4:	eeb0 3a67 	vmov.f32	s6, s15
 801c2f8:	eef0 2a47 	vmov.f32	s5, s14
 801c2fc:	e6c3      	b.n	801c086 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c2fe:	2900      	cmp	r1, #0
 801c300:	f43f af4d 	beq.w	801c19e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c304:	eb0a 0003 	add.w	r0, sl, r3
 801c308:	0843      	lsrs	r3, r0, #1
 801c30a:	07c0      	lsls	r0, r0, #31
 801c30c:	5cfb      	ldrb	r3, [r7, r3]
 801c30e:	bf54      	ite	pl
 801c310:	f003 030f 	andpl.w	r3, r3, #15
 801c314:	111b      	asrmi	r3, r3, #4
 801c316:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c31a:	b2db      	uxtb	r3, r3
 801c31c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c31e:	e73e      	b.n	801c19e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c320:	f8b8 e000 	ldrh.w	lr, [r8]
 801c324:	fa1f fb83 	uxth.w	fp, r3
 801c328:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c32c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c330:	43db      	mvns	r3, r3
 801c332:	b2db      	uxtb	r3, r3
 801c334:	fb11 f10b 	smulbb	r1, r1, fp
 801c338:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c33c:	fb00 1003 	mla	r0, r0, r3, r1
 801c340:	fa5f fc8c 	uxtb.w	ip, ip
 801c344:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c348:	b2d2      	uxtb	r2, r2
 801c34a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c34e:	b280      	uxth	r0, r0
 801c350:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c354:	fb1c fc0b 	smulbb	ip, ip, fp
 801c358:	fa5f fe8e 	uxtb.w	lr, lr
 801c35c:	fb12 fb0b 	smulbb	fp, r2, fp
 801c360:	fb01 cc03 	mla	ip, r1, r3, ip
 801c364:	fb0e bb03 	mla	fp, lr, r3, fp
 801c368:	1c43      	adds	r3, r0, #1
 801c36a:	fa1f fc8c 	uxth.w	ip, ip
 801c36e:	fa1f fb8b 	uxth.w	fp, fp
 801c372:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c376:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801c37a:	f10c 0101 	add.w	r1, ip, #1
 801c37e:	f10b 0001 	add.w	r0, fp, #1
 801c382:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c386:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c38a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c38e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c392:	4318      	orrs	r0, r3
 801c394:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c398:	ea40 000c 	orr.w	r0, r0, ip
 801c39c:	f8a8 0000 	strh.w	r0, [r8]
 801c3a0:	e734      	b.n	801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3a2:	f113 0b01 	adds.w	fp, r3, #1
 801c3a6:	f53f af31 	bmi.w	801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3aa:	45dc      	cmp	ip, fp
 801c3ac:	f6ff af2e 	blt.w	801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3b0:	f110 0b01 	adds.w	fp, r0, #1
 801c3b4:	f53f af2a 	bmi.w	801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3b8:	45de      	cmp	lr, fp
 801c3ba:	f6ff af27 	blt.w	801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3be:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c3c0:	9302      	str	r3, [sp, #8]
 801c3c2:	fa0f f38e 	sxth.w	r3, lr
 801c3c6:	9301      	str	r3, [sp, #4]
 801c3c8:	fa0f f38c 	sxth.w	r3, ip
 801c3cc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c3d0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c3d4:	9300      	str	r3, [sp, #0]
 801c3d6:	463a      	mov	r2, r7
 801c3d8:	4653      	mov	r3, sl
 801c3da:	4641      	mov	r1, r8
 801c3dc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c3de:	f7ff fd4d 	bl	801be7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c3e2:	e713      	b.n	801c20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c3e4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c3e6:	1422      	asrs	r2, r4, #16
 801c3e8:	1433      	asrs	r3, r6, #16
 801c3ea:	fb05 2303 	mla	r3, r5, r3, r2
 801c3ee:	085a      	lsrs	r2, r3, #1
 801c3f0:	07dd      	lsls	r5, r3, #31
 801c3f2:	5cba      	ldrb	r2, [r7, r2]
 801c3f4:	bf54      	ite	pl
 801c3f6:	f002 020f 	andpl.w	r2, r2, #15
 801c3fa:	1112      	asrmi	r2, r2, #4
 801c3fc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c400:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c404:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c408:	b2d2      	uxtb	r2, r2
 801c40a:	2900      	cmp	r1, #0
 801c40c:	d076      	beq.n	801c4fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c40e:	f103 0e01 	add.w	lr, r3, #1
 801c412:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801c416:	f01e 0f01 	tst.w	lr, #1
 801c41a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c41e:	bf0c      	ite	eq
 801c420:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c424:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c428:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c42c:	fa5f f58c 	uxtb.w	r5, ip
 801c430:	9512      	str	r5, [sp, #72]	@ 0x48
 801c432:	b300      	cbz	r0, 801c476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c434:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c436:	442b      	add	r3, r5
 801c438:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c43c:	07dd      	lsls	r5, r3, #31
 801c43e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c442:	bf54      	ite	pl
 801c444:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c448:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c44c:	3301      	adds	r3, #1
 801c44e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c452:	fa5f f58c 	uxtb.w	r5, ip
 801c456:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c45a:	950c      	str	r5, [sp, #48]	@ 0x30
 801c45c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c460:	07dd      	lsls	r5, r3, #31
 801c462:	bf54      	ite	pl
 801c464:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c468:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c46c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c470:	fa5f f38c 	uxtb.w	r3, ip
 801c474:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c476:	b289      	uxth	r1, r1
 801c478:	b280      	uxth	r0, r0
 801c47a:	fb01 f300 	mul.w	r3, r1, r0
 801c47e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c482:	0109      	lsls	r1, r1, #4
 801c484:	b280      	uxth	r0, r0
 801c486:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801c48a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c48c:	1ac9      	subs	r1, r1, r3
 801c48e:	ebac 0c00 	sub.w	ip, ip, r0
 801c492:	b289      	uxth	r1, r1
 801c494:	4369      	muls	r1, r5
 801c496:	fa1f fc8c 	uxth.w	ip, ip
 801c49a:	fb02 120c 	mla	r2, r2, ip, r1
 801c49e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801c4a0:	fb00 2001 	mla	r0, r0, r1, r2
 801c4a4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c4a6:	fb03 0302 	mla	r3, r3, r2, r0
 801c4aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c4ae:	b1d3      	cbz	r3, 801c4e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c4b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c4b2:	4353      	muls	r3, r2
 801c4b4:	1c5a      	adds	r2, r3, #1
 801c4b6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c4ba:	4a0f      	ldr	r2, [pc, #60]	@ (801c4f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c4bc:	121b      	asrs	r3, r3, #8
 801c4be:	6812      	ldr	r2, [r2, #0]
 801c4c0:	2bff      	cmp	r3, #255	@ 0xff
 801c4c2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c4c6:	d12d      	bne.n	801c524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c4c8:	0953      	lsrs	r3, r2, #5
 801c4ca:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c4ce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4d2:	f02c 0c07 	bic.w	ip, ip, #7
 801c4d6:	ea43 0c0c 	orr.w	ip, r3, ip
 801c4da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c4de:	ea4c 0202 	orr.w	r2, ip, r2
 801c4e2:	f8a8 2000 	strh.w	r2, [r8]
 801c4e6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801c4e8:	441c      	add	r4, r3
 801c4ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c4ec:	f108 0802 	add.w	r8, r8, #2
 801c4f0:	441e      	add	r6, r3
 801c4f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c4f6:	e6ba      	b.n	801c26e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c4f8:	20013290 	.word	0x20013290
 801c4fc:	2800      	cmp	r0, #0
 801c4fe:	d0ba      	beq.n	801c476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c500:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c502:	442b      	add	r3, r5
 801c504:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c508:	07db      	lsls	r3, r3, #31
 801c50a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c50e:	bf54      	ite	pl
 801c510:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c514:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c518:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c51c:	fa5f f38c 	uxtb.w	r3, ip
 801c520:	930c      	str	r3, [sp, #48]	@ 0x30
 801c522:	e7a8      	b.n	801c476 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c524:	f8b8 e000 	ldrh.w	lr, [r8]
 801c528:	fa1f fa83 	uxth.w	sl, r3
 801c52c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c530:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c534:	43db      	mvns	r3, r3
 801c536:	b2db      	uxtb	r3, r3
 801c538:	fb11 f10a 	smulbb	r1, r1, sl
 801c53c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c540:	fb00 1003 	mla	r0, r0, r3, r1
 801c544:	b2d2      	uxtb	r2, r2
 801c546:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c54a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c54e:	fa5f fe8e 	uxtb.w	lr, lr
 801c552:	fb12 f20a 	smulbb	r2, r2, sl
 801c556:	fb0e 2203 	mla	r2, lr, r3, r2
 801c55a:	fa5f fc8c 	uxtb.w	ip, ip
 801c55e:	b280      	uxth	r0, r0
 801c560:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c564:	b292      	uxth	r2, r2
 801c566:	fb1c fc0a 	smulbb	ip, ip, sl
 801c56a:	fb01 cc03 	mla	ip, r1, r3, ip
 801c56e:	1c43      	adds	r3, r0, #1
 801c570:	1c51      	adds	r1, r2, #1
 801c572:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c576:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801c57a:	fa1f fc8c 	uxth.w	ip, ip
 801c57e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c582:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801c586:	4308      	orrs	r0, r1
 801c588:	f10c 0101 	add.w	r1, ip, #1
 801c58c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c590:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c594:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c598:	ea40 000c 	orr.w	r0, r0, ip
 801c59c:	f8a8 0000 	strh.w	r0, [r8]
 801c5a0:	e7a1      	b.n	801c4e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c5a2:	b017      	add	sp, #92	@ 0x5c
 801c5a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c5a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c5a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c5ac:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801c5b0:	2d00      	cmp	r5, #0
 801c5b2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c5b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801c5ba:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801c5be:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801c5c2:	fb05 0e03 	mla	lr, r5, r3, r0
 801c5c6:	f2c0 80b0 	blt.w	801c72a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c5ca:	45a9      	cmp	r9, r5
 801c5cc:	f340 80ad 	ble.w	801c72a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c5d0:	2800      	cmp	r0, #0
 801c5d2:	f2c0 80a8 	blt.w	801c726 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c5d6:	4580      	cmp	r8, r0
 801c5d8:	f340 80a5 	ble.w	801c726 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c5dc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c5e0:	f01e 0f01 	tst.w	lr, #1
 801c5e4:	5d16      	ldrb	r6, [r2, r4]
 801c5e6:	bf0c      	ite	eq
 801c5e8:	f006 060f 	andeq.w	r6, r6, #15
 801c5ec:	1136      	asrne	r6, r6, #4
 801c5ee:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c5f2:	b2f6      	uxtb	r6, r6
 801c5f4:	1c44      	adds	r4, r0, #1
 801c5f6:	f100 809b 	bmi.w	801c730 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c5fa:	45a0      	cmp	r8, r4
 801c5fc:	f340 8098 	ble.w	801c730 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c600:	2f00      	cmp	r7, #0
 801c602:	f000 8097 	beq.w	801c734 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801c606:	f10e 0a01 	add.w	sl, lr, #1
 801c60a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c60e:	f01a 0f01 	tst.w	sl, #1
 801c612:	5d14      	ldrb	r4, [r2, r4]
 801c614:	bf0c      	ite	eq
 801c616:	f004 040f 	andeq.w	r4, r4, #15
 801c61a:	1124      	asrne	r4, r4, #4
 801c61c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c620:	b2e4      	uxtb	r4, r4
 801c622:	3501      	adds	r5, #1
 801c624:	f100 808a 	bmi.w	801c73c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c628:	45a9      	cmp	r9, r5
 801c62a:	f340 8087 	ble.w	801c73c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c62e:	f1bc 0f00 	cmp.w	ip, #0
 801c632:	f000 8086 	beq.w	801c742 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801c636:	2800      	cmp	r0, #0
 801c638:	db7e      	blt.n	801c738 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c63a:	4580      	cmp	r8, r0
 801c63c:	dd7c      	ble.n	801c738 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c63e:	eb03 090e 	add.w	r9, r3, lr
 801c642:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c646:	f019 0f01 	tst.w	r9, #1
 801c64a:	5d55      	ldrb	r5, [r2, r5]
 801c64c:	bf0c      	ite	eq
 801c64e:	f005 050f 	andeq.w	r5, r5, #15
 801c652:	112d      	asrne	r5, r5, #4
 801c654:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c658:	b2ed      	uxtb	r5, r5
 801c65a:	3001      	adds	r0, #1
 801c65c:	d474      	bmi.n	801c748 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c65e:	4580      	cmp	r8, r0
 801c660:	dd72      	ble.n	801c748 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c662:	2f00      	cmp	r7, #0
 801c664:	d072      	beq.n	801c74c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c666:	3301      	adds	r3, #1
 801c668:	449e      	add	lr, r3
 801c66a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c66e:	f01e 0f01 	tst.w	lr, #1
 801c672:	5cd0      	ldrb	r0, [r2, r3]
 801c674:	bf0c      	ite	eq
 801c676:	f000 000f 	andeq.w	r0, r0, #15
 801c67a:	1100      	asrne	r0, r0, #4
 801c67c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c680:	b2c3      	uxtb	r3, r0
 801c682:	b2ba      	uxth	r2, r7
 801c684:	fa1f fc8c 	uxth.w	ip, ip
 801c688:	fb02 f00c 	mul.w	r0, r2, ip
 801c68c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c690:	0112      	lsls	r2, r2, #4
 801c692:	fa1f fc8c 	uxth.w	ip, ip
 801c696:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801c69a:	1a12      	subs	r2, r2, r0
 801c69c:	eba7 070c 	sub.w	r7, r7, ip
 801c6a0:	b292      	uxth	r2, r2
 801c6a2:	b2bf      	uxth	r7, r7
 801c6a4:	4362      	muls	r2, r4
 801c6a6:	fb06 2207 	mla	r2, r6, r7, r2
 801c6aa:	fb0c 2505 	mla	r5, ip, r5, r2
 801c6ae:	fb00 5303 	mla	r3, r0, r3, r5
 801c6b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c6b6:	b3a3      	cbz	r3, 801c722 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801c6b8:	4a25      	ldr	r2, [pc, #148]	@ (801c750 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801c6ba:	880e      	ldrh	r6, [r1, #0]
 801c6bc:	6815      	ldr	r5, [r2, #0]
 801c6be:	1234      	asrs	r4, r6, #8
 801c6c0:	b29a      	uxth	r2, r3
 801c6c2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c6c6:	43db      	mvns	r3, r3
 801c6c8:	b2db      	uxtb	r3, r3
 801c6ca:	fb10 f002 	smulbb	r0, r0, r2
 801c6ce:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c6d2:	fb04 0403 	mla	r4, r4, r3, r0
 801c6d6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801c6da:	10f0      	asrs	r0, r6, #3
 801c6dc:	b2ed      	uxtb	r5, r5
 801c6de:	00f6      	lsls	r6, r6, #3
 801c6e0:	fb17 f702 	smulbb	r7, r7, r2
 801c6e4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c6e8:	fb15 f202 	smulbb	r2, r5, r2
 801c6ec:	b2f6      	uxtb	r6, r6
 801c6ee:	b2a4      	uxth	r4, r4
 801c6f0:	fb00 7003 	mla	r0, r0, r3, r7
 801c6f4:	fb06 2303 	mla	r3, r6, r3, r2
 801c6f8:	b29a      	uxth	r2, r3
 801c6fa:	1c63      	adds	r3, r4, #1
 801c6fc:	b280      	uxth	r0, r0
 801c6fe:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c702:	1c53      	adds	r3, r2, #1
 801c704:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c708:	1c42      	adds	r2, r0, #1
 801c70a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c70e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c712:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c716:	0940      	lsrs	r0, r0, #5
 801c718:	4323      	orrs	r3, r4
 801c71a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c71e:	4303      	orrs	r3, r0
 801c720:	800b      	strh	r3, [r1, #0]
 801c722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c726:	2600      	movs	r6, #0
 801c728:	e764      	b.n	801c5f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801c72a:	2400      	movs	r4, #0
 801c72c:	4626      	mov	r6, r4
 801c72e:	e778      	b.n	801c622 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c730:	2400      	movs	r4, #0
 801c732:	e776      	b.n	801c622 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c734:	463c      	mov	r4, r7
 801c736:	e774      	b.n	801c622 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c738:	2500      	movs	r5, #0
 801c73a:	e78e      	b.n	801c65a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801c73c:	2300      	movs	r3, #0
 801c73e:	461d      	mov	r5, r3
 801c740:	e79f      	b.n	801c682 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c742:	4663      	mov	r3, ip
 801c744:	4665      	mov	r5, ip
 801c746:	e79c      	b.n	801c682 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c748:	2300      	movs	r3, #0
 801c74a:	e79a      	b.n	801c682 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c74c:	463b      	mov	r3, r7
 801c74e:	e798      	b.n	801c682 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c750:	20013290 	.word	0x20013290

0801c754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c758:	b093      	sub	sp, #76	@ 0x4c
 801c75a:	461d      	mov	r5, r3
 801c75c:	920c      	str	r2, [sp, #48]	@ 0x30
 801c75e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801c760:	9107      	str	r1, [sp, #28]
 801c762:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801c766:	9011      	str	r0, [sp, #68]	@ 0x44
 801c768:	6850      	ldr	r0, [r2, #4]
 801c76a:	6812      	ldr	r2, [r2, #0]
 801c76c:	fb00 1303 	mla	r3, r0, r3, r1
 801c770:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c774:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c776:	689b      	ldr	r3, [r3, #8]
 801c778:	3301      	adds	r3, #1
 801c77a:	f023 0301 	bic.w	r3, r3, #1
 801c77e:	9306      	str	r3, [sp, #24]
 801c780:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c782:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801c786:	681f      	ldr	r7, [r3, #0]
 801c788:	9b07      	ldr	r3, [sp, #28]
 801c78a:	2b00      	cmp	r3, #0
 801c78c:	dc03      	bgt.n	801c796 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801c78e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c790:	2b00      	cmp	r3, #0
 801c792:	f340 8267 	ble.w	801cc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c796:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c798:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c79c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7a0:	1e48      	subs	r0, r1, #1
 801c7a2:	f102 3cff 	add.w	ip, r2, #4294967295
 801c7a6:	2d00      	cmp	r5, #0
 801c7a8:	f340 80b8 	ble.w	801c91c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c7ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c7b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c7b4:	d406      	bmi.n	801c7c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c7b6:	4586      	cmp	lr, r0
 801c7b8:	da04      	bge.n	801c7c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c7ba:	2b00      	cmp	r3, #0
 801c7bc:	db02      	blt.n	801c7c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c7be:	4563      	cmp	r3, ip
 801c7c0:	f2c0 80ad 	blt.w	801c91e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801c7c4:	f11e 0e01 	adds.w	lr, lr, #1
 801c7c8:	f100 80a0 	bmi.w	801c90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c7cc:	4571      	cmp	r1, lr
 801c7ce:	f2c0 809d 	blt.w	801c90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c7d2:	3301      	adds	r3, #1
 801c7d4:	f100 809a 	bmi.w	801c90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c7d8:	429a      	cmp	r2, r3
 801c7da:	f2c0 8097 	blt.w	801c90c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801c7de:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c7e2:	9509      	str	r5, [sp, #36]	@ 0x24
 801c7e4:	46c8      	mov	r8, r9
 801c7e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c7e8:	2b00      	cmp	r3, #0
 801c7ea:	f340 80b6 	ble.w	801c95a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801c7ee:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c7f2:	9308      	str	r3, [sp, #32]
 801c7f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c7f6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c7fa:	1423      	asrs	r3, r4, #16
 801c7fc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c800:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c804:	f100 813e 	bmi.w	801ca84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c808:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c80c:	455b      	cmp	r3, fp
 801c80e:	f280 8139 	bge.w	801ca84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c812:	2800      	cmp	r0, #0
 801c814:	f2c0 8136 	blt.w	801ca84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c818:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c81c:	4558      	cmp	r0, fp
 801c81e:	f280 8131 	bge.w	801ca84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c822:	9a06      	ldr	r2, [sp, #24]
 801c824:	fb00 3302 	mla	r3, r0, r2, r3
 801c828:	0858      	lsrs	r0, r3, #1
 801c82a:	07da      	lsls	r2, r3, #31
 801c82c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c830:	9a08      	ldr	r2, [sp, #32]
 801c832:	bf54      	ite	pl
 801c834:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c838:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c83c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c840:	fa5f fc8c 	uxtb.w	ip, ip
 801c844:	2a00      	cmp	r2, #0
 801c846:	f000 80cb 	beq.w	801c9e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c84a:	1c58      	adds	r0, r3, #1
 801c84c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c850:	07c0      	lsls	r0, r0, #31
 801c852:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c856:	bf54      	ite	pl
 801c858:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c85c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c860:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c864:	fa5f fe8e 	uxtb.w	lr, lr
 801c868:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801c86c:	b1b9      	cbz	r1, 801c89e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801c86e:	4453      	add	r3, sl
 801c870:	0858      	lsrs	r0, r3, #1
 801c872:	07da      	lsls	r2, r3, #31
 801c874:	5c38      	ldrb	r0, [r7, r0]
 801c876:	bf54      	ite	pl
 801c878:	f000 000f 	andpl.w	r0, r0, #15
 801c87c:	1100      	asrmi	r0, r0, #4
 801c87e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c882:	b2c0      	uxtb	r0, r0
 801c884:	900a      	str	r0, [sp, #40]	@ 0x28
 801c886:	1c58      	adds	r0, r3, #1
 801c888:	0843      	lsrs	r3, r0, #1
 801c88a:	07c2      	lsls	r2, r0, #31
 801c88c:	5cfb      	ldrb	r3, [r7, r3]
 801c88e:	bf54      	ite	pl
 801c890:	f003 030f 	andpl.w	r3, r3, #15
 801c894:	111b      	asrmi	r3, r3, #4
 801c896:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c89a:	b2db      	uxtb	r3, r3
 801c89c:	930e      	str	r3, [sp, #56]	@ 0x38
 801c89e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c8a2:	b289      	uxth	r1, r1
 801c8a4:	fb02 f301 	mul.w	r3, r2, r1
 801c8a8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c8ac:	0112      	lsls	r2, r2, #4
 801c8ae:	b289      	uxth	r1, r1
 801c8b0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801c8b4:	1a40      	subs	r0, r0, r1
 801c8b6:	fa1f fe80 	uxth.w	lr, r0
 801c8ba:	1ad2      	subs	r2, r2, r3
 801c8bc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801c8be:	b292      	uxth	r2, r2
 801c8c0:	4342      	muls	r2, r0
 801c8c2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c8c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c8c8:	fb01 c102 	mla	r1, r1, r2, ip
 801c8cc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c8ce:	fb03 1302 	mla	r3, r3, r2, r1
 801c8d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8d6:	2bff      	cmp	r3, #255	@ 0xff
 801c8d8:	f040 8093 	bne.w	801ca02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801c8dc:	4bbe      	ldr	r3, [pc, #760]	@ (801cbd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c8de:	681a      	ldr	r2, [r3, #0]
 801c8e0:	4bbe      	ldr	r3, [pc, #760]	@ (801cbdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801c8e2:	0951      	lsrs	r1, r2, #5
 801c8e4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c8e8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c8ec:	430b      	orrs	r3, r1
 801c8ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c8f2:	4313      	orrs	r3, r2
 801c8f4:	f8a8 3000 	strh.w	r3, [r8]
 801c8f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c8fa:	441c      	add	r4, r3
 801c8fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c8fe:	441e      	add	r6, r3
 801c900:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c902:	3b01      	subs	r3, #1
 801c904:	f108 0802 	add.w	r8, r8, #2
 801c908:	9309      	str	r3, [sp, #36]	@ 0x24
 801c90a:	e76c      	b.n	801c7e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c90c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c90e:	441c      	add	r4, r3
 801c910:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c912:	3d01      	subs	r5, #1
 801c914:	441e      	add	r6, r3
 801c916:	f109 0902 	add.w	r9, r9, #2
 801c91a:	e744      	b.n	801c7a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c91c:	d021      	beq.n	801c962 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801c91e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c920:	1e6b      	subs	r3, r5, #1
 801c922:	fb00 4003 	mla	r0, r0, r3, r4
 801c926:	1400      	asrs	r0, r0, #16
 801c928:	f53f af59 	bmi.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c92c:	3901      	subs	r1, #1
 801c92e:	4288      	cmp	r0, r1
 801c930:	f6bf af55 	bge.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c934:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801c936:	fb01 6303 	mla	r3, r1, r3, r6
 801c93a:	141b      	asrs	r3, r3, #16
 801c93c:	f53f af4f 	bmi.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c940:	3a01      	subs	r2, #1
 801c942:	4293      	cmp	r3, r2
 801c944:	f6bf af4b 	bge.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c948:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c94c:	9308      	str	r3, [sp, #32]
 801c94e:	46a8      	mov	r8, r5
 801c950:	46ce      	mov	lr, r9
 801c952:	f1b8 0f00 	cmp.w	r8, #0
 801c956:	f300 80b5 	bgt.w	801cac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c95a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c95e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c962:	9b07      	ldr	r3, [sp, #28]
 801c964:	2b00      	cmp	r3, #0
 801c966:	f340 817d 	ble.w	801cc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c96a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c96e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c972:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c976:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c978:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c97c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c980:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c984:	eef0 6a62 	vmov.f32	s13, s5
 801c988:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c98c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c990:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c994:	ee16 4a90 	vmov	r4, s13
 801c998:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c99c:	eef0 6a43 	vmov.f32	s13, s6
 801c9a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9a4:	ee12 2a90 	vmov	r2, s5
 801c9a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9b0:	ee13 2a10 	vmov	r2, s6
 801c9b4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c9b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c9b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9bc:	9320      	str	r3, [sp, #128]	@ 0x80
 801c9be:	9b07      	ldr	r3, [sp, #28]
 801c9c0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c9c2:	3b01      	subs	r3, #1
 801c9c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9c8:	9307      	str	r3, [sp, #28]
 801c9ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c9cc:	ee16 6a90 	vmov	r6, s13
 801c9d0:	bf14      	ite	ne
 801c9d2:	461d      	movne	r5, r3
 801c9d4:	4615      	moveq	r5, r2
 801c9d6:	eeb0 3a67 	vmov.f32	s6, s15
 801c9da:	eef0 2a47 	vmov.f32	s5, s14
 801c9de:	e6d3      	b.n	801c788 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801c9e0:	2900      	cmp	r1, #0
 801c9e2:	f43f af5c 	beq.w	801c89e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801c9e6:	eb0a 0003 	add.w	r0, sl, r3
 801c9ea:	0843      	lsrs	r3, r0, #1
 801c9ec:	07c0      	lsls	r0, r0, #31
 801c9ee:	5cfb      	ldrb	r3, [r7, r3]
 801c9f0:	bf54      	ite	pl
 801c9f2:	f003 030f 	andpl.w	r3, r3, #15
 801c9f6:	111b      	asrmi	r3, r3, #4
 801c9f8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c9fc:	b2db      	uxtb	r3, r3
 801c9fe:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca00:	e74d      	b.n	801c89e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ca02:	2b00      	cmp	r3, #0
 801ca04:	f43f af78 	beq.w	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ca08:	4a73      	ldr	r2, [pc, #460]	@ (801cbd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ca0a:	f8b8 c000 	ldrh.w	ip, [r8]
 801ca0e:	6810      	ldr	r0, [r2, #0]
 801ca10:	fa1f fe83 	uxth.w	lr, r3
 801ca14:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ca18:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ca1c:	43db      	mvns	r3, r3
 801ca1e:	b2db      	uxtb	r3, r3
 801ca20:	fb12 f20e 	smulbb	r2, r2, lr
 801ca24:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ca28:	fb01 2103 	mla	r1, r1, r3, r2
 801ca2c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ca30:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ca34:	b2c0      	uxtb	r0, r0
 801ca36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ca3a:	fb1b fb0e 	smulbb	fp, fp, lr
 801ca3e:	b289      	uxth	r1, r1
 801ca40:	fb10 fe0e 	smulbb	lr, r0, lr
 801ca44:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ca48:	fa5f fc8c 	uxtb.w	ip, ip
 801ca4c:	fb02 b203 	mla	r2, r2, r3, fp
 801ca50:	1c48      	adds	r0, r1, #1
 801ca52:	fb0c e303 	mla	r3, ip, r3, lr
 801ca56:	b292      	uxth	r2, r2
 801ca58:	b29b      	uxth	r3, r3
 801ca5a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801ca5e:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801ca62:	f102 0b01 	add.w	fp, r2, #1
 801ca66:	1c59      	adds	r1, r3, #1
 801ca68:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ca6c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ca70:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ca74:	0952      	lsrs	r2, r2, #5
 801ca76:	4301      	orrs	r1, r0
 801ca78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca7c:	4311      	orrs	r1, r2
 801ca7e:	f8a8 1000 	strh.w	r1, [r8]
 801ca82:	e739      	b.n	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ca84:	f113 0b01 	adds.w	fp, r3, #1
 801ca88:	f53f af36 	bmi.w	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ca8c:	45dc      	cmp	ip, fp
 801ca8e:	f6ff af33 	blt.w	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ca92:	f110 0b01 	adds.w	fp, r0, #1
 801ca96:	f53f af2f 	bmi.w	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ca9a:	45de      	cmp	lr, fp
 801ca9c:	f6ff af2c 	blt.w	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801caa0:	9a08      	ldr	r2, [sp, #32]
 801caa2:	9302      	str	r3, [sp, #8]
 801caa4:	fa0f f38e 	sxth.w	r3, lr
 801caa8:	9301      	str	r3, [sp, #4]
 801caaa:	fa0f f38c 	sxth.w	r3, ip
 801caae:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801cab2:	9105      	str	r1, [sp, #20]
 801cab4:	9300      	str	r3, [sp, #0]
 801cab6:	463a      	mov	r2, r7
 801cab8:	4653      	mov	r3, sl
 801caba:	4641      	mov	r1, r8
 801cabc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801cabe:	f7ff fd73 	bl	801c5a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801cac2:	e719      	b.n	801c8f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cac4:	9906      	ldr	r1, [sp, #24]
 801cac6:	1422      	asrs	r2, r4, #16
 801cac8:	1433      	asrs	r3, r6, #16
 801caca:	fb01 2303 	mla	r3, r1, r3, r2
 801cace:	085a      	lsrs	r2, r3, #1
 801cad0:	07d9      	lsls	r1, r3, #31
 801cad2:	5cba      	ldrb	r2, [r7, r2]
 801cad4:	bf54      	ite	pl
 801cad6:	f002 020f 	andpl.w	r2, r2, #15
 801cada:	1112      	asrmi	r2, r2, #4
 801cadc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cae0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801cae4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801cae8:	b2d2      	uxtb	r2, r2
 801caea:	2800      	cmp	r0, #0
 801caec:	d062      	beq.n	801cbb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801caee:	f103 0a01 	add.w	sl, r3, #1
 801caf2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801caf6:	f01a 0f01 	tst.w	sl, #1
 801cafa:	5c79      	ldrb	r1, [r7, r1]
 801cafc:	bf0c      	ite	eq
 801cafe:	f001 010f 	andeq.w	r1, r1, #15
 801cb02:	1109      	asrne	r1, r1, #4
 801cb04:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cb08:	b2c9      	uxtb	r1, r1
 801cb0a:	910f      	str	r1, [sp, #60]	@ 0x3c
 801cb0c:	f1bc 0f00 	cmp.w	ip, #0
 801cb10:	d019      	beq.n	801cb46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cb12:	9908      	ldr	r1, [sp, #32]
 801cb14:	440b      	add	r3, r1
 801cb16:	0859      	lsrs	r1, r3, #1
 801cb18:	f013 0f01 	tst.w	r3, #1
 801cb1c:	5c79      	ldrb	r1, [r7, r1]
 801cb1e:	bf0c      	ite	eq
 801cb20:	f001 010f 	andeq.w	r1, r1, #15
 801cb24:	1109      	asrne	r1, r1, #4
 801cb26:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cb2a:	b2c9      	uxtb	r1, r1
 801cb2c:	3301      	adds	r3, #1
 801cb2e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801cb30:	0859      	lsrs	r1, r3, #1
 801cb32:	07db      	lsls	r3, r3, #31
 801cb34:	5c79      	ldrb	r1, [r7, r1]
 801cb36:	bf54      	ite	pl
 801cb38:	f001 010f 	andpl.w	r1, r1, #15
 801cb3c:	1109      	asrmi	r1, r1, #4
 801cb3e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cb42:	b2c9      	uxtb	r1, r1
 801cb44:	9110      	str	r1, [sp, #64]	@ 0x40
 801cb46:	b280      	uxth	r0, r0
 801cb48:	fa1f fc8c 	uxth.w	ip, ip
 801cb4c:	fb00 f30c 	mul.w	r3, r0, ip
 801cb50:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801cb54:	0100      	lsls	r0, r0, #4
 801cb56:	fa1f fc8c 	uxth.w	ip, ip
 801cb5a:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801cb5e:	eba1 010c 	sub.w	r1, r1, ip
 801cb62:	fa1f fa81 	uxth.w	sl, r1
 801cb66:	1ac0      	subs	r0, r0, r3
 801cb68:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801cb6a:	b280      	uxth	r0, r0
 801cb6c:	4348      	muls	r0, r1
 801cb6e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801cb70:	fb02 020a 	mla	r2, r2, sl, r0
 801cb74:	fb0c 2c01 	mla	ip, ip, r1, r2
 801cb78:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801cb7a:	fb03 c302 	mla	r3, r3, r2, ip
 801cb7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cb82:	2bff      	cmp	r3, #255	@ 0xff
 801cb84:	d12c      	bne.n	801cbe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801cb86:	4b14      	ldr	r3, [pc, #80]	@ (801cbd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cb88:	681a      	ldr	r2, [r3, #0]
 801cb8a:	4b14      	ldr	r3, [pc, #80]	@ (801cbdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801cb8c:	0951      	lsrs	r1, r2, #5
 801cb8e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801cb92:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cb96:	430b      	orrs	r3, r1
 801cb98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb9c:	4313      	orrs	r3, r2
 801cb9e:	f8ae 3000 	strh.w	r3, [lr]
 801cba2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cba4:	441c      	add	r4, r3
 801cba6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cba8:	f10e 0e02 	add.w	lr, lr, #2
 801cbac:	441e      	add	r6, r3
 801cbae:	f108 38ff 	add.w	r8, r8, #4294967295
 801cbb2:	e6ce      	b.n	801c952 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801cbb4:	f1bc 0f00 	cmp.w	ip, #0
 801cbb8:	d0c5      	beq.n	801cb46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cbba:	9908      	ldr	r1, [sp, #32]
 801cbbc:	440b      	add	r3, r1
 801cbbe:	0859      	lsrs	r1, r3, #1
 801cbc0:	07db      	lsls	r3, r3, #31
 801cbc2:	5c79      	ldrb	r1, [r7, r1]
 801cbc4:	bf54      	ite	pl
 801cbc6:	f001 010f 	andpl.w	r1, r1, #15
 801cbca:	1109      	asrmi	r1, r1, #4
 801cbcc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cbd0:	b2c9      	uxtb	r1, r1
 801cbd2:	910b      	str	r1, [sp, #44]	@ 0x2c
 801cbd4:	e7b7      	b.n	801cb46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cbd6:	bf00      	nop
 801cbd8:	20013290 	.word	0x20013290
 801cbdc:	fffff800 	.word	0xfffff800
 801cbe0:	2b00      	cmp	r3, #0
 801cbe2:	d0de      	beq.n	801cba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cbe4:	4a21      	ldr	r2, [pc, #132]	@ (801cc6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801cbe6:	f8be c000 	ldrh.w	ip, [lr]
 801cbea:	6810      	ldr	r0, [r2, #0]
 801cbec:	fa1f fa83 	uxth.w	sl, r3
 801cbf0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801cbf4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801cbf8:	43db      	mvns	r3, r3
 801cbfa:	b2db      	uxtb	r3, r3
 801cbfc:	fb12 f20a 	smulbb	r2, r2, sl
 801cc00:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cc04:	fb01 2103 	mla	r1, r1, r3, r2
 801cc08:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801cc0c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cc10:	b2c0      	uxtb	r0, r0
 801cc12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cc16:	fa5f fc8c 	uxtb.w	ip, ip
 801cc1a:	fb10 f00a 	smulbb	r0, r0, sl
 801cc1e:	fb0c 0003 	mla	r0, ip, r3, r0
 801cc22:	b289      	uxth	r1, r1
 801cc24:	fb1b fb0a 	smulbb	fp, fp, sl
 801cc28:	b280      	uxth	r0, r0
 801cc2a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801cc2e:	fb02 b203 	mla	r2, r2, r3, fp
 801cc32:	1c4b      	adds	r3, r1, #1
 801cc34:	f100 0b01 	add.w	fp, r0, #1
 801cc38:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801cc3c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801cc40:	b292      	uxth	r2, r2
 801cc42:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801cc46:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801cc4a:	ea4b 0101 	orr.w	r1, fp, r1
 801cc4e:	f102 0b01 	add.w	fp, r2, #1
 801cc52:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801cc56:	0952      	lsrs	r2, r2, #5
 801cc58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc5c:	4311      	orrs	r1, r2
 801cc5e:	f8ae 1000 	strh.w	r1, [lr]
 801cc62:	e79e      	b.n	801cba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cc64:	b013      	add	sp, #76	@ 0x4c
 801cc66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc6a:	bf00      	nop
 801cc6c:	20013290 	.word	0x20013290

0801cc70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801cc70:	b570      	push	{r4, r5, r6, lr}
 801cc72:	1208      	asrs	r0, r1, #8
 801cc74:	b29e      	uxth	r6, r3
 801cc76:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801cc7a:	1213      	asrs	r3, r2, #8
 801cc7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cc80:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cc84:	fb13 f305 	smulbb	r3, r3, r5
 801cc88:	fb10 f006 	smulbb	r0, r0, r6
 801cc8c:	4418      	add	r0, r3
 801cc8e:	10cc      	asrs	r4, r1, #3
 801cc90:	10d3      	asrs	r3, r2, #3
 801cc92:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801cc96:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cc9a:	fb13 f305 	smulbb	r3, r3, r5
 801cc9e:	fb14 f406 	smulbb	r4, r4, r6
 801cca2:	00c9      	lsls	r1, r1, #3
 801cca4:	00d2      	lsls	r2, r2, #3
 801cca6:	441c      	add	r4, r3
 801cca8:	b2d2      	uxtb	r2, r2
 801ccaa:	b2cb      	uxtb	r3, r1
 801ccac:	fb12 f205 	smulbb	r2, r2, r5
 801ccb0:	b280      	uxth	r0, r0
 801ccb2:	fb13 f306 	smulbb	r3, r3, r6
 801ccb6:	4413      	add	r3, r2
 801ccb8:	1c42      	adds	r2, r0, #1
 801ccba:	b29b      	uxth	r3, r3
 801ccbc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ccc0:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801ccc4:	1c58      	adds	r0, r3, #1
 801ccc6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ccca:	b2a4      	uxth	r4, r4
 801cccc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ccd0:	4310      	orrs	r0, r2
 801ccd2:	1c62      	adds	r2, r4, #1
 801ccd4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ccd8:	0964      	lsrs	r4, r4, #5
 801ccda:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ccde:	4320      	orrs	r0, r4
 801cce0:	bd70      	pop	{r4, r5, r6, pc}
	...

0801cce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cce8:	b08f      	sub	sp, #60	@ 0x3c
 801ccea:	461c      	mov	r4, r3
 801ccec:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801ccf0:	9004      	str	r0, [sp, #16]
 801ccf2:	460d      	mov	r5, r1
 801ccf4:	4616      	mov	r6, r2
 801ccf6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ccf8:	2f00      	cmp	r7, #0
 801ccfa:	f000 80f6 	beq.w	801ceea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801ccfe:	6820      	ldr	r0, [r4, #0]
 801cd00:	6861      	ldr	r1, [r4, #4]
 801cd02:	aa0a      	add	r2, sp, #40	@ 0x28
 801cd04:	c203      	stmia	r2!, {r0, r1}
 801cd06:	6818      	ldr	r0, [r3, #0]
 801cd08:	6859      	ldr	r1, [r3, #4]
 801cd0a:	aa0c      	add	r2, sp, #48	@ 0x30
 801cd0c:	c203      	stmia	r2!, {r0, r1}
 801cd0e:	a80a      	add	r0, sp, #40	@ 0x28
 801cd10:	f7ef fe0a 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd14:	4621      	mov	r1, r4
 801cd16:	a80c      	add	r0, sp, #48	@ 0x30
 801cd18:	f7ef fe2e 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd1c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801cd20:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801cd24:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801cd28:	f002 0301 	and.w	r3, r2, #1
 801cd2c:	9306      	str	r3, [sp, #24]
 801cd2e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801cd32:	f003 0101 	and.w	r1, r3, #1
 801cd36:	9105      	str	r1, [sp, #20]
 801cd38:	9805      	ldr	r0, [sp, #20]
 801cd3a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801cd3e:	4403      	add	r3, r0
 801cd40:	fb01 2303 	mla	r3, r1, r3, r2
 801cd44:	f04f 0802 	mov.w	r8, #2
 801cd48:	fb93 f3f8 	sdiv	r3, r3, r8
 801cd4c:	441d      	add	r5, r3
 801cd4e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801cd52:	441a      	add	r2, r3
 801cd54:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801cd58:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801cd5c:	4419      	add	r1, r3
 801cd5e:	4b64      	ldr	r3, [pc, #400]	@ (801cef0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801cd60:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801cd64:	6818      	ldr	r0, [r3, #0]
 801cd66:	6803      	ldr	r3, [r0, #0]
 801cd68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cd6a:	4798      	blx	r3
 801cd6c:	4a61      	ldr	r2, [pc, #388]	@ (801cef4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801cd6e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801cd72:	8813      	ldrh	r3, [r2, #0]
 801cd74:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801cd78:	2fff      	cmp	r7, #255	@ 0xff
 801cd7a:	fb03 a404 	mla	r4, r3, r4, sl
 801cd7e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cd82:	f106 0604 	add.w	r6, r6, #4
 801cd86:	4611      	mov	r1, r2
 801cd88:	fb03 fb0b 	mul.w	fp, r3, fp
 801cd8c:	d06b      	beq.n	801ce66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801cd8e:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801cd92:	9303      	str	r3, [sp, #12]
 801cd94:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801cd98:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801cd9c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801cda0:	9b07      	ldr	r3, [sp, #28]
 801cda2:	42a3      	cmp	r3, r4
 801cda4:	f240 809c 	bls.w	801cee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801cda8:	9b06      	ldr	r3, [sp, #24]
 801cdaa:	2b00      	cmp	r3, #0
 801cdac:	d039      	beq.n	801ce22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801cdae:	782b      	ldrb	r3, [r5, #0]
 801cdb0:	8822      	ldrh	r2, [r4, #0]
 801cdb2:	9804      	ldr	r0, [sp, #16]
 801cdb4:	f003 030f 	and.w	r3, r3, #15
 801cdb8:	f105 0801 	add.w	r8, r5, #1
 801cdbc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801cdc0:	9b03      	ldr	r3, [sp, #12]
 801cdc2:	9300      	str	r3, [sp, #0]
 801cdc4:	463b      	mov	r3, r7
 801cdc6:	f7ff ff53 	bl	801cc70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801cdca:	f824 0b02 	strh.w	r0, [r4], #2
 801cdce:	f109 3bff 	add.w	fp, r9, #4294967295
 801cdd2:	f1bb 0f01 	cmp.w	fp, #1
 801cdd6:	46a2      	mov	sl, r4
 801cdd8:	f104 0404 	add.w	r4, r4, #4
 801cddc:	dd24      	ble.n	801ce28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801cdde:	f898 3000 	ldrb.w	r3, [r8]
 801cde2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801cde6:	9804      	ldr	r0, [sp, #16]
 801cde8:	091b      	lsrs	r3, r3, #4
 801cdea:	f1ab 0b02 	sub.w	fp, fp, #2
 801cdee:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801cdf2:	9b03      	ldr	r3, [sp, #12]
 801cdf4:	9300      	str	r3, [sp, #0]
 801cdf6:	463b      	mov	r3, r7
 801cdf8:	f7ff ff3a 	bl	801cc70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801cdfc:	f824 0c04 	strh.w	r0, [r4, #-4]
 801ce00:	f818 3b01 	ldrb.w	r3, [r8], #1
 801ce04:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801ce08:	9804      	ldr	r0, [sp, #16]
 801ce0a:	f003 030f 	and.w	r3, r3, #15
 801ce0e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ce12:	9b03      	ldr	r3, [sp, #12]
 801ce14:	9300      	str	r3, [sp, #0]
 801ce16:	463b      	mov	r3, r7
 801ce18:	f7ff ff2a 	bl	801cc70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ce1c:	f824 0c02 	strh.w	r0, [r4, #-2]
 801ce20:	e7d7      	b.n	801cdd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801ce22:	46a8      	mov	r8, r5
 801ce24:	46cb      	mov	fp, r9
 801ce26:	e7d4      	b.n	801cdd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801ce28:	d10e      	bne.n	801ce48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801ce2a:	f898 3000 	ldrb.w	r3, [r8]
 801ce2e:	f8ba 2000 	ldrh.w	r2, [sl]
 801ce32:	9804      	ldr	r0, [sp, #16]
 801ce34:	091b      	lsrs	r3, r3, #4
 801ce36:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ce3a:	9b03      	ldr	r3, [sp, #12]
 801ce3c:	9300      	str	r3, [sp, #0]
 801ce3e:	463b      	mov	r3, r7
 801ce40:	f7ff ff16 	bl	801cc70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ce44:	f82a 0b02 	strh.w	r0, [sl], #2
 801ce48:	9b08      	ldr	r3, [sp, #32]
 801ce4a:	9a05      	ldr	r2, [sp, #20]
 801ce4c:	881c      	ldrh	r4, [r3, #0]
 801ce4e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ce52:	eba4 0409 	sub.w	r4, r4, r9
 801ce56:	4413      	add	r3, r2
 801ce58:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801ce5c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ce5e:	fb93 f3f2 	sdiv	r3, r3, r2
 801ce62:	441d      	add	r5, r3
 801ce64:	e79c      	b.n	801cda0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801ce66:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801ce6a:	45a3      	cmp	fp, r4
 801ce6c:	d938      	bls.n	801cee0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801ce6e:	9b06      	ldr	r3, [sp, #24]
 801ce70:	b1f3      	cbz	r3, 801ceb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801ce72:	782b      	ldrb	r3, [r5, #0]
 801ce74:	f003 030f 	and.w	r3, r3, #15
 801ce78:	1c6a      	adds	r2, r5, #1
 801ce7a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ce7e:	8023      	strh	r3, [r4, #0]
 801ce80:	f109 30ff 	add.w	r0, r9, #4294967295
 801ce84:	3402      	adds	r4, #2
 801ce86:	2801      	cmp	r0, #1
 801ce88:	4623      	mov	r3, r4
 801ce8a:	f104 0404 	add.w	r4, r4, #4
 801ce8e:	dd12      	ble.n	801ceb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ce90:	7813      	ldrb	r3, [r2, #0]
 801ce92:	091b      	lsrs	r3, r3, #4
 801ce94:	3802      	subs	r0, #2
 801ce96:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ce9a:	f824 3c04 	strh.w	r3, [r4, #-4]
 801ce9e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801cea2:	f003 030f 	and.w	r3, r3, #15
 801cea6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ceaa:	f824 3c02 	strh.w	r3, [r4, #-2]
 801ceae:	e7ea      	b.n	801ce86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801ceb0:	462a      	mov	r2, r5
 801ceb2:	4648      	mov	r0, r9
 801ceb4:	e7e7      	b.n	801ce86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801ceb6:	d106      	bne.n	801cec6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801ceb8:	7812      	ldrb	r2, [r2, #0]
 801ceba:	0912      	lsrs	r2, r2, #4
 801cebc:	3302      	adds	r3, #2
 801cebe:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801cec2:	f823 2c02 	strh.w	r2, [r3, #-2]
 801cec6:	880c      	ldrh	r4, [r1, #0]
 801cec8:	9a05      	ldr	r2, [sp, #20]
 801ceca:	eba4 0409 	sub.w	r4, r4, r9
 801cece:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801ced2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ced6:	4413      	add	r3, r2
 801ced8:	fb93 f3f8 	sdiv	r3, r3, r8
 801cedc:	441d      	add	r5, r3
 801cede:	e7c4      	b.n	801ce6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801cee0:	4b03      	ldr	r3, [pc, #12]	@ (801cef0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801cee2:	6818      	ldr	r0, [r3, #0]
 801cee4:	6803      	ldr	r3, [r0, #0]
 801cee6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cee8:	4798      	blx	r3
 801ceea:	b00f      	add	sp, #60	@ 0x3c
 801ceec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cef0:	20013288 	.word	0x20013288
 801cef4:	20013282 	.word	0x20013282

0801cef8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801cef8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cefa:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801cefe:	2dff      	cmp	r5, #255	@ 0xff
 801cf00:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801cf04:	d10c      	bne.n	801cf20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801cf06:	2bff      	cmp	r3, #255	@ 0xff
 801cf08:	d10a      	bne.n	801cf20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801cf0a:	4b25      	ldr	r3, [pc, #148]	@ (801cfa0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801cf0c:	0948      	lsrs	r0, r1, #5
 801cf0e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cf12:	403b      	ands	r3, r7
 801cf14:	4318      	orrs	r0, r3
 801cf16:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cf1a:	4308      	orrs	r0, r1
 801cf1c:	b280      	uxth	r0, r0
 801cf1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cf20:	fb15 f503 	smulbb	r5, r5, r3
 801cf24:	b2ab      	uxth	r3, r5
 801cf26:	1c5d      	adds	r5, r3, #1
 801cf28:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801cf2c:	1214      	asrs	r4, r2, #8
 801cf2e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801cf32:	fa1f fc85 	uxth.w	ip, r5
 801cf36:	10d6      	asrs	r6, r2, #3
 801cf38:	00d0      	lsls	r0, r2, #3
 801cf3a:	43ed      	mvns	r5, r5
 801cf3c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801cf40:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801cf44:	b2eb      	uxtb	r3, r5
 801cf46:	b2c0      	uxtb	r0, r0
 801cf48:	fb12 f20c 	smulbb	r2, r2, ip
 801cf4c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cf50:	fb04 2403 	mla	r4, r4, r3, r2
 801cf54:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801cf58:	b2c8      	uxtb	r0, r1
 801cf5a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801cf5e:	b2fd      	uxtb	r5, r7
 801cf60:	fb10 f00c 	smulbb	r0, r0, ip
 801cf64:	b2a4      	uxth	r4, r4
 801cf66:	fb02 0003 	mla	r0, r2, r3, r0
 801cf6a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cf6e:	fb15 f50c 	smulbb	r5, r5, ip
 801cf72:	fb06 5503 	mla	r5, r6, r3, r5
 801cf76:	b283      	uxth	r3, r0
 801cf78:	1c60      	adds	r0, r4, #1
 801cf7a:	b2ad      	uxth	r5, r5
 801cf7c:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801cf80:	1c58      	adds	r0, r3, #1
 801cf82:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801cf86:	1c6b      	adds	r3, r5, #1
 801cf88:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cf8c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801cf90:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801cf94:	096d      	lsrs	r5, r5, #5
 801cf96:	4320      	orrs	r0, r4
 801cf98:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cf9c:	4328      	orrs	r0, r5
 801cf9e:	e7be      	b.n	801cf1e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801cfa0:	00fff800 	.word	0x00fff800

0801cfa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cfa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfa8:	461c      	mov	r4, r3
 801cfaa:	b08d      	sub	sp, #52	@ 0x34
 801cfac:	460d      	mov	r5, r1
 801cfae:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cfb0:	6861      	ldr	r1, [r4, #4]
 801cfb2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801cfb6:	4680      	mov	r8, r0
 801cfb8:	6820      	ldr	r0, [r4, #0]
 801cfba:	4616      	mov	r6, r2
 801cfbc:	aa08      	add	r2, sp, #32
 801cfbe:	c203      	stmia	r2!, {r0, r1}
 801cfc0:	6818      	ldr	r0, [r3, #0]
 801cfc2:	6859      	ldr	r1, [r3, #4]
 801cfc4:	aa0a      	add	r2, sp, #40	@ 0x28
 801cfc6:	c203      	stmia	r2!, {r0, r1}
 801cfc8:	a808      	add	r0, sp, #32
 801cfca:	f7ef fcad 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfce:	4621      	mov	r1, r4
 801cfd0:	a80a      	add	r0, sp, #40	@ 0x28
 801cfd2:	f7ef fcd1 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfd6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801cfda:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801cfde:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801cfe2:	f002 0301 	and.w	r3, r2, #1
 801cfe6:	9303      	str	r3, [sp, #12]
 801cfe8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801cfec:	f003 0101 	and.w	r1, r3, #1
 801cff0:	9102      	str	r1, [sp, #8]
 801cff2:	9802      	ldr	r0, [sp, #8]
 801cff4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801cff8:	4403      	add	r3, r0
 801cffa:	fb01 2303 	mla	r3, r1, r3, r2
 801cffe:	f04f 0a02 	mov.w	sl, #2
 801d002:	fb93 f3fa 	sdiv	r3, r3, sl
 801d006:	441d      	add	r5, r3
 801d008:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801d00c:	441a      	add	r2, r3
 801d00e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801d012:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801d016:	4a3f      	ldr	r2, [pc, #252]	@ (801d114 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801d018:	9205      	str	r2, [sp, #20]
 801d01a:	4419      	add	r1, r3
 801d01c:	6810      	ldr	r0, [r2, #0]
 801d01e:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801d022:	6803      	ldr	r3, [r0, #0]
 801d024:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d026:	4798      	blx	r3
 801d028:	4b3b      	ldr	r3, [pc, #236]	@ (801d118 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801d02a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801d02e:	8819      	ldrh	r1, [r3, #0]
 801d030:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801d034:	fb01 c404 	mla	r4, r1, r4, ip
 801d038:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d03c:	434f      	muls	r7, r1
 801d03e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801d042:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801d046:	3604      	adds	r6, #4
 801d048:	9204      	str	r2, [sp, #16]
 801d04a:	9b04      	ldr	r3, [sp, #16]
 801d04c:	429c      	cmp	r4, r3
 801d04e:	d258      	bcs.n	801d102 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801d050:	9b03      	ldr	r3, [sp, #12]
 801d052:	2b00      	cmp	r3, #0
 801d054:	d034      	beq.n	801d0c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801d056:	782b      	ldrb	r3, [r5, #0]
 801d058:	f003 030f 	and.w	r3, r3, #15
 801d05c:	1c6f      	adds	r7, r5, #1
 801d05e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d062:	0e0b      	lsrs	r3, r1, #24
 801d064:	d006      	beq.n	801d074 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801d066:	8822      	ldrh	r2, [r4, #0]
 801d068:	9300      	str	r3, [sp, #0]
 801d06a:	4640      	mov	r0, r8
 801d06c:	464b      	mov	r3, r9
 801d06e:	f7ff ff43 	bl	801cef8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d072:	8020      	strh	r0, [r4, #0]
 801d074:	3402      	adds	r4, #2
 801d076:	f10b 3aff 	add.w	sl, fp, #4294967295
 801d07a:	f1ba 0f01 	cmp.w	sl, #1
 801d07e:	dd22      	ble.n	801d0c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801d080:	783b      	ldrb	r3, [r7, #0]
 801d082:	091b      	lsrs	r3, r3, #4
 801d084:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d088:	0e0b      	lsrs	r3, r1, #24
 801d08a:	d006      	beq.n	801d09a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d08c:	8822      	ldrh	r2, [r4, #0]
 801d08e:	9300      	str	r3, [sp, #0]
 801d090:	4640      	mov	r0, r8
 801d092:	464b      	mov	r3, r9
 801d094:	f7ff ff30 	bl	801cef8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d098:	8020      	strh	r0, [r4, #0]
 801d09a:	f817 3b01 	ldrb.w	r3, [r7], #1
 801d09e:	f003 030f 	and.w	r3, r3, #15
 801d0a2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d0a6:	0e0b      	lsrs	r3, r1, #24
 801d0a8:	d006      	beq.n	801d0b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801d0aa:	8862      	ldrh	r2, [r4, #2]
 801d0ac:	9300      	str	r3, [sp, #0]
 801d0ae:	4640      	mov	r0, r8
 801d0b0:	464b      	mov	r3, r9
 801d0b2:	f7ff ff21 	bl	801cef8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d0b6:	8060      	strh	r0, [r4, #2]
 801d0b8:	3404      	adds	r4, #4
 801d0ba:	f1aa 0a02 	sub.w	sl, sl, #2
 801d0be:	e7dc      	b.n	801d07a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801d0c0:	462f      	mov	r7, r5
 801d0c2:	46da      	mov	sl, fp
 801d0c4:	e7d9      	b.n	801d07a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801d0c6:	d10d      	bne.n	801d0e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801d0c8:	783b      	ldrb	r3, [r7, #0]
 801d0ca:	091b      	lsrs	r3, r3, #4
 801d0cc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801d0d0:	0e0b      	lsrs	r3, r1, #24
 801d0d2:	d006      	beq.n	801d0e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d0d4:	8822      	ldrh	r2, [r4, #0]
 801d0d6:	9300      	str	r3, [sp, #0]
 801d0d8:	4640      	mov	r0, r8
 801d0da:	464b      	mov	r3, r9
 801d0dc:	f7ff ff0c 	bl	801cef8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801d0e0:	8020      	strh	r0, [r4, #0]
 801d0e2:	3402      	adds	r4, #2
 801d0e4:	9b06      	ldr	r3, [sp, #24]
 801d0e6:	9a02      	ldr	r2, [sp, #8]
 801d0e8:	881b      	ldrh	r3, [r3, #0]
 801d0ea:	eba3 030b 	sub.w	r3, r3, fp
 801d0ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d0f2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801d0f6:	4413      	add	r3, r2
 801d0f8:	9a07      	ldr	r2, [sp, #28]
 801d0fa:	fb93 f3f2 	sdiv	r3, r3, r2
 801d0fe:	441d      	add	r5, r3
 801d100:	e7a3      	b.n	801d04a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801d102:	9b05      	ldr	r3, [sp, #20]
 801d104:	6818      	ldr	r0, [r3, #0]
 801d106:	6803      	ldr	r3, [r0, #0]
 801d108:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d10a:	4798      	blx	r3
 801d10c:	b00d      	add	sp, #52	@ 0x34
 801d10e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d112:	bf00      	nop
 801d114:	20013288 	.word	0x20013288
 801d118:	20013282 	.word	0x20013282

0801d11c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801d11c:	b570      	push	{r4, r5, r6, lr}
 801d11e:	1214      	asrs	r4, r2, #8
 801d120:	788d      	ldrb	r5, [r1, #2]
 801d122:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801d126:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801d12a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d12e:	fb15 f503 	smulbb	r5, r5, r3
 801d132:	fb04 5506 	mla	r5, r4, r6, r5
 801d136:	10d0      	asrs	r0, r2, #3
 801d138:	784c      	ldrb	r4, [r1, #1]
 801d13a:	7809      	ldrb	r1, [r1, #0]
 801d13c:	00d2      	lsls	r2, r2, #3
 801d13e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d142:	b2d2      	uxtb	r2, r2
 801d144:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801d148:	fb14 f403 	smulbb	r4, r4, r3
 801d14c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d150:	fb11 f303 	smulbb	r3, r1, r3
 801d154:	fb00 4406 	mla	r4, r0, r6, r4
 801d158:	fb02 3306 	mla	r3, r2, r6, r3
 801d15c:	b2ad      	uxth	r5, r5
 801d15e:	b29b      	uxth	r3, r3
 801d160:	b2a4      	uxth	r4, r4
 801d162:	1c68      	adds	r0, r5, #1
 801d164:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801d168:	1c62      	adds	r2, r4, #1
 801d16a:	1c58      	adds	r0, r3, #1
 801d16c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d170:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d174:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d178:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d17c:	0964      	lsrs	r4, r4, #5
 801d17e:	4328      	orrs	r0, r5
 801d180:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d184:	4320      	orrs	r0, r4
 801d186:	bd70      	pop	{r4, r5, r6, pc}

0801d188 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d18c:	b08f      	sub	sp, #60	@ 0x3c
 801d18e:	461c      	mov	r4, r3
 801d190:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801d194:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d196:	4682      	mov	sl, r0
 801d198:	460e      	mov	r6, r1
 801d19a:	4615      	mov	r5, r2
 801d19c:	2f00      	cmp	r7, #0
 801d19e:	f000 8142 	beq.w	801d426 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801d1a2:	6820      	ldr	r0, [r4, #0]
 801d1a4:	6861      	ldr	r1, [r4, #4]
 801d1a6:	aa0a      	add	r2, sp, #40	@ 0x28
 801d1a8:	c203      	stmia	r2!, {r0, r1}
 801d1aa:	6818      	ldr	r0, [r3, #0]
 801d1ac:	6859      	ldr	r1, [r3, #4]
 801d1ae:	aa0c      	add	r2, sp, #48	@ 0x30
 801d1b0:	c203      	stmia	r2!, {r0, r1}
 801d1b2:	a80a      	add	r0, sp, #40	@ 0x28
 801d1b4:	f7ef fbb8 	bl	800c928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1b8:	4621      	mov	r1, r4
 801d1ba:	a80c      	add	r0, sp, #48	@ 0x30
 801d1bc:	f7ef fbdc 	bl	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1c0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801d1c4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801d1c8:	f002 0301 	and.w	r3, r2, #1
 801d1cc:	9306      	str	r3, [sp, #24]
 801d1ce:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d1d2:	f003 0101 	and.w	r1, r3, #1
 801d1d6:	9105      	str	r1, [sp, #20]
 801d1d8:	9805      	ldr	r0, [sp, #20]
 801d1da:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801d1de:	4403      	add	r3, r0
 801d1e0:	fb01 2303 	mla	r3, r1, r3, r2
 801d1e4:	f04f 0802 	mov.w	r8, #2
 801d1e8:	fb93 f3f8 	sdiv	r3, r3, r8
 801d1ec:	441e      	add	r6, r3
 801d1ee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801d1f2:	441a      	add	r2, r3
 801d1f4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801d1f8:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801d1fc:	4419      	add	r1, r3
 801d1fe:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d202:	9303      	str	r3, [sp, #12]
 801d204:	4b89      	ldr	r3, [pc, #548]	@ (801d42c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801d206:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801d20a:	6818      	ldr	r0, [r3, #0]
 801d20c:	6803      	ldr	r3, [r0, #0]
 801d20e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d210:	4798      	blx	r3
 801d212:	4a87      	ldr	r2, [pc, #540]	@ (801d430 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801d214:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801d218:	8813      	ldrh	r3, [r2, #0]
 801d21a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801d21e:	2fff      	cmp	r7, #255	@ 0xff
 801d220:	fb03 9404 	mla	r4, r3, r4, r9
 801d224:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d228:	f105 0504 	add.w	r5, r5, #4
 801d22c:	4694      	mov	ip, r2
 801d22e:	fb03 f30b 	mul.w	r3, r3, fp
 801d232:	d071      	beq.n	801d318 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d234:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d238:	43f9      	mvns	r1, r7
 801d23a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801d23e:	b2c9      	uxtb	r1, r1
 801d240:	9104      	str	r1, [sp, #16]
 801d242:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801d246:	9b07      	ldr	r3, [sp, #28]
 801d248:	42a3      	cmp	r3, r4
 801d24a:	f240 80e7 	bls.w	801d41c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801d24e:	9b06      	ldr	r3, [sp, #24]
 801d250:	2b00      	cmp	r3, #0
 801d252:	d03d      	beq.n	801d2d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801d254:	7831      	ldrb	r1, [r6, #0]
 801d256:	9b04      	ldr	r3, [sp, #16]
 801d258:	8822      	ldrh	r2, [r4, #0]
 801d25a:	9300      	str	r3, [sp, #0]
 801d25c:	f001 010f 	and.w	r1, r1, #15
 801d260:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d264:	463b      	mov	r3, r7
 801d266:	4429      	add	r1, r5
 801d268:	4650      	mov	r0, sl
 801d26a:	f7ff ff57 	bl	801d11c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d26e:	9b03      	ldr	r3, [sp, #12]
 801d270:	f824 0b02 	strh.w	r0, [r4], #2
 801d274:	f106 0801 	add.w	r8, r6, #1
 801d278:	f103 3bff 	add.w	fp, r3, #4294967295
 801d27c:	f1bb 0f01 	cmp.w	fp, #1
 801d280:	46a1      	mov	r9, r4
 801d282:	f104 0404 	add.w	r4, r4, #4
 801d286:	dd27      	ble.n	801d2d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 801d288:	f898 1000 	ldrb.w	r1, [r8]
 801d28c:	9b04      	ldr	r3, [sp, #16]
 801d28e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801d292:	9300      	str	r3, [sp, #0]
 801d294:	0909      	lsrs	r1, r1, #4
 801d296:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d29a:	463b      	mov	r3, r7
 801d29c:	4429      	add	r1, r5
 801d29e:	4650      	mov	r0, sl
 801d2a0:	f7ff ff3c 	bl	801d11c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d2a4:	f824 0c04 	strh.w	r0, [r4, #-4]
 801d2a8:	f818 1b01 	ldrb.w	r1, [r8], #1
 801d2ac:	9b04      	ldr	r3, [sp, #16]
 801d2ae:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801d2b2:	9300      	str	r3, [sp, #0]
 801d2b4:	f001 010f 	and.w	r1, r1, #15
 801d2b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d2bc:	463b      	mov	r3, r7
 801d2be:	4429      	add	r1, r5
 801d2c0:	4650      	mov	r0, sl
 801d2c2:	f7ff ff2b 	bl	801d11c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d2c6:	f1ab 0b02 	sub.w	fp, fp, #2
 801d2ca:	f824 0c02 	strh.w	r0, [r4, #-2]
 801d2ce:	e7d5      	b.n	801d27c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d2d0:	46b0      	mov	r8, r6
 801d2d2:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801d2d6:	e7d1      	b.n	801d27c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d2d8:	d10f      	bne.n	801d2fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 801d2da:	f898 1000 	ldrb.w	r1, [r8]
 801d2de:	9b04      	ldr	r3, [sp, #16]
 801d2e0:	f8b9 2000 	ldrh.w	r2, [r9]
 801d2e4:	9300      	str	r3, [sp, #0]
 801d2e6:	0909      	lsrs	r1, r1, #4
 801d2e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d2ec:	463b      	mov	r3, r7
 801d2ee:	4429      	add	r1, r5
 801d2f0:	4650      	mov	r0, sl
 801d2f2:	f7ff ff13 	bl	801d11c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801d2f6:	f829 0b02 	strh.w	r0, [r9], #2
 801d2fa:	9b08      	ldr	r3, [sp, #32]
 801d2fc:	9a05      	ldr	r2, [sp, #20]
 801d2fe:	881c      	ldrh	r4, [r3, #0]
 801d300:	9b03      	ldr	r3, [sp, #12]
 801d302:	1ae4      	subs	r4, r4, r3
 801d304:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d308:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d30c:	4413      	add	r3, r2
 801d30e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d310:	fb93 f3f2 	sdiv	r3, r3, r2
 801d314:	441e      	add	r6, r3
 801d316:	e796      	b.n	801d246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 801d318:	4f46      	ldr	r7, [pc, #280]	@ (801d434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801d31a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d31e:	42a3      	cmp	r3, r4
 801d320:	d97c      	bls.n	801d41c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801d322:	9a06      	ldr	r2, [sp, #24]
 801d324:	2a00      	cmp	r2, #0
 801d326:	d054      	beq.n	801d3d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d328:	7830      	ldrb	r0, [r6, #0]
 801d32a:	f000 000f 	and.w	r0, r0, #15
 801d32e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d332:	eb05 0e00 	add.w	lr, r5, r0
 801d336:	5c28      	ldrb	r0, [r5, r0]
 801d338:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801d33c:	f89e e001 	ldrb.w	lr, [lr, #1]
 801d340:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d344:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d348:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801d34c:	ea42 020e 	orr.w	r2, r2, lr
 801d350:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801d354:	f824 2b02 	strh.w	r2, [r4], #2
 801d358:	9a03      	ldr	r2, [sp, #12]
 801d35a:	1c71      	adds	r1, r6, #1
 801d35c:	f102 3eff 	add.w	lr, r2, #4294967295
 801d360:	f1be 0f01 	cmp.w	lr, #1
 801d364:	4620      	mov	r0, r4
 801d366:	f104 0404 	add.w	r4, r4, #4
 801d36a:	dd36      	ble.n	801d3da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 801d36c:	7808      	ldrb	r0, [r1, #0]
 801d36e:	0900      	lsrs	r0, r0, #4
 801d370:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d374:	eb05 0a00 	add.w	sl, r5, r0
 801d378:	f1ae 0e02 	sub.w	lr, lr, #2
 801d37c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d380:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d384:	00d2      	lsls	r2, r2, #3
 801d386:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801d38a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d38e:	ea49 0202 	orr.w	r2, r9, r2
 801d392:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d396:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d39a:	f824 2c04 	strh.w	r2, [r4, #-4]
 801d39e:	f811 0b01 	ldrb.w	r0, [r1], #1
 801d3a2:	f000 000f 	and.w	r0, r0, #15
 801d3a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d3aa:	eb05 0a00 	add.w	sl, r5, r0
 801d3ae:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d3b2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d3b6:	00d2      	lsls	r2, r2, #3
 801d3b8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801d3bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d3c0:	ea49 0202 	orr.w	r2, r9, r2
 801d3c4:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d3c8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d3cc:	f824 2c02 	strh.w	r2, [r4, #-2]
 801d3d0:	e7c6      	b.n	801d360 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801d3d2:	4631      	mov	r1, r6
 801d3d4:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801d3d8:	e7c2      	b.n	801d360 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801d3da:	d111      	bne.n	801d400 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 801d3dc:	7809      	ldrb	r1, [r1, #0]
 801d3de:	0909      	lsrs	r1, r1, #4
 801d3e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d3e4:	186c      	adds	r4, r5, r1
 801d3e6:	5c69      	ldrb	r1, [r5, r1]
 801d3e8:	78a2      	ldrb	r2, [r4, #2]
 801d3ea:	7864      	ldrb	r4, [r4, #1]
 801d3ec:	00e4      	lsls	r4, r4, #3
 801d3ee:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801d3f2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d3f6:	4322      	orrs	r2, r4
 801d3f8:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801d3fc:	f820 2b02 	strh.w	r2, [r0], #2
 801d400:	9a03      	ldr	r2, [sp, #12]
 801d402:	f8bc 4000 	ldrh.w	r4, [ip]
 801d406:	9905      	ldr	r1, [sp, #20]
 801d408:	1aa4      	subs	r4, r4, r2
 801d40a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801d40e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d412:	440a      	add	r2, r1
 801d414:	fb92 f2f8 	sdiv	r2, r2, r8
 801d418:	4416      	add	r6, r2
 801d41a:	e780      	b.n	801d31e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801d41c:	4b03      	ldr	r3, [pc, #12]	@ (801d42c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801d41e:	6818      	ldr	r0, [r3, #0]
 801d420:	6803      	ldr	r3, [r0, #0]
 801d422:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d424:	4798      	blx	r3
 801d426:	b00f      	add	sp, #60	@ 0x3c
 801d428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d42c:	20013288 	.word	0x20013288
 801d430:	20013282 	.word	0x20013282
 801d434:	fffff800 	.word	0xfffff800

0801d438 <CRC_Lock>:
 801d438:	b530      	push	{r4, r5, lr}
 801d43a:	4a20      	ldr	r2, [pc, #128]	@ (801d4bc <CRC_Lock+0x84>)
 801d43c:	6813      	ldr	r3, [r2, #0]
 801d43e:	f023 0301 	bic.w	r3, r3, #1
 801d442:	6013      	str	r3, [r2, #0]
 801d444:	4b1e      	ldr	r3, [pc, #120]	@ (801d4c0 <CRC_Lock+0x88>)
 801d446:	681a      	ldr	r2, [r3, #0]
 801d448:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
 801d44c:	4022      	ands	r2, r4
 801d44e:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801d452:	42aa      	cmp	r2, r5
 801d454:	d005      	beq.n	801d462 <CRC_Lock+0x2a>
 801d456:	681b      	ldr	r3, [r3, #0]
 801d458:	f24c 2270 	movw	r2, #49776	@ 0xc270
 801d45c:	4023      	ands	r3, r4
 801d45e:	4293      	cmp	r3, r2
 801d460:	d124      	bne.n	801d4ac <CRC_Lock+0x74>
 801d462:	4b18      	ldr	r3, [pc, #96]	@ (801d4c4 <CRC_Lock+0x8c>)
 801d464:	681b      	ldr	r3, [r3, #0]
 801d466:	bb0b      	cbnz	r3, 801d4ac <CRC_Lock+0x74>
 801d468:	4b17      	ldr	r3, [pc, #92]	@ (801d4c8 <CRC_Lock+0x90>)
 801d46a:	681a      	ldr	r2, [r3, #0]
 801d46c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d470:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801d474:	d00d      	beq.n	801d492 <CRC_Lock+0x5a>
 801d476:	681a      	ldr	r2, [r3, #0]
 801d478:	f240 4483 	movw	r4, #1155	@ 0x483
 801d47c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d480:	42a2      	cmp	r2, r4
 801d482:	d006      	beq.n	801d492 <CRC_Lock+0x5a>
 801d484:	681b      	ldr	r3, [r3, #0]
 801d486:	f240 4285 	movw	r2, #1157	@ 0x485
 801d48a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d48e:	4293      	cmp	r3, r2
 801d490:	d10c      	bne.n	801d4ac <CRC_Lock+0x74>
 801d492:	4b0e      	ldr	r3, [pc, #56]	@ (801d4cc <CRC_Lock+0x94>)
 801d494:	2201      	movs	r2, #1
 801d496:	601a      	str	r2, [r3, #0]
 801d498:	681a      	ldr	r2, [r3, #0]
 801d49a:	2a00      	cmp	r2, #0
 801d49c:	d1fc      	bne.n	801d498 <CRC_Lock+0x60>
 801d49e:	4b0c      	ldr	r3, [pc, #48]	@ (801d4d0 <CRC_Lock+0x98>)
 801d4a0:	6018      	str	r0, [r3, #0]
 801d4a2:	6818      	ldr	r0, [r3, #0]
 801d4a4:	1a43      	subs	r3, r0, r1
 801d4a6:	4258      	negs	r0, r3
 801d4a8:	4158      	adcs	r0, r3
 801d4aa:	bd30      	pop	{r4, r5, pc}
 801d4ac:	4b09      	ldr	r3, [pc, #36]	@ (801d4d4 <CRC_Lock+0x9c>)
 801d4ae:	2201      	movs	r2, #1
 801d4b0:	601a      	str	r2, [r3, #0]
 801d4b2:	681a      	ldr	r2, [r3, #0]
 801d4b4:	2a00      	cmp	r2, #0
 801d4b6:	d1fc      	bne.n	801d4b2 <CRC_Lock+0x7a>
 801d4b8:	4b07      	ldr	r3, [pc, #28]	@ (801d4d8 <CRC_Lock+0xa0>)
 801d4ba:	e7f1      	b.n	801d4a0 <CRC_Lock+0x68>
 801d4bc:	e0002000 	.word	0xe0002000
 801d4c0:	e000ed00 	.word	0xe000ed00
 801d4c4:	e0042000 	.word	0xe0042000
 801d4c8:	5c001000 	.word	0x5c001000
 801d4cc:	58024c08 	.word	0x58024c08
 801d4d0:	58024c00 	.word	0x58024c00
 801d4d4:	40023008 	.word	0x40023008
 801d4d8:	40023000 	.word	0x40023000

0801d4dc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d4dc:	6101      	str	r1, [r0, #16]
 801d4de:	4770      	bx	lr

0801d4e0 <_ZN8touchgfx8Gestures4tickEv>:
 801d4e0:	7b83      	ldrb	r3, [r0, #14]
 801d4e2:	b14b      	cbz	r3, 801d4f8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d4e4:	8903      	ldrh	r3, [r0, #8]
 801d4e6:	3301      	adds	r3, #1
 801d4e8:	b29b      	uxth	r3, r3
 801d4ea:	2b07      	cmp	r3, #7
 801d4ec:	8103      	strh	r3, [r0, #8]
 801d4ee:	bf81      	itttt	hi
 801d4f0:	2300      	movhi	r3, #0
 801d4f2:	8143      	strhhi	r3, [r0, #10]
 801d4f4:	8183      	strhhi	r3, [r0, #12]
 801d4f6:	7383      	strbhi	r3, [r0, #14]
 801d4f8:	4770      	bx	lr
	...

0801d4fc <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d4fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d500:	4698      	mov	r8, r3
 801d502:	8883      	ldrh	r3, [r0, #4]
 801d504:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d508:	eba8 0303 	sub.w	r3, r8, r3
 801d50c:	b21b      	sxth	r3, r3
 801d50e:	4604      	mov	r4, r0
 801d510:	2b00      	cmp	r3, #0
 801d512:	4617      	mov	r7, r2
 801d514:	4a18      	ldr	r2, [pc, #96]	@ (801d578 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d516:	9200      	str	r2, [sp, #0]
 801d518:	bfb8      	it	lt
 801d51a:	425b      	neglt	r3, r3
 801d51c:	8aa2      	ldrh	r2, [r4, #20]
 801d51e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801d522:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d526:	b21b      	sxth	r3, r3
 801d528:	460e      	mov	r6, r1
 801d52a:	4293      	cmp	r3, r2
 801d52c:	88c1      	ldrh	r1, [r0, #6]
 801d52e:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d532:	f04f 0000 	mov.w	r0, #0
 801d536:	f88d 0004 	strb.w	r0, [sp, #4]
 801d53a:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d53e:	dc07      	bgt.n	801d550 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801d540:	1a69      	subs	r1, r5, r1
 801d542:	b209      	sxth	r1, r1
 801d544:	2900      	cmp	r1, #0
 801d546:	bfb8      	it	lt
 801d548:	4249      	neglt	r1, r1
 801d54a:	b209      	sxth	r1, r1
 801d54c:	428a      	cmp	r2, r1
 801d54e:	da10      	bge.n	801d572 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801d550:	6920      	ldr	r0, [r4, #16]
 801d552:	6803      	ldr	r3, [r0, #0]
 801d554:	4669      	mov	r1, sp
 801d556:	685b      	ldr	r3, [r3, #4]
 801d558:	4798      	blx	r3
 801d55a:	eba8 0606 	sub.w	r6, r8, r6
 801d55e:	2300      	movs	r3, #0
 801d560:	1bef      	subs	r7, r5, r7
 801d562:	2001      	movs	r0, #1
 801d564:	8123      	strh	r3, [r4, #8]
 801d566:	8166      	strh	r6, [r4, #10]
 801d568:	81a7      	strh	r7, [r4, #12]
 801d56a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d56e:	80e5      	strh	r5, [r4, #6]
 801d570:	73a0      	strb	r0, [r4, #14]
 801d572:	b004      	add	sp, #16
 801d574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d578:	080206a4 	.word	0x080206a4

0801d57c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d57c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d57e:	461e      	mov	r6, r3
 801d580:	1e4b      	subs	r3, r1, #1
 801d582:	2b01      	cmp	r3, #1
 801d584:	b085      	sub	sp, #20
 801d586:	4604      	mov	r4, r0
 801d588:	460d      	mov	r5, r1
 801d58a:	4617      	mov	r7, r2
 801d58c:	d84b      	bhi.n	801d626 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d58e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d592:	1cd3      	adds	r3, r2, #3
 801d594:	b29b      	uxth	r3, r3
 801d596:	2b06      	cmp	r3, #6
 801d598:	d916      	bls.n	801d5c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d59a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801d63c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d59e:	f8cd c004 	str.w	ip, [sp, #4]
 801d5a2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d5a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d5aa:	6900      	ldr	r0, [r0, #16]
 801d5ac:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d5b0:	f04f 0c00 	mov.w	ip, #0
 801d5b4:	f88d c008 	strb.w	ip, [sp, #8]
 801d5b8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d5bc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d5c0:	6803      	ldr	r3, [r0, #0]
 801d5c2:	a901      	add	r1, sp, #4
 801d5c4:	689b      	ldr	r3, [r3, #8]
 801d5c6:	4798      	blx	r3
 801d5c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d5cc:	1cd3      	adds	r3, r2, #3
 801d5ce:	b29b      	uxth	r3, r3
 801d5d0:	2b06      	cmp	r3, #6
 801d5d2:	d916      	bls.n	801d602 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d5d4:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801d63c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d5d8:	f8cd c004 	str.w	ip, [sp, #4]
 801d5dc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d5e0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d5e4:	6920      	ldr	r0, [r4, #16]
 801d5e6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d5ea:	f04f 0c01 	mov.w	ip, #1
 801d5ee:	f88d c008 	strb.w	ip, [sp, #8]
 801d5f2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d5f6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d5fa:	6803      	ldr	r3, [r0, #0]
 801d5fc:	a901      	add	r1, sp, #4
 801d5fe:	689b      	ldr	r3, [r3, #8]
 801d600:	4798      	blx	r3
 801d602:	4b0d      	ldr	r3, [pc, #52]	@ (801d638 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d604:	9301      	str	r3, [sp, #4]
 801d606:	6920      	ldr	r0, [r4, #16]
 801d608:	f88d 5008 	strb.w	r5, [sp, #8]
 801d60c:	2300      	movs	r3, #0
 801d60e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d612:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d616:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d61a:	6803      	ldr	r3, [r0, #0]
 801d61c:	a901      	add	r1, sp, #4
 801d61e:	681b      	ldr	r3, [r3, #0]
 801d620:	4798      	blx	r3
 801d622:	b005      	add	sp, #20
 801d624:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d626:	2900      	cmp	r1, #0
 801d628:	d1eb      	bne.n	801d602 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d62a:	80a2      	strh	r2, [r4, #4]
 801d62c:	80c6      	strh	r6, [r0, #6]
 801d62e:	60a1      	str	r1, [r4, #8]
 801d630:	81a1      	strh	r1, [r4, #12]
 801d632:	73a1      	strb	r1, [r4, #14]
 801d634:	e7e5      	b.n	801d602 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d636:	bf00      	nop
 801d638:	08020690 	.word	0x08020690
 801d63c:	080206b8 	.word	0x080206b8

0801d640 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801d640:	b570      	push	{r4, r5, r6, lr}
 801d642:	790b      	ldrb	r3, [r1, #4]
 801d644:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 801d648:	2b00      	cmp	r3, #0
 801d64a:	bf0c      	ite	eq
 801d64c:	2301      	moveq	r3, #1
 801d64e:	2300      	movne	r3, #0
 801d650:	4604      	mov	r4, r0
 801d652:	460e      	mov	r6, r1
 801d654:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 801d658:	d109      	bne.n	801d66e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801d65a:	b14d      	cbz	r5, 801d670 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801d65c:	7933      	ldrb	r3, [r6, #4]
 801d65e:	2b01      	cmp	r3, #1
 801d660:	d10c      	bne.n	801d67c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801d662:	6823      	ldr	r3, [r4, #0]
 801d664:	4620      	mov	r0, r4
 801d666:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801d668:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d66c:	4718      	bx	r3
 801d66e:	b12d      	cbz	r5, 801d67c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801d670:	6823      	ldr	r3, [r4, #0]
 801d672:	4620      	mov	r0, r4
 801d674:	695b      	ldr	r3, [r3, #20]
 801d676:	4798      	blx	r3
 801d678:	2d00      	cmp	r5, #0
 801d67a:	d1ef      	bne.n	801d65c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801d67c:	bd70      	pop	{r4, r5, r6, pc}

0801d67e <__aeabi_atexit>:
 801d67e:	460b      	mov	r3, r1
 801d680:	4601      	mov	r1, r0
 801d682:	4618      	mov	r0, r3
 801d684:	f000 b910 	b.w	801d8a8 <__cxa_atexit>

0801d688 <_ZdlPvj>:
 801d688:	f000 b812 	b.w	801d6b0 <_ZdlPv>

0801d68c <__cxa_guard_acquire>:
 801d68c:	6802      	ldr	r2, [r0, #0]
 801d68e:	07d2      	lsls	r2, r2, #31
 801d690:	4603      	mov	r3, r0
 801d692:	d405      	bmi.n	801d6a0 <__cxa_guard_acquire+0x14>
 801d694:	7842      	ldrb	r2, [r0, #1]
 801d696:	b102      	cbz	r2, 801d69a <__cxa_guard_acquire+0xe>
 801d698:	deff      	udf	#255	@ 0xff
 801d69a:	2001      	movs	r0, #1
 801d69c:	7058      	strb	r0, [r3, #1]
 801d69e:	4770      	bx	lr
 801d6a0:	2000      	movs	r0, #0
 801d6a2:	4770      	bx	lr

0801d6a4 <__cxa_guard_release>:
 801d6a4:	2301      	movs	r3, #1
 801d6a6:	6003      	str	r3, [r0, #0]
 801d6a8:	4770      	bx	lr

0801d6aa <__cxa_pure_virtual>:
 801d6aa:	b508      	push	{r3, lr}
 801d6ac:	f000 f80e 	bl	801d6cc <_ZSt9terminatev>

0801d6b0 <_ZdlPv>:
 801d6b0:	f000 b844 	b.w	801d73c <free>

0801d6b4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801d6b4:	b508      	push	{r3, lr}
 801d6b6:	4780      	blx	r0
 801d6b8:	f000 f80d 	bl	801d6d6 <abort>

0801d6bc <_ZSt13get_terminatev>:
 801d6bc:	4b02      	ldr	r3, [pc, #8]	@ (801d6c8 <_ZSt13get_terminatev+0xc>)
 801d6be:	6818      	ldr	r0, [r3, #0]
 801d6c0:	f3bf 8f5b 	dmb	ish
 801d6c4:	4770      	bx	lr
 801d6c6:	bf00      	nop
 801d6c8:	20000108 	.word	0x20000108

0801d6cc <_ZSt9terminatev>:
 801d6cc:	b508      	push	{r3, lr}
 801d6ce:	f7ff fff5 	bl	801d6bc <_ZSt13get_terminatev>
 801d6d2:	f7ff ffef 	bl	801d6b4 <_ZN10__cxxabiv111__terminateEPFvvE>

0801d6d6 <abort>:
 801d6d6:	b508      	push	{r3, lr}
 801d6d8:	2006      	movs	r0, #6
 801d6da:	f000 fa3b 	bl	801db54 <raise>
 801d6de:	2001      	movs	r0, #1
 801d6e0:	f7e4 fcc2 	bl	8002068 <_exit>

0801d6e4 <__assert_func>:
 801d6e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801d6e6:	4614      	mov	r4, r2
 801d6e8:	461a      	mov	r2, r3
 801d6ea:	4b09      	ldr	r3, [pc, #36]	@ (801d710 <__assert_func+0x2c>)
 801d6ec:	681b      	ldr	r3, [r3, #0]
 801d6ee:	4605      	mov	r5, r0
 801d6f0:	68d8      	ldr	r0, [r3, #12]
 801d6f2:	b14c      	cbz	r4, 801d708 <__assert_func+0x24>
 801d6f4:	4b07      	ldr	r3, [pc, #28]	@ (801d714 <__assert_func+0x30>)
 801d6f6:	9100      	str	r1, [sp, #0]
 801d6f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801d6fc:	4906      	ldr	r1, [pc, #24]	@ (801d718 <__assert_func+0x34>)
 801d6fe:	462b      	mov	r3, r5
 801d700:	f000 f984 	bl	801da0c <fiprintf>
 801d704:	f7ff ffe7 	bl	801d6d6 <abort>
 801d708:	4b04      	ldr	r3, [pc, #16]	@ (801d71c <__assert_func+0x38>)
 801d70a:	461c      	mov	r4, r3
 801d70c:	e7f3      	b.n	801d6f6 <__assert_func+0x12>
 801d70e:	bf00      	nop
 801d710:	20000118 	.word	0x20000118
 801d714:	0801f39d 	.word	0x0801f39d
 801d718:	0801f3aa 	.word	0x0801f3aa
 801d71c:	0801f3d8 	.word	0x0801f3d8

0801d720 <atexit>:
 801d720:	2300      	movs	r3, #0
 801d722:	4601      	mov	r1, r0
 801d724:	461a      	mov	r2, r3
 801d726:	4618      	mov	r0, r3
 801d728:	f000 bac2 	b.w	801dcb0 <__register_exitproc>

0801d72c <malloc>:
 801d72c:	4b02      	ldr	r3, [pc, #8]	@ (801d738 <malloc+0xc>)
 801d72e:	4601      	mov	r1, r0
 801d730:	6818      	ldr	r0, [r3, #0]
 801d732:	f000 b82d 	b.w	801d790 <_malloc_r>
 801d736:	bf00      	nop
 801d738:	20000118 	.word	0x20000118

0801d73c <free>:
 801d73c:	4b02      	ldr	r3, [pc, #8]	@ (801d748 <free+0xc>)
 801d73e:	4601      	mov	r1, r0
 801d740:	6818      	ldr	r0, [r3, #0]
 801d742:	f000 bb11 	b.w	801dd68 <_free_r>
 801d746:	bf00      	nop
 801d748:	20000118 	.word	0x20000118

0801d74c <sbrk_aligned>:
 801d74c:	b570      	push	{r4, r5, r6, lr}
 801d74e:	4e0f      	ldr	r6, [pc, #60]	@ (801d78c <sbrk_aligned+0x40>)
 801d750:	460c      	mov	r4, r1
 801d752:	6831      	ldr	r1, [r6, #0]
 801d754:	4605      	mov	r5, r0
 801d756:	b911      	cbnz	r1, 801d75e <sbrk_aligned+0x12>
 801d758:	f000 fa4c 	bl	801dbf4 <_sbrk_r>
 801d75c:	6030      	str	r0, [r6, #0]
 801d75e:	4621      	mov	r1, r4
 801d760:	4628      	mov	r0, r5
 801d762:	f000 fa47 	bl	801dbf4 <_sbrk_r>
 801d766:	1c43      	adds	r3, r0, #1
 801d768:	d103      	bne.n	801d772 <sbrk_aligned+0x26>
 801d76a:	f04f 34ff 	mov.w	r4, #4294967295
 801d76e:	4620      	mov	r0, r4
 801d770:	bd70      	pop	{r4, r5, r6, pc}
 801d772:	1cc4      	adds	r4, r0, #3
 801d774:	f024 0403 	bic.w	r4, r4, #3
 801d778:	42a0      	cmp	r0, r4
 801d77a:	d0f8      	beq.n	801d76e <sbrk_aligned+0x22>
 801d77c:	1a21      	subs	r1, r4, r0
 801d77e:	4628      	mov	r0, r5
 801d780:	f000 fa38 	bl	801dbf4 <_sbrk_r>
 801d784:	3001      	adds	r0, #1
 801d786:	d1f2      	bne.n	801d76e <sbrk_aligned+0x22>
 801d788:	e7ef      	b.n	801d76a <sbrk_aligned+0x1e>
 801d78a:	bf00      	nop
 801d78c:	20013bd4 	.word	0x20013bd4

0801d790 <_malloc_r>:
 801d790:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d794:	1ccd      	adds	r5, r1, #3
 801d796:	f025 0503 	bic.w	r5, r5, #3
 801d79a:	3508      	adds	r5, #8
 801d79c:	2d0c      	cmp	r5, #12
 801d79e:	bf38      	it	cc
 801d7a0:	250c      	movcc	r5, #12
 801d7a2:	2d00      	cmp	r5, #0
 801d7a4:	4606      	mov	r6, r0
 801d7a6:	db01      	blt.n	801d7ac <_malloc_r+0x1c>
 801d7a8:	42a9      	cmp	r1, r5
 801d7aa:	d904      	bls.n	801d7b6 <_malloc_r+0x26>
 801d7ac:	230c      	movs	r3, #12
 801d7ae:	6033      	str	r3, [r6, #0]
 801d7b0:	2000      	movs	r0, #0
 801d7b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d7b6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 801d88c <_malloc_r+0xfc>
 801d7ba:	f000 f869 	bl	801d890 <__malloc_lock>
 801d7be:	f8d8 3000 	ldr.w	r3, [r8]
 801d7c2:	461c      	mov	r4, r3
 801d7c4:	bb44      	cbnz	r4, 801d818 <_malloc_r+0x88>
 801d7c6:	4629      	mov	r1, r5
 801d7c8:	4630      	mov	r0, r6
 801d7ca:	f7ff ffbf 	bl	801d74c <sbrk_aligned>
 801d7ce:	1c43      	adds	r3, r0, #1
 801d7d0:	4604      	mov	r4, r0
 801d7d2:	d158      	bne.n	801d886 <_malloc_r+0xf6>
 801d7d4:	f8d8 4000 	ldr.w	r4, [r8]
 801d7d8:	4627      	mov	r7, r4
 801d7da:	2f00      	cmp	r7, #0
 801d7dc:	d143      	bne.n	801d866 <_malloc_r+0xd6>
 801d7de:	2c00      	cmp	r4, #0
 801d7e0:	d04b      	beq.n	801d87a <_malloc_r+0xea>
 801d7e2:	6823      	ldr	r3, [r4, #0]
 801d7e4:	4639      	mov	r1, r7
 801d7e6:	4630      	mov	r0, r6
 801d7e8:	eb04 0903 	add.w	r9, r4, r3
 801d7ec:	f000 fa02 	bl	801dbf4 <_sbrk_r>
 801d7f0:	4581      	cmp	r9, r0
 801d7f2:	d142      	bne.n	801d87a <_malloc_r+0xea>
 801d7f4:	6821      	ldr	r1, [r4, #0]
 801d7f6:	1a6d      	subs	r5, r5, r1
 801d7f8:	4629      	mov	r1, r5
 801d7fa:	4630      	mov	r0, r6
 801d7fc:	f7ff ffa6 	bl	801d74c <sbrk_aligned>
 801d800:	3001      	adds	r0, #1
 801d802:	d03a      	beq.n	801d87a <_malloc_r+0xea>
 801d804:	6823      	ldr	r3, [r4, #0]
 801d806:	442b      	add	r3, r5
 801d808:	6023      	str	r3, [r4, #0]
 801d80a:	f8d8 3000 	ldr.w	r3, [r8]
 801d80e:	685a      	ldr	r2, [r3, #4]
 801d810:	bb62      	cbnz	r2, 801d86c <_malloc_r+0xdc>
 801d812:	f8c8 7000 	str.w	r7, [r8]
 801d816:	e00f      	b.n	801d838 <_malloc_r+0xa8>
 801d818:	6822      	ldr	r2, [r4, #0]
 801d81a:	1b52      	subs	r2, r2, r5
 801d81c:	d420      	bmi.n	801d860 <_malloc_r+0xd0>
 801d81e:	2a0b      	cmp	r2, #11
 801d820:	d917      	bls.n	801d852 <_malloc_r+0xc2>
 801d822:	1961      	adds	r1, r4, r5
 801d824:	42a3      	cmp	r3, r4
 801d826:	6025      	str	r5, [r4, #0]
 801d828:	bf18      	it	ne
 801d82a:	6059      	strne	r1, [r3, #4]
 801d82c:	6863      	ldr	r3, [r4, #4]
 801d82e:	bf08      	it	eq
 801d830:	f8c8 1000 	streq.w	r1, [r8]
 801d834:	5162      	str	r2, [r4, r5]
 801d836:	604b      	str	r3, [r1, #4]
 801d838:	4630      	mov	r0, r6
 801d83a:	f000 f82f 	bl	801d89c <__malloc_unlock>
 801d83e:	f104 000b 	add.w	r0, r4, #11
 801d842:	1d23      	adds	r3, r4, #4
 801d844:	f020 0007 	bic.w	r0, r0, #7
 801d848:	1ac2      	subs	r2, r0, r3
 801d84a:	bf1c      	itt	ne
 801d84c:	1a1b      	subne	r3, r3, r0
 801d84e:	50a3      	strne	r3, [r4, r2]
 801d850:	e7af      	b.n	801d7b2 <_malloc_r+0x22>
 801d852:	6862      	ldr	r2, [r4, #4]
 801d854:	42a3      	cmp	r3, r4
 801d856:	bf0c      	ite	eq
 801d858:	f8c8 2000 	streq.w	r2, [r8]
 801d85c:	605a      	strne	r2, [r3, #4]
 801d85e:	e7eb      	b.n	801d838 <_malloc_r+0xa8>
 801d860:	4623      	mov	r3, r4
 801d862:	6864      	ldr	r4, [r4, #4]
 801d864:	e7ae      	b.n	801d7c4 <_malloc_r+0x34>
 801d866:	463c      	mov	r4, r7
 801d868:	687f      	ldr	r7, [r7, #4]
 801d86a:	e7b6      	b.n	801d7da <_malloc_r+0x4a>
 801d86c:	461a      	mov	r2, r3
 801d86e:	685b      	ldr	r3, [r3, #4]
 801d870:	42a3      	cmp	r3, r4
 801d872:	d1fb      	bne.n	801d86c <_malloc_r+0xdc>
 801d874:	2300      	movs	r3, #0
 801d876:	6053      	str	r3, [r2, #4]
 801d878:	e7de      	b.n	801d838 <_malloc_r+0xa8>
 801d87a:	230c      	movs	r3, #12
 801d87c:	6033      	str	r3, [r6, #0]
 801d87e:	4630      	mov	r0, r6
 801d880:	f000 f80c 	bl	801d89c <__malloc_unlock>
 801d884:	e794      	b.n	801d7b0 <_malloc_r+0x20>
 801d886:	6005      	str	r5, [r0, #0]
 801d888:	e7d6      	b.n	801d838 <_malloc_r+0xa8>
 801d88a:	bf00      	nop
 801d88c:	20013bd8 	.word	0x20013bd8

0801d890 <__malloc_lock>:
 801d890:	4801      	ldr	r0, [pc, #4]	@ (801d898 <__malloc_lock+0x8>)
 801d892:	f000 b9fc 	b.w	801dc8e <__retarget_lock_acquire_recursive>
 801d896:	bf00      	nop
 801d898:	20013d1c 	.word	0x20013d1c

0801d89c <__malloc_unlock>:
 801d89c:	4801      	ldr	r0, [pc, #4]	@ (801d8a4 <__malloc_unlock+0x8>)
 801d89e:	f000 b9f7 	b.w	801dc90 <__retarget_lock_release_recursive>
 801d8a2:	bf00      	nop
 801d8a4:	20013d1c 	.word	0x20013d1c

0801d8a8 <__cxa_atexit>:
 801d8a8:	b510      	push	{r4, lr}
 801d8aa:	4604      	mov	r4, r0
 801d8ac:	4804      	ldr	r0, [pc, #16]	@ (801d8c0 <__cxa_atexit+0x18>)
 801d8ae:	4613      	mov	r3, r2
 801d8b0:	b120      	cbz	r0, 801d8bc <__cxa_atexit+0x14>
 801d8b2:	460a      	mov	r2, r1
 801d8b4:	2002      	movs	r0, #2
 801d8b6:	4621      	mov	r1, r4
 801d8b8:	f000 f9fa 	bl	801dcb0 <__register_exitproc>
 801d8bc:	bd10      	pop	{r4, pc}
 801d8be:	bf00      	nop
 801d8c0:	0801dcb1 	.word	0x0801dcb1

0801d8c4 <std>:
 801d8c4:	2300      	movs	r3, #0
 801d8c6:	b510      	push	{r4, lr}
 801d8c8:	4604      	mov	r4, r0
 801d8ca:	e9c0 3300 	strd	r3, r3, [r0]
 801d8ce:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801d8d2:	6083      	str	r3, [r0, #8]
 801d8d4:	8181      	strh	r1, [r0, #12]
 801d8d6:	6643      	str	r3, [r0, #100]	@ 0x64
 801d8d8:	81c2      	strh	r2, [r0, #14]
 801d8da:	6183      	str	r3, [r0, #24]
 801d8dc:	4619      	mov	r1, r3
 801d8de:	2208      	movs	r2, #8
 801d8e0:	305c      	adds	r0, #92	@ 0x5c
 801d8e2:	f000 f906 	bl	801daf2 <memset>
 801d8e6:	4b0d      	ldr	r3, [pc, #52]	@ (801d91c <std+0x58>)
 801d8e8:	6263      	str	r3, [r4, #36]	@ 0x24
 801d8ea:	4b0d      	ldr	r3, [pc, #52]	@ (801d920 <std+0x5c>)
 801d8ec:	62a3      	str	r3, [r4, #40]	@ 0x28
 801d8ee:	4b0d      	ldr	r3, [pc, #52]	@ (801d924 <std+0x60>)
 801d8f0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801d8f2:	4b0d      	ldr	r3, [pc, #52]	@ (801d928 <std+0x64>)
 801d8f4:	6323      	str	r3, [r4, #48]	@ 0x30
 801d8f6:	4b0d      	ldr	r3, [pc, #52]	@ (801d92c <std+0x68>)
 801d8f8:	6224      	str	r4, [r4, #32]
 801d8fa:	429c      	cmp	r4, r3
 801d8fc:	d006      	beq.n	801d90c <std+0x48>
 801d8fe:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801d902:	4294      	cmp	r4, r2
 801d904:	d002      	beq.n	801d90c <std+0x48>
 801d906:	33d0      	adds	r3, #208	@ 0xd0
 801d908:	429c      	cmp	r4, r3
 801d90a:	d105      	bne.n	801d918 <std+0x54>
 801d90c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801d910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d914:	f000 b9ba 	b.w	801dc8c <__retarget_lock_init_recursive>
 801d918:	bd10      	pop	{r4, pc}
 801d91a:	bf00      	nop
 801d91c:	0801da6d 	.word	0x0801da6d
 801d920:	0801da8f 	.word	0x0801da8f
 801d924:	0801dac7 	.word	0x0801dac7
 801d928:	0801daeb 	.word	0x0801daeb
 801d92c:	20013bdc 	.word	0x20013bdc

0801d930 <stdio_exit_handler>:
 801d930:	4a02      	ldr	r2, [pc, #8]	@ (801d93c <stdio_exit_handler+0xc>)
 801d932:	4903      	ldr	r1, [pc, #12]	@ (801d940 <stdio_exit_handler+0x10>)
 801d934:	4803      	ldr	r0, [pc, #12]	@ (801d944 <stdio_exit_handler+0x14>)
 801d936:	f000 b87b 	b.w	801da30 <_fwalk_sglue>
 801d93a:	bf00      	nop
 801d93c:	2000010c 	.word	0x2000010c
 801d940:	0801e4a1 	.word	0x0801e4a1
 801d944:	2000011c 	.word	0x2000011c

0801d948 <cleanup_stdio>:
 801d948:	6841      	ldr	r1, [r0, #4]
 801d94a:	4b0c      	ldr	r3, [pc, #48]	@ (801d97c <cleanup_stdio+0x34>)
 801d94c:	4299      	cmp	r1, r3
 801d94e:	b510      	push	{r4, lr}
 801d950:	4604      	mov	r4, r0
 801d952:	d001      	beq.n	801d958 <cleanup_stdio+0x10>
 801d954:	f000 fda4 	bl	801e4a0 <_fflush_r>
 801d958:	68a1      	ldr	r1, [r4, #8]
 801d95a:	4b09      	ldr	r3, [pc, #36]	@ (801d980 <cleanup_stdio+0x38>)
 801d95c:	4299      	cmp	r1, r3
 801d95e:	d002      	beq.n	801d966 <cleanup_stdio+0x1e>
 801d960:	4620      	mov	r0, r4
 801d962:	f000 fd9d 	bl	801e4a0 <_fflush_r>
 801d966:	68e1      	ldr	r1, [r4, #12]
 801d968:	4b06      	ldr	r3, [pc, #24]	@ (801d984 <cleanup_stdio+0x3c>)
 801d96a:	4299      	cmp	r1, r3
 801d96c:	d004      	beq.n	801d978 <cleanup_stdio+0x30>
 801d96e:	4620      	mov	r0, r4
 801d970:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d974:	f000 bd94 	b.w	801e4a0 <_fflush_r>
 801d978:	bd10      	pop	{r4, pc}
 801d97a:	bf00      	nop
 801d97c:	20013bdc 	.word	0x20013bdc
 801d980:	20013c44 	.word	0x20013c44
 801d984:	20013cac 	.word	0x20013cac

0801d988 <global_stdio_init.part.0>:
 801d988:	b510      	push	{r4, lr}
 801d98a:	4b0b      	ldr	r3, [pc, #44]	@ (801d9b8 <global_stdio_init.part.0+0x30>)
 801d98c:	4c0b      	ldr	r4, [pc, #44]	@ (801d9bc <global_stdio_init.part.0+0x34>)
 801d98e:	4a0c      	ldr	r2, [pc, #48]	@ (801d9c0 <global_stdio_init.part.0+0x38>)
 801d990:	601a      	str	r2, [r3, #0]
 801d992:	4620      	mov	r0, r4
 801d994:	2200      	movs	r2, #0
 801d996:	2104      	movs	r1, #4
 801d998:	f7ff ff94 	bl	801d8c4 <std>
 801d99c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801d9a0:	2201      	movs	r2, #1
 801d9a2:	2109      	movs	r1, #9
 801d9a4:	f7ff ff8e 	bl	801d8c4 <std>
 801d9a8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801d9ac:	2202      	movs	r2, #2
 801d9ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d9b2:	2112      	movs	r1, #18
 801d9b4:	f7ff bf86 	b.w	801d8c4 <std>
 801d9b8:	20013d14 	.word	0x20013d14
 801d9bc:	20013bdc 	.word	0x20013bdc
 801d9c0:	0801d931 	.word	0x0801d931

0801d9c4 <__sfp_lock_acquire>:
 801d9c4:	4801      	ldr	r0, [pc, #4]	@ (801d9cc <__sfp_lock_acquire+0x8>)
 801d9c6:	f000 b962 	b.w	801dc8e <__retarget_lock_acquire_recursive>
 801d9ca:	bf00      	nop
 801d9cc:	20013d1e 	.word	0x20013d1e

0801d9d0 <__sfp_lock_release>:
 801d9d0:	4801      	ldr	r0, [pc, #4]	@ (801d9d8 <__sfp_lock_release+0x8>)
 801d9d2:	f000 b95d 	b.w	801dc90 <__retarget_lock_release_recursive>
 801d9d6:	bf00      	nop
 801d9d8:	20013d1e 	.word	0x20013d1e

0801d9dc <__sinit>:
 801d9dc:	b510      	push	{r4, lr}
 801d9de:	4604      	mov	r4, r0
 801d9e0:	f7ff fff0 	bl	801d9c4 <__sfp_lock_acquire>
 801d9e4:	6a23      	ldr	r3, [r4, #32]
 801d9e6:	b11b      	cbz	r3, 801d9f0 <__sinit+0x14>
 801d9e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d9ec:	f7ff bff0 	b.w	801d9d0 <__sfp_lock_release>
 801d9f0:	4b04      	ldr	r3, [pc, #16]	@ (801da04 <__sinit+0x28>)
 801d9f2:	6223      	str	r3, [r4, #32]
 801d9f4:	4b04      	ldr	r3, [pc, #16]	@ (801da08 <__sinit+0x2c>)
 801d9f6:	681b      	ldr	r3, [r3, #0]
 801d9f8:	2b00      	cmp	r3, #0
 801d9fa:	d1f5      	bne.n	801d9e8 <__sinit+0xc>
 801d9fc:	f7ff ffc4 	bl	801d988 <global_stdio_init.part.0>
 801da00:	e7f2      	b.n	801d9e8 <__sinit+0xc>
 801da02:	bf00      	nop
 801da04:	0801d949 	.word	0x0801d949
 801da08:	20013d14 	.word	0x20013d14

0801da0c <fiprintf>:
 801da0c:	b40e      	push	{r1, r2, r3}
 801da0e:	b503      	push	{r0, r1, lr}
 801da10:	4601      	mov	r1, r0
 801da12:	ab03      	add	r3, sp, #12
 801da14:	4805      	ldr	r0, [pc, #20]	@ (801da2c <fiprintf+0x20>)
 801da16:	f853 2b04 	ldr.w	r2, [r3], #4
 801da1a:	6800      	ldr	r0, [r0, #0]
 801da1c:	9301      	str	r3, [sp, #4]
 801da1e:	f000 fa17 	bl	801de50 <_vfiprintf_r>
 801da22:	b002      	add	sp, #8
 801da24:	f85d eb04 	ldr.w	lr, [sp], #4
 801da28:	b003      	add	sp, #12
 801da2a:	4770      	bx	lr
 801da2c:	20000118 	.word	0x20000118

0801da30 <_fwalk_sglue>:
 801da30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801da34:	4607      	mov	r7, r0
 801da36:	4688      	mov	r8, r1
 801da38:	4614      	mov	r4, r2
 801da3a:	2600      	movs	r6, #0
 801da3c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801da40:	f1b9 0901 	subs.w	r9, r9, #1
 801da44:	d505      	bpl.n	801da52 <_fwalk_sglue+0x22>
 801da46:	6824      	ldr	r4, [r4, #0]
 801da48:	2c00      	cmp	r4, #0
 801da4a:	d1f7      	bne.n	801da3c <_fwalk_sglue+0xc>
 801da4c:	4630      	mov	r0, r6
 801da4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801da52:	89ab      	ldrh	r3, [r5, #12]
 801da54:	2b01      	cmp	r3, #1
 801da56:	d907      	bls.n	801da68 <_fwalk_sglue+0x38>
 801da58:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801da5c:	3301      	adds	r3, #1
 801da5e:	d003      	beq.n	801da68 <_fwalk_sglue+0x38>
 801da60:	4629      	mov	r1, r5
 801da62:	4638      	mov	r0, r7
 801da64:	47c0      	blx	r8
 801da66:	4306      	orrs	r6, r0
 801da68:	3568      	adds	r5, #104	@ 0x68
 801da6a:	e7e9      	b.n	801da40 <_fwalk_sglue+0x10>

0801da6c <__sread>:
 801da6c:	b510      	push	{r4, lr}
 801da6e:	460c      	mov	r4, r1
 801da70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801da74:	f000 f898 	bl	801dba8 <_read_r>
 801da78:	2800      	cmp	r0, #0
 801da7a:	bfab      	itete	ge
 801da7c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 801da7e:	89a3      	ldrhlt	r3, [r4, #12]
 801da80:	181b      	addge	r3, r3, r0
 801da82:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801da86:	bfac      	ite	ge
 801da88:	6563      	strge	r3, [r4, #84]	@ 0x54
 801da8a:	81a3      	strhlt	r3, [r4, #12]
 801da8c:	bd10      	pop	{r4, pc}

0801da8e <__swrite>:
 801da8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801da92:	461f      	mov	r7, r3
 801da94:	898b      	ldrh	r3, [r1, #12]
 801da96:	05db      	lsls	r3, r3, #23
 801da98:	4605      	mov	r5, r0
 801da9a:	460c      	mov	r4, r1
 801da9c:	4616      	mov	r6, r2
 801da9e:	d505      	bpl.n	801daac <__swrite+0x1e>
 801daa0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801daa4:	2302      	movs	r3, #2
 801daa6:	2200      	movs	r2, #0
 801daa8:	f000 f86c 	bl	801db84 <_lseek_r>
 801daac:	89a3      	ldrh	r3, [r4, #12]
 801daae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dab2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801dab6:	81a3      	strh	r3, [r4, #12]
 801dab8:	4632      	mov	r2, r6
 801daba:	463b      	mov	r3, r7
 801dabc:	4628      	mov	r0, r5
 801dabe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801dac2:	f000 b8a7 	b.w	801dc14 <_write_r>

0801dac6 <__sseek>:
 801dac6:	b510      	push	{r4, lr}
 801dac8:	460c      	mov	r4, r1
 801daca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dace:	f000 f859 	bl	801db84 <_lseek_r>
 801dad2:	1c43      	adds	r3, r0, #1
 801dad4:	89a3      	ldrh	r3, [r4, #12]
 801dad6:	bf15      	itete	ne
 801dad8:	6560      	strne	r0, [r4, #84]	@ 0x54
 801dada:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801dade:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801dae2:	81a3      	strheq	r3, [r4, #12]
 801dae4:	bf18      	it	ne
 801dae6:	81a3      	strhne	r3, [r4, #12]
 801dae8:	bd10      	pop	{r4, pc}

0801daea <__sclose>:
 801daea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801daee:	f000 b839 	b.w	801db64 <_close_r>

0801daf2 <memset>:
 801daf2:	4402      	add	r2, r0
 801daf4:	4603      	mov	r3, r0
 801daf6:	4293      	cmp	r3, r2
 801daf8:	d100      	bne.n	801dafc <memset+0xa>
 801dafa:	4770      	bx	lr
 801dafc:	f803 1b01 	strb.w	r1, [r3], #1
 801db00:	e7f9      	b.n	801daf6 <memset+0x4>

0801db02 <_raise_r>:
 801db02:	291f      	cmp	r1, #31
 801db04:	b538      	push	{r3, r4, r5, lr}
 801db06:	4605      	mov	r5, r0
 801db08:	460c      	mov	r4, r1
 801db0a:	d904      	bls.n	801db16 <_raise_r+0x14>
 801db0c:	2316      	movs	r3, #22
 801db0e:	6003      	str	r3, [r0, #0]
 801db10:	f04f 30ff 	mov.w	r0, #4294967295
 801db14:	bd38      	pop	{r3, r4, r5, pc}
 801db16:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801db18:	b112      	cbz	r2, 801db20 <_raise_r+0x1e>
 801db1a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801db1e:	b94b      	cbnz	r3, 801db34 <_raise_r+0x32>
 801db20:	4628      	mov	r0, r5
 801db22:	f000 f865 	bl	801dbf0 <_getpid_r>
 801db26:	4622      	mov	r2, r4
 801db28:	4601      	mov	r1, r0
 801db2a:	4628      	mov	r0, r5
 801db2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801db30:	f000 b84c 	b.w	801dbcc <_kill_r>
 801db34:	2b01      	cmp	r3, #1
 801db36:	d00a      	beq.n	801db4e <_raise_r+0x4c>
 801db38:	1c59      	adds	r1, r3, #1
 801db3a:	d103      	bne.n	801db44 <_raise_r+0x42>
 801db3c:	2316      	movs	r3, #22
 801db3e:	6003      	str	r3, [r0, #0]
 801db40:	2001      	movs	r0, #1
 801db42:	e7e7      	b.n	801db14 <_raise_r+0x12>
 801db44:	2100      	movs	r1, #0
 801db46:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801db4a:	4620      	mov	r0, r4
 801db4c:	4798      	blx	r3
 801db4e:	2000      	movs	r0, #0
 801db50:	e7e0      	b.n	801db14 <_raise_r+0x12>
	...

0801db54 <raise>:
 801db54:	4b02      	ldr	r3, [pc, #8]	@ (801db60 <raise+0xc>)
 801db56:	4601      	mov	r1, r0
 801db58:	6818      	ldr	r0, [r3, #0]
 801db5a:	f7ff bfd2 	b.w	801db02 <_raise_r>
 801db5e:	bf00      	nop
 801db60:	20000118 	.word	0x20000118

0801db64 <_close_r>:
 801db64:	b538      	push	{r3, r4, r5, lr}
 801db66:	4d06      	ldr	r5, [pc, #24]	@ (801db80 <_close_r+0x1c>)
 801db68:	2300      	movs	r3, #0
 801db6a:	4604      	mov	r4, r0
 801db6c:	4608      	mov	r0, r1
 801db6e:	602b      	str	r3, [r5, #0]
 801db70:	f7e4 fa9c 	bl	80020ac <_close>
 801db74:	1c43      	adds	r3, r0, #1
 801db76:	d102      	bne.n	801db7e <_close_r+0x1a>
 801db78:	682b      	ldr	r3, [r5, #0]
 801db7a:	b103      	cbz	r3, 801db7e <_close_r+0x1a>
 801db7c:	6023      	str	r3, [r4, #0]
 801db7e:	bd38      	pop	{r3, r4, r5, pc}
 801db80:	20013d18 	.word	0x20013d18

0801db84 <_lseek_r>:
 801db84:	b538      	push	{r3, r4, r5, lr}
 801db86:	4d07      	ldr	r5, [pc, #28]	@ (801dba4 <_lseek_r+0x20>)
 801db88:	4604      	mov	r4, r0
 801db8a:	4608      	mov	r0, r1
 801db8c:	4611      	mov	r1, r2
 801db8e:	2200      	movs	r2, #0
 801db90:	602a      	str	r2, [r5, #0]
 801db92:	461a      	mov	r2, r3
 801db94:	f7e4 fa94 	bl	80020c0 <_lseek>
 801db98:	1c43      	adds	r3, r0, #1
 801db9a:	d102      	bne.n	801dba2 <_lseek_r+0x1e>
 801db9c:	682b      	ldr	r3, [r5, #0]
 801db9e:	b103      	cbz	r3, 801dba2 <_lseek_r+0x1e>
 801dba0:	6023      	str	r3, [r4, #0]
 801dba2:	bd38      	pop	{r3, r4, r5, pc}
 801dba4:	20013d18 	.word	0x20013d18

0801dba8 <_read_r>:
 801dba8:	b538      	push	{r3, r4, r5, lr}
 801dbaa:	4d07      	ldr	r5, [pc, #28]	@ (801dbc8 <_read_r+0x20>)
 801dbac:	4604      	mov	r4, r0
 801dbae:	4608      	mov	r0, r1
 801dbb0:	4611      	mov	r1, r2
 801dbb2:	2200      	movs	r2, #0
 801dbb4:	602a      	str	r2, [r5, #0]
 801dbb6:	461a      	mov	r2, r3
 801dbb8:	f7e4 fa5c 	bl	8002074 <_read>
 801dbbc:	1c43      	adds	r3, r0, #1
 801dbbe:	d102      	bne.n	801dbc6 <_read_r+0x1e>
 801dbc0:	682b      	ldr	r3, [r5, #0]
 801dbc2:	b103      	cbz	r3, 801dbc6 <_read_r+0x1e>
 801dbc4:	6023      	str	r3, [r4, #0]
 801dbc6:	bd38      	pop	{r3, r4, r5, pc}
 801dbc8:	20013d18 	.word	0x20013d18

0801dbcc <_kill_r>:
 801dbcc:	b538      	push	{r3, r4, r5, lr}
 801dbce:	4d07      	ldr	r5, [pc, #28]	@ (801dbec <_kill_r+0x20>)
 801dbd0:	2300      	movs	r3, #0
 801dbd2:	4604      	mov	r4, r0
 801dbd4:	4608      	mov	r0, r1
 801dbd6:	4611      	mov	r1, r2
 801dbd8:	602b      	str	r3, [r5, #0]
 801dbda:	f7e4 fa3d 	bl	8002058 <_kill>
 801dbde:	1c43      	adds	r3, r0, #1
 801dbe0:	d102      	bne.n	801dbe8 <_kill_r+0x1c>
 801dbe2:	682b      	ldr	r3, [r5, #0]
 801dbe4:	b103      	cbz	r3, 801dbe8 <_kill_r+0x1c>
 801dbe6:	6023      	str	r3, [r4, #0]
 801dbe8:	bd38      	pop	{r3, r4, r5, pc}
 801dbea:	bf00      	nop
 801dbec:	20013d18 	.word	0x20013d18

0801dbf0 <_getpid_r>:
 801dbf0:	f7e4 ba30 	b.w	8002054 <_getpid>

0801dbf4 <_sbrk_r>:
 801dbf4:	b538      	push	{r3, r4, r5, lr}
 801dbf6:	4d06      	ldr	r5, [pc, #24]	@ (801dc10 <_sbrk_r+0x1c>)
 801dbf8:	2300      	movs	r3, #0
 801dbfa:	4604      	mov	r4, r0
 801dbfc:	4608      	mov	r0, r1
 801dbfe:	602b      	str	r3, [r5, #0]
 801dc00:	f7e4 fa60 	bl	80020c4 <_sbrk>
 801dc04:	1c43      	adds	r3, r0, #1
 801dc06:	d102      	bne.n	801dc0e <_sbrk_r+0x1a>
 801dc08:	682b      	ldr	r3, [r5, #0]
 801dc0a:	b103      	cbz	r3, 801dc0e <_sbrk_r+0x1a>
 801dc0c:	6023      	str	r3, [r4, #0]
 801dc0e:	bd38      	pop	{r3, r4, r5, pc}
 801dc10:	20013d18 	.word	0x20013d18

0801dc14 <_write_r>:
 801dc14:	b538      	push	{r3, r4, r5, lr}
 801dc16:	4d07      	ldr	r5, [pc, #28]	@ (801dc34 <_write_r+0x20>)
 801dc18:	4604      	mov	r4, r0
 801dc1a:	4608      	mov	r0, r1
 801dc1c:	4611      	mov	r1, r2
 801dc1e:	2200      	movs	r2, #0
 801dc20:	602a      	str	r2, [r5, #0]
 801dc22:	461a      	mov	r2, r3
 801dc24:	f7e4 fa34 	bl	8002090 <_write>
 801dc28:	1c43      	adds	r3, r0, #1
 801dc2a:	d102      	bne.n	801dc32 <_write_r+0x1e>
 801dc2c:	682b      	ldr	r3, [r5, #0]
 801dc2e:	b103      	cbz	r3, 801dc32 <_write_r+0x1e>
 801dc30:	6023      	str	r3, [r4, #0]
 801dc32:	bd38      	pop	{r3, r4, r5, pc}
 801dc34:	20013d18 	.word	0x20013d18

0801dc38 <__errno>:
 801dc38:	4b01      	ldr	r3, [pc, #4]	@ (801dc40 <__errno+0x8>)
 801dc3a:	6818      	ldr	r0, [r3, #0]
 801dc3c:	4770      	bx	lr
 801dc3e:	bf00      	nop
 801dc40:	20000118 	.word	0x20000118

0801dc44 <__libc_init_array>:
 801dc44:	b570      	push	{r4, r5, r6, lr}
 801dc46:	4d0d      	ldr	r5, [pc, #52]	@ (801dc7c <__libc_init_array+0x38>)
 801dc48:	4c0d      	ldr	r4, [pc, #52]	@ (801dc80 <__libc_init_array+0x3c>)
 801dc4a:	1b64      	subs	r4, r4, r5
 801dc4c:	10a4      	asrs	r4, r4, #2
 801dc4e:	2600      	movs	r6, #0
 801dc50:	42a6      	cmp	r6, r4
 801dc52:	d109      	bne.n	801dc68 <__libc_init_array+0x24>
 801dc54:	4d0b      	ldr	r5, [pc, #44]	@ (801dc84 <__libc_init_array+0x40>)
 801dc56:	4c0c      	ldr	r4, [pc, #48]	@ (801dc88 <__libc_init_array+0x44>)
 801dc58:	f000 fd62 	bl	801e720 <_init>
 801dc5c:	1b64      	subs	r4, r4, r5
 801dc5e:	10a4      	asrs	r4, r4, #2
 801dc60:	2600      	movs	r6, #0
 801dc62:	42a6      	cmp	r6, r4
 801dc64:	d105      	bne.n	801dc72 <__libc_init_array+0x2e>
 801dc66:	bd70      	pop	{r4, r5, r6, pc}
 801dc68:	f855 3b04 	ldr.w	r3, [r5], #4
 801dc6c:	4798      	blx	r3
 801dc6e:	3601      	adds	r6, #1
 801dc70:	e7ee      	b.n	801dc50 <__libc_init_array+0xc>
 801dc72:	f855 3b04 	ldr.w	r3, [r5], #4
 801dc76:	4798      	blx	r3
 801dc78:	3601      	adds	r6, #1
 801dc7a:	e7f2      	b.n	801dc62 <__libc_init_array+0x1e>
 801dc7c:	08055778 	.word	0x08055778
 801dc80:	08055778 	.word	0x08055778
 801dc84:	08055778 	.word	0x08055778
 801dc88:	08055790 	.word	0x08055790

0801dc8c <__retarget_lock_init_recursive>:
 801dc8c:	4770      	bx	lr

0801dc8e <__retarget_lock_acquire_recursive>:
 801dc8e:	4770      	bx	lr

0801dc90 <__retarget_lock_release_recursive>:
 801dc90:	4770      	bx	lr

0801dc92 <memcpy>:
 801dc92:	440a      	add	r2, r1
 801dc94:	4291      	cmp	r1, r2
 801dc96:	f100 33ff 	add.w	r3, r0, #4294967295
 801dc9a:	d100      	bne.n	801dc9e <memcpy+0xc>
 801dc9c:	4770      	bx	lr
 801dc9e:	b510      	push	{r4, lr}
 801dca0:	f811 4b01 	ldrb.w	r4, [r1], #1
 801dca4:	f803 4f01 	strb.w	r4, [r3, #1]!
 801dca8:	4291      	cmp	r1, r2
 801dcaa:	d1f9      	bne.n	801dca0 <memcpy+0xe>
 801dcac:	bd10      	pop	{r4, pc}
	...

0801dcb0 <__register_exitproc>:
 801dcb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dcb4:	4d27      	ldr	r5, [pc, #156]	@ (801dd54 <__register_exitproc+0xa4>)
 801dcb6:	4607      	mov	r7, r0
 801dcb8:	6828      	ldr	r0, [r5, #0]
 801dcba:	4691      	mov	r9, r2
 801dcbc:	460e      	mov	r6, r1
 801dcbe:	4698      	mov	r8, r3
 801dcc0:	f7ff ffe5 	bl	801dc8e <__retarget_lock_acquire_recursive>
 801dcc4:	4a24      	ldr	r2, [pc, #144]	@ (801dd58 <__register_exitproc+0xa8>)
 801dcc6:	6814      	ldr	r4, [r2, #0]
 801dcc8:	b93c      	cbnz	r4, 801dcda <__register_exitproc+0x2a>
 801dcca:	4b24      	ldr	r3, [pc, #144]	@ (801dd5c <__register_exitproc+0xac>)
 801dccc:	6013      	str	r3, [r2, #0]
 801dcce:	4a24      	ldr	r2, [pc, #144]	@ (801dd60 <__register_exitproc+0xb0>)
 801dcd0:	b112      	cbz	r2, 801dcd8 <__register_exitproc+0x28>
 801dcd2:	6812      	ldr	r2, [r2, #0]
 801dcd4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 801dcd8:	4c20      	ldr	r4, [pc, #128]	@ (801dd5c <__register_exitproc+0xac>)
 801dcda:	6863      	ldr	r3, [r4, #4]
 801dcdc:	2b1f      	cmp	r3, #31
 801dcde:	dd06      	ble.n	801dcee <__register_exitproc+0x3e>
 801dce0:	6828      	ldr	r0, [r5, #0]
 801dce2:	f7ff ffd5 	bl	801dc90 <__retarget_lock_release_recursive>
 801dce6:	f04f 30ff 	mov.w	r0, #4294967295
 801dcea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801dcee:	b32f      	cbz	r7, 801dd3c <__register_exitproc+0x8c>
 801dcf0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 801dcf4:	b968      	cbnz	r0, 801dd12 <__register_exitproc+0x62>
 801dcf6:	4b1b      	ldr	r3, [pc, #108]	@ (801dd64 <__register_exitproc+0xb4>)
 801dcf8:	2b00      	cmp	r3, #0
 801dcfa:	d0f1      	beq.n	801dce0 <__register_exitproc+0x30>
 801dcfc:	f44f 7084 	mov.w	r0, #264	@ 0x108
 801dd00:	f7ff fd14 	bl	801d72c <malloc>
 801dd04:	2800      	cmp	r0, #0
 801dd06:	d0eb      	beq.n	801dce0 <__register_exitproc+0x30>
 801dd08:	2300      	movs	r3, #0
 801dd0a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 801dd0e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 801dd12:	6863      	ldr	r3, [r4, #4]
 801dd14:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801dd18:	2201      	movs	r2, #1
 801dd1a:	409a      	lsls	r2, r3
 801dd1c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801dd20:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 801dd24:	4313      	orrs	r3, r2
 801dd26:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 801dd2a:	2f02      	cmp	r7, #2
 801dd2c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 801dd30:	bf02      	ittt	eq
 801dd32:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 801dd36:	4313      	orreq	r3, r2
 801dd38:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 801dd3c:	6863      	ldr	r3, [r4, #4]
 801dd3e:	6828      	ldr	r0, [r5, #0]
 801dd40:	1c5a      	adds	r2, r3, #1
 801dd42:	3302      	adds	r3, #2
 801dd44:	6062      	str	r2, [r4, #4]
 801dd46:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801dd4a:	f7ff ffa1 	bl	801dc90 <__retarget_lock_release_recursive>
 801dd4e:	2000      	movs	r0, #0
 801dd50:	e7cb      	b.n	801dcea <__register_exitproc+0x3a>
 801dd52:	bf00      	nop
 801dd54:	20000168 	.word	0x20000168
 801dd58:	20013dac 	.word	0x20013dac
 801dd5c:	20013d20 	.word	0x20013d20
 801dd60:	080209d4 	.word	0x080209d4
 801dd64:	0801d72d 	.word	0x0801d72d

0801dd68 <_free_r>:
 801dd68:	b538      	push	{r3, r4, r5, lr}
 801dd6a:	4605      	mov	r5, r0
 801dd6c:	2900      	cmp	r1, #0
 801dd6e:	d041      	beq.n	801ddf4 <_free_r+0x8c>
 801dd70:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801dd74:	1f0c      	subs	r4, r1, #4
 801dd76:	2b00      	cmp	r3, #0
 801dd78:	bfb8      	it	lt
 801dd7a:	18e4      	addlt	r4, r4, r3
 801dd7c:	f7ff fd88 	bl	801d890 <__malloc_lock>
 801dd80:	4a1d      	ldr	r2, [pc, #116]	@ (801ddf8 <_free_r+0x90>)
 801dd82:	6813      	ldr	r3, [r2, #0]
 801dd84:	b933      	cbnz	r3, 801dd94 <_free_r+0x2c>
 801dd86:	6063      	str	r3, [r4, #4]
 801dd88:	6014      	str	r4, [r2, #0]
 801dd8a:	4628      	mov	r0, r5
 801dd8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801dd90:	f7ff bd84 	b.w	801d89c <__malloc_unlock>
 801dd94:	42a3      	cmp	r3, r4
 801dd96:	d908      	bls.n	801ddaa <_free_r+0x42>
 801dd98:	6820      	ldr	r0, [r4, #0]
 801dd9a:	1821      	adds	r1, r4, r0
 801dd9c:	428b      	cmp	r3, r1
 801dd9e:	bf01      	itttt	eq
 801dda0:	6819      	ldreq	r1, [r3, #0]
 801dda2:	685b      	ldreq	r3, [r3, #4]
 801dda4:	1809      	addeq	r1, r1, r0
 801dda6:	6021      	streq	r1, [r4, #0]
 801dda8:	e7ed      	b.n	801dd86 <_free_r+0x1e>
 801ddaa:	461a      	mov	r2, r3
 801ddac:	685b      	ldr	r3, [r3, #4]
 801ddae:	b10b      	cbz	r3, 801ddb4 <_free_r+0x4c>
 801ddb0:	42a3      	cmp	r3, r4
 801ddb2:	d9fa      	bls.n	801ddaa <_free_r+0x42>
 801ddb4:	6811      	ldr	r1, [r2, #0]
 801ddb6:	1850      	adds	r0, r2, r1
 801ddb8:	42a0      	cmp	r0, r4
 801ddba:	d10b      	bne.n	801ddd4 <_free_r+0x6c>
 801ddbc:	6820      	ldr	r0, [r4, #0]
 801ddbe:	4401      	add	r1, r0
 801ddc0:	1850      	adds	r0, r2, r1
 801ddc2:	4283      	cmp	r3, r0
 801ddc4:	6011      	str	r1, [r2, #0]
 801ddc6:	d1e0      	bne.n	801dd8a <_free_r+0x22>
 801ddc8:	6818      	ldr	r0, [r3, #0]
 801ddca:	685b      	ldr	r3, [r3, #4]
 801ddcc:	6053      	str	r3, [r2, #4]
 801ddce:	4408      	add	r0, r1
 801ddd0:	6010      	str	r0, [r2, #0]
 801ddd2:	e7da      	b.n	801dd8a <_free_r+0x22>
 801ddd4:	d902      	bls.n	801dddc <_free_r+0x74>
 801ddd6:	230c      	movs	r3, #12
 801ddd8:	602b      	str	r3, [r5, #0]
 801ddda:	e7d6      	b.n	801dd8a <_free_r+0x22>
 801dddc:	6820      	ldr	r0, [r4, #0]
 801ddde:	1821      	adds	r1, r4, r0
 801dde0:	428b      	cmp	r3, r1
 801dde2:	bf04      	itt	eq
 801dde4:	6819      	ldreq	r1, [r3, #0]
 801dde6:	685b      	ldreq	r3, [r3, #4]
 801dde8:	6063      	str	r3, [r4, #4]
 801ddea:	bf04      	itt	eq
 801ddec:	1809      	addeq	r1, r1, r0
 801ddee:	6021      	streq	r1, [r4, #0]
 801ddf0:	6054      	str	r4, [r2, #4]
 801ddf2:	e7ca      	b.n	801dd8a <_free_r+0x22>
 801ddf4:	bd38      	pop	{r3, r4, r5, pc}
 801ddf6:	bf00      	nop
 801ddf8:	20013bd8 	.word	0x20013bd8

0801ddfc <__sfputc_r>:
 801ddfc:	6893      	ldr	r3, [r2, #8]
 801ddfe:	3b01      	subs	r3, #1
 801de00:	2b00      	cmp	r3, #0
 801de02:	b410      	push	{r4}
 801de04:	6093      	str	r3, [r2, #8]
 801de06:	da08      	bge.n	801de1a <__sfputc_r+0x1e>
 801de08:	6994      	ldr	r4, [r2, #24]
 801de0a:	42a3      	cmp	r3, r4
 801de0c:	db01      	blt.n	801de12 <__sfputc_r+0x16>
 801de0e:	290a      	cmp	r1, #10
 801de10:	d103      	bne.n	801de1a <__sfputc_r+0x1e>
 801de12:	f85d 4b04 	ldr.w	r4, [sp], #4
 801de16:	f000 bb6b 	b.w	801e4f0 <__swbuf_r>
 801de1a:	6813      	ldr	r3, [r2, #0]
 801de1c:	1c58      	adds	r0, r3, #1
 801de1e:	6010      	str	r0, [r2, #0]
 801de20:	7019      	strb	r1, [r3, #0]
 801de22:	4608      	mov	r0, r1
 801de24:	f85d 4b04 	ldr.w	r4, [sp], #4
 801de28:	4770      	bx	lr

0801de2a <__sfputs_r>:
 801de2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801de2c:	4606      	mov	r6, r0
 801de2e:	460f      	mov	r7, r1
 801de30:	4614      	mov	r4, r2
 801de32:	18d5      	adds	r5, r2, r3
 801de34:	42ac      	cmp	r4, r5
 801de36:	d101      	bne.n	801de3c <__sfputs_r+0x12>
 801de38:	2000      	movs	r0, #0
 801de3a:	e007      	b.n	801de4c <__sfputs_r+0x22>
 801de3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801de40:	463a      	mov	r2, r7
 801de42:	4630      	mov	r0, r6
 801de44:	f7ff ffda 	bl	801ddfc <__sfputc_r>
 801de48:	1c43      	adds	r3, r0, #1
 801de4a:	d1f3      	bne.n	801de34 <__sfputs_r+0xa>
 801de4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801de50 <_vfiprintf_r>:
 801de50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de54:	460d      	mov	r5, r1
 801de56:	b09d      	sub	sp, #116	@ 0x74
 801de58:	4614      	mov	r4, r2
 801de5a:	4698      	mov	r8, r3
 801de5c:	4606      	mov	r6, r0
 801de5e:	b118      	cbz	r0, 801de68 <_vfiprintf_r+0x18>
 801de60:	6a03      	ldr	r3, [r0, #32]
 801de62:	b90b      	cbnz	r3, 801de68 <_vfiprintf_r+0x18>
 801de64:	f7ff fdba 	bl	801d9dc <__sinit>
 801de68:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801de6a:	07d9      	lsls	r1, r3, #31
 801de6c:	d405      	bmi.n	801de7a <_vfiprintf_r+0x2a>
 801de6e:	89ab      	ldrh	r3, [r5, #12]
 801de70:	059a      	lsls	r2, r3, #22
 801de72:	d402      	bmi.n	801de7a <_vfiprintf_r+0x2a>
 801de74:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801de76:	f7ff ff0a 	bl	801dc8e <__retarget_lock_acquire_recursive>
 801de7a:	89ab      	ldrh	r3, [r5, #12]
 801de7c:	071b      	lsls	r3, r3, #28
 801de7e:	d501      	bpl.n	801de84 <_vfiprintf_r+0x34>
 801de80:	692b      	ldr	r3, [r5, #16]
 801de82:	b99b      	cbnz	r3, 801deac <_vfiprintf_r+0x5c>
 801de84:	4629      	mov	r1, r5
 801de86:	4630      	mov	r0, r6
 801de88:	f000 fb70 	bl	801e56c <__swsetup_r>
 801de8c:	b170      	cbz	r0, 801deac <_vfiprintf_r+0x5c>
 801de8e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801de90:	07dc      	lsls	r4, r3, #31
 801de92:	d504      	bpl.n	801de9e <_vfiprintf_r+0x4e>
 801de94:	f04f 30ff 	mov.w	r0, #4294967295
 801de98:	b01d      	add	sp, #116	@ 0x74
 801de9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de9e:	89ab      	ldrh	r3, [r5, #12]
 801dea0:	0598      	lsls	r0, r3, #22
 801dea2:	d4f7      	bmi.n	801de94 <_vfiprintf_r+0x44>
 801dea4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801dea6:	f7ff fef3 	bl	801dc90 <__retarget_lock_release_recursive>
 801deaa:	e7f3      	b.n	801de94 <_vfiprintf_r+0x44>
 801deac:	2300      	movs	r3, #0
 801deae:	9309      	str	r3, [sp, #36]	@ 0x24
 801deb0:	2320      	movs	r3, #32
 801deb2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801deb6:	f8cd 800c 	str.w	r8, [sp, #12]
 801deba:	2330      	movs	r3, #48	@ 0x30
 801debc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 801e06c <_vfiprintf_r+0x21c>
 801dec0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 801dec4:	f04f 0901 	mov.w	r9, #1
 801dec8:	4623      	mov	r3, r4
 801deca:	469a      	mov	sl, r3
 801decc:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ded0:	b10a      	cbz	r2, 801ded6 <_vfiprintf_r+0x86>
 801ded2:	2a25      	cmp	r2, #37	@ 0x25
 801ded4:	d1f9      	bne.n	801deca <_vfiprintf_r+0x7a>
 801ded6:	ebba 0b04 	subs.w	fp, sl, r4
 801deda:	d00b      	beq.n	801def4 <_vfiprintf_r+0xa4>
 801dedc:	465b      	mov	r3, fp
 801dede:	4622      	mov	r2, r4
 801dee0:	4629      	mov	r1, r5
 801dee2:	4630      	mov	r0, r6
 801dee4:	f7ff ffa1 	bl	801de2a <__sfputs_r>
 801dee8:	3001      	adds	r0, #1
 801deea:	f000 80a7 	beq.w	801e03c <_vfiprintf_r+0x1ec>
 801deee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801def0:	445a      	add	r2, fp
 801def2:	9209      	str	r2, [sp, #36]	@ 0x24
 801def4:	f89a 3000 	ldrb.w	r3, [sl]
 801def8:	2b00      	cmp	r3, #0
 801defa:	f000 809f 	beq.w	801e03c <_vfiprintf_r+0x1ec>
 801defe:	2300      	movs	r3, #0
 801df00:	f04f 32ff 	mov.w	r2, #4294967295
 801df04:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801df08:	f10a 0a01 	add.w	sl, sl, #1
 801df0c:	9304      	str	r3, [sp, #16]
 801df0e:	9307      	str	r3, [sp, #28]
 801df10:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 801df14:	931a      	str	r3, [sp, #104]	@ 0x68
 801df16:	4654      	mov	r4, sl
 801df18:	2205      	movs	r2, #5
 801df1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801df1e:	4853      	ldr	r0, [pc, #332]	@ (801e06c <_vfiprintf_r+0x21c>)
 801df20:	f7e2 f966 	bl	80001f0 <memchr>
 801df24:	9a04      	ldr	r2, [sp, #16]
 801df26:	b9d8      	cbnz	r0, 801df60 <_vfiprintf_r+0x110>
 801df28:	06d1      	lsls	r1, r2, #27
 801df2a:	bf44      	itt	mi
 801df2c:	2320      	movmi	r3, #32
 801df2e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801df32:	0713      	lsls	r3, r2, #28
 801df34:	bf44      	itt	mi
 801df36:	232b      	movmi	r3, #43	@ 0x2b
 801df38:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801df3c:	f89a 3000 	ldrb.w	r3, [sl]
 801df40:	2b2a      	cmp	r3, #42	@ 0x2a
 801df42:	d015      	beq.n	801df70 <_vfiprintf_r+0x120>
 801df44:	9a07      	ldr	r2, [sp, #28]
 801df46:	4654      	mov	r4, sl
 801df48:	2000      	movs	r0, #0
 801df4a:	f04f 0c0a 	mov.w	ip, #10
 801df4e:	4621      	mov	r1, r4
 801df50:	f811 3b01 	ldrb.w	r3, [r1], #1
 801df54:	3b30      	subs	r3, #48	@ 0x30
 801df56:	2b09      	cmp	r3, #9
 801df58:	d94b      	bls.n	801dff2 <_vfiprintf_r+0x1a2>
 801df5a:	b1b0      	cbz	r0, 801df8a <_vfiprintf_r+0x13a>
 801df5c:	9207      	str	r2, [sp, #28]
 801df5e:	e014      	b.n	801df8a <_vfiprintf_r+0x13a>
 801df60:	eba0 0308 	sub.w	r3, r0, r8
 801df64:	fa09 f303 	lsl.w	r3, r9, r3
 801df68:	4313      	orrs	r3, r2
 801df6a:	9304      	str	r3, [sp, #16]
 801df6c:	46a2      	mov	sl, r4
 801df6e:	e7d2      	b.n	801df16 <_vfiprintf_r+0xc6>
 801df70:	9b03      	ldr	r3, [sp, #12]
 801df72:	1d19      	adds	r1, r3, #4
 801df74:	681b      	ldr	r3, [r3, #0]
 801df76:	9103      	str	r1, [sp, #12]
 801df78:	2b00      	cmp	r3, #0
 801df7a:	bfbb      	ittet	lt
 801df7c:	425b      	neglt	r3, r3
 801df7e:	f042 0202 	orrlt.w	r2, r2, #2
 801df82:	9307      	strge	r3, [sp, #28]
 801df84:	9307      	strlt	r3, [sp, #28]
 801df86:	bfb8      	it	lt
 801df88:	9204      	strlt	r2, [sp, #16]
 801df8a:	7823      	ldrb	r3, [r4, #0]
 801df8c:	2b2e      	cmp	r3, #46	@ 0x2e
 801df8e:	d10a      	bne.n	801dfa6 <_vfiprintf_r+0x156>
 801df90:	7863      	ldrb	r3, [r4, #1]
 801df92:	2b2a      	cmp	r3, #42	@ 0x2a
 801df94:	d132      	bne.n	801dffc <_vfiprintf_r+0x1ac>
 801df96:	9b03      	ldr	r3, [sp, #12]
 801df98:	1d1a      	adds	r2, r3, #4
 801df9a:	681b      	ldr	r3, [r3, #0]
 801df9c:	9203      	str	r2, [sp, #12]
 801df9e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801dfa2:	3402      	adds	r4, #2
 801dfa4:	9305      	str	r3, [sp, #20]
 801dfa6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 801e07c <_vfiprintf_r+0x22c>
 801dfaa:	7821      	ldrb	r1, [r4, #0]
 801dfac:	2203      	movs	r2, #3
 801dfae:	4650      	mov	r0, sl
 801dfb0:	f7e2 f91e 	bl	80001f0 <memchr>
 801dfb4:	b138      	cbz	r0, 801dfc6 <_vfiprintf_r+0x176>
 801dfb6:	9b04      	ldr	r3, [sp, #16]
 801dfb8:	eba0 000a 	sub.w	r0, r0, sl
 801dfbc:	2240      	movs	r2, #64	@ 0x40
 801dfbe:	4082      	lsls	r2, r0
 801dfc0:	4313      	orrs	r3, r2
 801dfc2:	3401      	adds	r4, #1
 801dfc4:	9304      	str	r3, [sp, #16]
 801dfc6:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dfca:	4829      	ldr	r0, [pc, #164]	@ (801e070 <_vfiprintf_r+0x220>)
 801dfcc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801dfd0:	2206      	movs	r2, #6
 801dfd2:	f7e2 f90d 	bl	80001f0 <memchr>
 801dfd6:	2800      	cmp	r0, #0
 801dfd8:	d03f      	beq.n	801e05a <_vfiprintf_r+0x20a>
 801dfda:	4b26      	ldr	r3, [pc, #152]	@ (801e074 <_vfiprintf_r+0x224>)
 801dfdc:	bb1b      	cbnz	r3, 801e026 <_vfiprintf_r+0x1d6>
 801dfde:	9b03      	ldr	r3, [sp, #12]
 801dfe0:	3307      	adds	r3, #7
 801dfe2:	f023 0307 	bic.w	r3, r3, #7
 801dfe6:	3308      	adds	r3, #8
 801dfe8:	9303      	str	r3, [sp, #12]
 801dfea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dfec:	443b      	add	r3, r7
 801dfee:	9309      	str	r3, [sp, #36]	@ 0x24
 801dff0:	e76a      	b.n	801dec8 <_vfiprintf_r+0x78>
 801dff2:	fb0c 3202 	mla	r2, ip, r2, r3
 801dff6:	460c      	mov	r4, r1
 801dff8:	2001      	movs	r0, #1
 801dffa:	e7a8      	b.n	801df4e <_vfiprintf_r+0xfe>
 801dffc:	2300      	movs	r3, #0
 801dffe:	3401      	adds	r4, #1
 801e000:	9305      	str	r3, [sp, #20]
 801e002:	4619      	mov	r1, r3
 801e004:	f04f 0c0a 	mov.w	ip, #10
 801e008:	4620      	mov	r0, r4
 801e00a:	f810 2b01 	ldrb.w	r2, [r0], #1
 801e00e:	3a30      	subs	r2, #48	@ 0x30
 801e010:	2a09      	cmp	r2, #9
 801e012:	d903      	bls.n	801e01c <_vfiprintf_r+0x1cc>
 801e014:	2b00      	cmp	r3, #0
 801e016:	d0c6      	beq.n	801dfa6 <_vfiprintf_r+0x156>
 801e018:	9105      	str	r1, [sp, #20]
 801e01a:	e7c4      	b.n	801dfa6 <_vfiprintf_r+0x156>
 801e01c:	fb0c 2101 	mla	r1, ip, r1, r2
 801e020:	4604      	mov	r4, r0
 801e022:	2301      	movs	r3, #1
 801e024:	e7f0      	b.n	801e008 <_vfiprintf_r+0x1b8>
 801e026:	ab03      	add	r3, sp, #12
 801e028:	9300      	str	r3, [sp, #0]
 801e02a:	462a      	mov	r2, r5
 801e02c:	4b12      	ldr	r3, [pc, #72]	@ (801e078 <_vfiprintf_r+0x228>)
 801e02e:	a904      	add	r1, sp, #16
 801e030:	4630      	mov	r0, r6
 801e032:	f3af 8000 	nop.w
 801e036:	4607      	mov	r7, r0
 801e038:	1c78      	adds	r0, r7, #1
 801e03a:	d1d6      	bne.n	801dfea <_vfiprintf_r+0x19a>
 801e03c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 801e03e:	07d9      	lsls	r1, r3, #31
 801e040:	d405      	bmi.n	801e04e <_vfiprintf_r+0x1fe>
 801e042:	89ab      	ldrh	r3, [r5, #12]
 801e044:	059a      	lsls	r2, r3, #22
 801e046:	d402      	bmi.n	801e04e <_vfiprintf_r+0x1fe>
 801e048:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 801e04a:	f7ff fe21 	bl	801dc90 <__retarget_lock_release_recursive>
 801e04e:	89ab      	ldrh	r3, [r5, #12]
 801e050:	065b      	lsls	r3, r3, #25
 801e052:	f53f af1f 	bmi.w	801de94 <_vfiprintf_r+0x44>
 801e056:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e058:	e71e      	b.n	801de98 <_vfiprintf_r+0x48>
 801e05a:	ab03      	add	r3, sp, #12
 801e05c:	9300      	str	r3, [sp, #0]
 801e05e:	462a      	mov	r2, r5
 801e060:	4b05      	ldr	r3, [pc, #20]	@ (801e078 <_vfiprintf_r+0x228>)
 801e062:	a904      	add	r1, sp, #16
 801e064:	4630      	mov	r0, r6
 801e066:	f000 f879 	bl	801e15c <_printf_i>
 801e06a:	e7e4      	b.n	801e036 <_vfiprintf_r+0x1e6>
 801e06c:	0801f3d9 	.word	0x0801f3d9
 801e070:	0801f3e3 	.word	0x0801f3e3
 801e074:	00000000 	.word	0x00000000
 801e078:	0801de2b 	.word	0x0801de2b
 801e07c:	0801f3df 	.word	0x0801f3df

0801e080 <_printf_common>:
 801e080:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e084:	4616      	mov	r6, r2
 801e086:	4698      	mov	r8, r3
 801e088:	688a      	ldr	r2, [r1, #8]
 801e08a:	690b      	ldr	r3, [r1, #16]
 801e08c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 801e090:	4293      	cmp	r3, r2
 801e092:	bfb8      	it	lt
 801e094:	4613      	movlt	r3, r2
 801e096:	6033      	str	r3, [r6, #0]
 801e098:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 801e09c:	4607      	mov	r7, r0
 801e09e:	460c      	mov	r4, r1
 801e0a0:	b10a      	cbz	r2, 801e0a6 <_printf_common+0x26>
 801e0a2:	3301      	adds	r3, #1
 801e0a4:	6033      	str	r3, [r6, #0]
 801e0a6:	6823      	ldr	r3, [r4, #0]
 801e0a8:	0699      	lsls	r1, r3, #26
 801e0aa:	bf42      	ittt	mi
 801e0ac:	6833      	ldrmi	r3, [r6, #0]
 801e0ae:	3302      	addmi	r3, #2
 801e0b0:	6033      	strmi	r3, [r6, #0]
 801e0b2:	6825      	ldr	r5, [r4, #0]
 801e0b4:	f015 0506 	ands.w	r5, r5, #6
 801e0b8:	d106      	bne.n	801e0c8 <_printf_common+0x48>
 801e0ba:	f104 0a19 	add.w	sl, r4, #25
 801e0be:	68e3      	ldr	r3, [r4, #12]
 801e0c0:	6832      	ldr	r2, [r6, #0]
 801e0c2:	1a9b      	subs	r3, r3, r2
 801e0c4:	42ab      	cmp	r3, r5
 801e0c6:	dc26      	bgt.n	801e116 <_printf_common+0x96>
 801e0c8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 801e0cc:	6822      	ldr	r2, [r4, #0]
 801e0ce:	3b00      	subs	r3, #0
 801e0d0:	bf18      	it	ne
 801e0d2:	2301      	movne	r3, #1
 801e0d4:	0692      	lsls	r2, r2, #26
 801e0d6:	d42b      	bmi.n	801e130 <_printf_common+0xb0>
 801e0d8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 801e0dc:	4641      	mov	r1, r8
 801e0de:	4638      	mov	r0, r7
 801e0e0:	47c8      	blx	r9
 801e0e2:	3001      	adds	r0, #1
 801e0e4:	d01e      	beq.n	801e124 <_printf_common+0xa4>
 801e0e6:	6823      	ldr	r3, [r4, #0]
 801e0e8:	6922      	ldr	r2, [r4, #16]
 801e0ea:	f003 0306 	and.w	r3, r3, #6
 801e0ee:	2b04      	cmp	r3, #4
 801e0f0:	bf02      	ittt	eq
 801e0f2:	68e5      	ldreq	r5, [r4, #12]
 801e0f4:	6833      	ldreq	r3, [r6, #0]
 801e0f6:	1aed      	subeq	r5, r5, r3
 801e0f8:	68a3      	ldr	r3, [r4, #8]
 801e0fa:	bf0c      	ite	eq
 801e0fc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801e100:	2500      	movne	r5, #0
 801e102:	4293      	cmp	r3, r2
 801e104:	bfc4      	itt	gt
 801e106:	1a9b      	subgt	r3, r3, r2
 801e108:	18ed      	addgt	r5, r5, r3
 801e10a:	2600      	movs	r6, #0
 801e10c:	341a      	adds	r4, #26
 801e10e:	42b5      	cmp	r5, r6
 801e110:	d11a      	bne.n	801e148 <_printf_common+0xc8>
 801e112:	2000      	movs	r0, #0
 801e114:	e008      	b.n	801e128 <_printf_common+0xa8>
 801e116:	2301      	movs	r3, #1
 801e118:	4652      	mov	r2, sl
 801e11a:	4641      	mov	r1, r8
 801e11c:	4638      	mov	r0, r7
 801e11e:	47c8      	blx	r9
 801e120:	3001      	adds	r0, #1
 801e122:	d103      	bne.n	801e12c <_printf_common+0xac>
 801e124:	f04f 30ff 	mov.w	r0, #4294967295
 801e128:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e12c:	3501      	adds	r5, #1
 801e12e:	e7c6      	b.n	801e0be <_printf_common+0x3e>
 801e130:	18e1      	adds	r1, r4, r3
 801e132:	1c5a      	adds	r2, r3, #1
 801e134:	2030      	movs	r0, #48	@ 0x30
 801e136:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 801e13a:	4422      	add	r2, r4
 801e13c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 801e140:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 801e144:	3302      	adds	r3, #2
 801e146:	e7c7      	b.n	801e0d8 <_printf_common+0x58>
 801e148:	2301      	movs	r3, #1
 801e14a:	4622      	mov	r2, r4
 801e14c:	4641      	mov	r1, r8
 801e14e:	4638      	mov	r0, r7
 801e150:	47c8      	blx	r9
 801e152:	3001      	adds	r0, #1
 801e154:	d0e6      	beq.n	801e124 <_printf_common+0xa4>
 801e156:	3601      	adds	r6, #1
 801e158:	e7d9      	b.n	801e10e <_printf_common+0x8e>
	...

0801e15c <_printf_i>:
 801e15c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801e160:	7e0f      	ldrb	r7, [r1, #24]
 801e162:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801e164:	2f78      	cmp	r7, #120	@ 0x78
 801e166:	4691      	mov	r9, r2
 801e168:	4680      	mov	r8, r0
 801e16a:	460c      	mov	r4, r1
 801e16c:	469a      	mov	sl, r3
 801e16e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 801e172:	d807      	bhi.n	801e184 <_printf_i+0x28>
 801e174:	2f62      	cmp	r7, #98	@ 0x62
 801e176:	d80a      	bhi.n	801e18e <_printf_i+0x32>
 801e178:	2f00      	cmp	r7, #0
 801e17a:	f000 80d1 	beq.w	801e320 <_printf_i+0x1c4>
 801e17e:	2f58      	cmp	r7, #88	@ 0x58
 801e180:	f000 80b8 	beq.w	801e2f4 <_printf_i+0x198>
 801e184:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801e188:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 801e18c:	e03a      	b.n	801e204 <_printf_i+0xa8>
 801e18e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 801e192:	2b15      	cmp	r3, #21
 801e194:	d8f6      	bhi.n	801e184 <_printf_i+0x28>
 801e196:	a101      	add	r1, pc, #4	@ (adr r1, 801e19c <_printf_i+0x40>)
 801e198:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801e19c:	0801e1f5 	.word	0x0801e1f5
 801e1a0:	0801e209 	.word	0x0801e209
 801e1a4:	0801e185 	.word	0x0801e185
 801e1a8:	0801e185 	.word	0x0801e185
 801e1ac:	0801e185 	.word	0x0801e185
 801e1b0:	0801e185 	.word	0x0801e185
 801e1b4:	0801e209 	.word	0x0801e209
 801e1b8:	0801e185 	.word	0x0801e185
 801e1bc:	0801e185 	.word	0x0801e185
 801e1c0:	0801e185 	.word	0x0801e185
 801e1c4:	0801e185 	.word	0x0801e185
 801e1c8:	0801e307 	.word	0x0801e307
 801e1cc:	0801e233 	.word	0x0801e233
 801e1d0:	0801e2c1 	.word	0x0801e2c1
 801e1d4:	0801e185 	.word	0x0801e185
 801e1d8:	0801e185 	.word	0x0801e185
 801e1dc:	0801e329 	.word	0x0801e329
 801e1e0:	0801e185 	.word	0x0801e185
 801e1e4:	0801e233 	.word	0x0801e233
 801e1e8:	0801e185 	.word	0x0801e185
 801e1ec:	0801e185 	.word	0x0801e185
 801e1f0:	0801e2c9 	.word	0x0801e2c9
 801e1f4:	6833      	ldr	r3, [r6, #0]
 801e1f6:	1d1a      	adds	r2, r3, #4
 801e1f8:	681b      	ldr	r3, [r3, #0]
 801e1fa:	6032      	str	r2, [r6, #0]
 801e1fc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 801e200:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 801e204:	2301      	movs	r3, #1
 801e206:	e09c      	b.n	801e342 <_printf_i+0x1e6>
 801e208:	6833      	ldr	r3, [r6, #0]
 801e20a:	6820      	ldr	r0, [r4, #0]
 801e20c:	1d19      	adds	r1, r3, #4
 801e20e:	6031      	str	r1, [r6, #0]
 801e210:	0606      	lsls	r6, r0, #24
 801e212:	d501      	bpl.n	801e218 <_printf_i+0xbc>
 801e214:	681d      	ldr	r5, [r3, #0]
 801e216:	e003      	b.n	801e220 <_printf_i+0xc4>
 801e218:	0645      	lsls	r5, r0, #25
 801e21a:	d5fb      	bpl.n	801e214 <_printf_i+0xb8>
 801e21c:	f9b3 5000 	ldrsh.w	r5, [r3]
 801e220:	2d00      	cmp	r5, #0
 801e222:	da03      	bge.n	801e22c <_printf_i+0xd0>
 801e224:	232d      	movs	r3, #45	@ 0x2d
 801e226:	426d      	negs	r5, r5
 801e228:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801e22c:	4858      	ldr	r0, [pc, #352]	@ (801e390 <_printf_i+0x234>)
 801e22e:	230a      	movs	r3, #10
 801e230:	e011      	b.n	801e256 <_printf_i+0xfa>
 801e232:	6821      	ldr	r1, [r4, #0]
 801e234:	6833      	ldr	r3, [r6, #0]
 801e236:	0608      	lsls	r0, r1, #24
 801e238:	f853 5b04 	ldr.w	r5, [r3], #4
 801e23c:	d402      	bmi.n	801e244 <_printf_i+0xe8>
 801e23e:	0649      	lsls	r1, r1, #25
 801e240:	bf48      	it	mi
 801e242:	b2ad      	uxthmi	r5, r5
 801e244:	2f6f      	cmp	r7, #111	@ 0x6f
 801e246:	4852      	ldr	r0, [pc, #328]	@ (801e390 <_printf_i+0x234>)
 801e248:	6033      	str	r3, [r6, #0]
 801e24a:	bf14      	ite	ne
 801e24c:	230a      	movne	r3, #10
 801e24e:	2308      	moveq	r3, #8
 801e250:	2100      	movs	r1, #0
 801e252:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 801e256:	6866      	ldr	r6, [r4, #4]
 801e258:	60a6      	str	r6, [r4, #8]
 801e25a:	2e00      	cmp	r6, #0
 801e25c:	db05      	blt.n	801e26a <_printf_i+0x10e>
 801e25e:	6821      	ldr	r1, [r4, #0]
 801e260:	432e      	orrs	r6, r5
 801e262:	f021 0104 	bic.w	r1, r1, #4
 801e266:	6021      	str	r1, [r4, #0]
 801e268:	d04b      	beq.n	801e302 <_printf_i+0x1a6>
 801e26a:	4616      	mov	r6, r2
 801e26c:	fbb5 f1f3 	udiv	r1, r5, r3
 801e270:	fb03 5711 	mls	r7, r3, r1, r5
 801e274:	5dc7      	ldrb	r7, [r0, r7]
 801e276:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e27a:	462f      	mov	r7, r5
 801e27c:	42bb      	cmp	r3, r7
 801e27e:	460d      	mov	r5, r1
 801e280:	d9f4      	bls.n	801e26c <_printf_i+0x110>
 801e282:	2b08      	cmp	r3, #8
 801e284:	d10b      	bne.n	801e29e <_printf_i+0x142>
 801e286:	6823      	ldr	r3, [r4, #0]
 801e288:	07df      	lsls	r7, r3, #31
 801e28a:	d508      	bpl.n	801e29e <_printf_i+0x142>
 801e28c:	6923      	ldr	r3, [r4, #16]
 801e28e:	6861      	ldr	r1, [r4, #4]
 801e290:	4299      	cmp	r1, r3
 801e292:	bfde      	ittt	le
 801e294:	2330      	movle	r3, #48	@ 0x30
 801e296:	f806 3c01 	strble.w	r3, [r6, #-1]
 801e29a:	f106 36ff 	addle.w	r6, r6, #4294967295
 801e29e:	1b92      	subs	r2, r2, r6
 801e2a0:	6122      	str	r2, [r4, #16]
 801e2a2:	f8cd a000 	str.w	sl, [sp]
 801e2a6:	464b      	mov	r3, r9
 801e2a8:	aa03      	add	r2, sp, #12
 801e2aa:	4621      	mov	r1, r4
 801e2ac:	4640      	mov	r0, r8
 801e2ae:	f7ff fee7 	bl	801e080 <_printf_common>
 801e2b2:	3001      	adds	r0, #1
 801e2b4:	d14a      	bne.n	801e34c <_printf_i+0x1f0>
 801e2b6:	f04f 30ff 	mov.w	r0, #4294967295
 801e2ba:	b004      	add	sp, #16
 801e2bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e2c0:	6823      	ldr	r3, [r4, #0]
 801e2c2:	f043 0320 	orr.w	r3, r3, #32
 801e2c6:	6023      	str	r3, [r4, #0]
 801e2c8:	4832      	ldr	r0, [pc, #200]	@ (801e394 <_printf_i+0x238>)
 801e2ca:	2778      	movs	r7, #120	@ 0x78
 801e2cc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 801e2d0:	6823      	ldr	r3, [r4, #0]
 801e2d2:	6831      	ldr	r1, [r6, #0]
 801e2d4:	061f      	lsls	r7, r3, #24
 801e2d6:	f851 5b04 	ldr.w	r5, [r1], #4
 801e2da:	d402      	bmi.n	801e2e2 <_printf_i+0x186>
 801e2dc:	065f      	lsls	r7, r3, #25
 801e2de:	bf48      	it	mi
 801e2e0:	b2ad      	uxthmi	r5, r5
 801e2e2:	6031      	str	r1, [r6, #0]
 801e2e4:	07d9      	lsls	r1, r3, #31
 801e2e6:	bf44      	itt	mi
 801e2e8:	f043 0320 	orrmi.w	r3, r3, #32
 801e2ec:	6023      	strmi	r3, [r4, #0]
 801e2ee:	b11d      	cbz	r5, 801e2f8 <_printf_i+0x19c>
 801e2f0:	2310      	movs	r3, #16
 801e2f2:	e7ad      	b.n	801e250 <_printf_i+0xf4>
 801e2f4:	4826      	ldr	r0, [pc, #152]	@ (801e390 <_printf_i+0x234>)
 801e2f6:	e7e9      	b.n	801e2cc <_printf_i+0x170>
 801e2f8:	6823      	ldr	r3, [r4, #0]
 801e2fa:	f023 0320 	bic.w	r3, r3, #32
 801e2fe:	6023      	str	r3, [r4, #0]
 801e300:	e7f6      	b.n	801e2f0 <_printf_i+0x194>
 801e302:	4616      	mov	r6, r2
 801e304:	e7bd      	b.n	801e282 <_printf_i+0x126>
 801e306:	6833      	ldr	r3, [r6, #0]
 801e308:	6825      	ldr	r5, [r4, #0]
 801e30a:	6961      	ldr	r1, [r4, #20]
 801e30c:	1d18      	adds	r0, r3, #4
 801e30e:	6030      	str	r0, [r6, #0]
 801e310:	062e      	lsls	r6, r5, #24
 801e312:	681b      	ldr	r3, [r3, #0]
 801e314:	d501      	bpl.n	801e31a <_printf_i+0x1be>
 801e316:	6019      	str	r1, [r3, #0]
 801e318:	e002      	b.n	801e320 <_printf_i+0x1c4>
 801e31a:	0668      	lsls	r0, r5, #25
 801e31c:	d5fb      	bpl.n	801e316 <_printf_i+0x1ba>
 801e31e:	8019      	strh	r1, [r3, #0]
 801e320:	2300      	movs	r3, #0
 801e322:	6123      	str	r3, [r4, #16]
 801e324:	4616      	mov	r6, r2
 801e326:	e7bc      	b.n	801e2a2 <_printf_i+0x146>
 801e328:	6833      	ldr	r3, [r6, #0]
 801e32a:	1d1a      	adds	r2, r3, #4
 801e32c:	6032      	str	r2, [r6, #0]
 801e32e:	681e      	ldr	r6, [r3, #0]
 801e330:	6862      	ldr	r2, [r4, #4]
 801e332:	2100      	movs	r1, #0
 801e334:	4630      	mov	r0, r6
 801e336:	f7e1 ff5b 	bl	80001f0 <memchr>
 801e33a:	b108      	cbz	r0, 801e340 <_printf_i+0x1e4>
 801e33c:	1b80      	subs	r0, r0, r6
 801e33e:	6060      	str	r0, [r4, #4]
 801e340:	6863      	ldr	r3, [r4, #4]
 801e342:	6123      	str	r3, [r4, #16]
 801e344:	2300      	movs	r3, #0
 801e346:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 801e34a:	e7aa      	b.n	801e2a2 <_printf_i+0x146>
 801e34c:	6923      	ldr	r3, [r4, #16]
 801e34e:	4632      	mov	r2, r6
 801e350:	4649      	mov	r1, r9
 801e352:	4640      	mov	r0, r8
 801e354:	47d0      	blx	sl
 801e356:	3001      	adds	r0, #1
 801e358:	d0ad      	beq.n	801e2b6 <_printf_i+0x15a>
 801e35a:	6823      	ldr	r3, [r4, #0]
 801e35c:	079b      	lsls	r3, r3, #30
 801e35e:	d413      	bmi.n	801e388 <_printf_i+0x22c>
 801e360:	68e0      	ldr	r0, [r4, #12]
 801e362:	9b03      	ldr	r3, [sp, #12]
 801e364:	4298      	cmp	r0, r3
 801e366:	bfb8      	it	lt
 801e368:	4618      	movlt	r0, r3
 801e36a:	e7a6      	b.n	801e2ba <_printf_i+0x15e>
 801e36c:	2301      	movs	r3, #1
 801e36e:	4632      	mov	r2, r6
 801e370:	4649      	mov	r1, r9
 801e372:	4640      	mov	r0, r8
 801e374:	47d0      	blx	sl
 801e376:	3001      	adds	r0, #1
 801e378:	d09d      	beq.n	801e2b6 <_printf_i+0x15a>
 801e37a:	3501      	adds	r5, #1
 801e37c:	68e3      	ldr	r3, [r4, #12]
 801e37e:	9903      	ldr	r1, [sp, #12]
 801e380:	1a5b      	subs	r3, r3, r1
 801e382:	42ab      	cmp	r3, r5
 801e384:	dcf2      	bgt.n	801e36c <_printf_i+0x210>
 801e386:	e7eb      	b.n	801e360 <_printf_i+0x204>
 801e388:	2500      	movs	r5, #0
 801e38a:	f104 0619 	add.w	r6, r4, #25
 801e38e:	e7f5      	b.n	801e37c <_printf_i+0x220>
 801e390:	0801f3ea 	.word	0x0801f3ea
 801e394:	0801f3fb 	.word	0x0801f3fb

0801e398 <__sflush_r>:
 801e398:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801e39c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e3a0:	0716      	lsls	r6, r2, #28
 801e3a2:	4605      	mov	r5, r0
 801e3a4:	460c      	mov	r4, r1
 801e3a6:	d454      	bmi.n	801e452 <__sflush_r+0xba>
 801e3a8:	684b      	ldr	r3, [r1, #4]
 801e3aa:	2b00      	cmp	r3, #0
 801e3ac:	dc02      	bgt.n	801e3b4 <__sflush_r+0x1c>
 801e3ae:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 801e3b0:	2b00      	cmp	r3, #0
 801e3b2:	dd48      	ble.n	801e446 <__sflush_r+0xae>
 801e3b4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801e3b6:	2e00      	cmp	r6, #0
 801e3b8:	d045      	beq.n	801e446 <__sflush_r+0xae>
 801e3ba:	2300      	movs	r3, #0
 801e3bc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 801e3c0:	682f      	ldr	r7, [r5, #0]
 801e3c2:	6a21      	ldr	r1, [r4, #32]
 801e3c4:	602b      	str	r3, [r5, #0]
 801e3c6:	d030      	beq.n	801e42a <__sflush_r+0x92>
 801e3c8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 801e3ca:	89a3      	ldrh	r3, [r4, #12]
 801e3cc:	0759      	lsls	r1, r3, #29
 801e3ce:	d505      	bpl.n	801e3dc <__sflush_r+0x44>
 801e3d0:	6863      	ldr	r3, [r4, #4]
 801e3d2:	1ad2      	subs	r2, r2, r3
 801e3d4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801e3d6:	b10b      	cbz	r3, 801e3dc <__sflush_r+0x44>
 801e3d8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801e3da:	1ad2      	subs	r2, r2, r3
 801e3dc:	2300      	movs	r3, #0
 801e3de:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 801e3e0:	6a21      	ldr	r1, [r4, #32]
 801e3e2:	4628      	mov	r0, r5
 801e3e4:	47b0      	blx	r6
 801e3e6:	1c43      	adds	r3, r0, #1
 801e3e8:	89a3      	ldrh	r3, [r4, #12]
 801e3ea:	d106      	bne.n	801e3fa <__sflush_r+0x62>
 801e3ec:	6829      	ldr	r1, [r5, #0]
 801e3ee:	291d      	cmp	r1, #29
 801e3f0:	d82b      	bhi.n	801e44a <__sflush_r+0xb2>
 801e3f2:	4a2a      	ldr	r2, [pc, #168]	@ (801e49c <__sflush_r+0x104>)
 801e3f4:	40ca      	lsrs	r2, r1
 801e3f6:	07d6      	lsls	r6, r2, #31
 801e3f8:	d527      	bpl.n	801e44a <__sflush_r+0xb2>
 801e3fa:	2200      	movs	r2, #0
 801e3fc:	6062      	str	r2, [r4, #4]
 801e3fe:	04d9      	lsls	r1, r3, #19
 801e400:	6922      	ldr	r2, [r4, #16]
 801e402:	6022      	str	r2, [r4, #0]
 801e404:	d504      	bpl.n	801e410 <__sflush_r+0x78>
 801e406:	1c42      	adds	r2, r0, #1
 801e408:	d101      	bne.n	801e40e <__sflush_r+0x76>
 801e40a:	682b      	ldr	r3, [r5, #0]
 801e40c:	b903      	cbnz	r3, 801e410 <__sflush_r+0x78>
 801e40e:	6560      	str	r0, [r4, #84]	@ 0x54
 801e410:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801e412:	602f      	str	r7, [r5, #0]
 801e414:	b1b9      	cbz	r1, 801e446 <__sflush_r+0xae>
 801e416:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801e41a:	4299      	cmp	r1, r3
 801e41c:	d002      	beq.n	801e424 <__sflush_r+0x8c>
 801e41e:	4628      	mov	r0, r5
 801e420:	f7ff fca2 	bl	801dd68 <_free_r>
 801e424:	2300      	movs	r3, #0
 801e426:	6363      	str	r3, [r4, #52]	@ 0x34
 801e428:	e00d      	b.n	801e446 <__sflush_r+0xae>
 801e42a:	2301      	movs	r3, #1
 801e42c:	4628      	mov	r0, r5
 801e42e:	47b0      	blx	r6
 801e430:	4602      	mov	r2, r0
 801e432:	1c50      	adds	r0, r2, #1
 801e434:	d1c9      	bne.n	801e3ca <__sflush_r+0x32>
 801e436:	682b      	ldr	r3, [r5, #0]
 801e438:	2b00      	cmp	r3, #0
 801e43a:	d0c6      	beq.n	801e3ca <__sflush_r+0x32>
 801e43c:	2b1d      	cmp	r3, #29
 801e43e:	d001      	beq.n	801e444 <__sflush_r+0xac>
 801e440:	2b16      	cmp	r3, #22
 801e442:	d11e      	bne.n	801e482 <__sflush_r+0xea>
 801e444:	602f      	str	r7, [r5, #0]
 801e446:	2000      	movs	r0, #0
 801e448:	e022      	b.n	801e490 <__sflush_r+0xf8>
 801e44a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e44e:	b21b      	sxth	r3, r3
 801e450:	e01b      	b.n	801e48a <__sflush_r+0xf2>
 801e452:	690f      	ldr	r7, [r1, #16]
 801e454:	2f00      	cmp	r7, #0
 801e456:	d0f6      	beq.n	801e446 <__sflush_r+0xae>
 801e458:	0793      	lsls	r3, r2, #30
 801e45a:	680e      	ldr	r6, [r1, #0]
 801e45c:	bf08      	it	eq
 801e45e:	694b      	ldreq	r3, [r1, #20]
 801e460:	600f      	str	r7, [r1, #0]
 801e462:	bf18      	it	ne
 801e464:	2300      	movne	r3, #0
 801e466:	eba6 0807 	sub.w	r8, r6, r7
 801e46a:	608b      	str	r3, [r1, #8]
 801e46c:	f1b8 0f00 	cmp.w	r8, #0
 801e470:	dde9      	ble.n	801e446 <__sflush_r+0xae>
 801e472:	6a21      	ldr	r1, [r4, #32]
 801e474:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801e476:	4643      	mov	r3, r8
 801e478:	463a      	mov	r2, r7
 801e47a:	4628      	mov	r0, r5
 801e47c:	47b0      	blx	r6
 801e47e:	2800      	cmp	r0, #0
 801e480:	dc08      	bgt.n	801e494 <__sflush_r+0xfc>
 801e482:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e486:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e48a:	81a3      	strh	r3, [r4, #12]
 801e48c:	f04f 30ff 	mov.w	r0, #4294967295
 801e490:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e494:	4407      	add	r7, r0
 801e496:	eba8 0800 	sub.w	r8, r8, r0
 801e49a:	e7e7      	b.n	801e46c <__sflush_r+0xd4>
 801e49c:	20400001 	.word	0x20400001

0801e4a0 <_fflush_r>:
 801e4a0:	b538      	push	{r3, r4, r5, lr}
 801e4a2:	690b      	ldr	r3, [r1, #16]
 801e4a4:	4605      	mov	r5, r0
 801e4a6:	460c      	mov	r4, r1
 801e4a8:	b913      	cbnz	r3, 801e4b0 <_fflush_r+0x10>
 801e4aa:	2500      	movs	r5, #0
 801e4ac:	4628      	mov	r0, r5
 801e4ae:	bd38      	pop	{r3, r4, r5, pc}
 801e4b0:	b118      	cbz	r0, 801e4ba <_fflush_r+0x1a>
 801e4b2:	6a03      	ldr	r3, [r0, #32]
 801e4b4:	b90b      	cbnz	r3, 801e4ba <_fflush_r+0x1a>
 801e4b6:	f7ff fa91 	bl	801d9dc <__sinit>
 801e4ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e4be:	2b00      	cmp	r3, #0
 801e4c0:	d0f3      	beq.n	801e4aa <_fflush_r+0xa>
 801e4c2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 801e4c4:	07d0      	lsls	r0, r2, #31
 801e4c6:	d404      	bmi.n	801e4d2 <_fflush_r+0x32>
 801e4c8:	0599      	lsls	r1, r3, #22
 801e4ca:	d402      	bmi.n	801e4d2 <_fflush_r+0x32>
 801e4cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801e4ce:	f7ff fbde 	bl	801dc8e <__retarget_lock_acquire_recursive>
 801e4d2:	4628      	mov	r0, r5
 801e4d4:	4621      	mov	r1, r4
 801e4d6:	f7ff ff5f 	bl	801e398 <__sflush_r>
 801e4da:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801e4dc:	07da      	lsls	r2, r3, #31
 801e4de:	4605      	mov	r5, r0
 801e4e0:	d4e4      	bmi.n	801e4ac <_fflush_r+0xc>
 801e4e2:	89a3      	ldrh	r3, [r4, #12]
 801e4e4:	059b      	lsls	r3, r3, #22
 801e4e6:	d4e1      	bmi.n	801e4ac <_fflush_r+0xc>
 801e4e8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801e4ea:	f7ff fbd1 	bl	801dc90 <__retarget_lock_release_recursive>
 801e4ee:	e7dd      	b.n	801e4ac <_fflush_r+0xc>

0801e4f0 <__swbuf_r>:
 801e4f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e4f2:	460e      	mov	r6, r1
 801e4f4:	4614      	mov	r4, r2
 801e4f6:	4605      	mov	r5, r0
 801e4f8:	b118      	cbz	r0, 801e502 <__swbuf_r+0x12>
 801e4fa:	6a03      	ldr	r3, [r0, #32]
 801e4fc:	b90b      	cbnz	r3, 801e502 <__swbuf_r+0x12>
 801e4fe:	f7ff fa6d 	bl	801d9dc <__sinit>
 801e502:	69a3      	ldr	r3, [r4, #24]
 801e504:	60a3      	str	r3, [r4, #8]
 801e506:	89a3      	ldrh	r3, [r4, #12]
 801e508:	071a      	lsls	r2, r3, #28
 801e50a:	d501      	bpl.n	801e510 <__swbuf_r+0x20>
 801e50c:	6923      	ldr	r3, [r4, #16]
 801e50e:	b943      	cbnz	r3, 801e522 <__swbuf_r+0x32>
 801e510:	4621      	mov	r1, r4
 801e512:	4628      	mov	r0, r5
 801e514:	f000 f82a 	bl	801e56c <__swsetup_r>
 801e518:	b118      	cbz	r0, 801e522 <__swbuf_r+0x32>
 801e51a:	f04f 37ff 	mov.w	r7, #4294967295
 801e51e:	4638      	mov	r0, r7
 801e520:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e522:	6823      	ldr	r3, [r4, #0]
 801e524:	6922      	ldr	r2, [r4, #16]
 801e526:	1a98      	subs	r0, r3, r2
 801e528:	6963      	ldr	r3, [r4, #20]
 801e52a:	b2f6      	uxtb	r6, r6
 801e52c:	4283      	cmp	r3, r0
 801e52e:	4637      	mov	r7, r6
 801e530:	dc05      	bgt.n	801e53e <__swbuf_r+0x4e>
 801e532:	4621      	mov	r1, r4
 801e534:	4628      	mov	r0, r5
 801e536:	f7ff ffb3 	bl	801e4a0 <_fflush_r>
 801e53a:	2800      	cmp	r0, #0
 801e53c:	d1ed      	bne.n	801e51a <__swbuf_r+0x2a>
 801e53e:	68a3      	ldr	r3, [r4, #8]
 801e540:	3b01      	subs	r3, #1
 801e542:	60a3      	str	r3, [r4, #8]
 801e544:	6823      	ldr	r3, [r4, #0]
 801e546:	1c5a      	adds	r2, r3, #1
 801e548:	6022      	str	r2, [r4, #0]
 801e54a:	701e      	strb	r6, [r3, #0]
 801e54c:	6962      	ldr	r2, [r4, #20]
 801e54e:	1c43      	adds	r3, r0, #1
 801e550:	429a      	cmp	r2, r3
 801e552:	d004      	beq.n	801e55e <__swbuf_r+0x6e>
 801e554:	89a3      	ldrh	r3, [r4, #12]
 801e556:	07db      	lsls	r3, r3, #31
 801e558:	d5e1      	bpl.n	801e51e <__swbuf_r+0x2e>
 801e55a:	2e0a      	cmp	r6, #10
 801e55c:	d1df      	bne.n	801e51e <__swbuf_r+0x2e>
 801e55e:	4621      	mov	r1, r4
 801e560:	4628      	mov	r0, r5
 801e562:	f7ff ff9d 	bl	801e4a0 <_fflush_r>
 801e566:	2800      	cmp	r0, #0
 801e568:	d0d9      	beq.n	801e51e <__swbuf_r+0x2e>
 801e56a:	e7d6      	b.n	801e51a <__swbuf_r+0x2a>

0801e56c <__swsetup_r>:
 801e56c:	b538      	push	{r3, r4, r5, lr}
 801e56e:	4b29      	ldr	r3, [pc, #164]	@ (801e614 <__swsetup_r+0xa8>)
 801e570:	4605      	mov	r5, r0
 801e572:	6818      	ldr	r0, [r3, #0]
 801e574:	460c      	mov	r4, r1
 801e576:	b118      	cbz	r0, 801e580 <__swsetup_r+0x14>
 801e578:	6a03      	ldr	r3, [r0, #32]
 801e57a:	b90b      	cbnz	r3, 801e580 <__swsetup_r+0x14>
 801e57c:	f7ff fa2e 	bl	801d9dc <__sinit>
 801e580:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e584:	0719      	lsls	r1, r3, #28
 801e586:	d422      	bmi.n	801e5ce <__swsetup_r+0x62>
 801e588:	06da      	lsls	r2, r3, #27
 801e58a:	d407      	bmi.n	801e59c <__swsetup_r+0x30>
 801e58c:	2209      	movs	r2, #9
 801e58e:	602a      	str	r2, [r5, #0]
 801e590:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e594:	81a3      	strh	r3, [r4, #12]
 801e596:	f04f 30ff 	mov.w	r0, #4294967295
 801e59a:	e033      	b.n	801e604 <__swsetup_r+0x98>
 801e59c:	0758      	lsls	r0, r3, #29
 801e59e:	d512      	bpl.n	801e5c6 <__swsetup_r+0x5a>
 801e5a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801e5a2:	b141      	cbz	r1, 801e5b6 <__swsetup_r+0x4a>
 801e5a4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 801e5a8:	4299      	cmp	r1, r3
 801e5aa:	d002      	beq.n	801e5b2 <__swsetup_r+0x46>
 801e5ac:	4628      	mov	r0, r5
 801e5ae:	f7ff fbdb 	bl	801dd68 <_free_r>
 801e5b2:	2300      	movs	r3, #0
 801e5b4:	6363      	str	r3, [r4, #52]	@ 0x34
 801e5b6:	89a3      	ldrh	r3, [r4, #12]
 801e5b8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801e5bc:	81a3      	strh	r3, [r4, #12]
 801e5be:	2300      	movs	r3, #0
 801e5c0:	6063      	str	r3, [r4, #4]
 801e5c2:	6923      	ldr	r3, [r4, #16]
 801e5c4:	6023      	str	r3, [r4, #0]
 801e5c6:	89a3      	ldrh	r3, [r4, #12]
 801e5c8:	f043 0308 	orr.w	r3, r3, #8
 801e5cc:	81a3      	strh	r3, [r4, #12]
 801e5ce:	6923      	ldr	r3, [r4, #16]
 801e5d0:	b94b      	cbnz	r3, 801e5e6 <__swsetup_r+0x7a>
 801e5d2:	89a3      	ldrh	r3, [r4, #12]
 801e5d4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801e5d8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801e5dc:	d003      	beq.n	801e5e6 <__swsetup_r+0x7a>
 801e5de:	4621      	mov	r1, r4
 801e5e0:	4628      	mov	r0, r5
 801e5e2:	f000 f83f 	bl	801e664 <__smakebuf_r>
 801e5e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e5ea:	f013 0201 	ands.w	r2, r3, #1
 801e5ee:	d00a      	beq.n	801e606 <__swsetup_r+0x9a>
 801e5f0:	2200      	movs	r2, #0
 801e5f2:	60a2      	str	r2, [r4, #8]
 801e5f4:	6962      	ldr	r2, [r4, #20]
 801e5f6:	4252      	negs	r2, r2
 801e5f8:	61a2      	str	r2, [r4, #24]
 801e5fa:	6922      	ldr	r2, [r4, #16]
 801e5fc:	b942      	cbnz	r2, 801e610 <__swsetup_r+0xa4>
 801e5fe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801e602:	d1c5      	bne.n	801e590 <__swsetup_r+0x24>
 801e604:	bd38      	pop	{r3, r4, r5, pc}
 801e606:	0799      	lsls	r1, r3, #30
 801e608:	bf58      	it	pl
 801e60a:	6962      	ldrpl	r2, [r4, #20]
 801e60c:	60a2      	str	r2, [r4, #8]
 801e60e:	e7f4      	b.n	801e5fa <__swsetup_r+0x8e>
 801e610:	2000      	movs	r0, #0
 801e612:	e7f7      	b.n	801e604 <__swsetup_r+0x98>
 801e614:	20000118 	.word	0x20000118

0801e618 <__swhatbuf_r>:
 801e618:	b570      	push	{r4, r5, r6, lr}
 801e61a:	460c      	mov	r4, r1
 801e61c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e620:	2900      	cmp	r1, #0
 801e622:	b096      	sub	sp, #88	@ 0x58
 801e624:	4615      	mov	r5, r2
 801e626:	461e      	mov	r6, r3
 801e628:	da0d      	bge.n	801e646 <__swhatbuf_r+0x2e>
 801e62a:	89a3      	ldrh	r3, [r4, #12]
 801e62c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 801e630:	f04f 0100 	mov.w	r1, #0
 801e634:	bf14      	ite	ne
 801e636:	2340      	movne	r3, #64	@ 0x40
 801e638:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 801e63c:	2000      	movs	r0, #0
 801e63e:	6031      	str	r1, [r6, #0]
 801e640:	602b      	str	r3, [r5, #0]
 801e642:	b016      	add	sp, #88	@ 0x58
 801e644:	bd70      	pop	{r4, r5, r6, pc}
 801e646:	466a      	mov	r2, sp
 801e648:	f000 f848 	bl	801e6dc <_fstat_r>
 801e64c:	2800      	cmp	r0, #0
 801e64e:	dbec      	blt.n	801e62a <__swhatbuf_r+0x12>
 801e650:	9901      	ldr	r1, [sp, #4]
 801e652:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801e656:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801e65a:	4259      	negs	r1, r3
 801e65c:	4159      	adcs	r1, r3
 801e65e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801e662:	e7eb      	b.n	801e63c <__swhatbuf_r+0x24>

0801e664 <__smakebuf_r>:
 801e664:	898b      	ldrh	r3, [r1, #12]
 801e666:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801e668:	079d      	lsls	r5, r3, #30
 801e66a:	4606      	mov	r6, r0
 801e66c:	460c      	mov	r4, r1
 801e66e:	d507      	bpl.n	801e680 <__smakebuf_r+0x1c>
 801e670:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 801e674:	6023      	str	r3, [r4, #0]
 801e676:	6123      	str	r3, [r4, #16]
 801e678:	2301      	movs	r3, #1
 801e67a:	6163      	str	r3, [r4, #20]
 801e67c:	b003      	add	sp, #12
 801e67e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e680:	ab01      	add	r3, sp, #4
 801e682:	466a      	mov	r2, sp
 801e684:	f7ff ffc8 	bl	801e618 <__swhatbuf_r>
 801e688:	9f00      	ldr	r7, [sp, #0]
 801e68a:	4605      	mov	r5, r0
 801e68c:	4639      	mov	r1, r7
 801e68e:	4630      	mov	r0, r6
 801e690:	f7ff f87e 	bl	801d790 <_malloc_r>
 801e694:	b948      	cbnz	r0, 801e6aa <__smakebuf_r+0x46>
 801e696:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e69a:	059a      	lsls	r2, r3, #22
 801e69c:	d4ee      	bmi.n	801e67c <__smakebuf_r+0x18>
 801e69e:	f023 0303 	bic.w	r3, r3, #3
 801e6a2:	f043 0302 	orr.w	r3, r3, #2
 801e6a6:	81a3      	strh	r3, [r4, #12]
 801e6a8:	e7e2      	b.n	801e670 <__smakebuf_r+0xc>
 801e6aa:	89a3      	ldrh	r3, [r4, #12]
 801e6ac:	6020      	str	r0, [r4, #0]
 801e6ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801e6b2:	81a3      	strh	r3, [r4, #12]
 801e6b4:	9b01      	ldr	r3, [sp, #4]
 801e6b6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801e6ba:	b15b      	cbz	r3, 801e6d4 <__smakebuf_r+0x70>
 801e6bc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e6c0:	4630      	mov	r0, r6
 801e6c2:	f000 f81d 	bl	801e700 <_isatty_r>
 801e6c6:	b128      	cbz	r0, 801e6d4 <__smakebuf_r+0x70>
 801e6c8:	89a3      	ldrh	r3, [r4, #12]
 801e6ca:	f023 0303 	bic.w	r3, r3, #3
 801e6ce:	f043 0301 	orr.w	r3, r3, #1
 801e6d2:	81a3      	strh	r3, [r4, #12]
 801e6d4:	89a3      	ldrh	r3, [r4, #12]
 801e6d6:	431d      	orrs	r5, r3
 801e6d8:	81a5      	strh	r5, [r4, #12]
 801e6da:	e7cf      	b.n	801e67c <__smakebuf_r+0x18>

0801e6dc <_fstat_r>:
 801e6dc:	b538      	push	{r3, r4, r5, lr}
 801e6de:	4d07      	ldr	r5, [pc, #28]	@ (801e6fc <_fstat_r+0x20>)
 801e6e0:	2300      	movs	r3, #0
 801e6e2:	4604      	mov	r4, r0
 801e6e4:	4608      	mov	r0, r1
 801e6e6:	4611      	mov	r1, r2
 801e6e8:	602b      	str	r3, [r5, #0]
 801e6ea:	f7e3 fce2 	bl	80020b2 <_fstat>
 801e6ee:	1c43      	adds	r3, r0, #1
 801e6f0:	d102      	bne.n	801e6f8 <_fstat_r+0x1c>
 801e6f2:	682b      	ldr	r3, [r5, #0]
 801e6f4:	b103      	cbz	r3, 801e6f8 <_fstat_r+0x1c>
 801e6f6:	6023      	str	r3, [r4, #0]
 801e6f8:	bd38      	pop	{r3, r4, r5, pc}
 801e6fa:	bf00      	nop
 801e6fc:	20013d18 	.word	0x20013d18

0801e700 <_isatty_r>:
 801e700:	b538      	push	{r3, r4, r5, lr}
 801e702:	4d06      	ldr	r5, [pc, #24]	@ (801e71c <_isatty_r+0x1c>)
 801e704:	2300      	movs	r3, #0
 801e706:	4604      	mov	r4, r0
 801e708:	4608      	mov	r0, r1
 801e70a:	602b      	str	r3, [r5, #0]
 801e70c:	f7e3 fcd6 	bl	80020bc <_isatty>
 801e710:	1c43      	adds	r3, r0, #1
 801e712:	d102      	bne.n	801e71a <_isatty_r+0x1a>
 801e714:	682b      	ldr	r3, [r5, #0]
 801e716:	b103      	cbz	r3, 801e71a <_isatty_r+0x1a>
 801e718:	6023      	str	r3, [r4, #0]
 801e71a:	bd38      	pop	{r3, r4, r5, pc}
 801e71c:	20013d18 	.word	0x20013d18

0801e720 <_init>:
 801e720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e722:	bf00      	nop
 801e724:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e726:	bc08      	pop	{r3}
 801e728:	469e      	mov	lr, r3
 801e72a:	4770      	bx	lr

0801e72c <_fini>:
 801e72c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e72e:	bf00      	nop
 801e730:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e732:	bc08      	pop	{r3}
 801e734:	469e      	mov	lr, r3
 801e736:	4770      	bx	lr
